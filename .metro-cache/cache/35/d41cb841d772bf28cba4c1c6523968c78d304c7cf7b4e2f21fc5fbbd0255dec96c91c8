{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":209},"end":{"line":6,"column":69,"index":261}}],"key":"lV14QuoELkLKy4kI0aEcfvvcE84=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useTaskStore\", {\n    enumerable: true,\n    get: function () {\n      return useTaskStore;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[2], \"zustand/middleware\");\n  // Import AsyncStorage conditionally to avoid SSR issues\n  let AsyncStorage = null;\n  try {\n    AsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\").default;\n  } catch (error) {\n    // AsyncStorage not available (e.g., during SSR)\n    console.log('AsyncStorage not available during initialization');\n  }\n  const BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useTaskStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    dailyTasks: [],\n    weeklyTask: null,\n    loading: false,\n    error: null,\n    fetchDailyTasks: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/daily?regenerate=true` : `${BACKEND_URL}/api/tasks/daily`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch daily tasks');\n        }\n        const data = await response.json();\n        set({\n          dailyTasks: data.tasks || [],\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch daily tasks'\n        });\n      }\n    },\n    fetchWeeklyTask: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/weekly?regenerate=true` : `${BACKEND_URL}/api/tasks/weekly`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch weekly task');\n        }\n        const data = await response.json();\n        // Backend returns tasks array, we need the first (and only) weekly task\n        const weeklyTask = data.tasks && data.tasks.length > 0 ? data.tasks[0] : null;\n        set({\n          weeklyTask: weeklyTask,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch weekly task'\n        });\n      }\n    },\n    completeTask: async (taskId, token) => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/tasks/complete`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: taskId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to complete task');\n        }\n        const data = await response.json();\n\n        // Update local state\n        set(state => {\n          const updatedDailyTasks = state.dailyTasks.map(task => task.id === taskId ? Object.assign({}, task, {\n            completed: true,\n            completed_at: new Date().toISOString()\n          }) : task);\n          const updatedWeeklyTask = state.weeklyTask && state.weeklyTask.id === taskId ? Object.assign({}, state.weeklyTask, {\n            completed: true,\n            completed_at: new Date().toISOString()\n          }) : state.weeklyTask;\n          return {\n            dailyTasks: updatedDailyTasks,\n            weeklyTask: updatedWeeklyTask\n          };\n        });\n        return true;\n      } catch (error) {\n        set({\n          error: error instanceof Error ? error.message : 'Failed to complete task'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    }\n  }), {\n    name: 'task-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage),\n    partialize: state => ({\n      dailyTasks: state.dailyTasks,\n      weeklyTask: state.weeklyTask\n    })\n  }));\n});","lineCount":141,"map":[[7,2,42,0,"Object"],[7,8,42,0],[7,9,42,0,"defineProperty"],[7,23,42,0],[7,24,42,0,"exports"],[7,31,42,0],[8,4,42,0,"enumerable"],[8,14,42,0],[9,4,42,0,"get"],[9,7,42,0],[9,18,42,0,"get"],[9,19,42,0],[10,6,42,0],[10,13,42,0,"useTaskStore"],[10,25,42,0],[11,4,42,0],[12,2,42,0],[13,2,163,2],[13,6,163,2,"_expoVirtualEnv"],[13,21,163,2],[13,24,163,2,"require"],[13,31,163,2],[13,32,163,2,"_dependencyMap"],[13,46,163,2],[14,2,1,0],[14,6,1,0,"_zustand"],[14,14,1,0],[14,17,1,0,"require"],[14,24,1,0],[14,25,1,0,"_dependencyMap"],[14,39,1,0],[15,2,2,0],[15,6,2,0,"_zustandMiddleware"],[15,24,2,0],[15,27,2,0,"require"],[15,34,2,0],[15,35,2,0,"_dependencyMap"],[15,49,2,0],[16,2,3,0],[17,2,4,0],[17,6,4,4,"AsyncStorage"],[17,18,4,21],[17,21,4,24],[17,25,4,28],[18,2,5,0],[18,6,5,4],[19,4,6,2,"AsyncStorage"],[19,16,6,14],[19,19,6,17,"require"],[19,26,6,24],[19,27,6,24,"_dependencyMap"],[19,41,6,24],[19,89,6,68],[19,90,6,69],[19,91,6,70,"default"],[19,98,6,77],[20,2,7,0],[20,3,7,1],[20,4,7,2],[20,11,7,9,"error"],[20,16,7,14],[20,18,7,16],[21,4,8,2],[22,4,9,2,"console"],[22,11,9,9],[22,12,9,10,"log"],[22,15,9,13],[22,16,9,14],[22,66,9,64],[22,67,9,65],[23,2,10,0],[24,2,12,0],[24,8,12,6,"BACKEND_URL"],[24,19,12,17],[24,22,12,20,"_expoVirtualEnv"],[24,37,12,20],[24,38,12,20,"env"],[24,41,12,20],[24,42,12,20,"EXPO_PUBLIC_BACKEND_URL"],[24,65,12,20],[24,69,12,59],[24,71,12,61],[25,2,42,7],[25,8,42,13,"useTaskStore"],[25,20,42,25],[25,23,42,28],[25,27,42,28,"create"],[25,35,42,34],[25,36,42,34,"create"],[25,42,42,34],[25,44,42,46],[25,45,42,47],[25,46,43,2],[25,50,43,2,"persist"],[25,68,43,9],[25,69,43,9,"persist"],[25,76,43,9],[25,78,44,4],[25,79,44,5,"set"],[25,82,44,8],[25,84,44,10,"get"],[25,87,44,13],[25,93,44,19],[26,4,45,6,"dailyTasks"],[26,14,45,16],[26,16,45,18],[26,18,45,20],[27,4,46,6,"weeklyTask"],[27,14,46,16],[27,16,46,18],[27,20,46,22],[28,4,47,6,"loading"],[28,11,47,13],[28,13,47,15],[28,18,47,20],[29,4,48,6,"error"],[29,9,48,11],[29,11,48,13],[29,15,48,17],[30,4,50,6,"fetchDailyTasks"],[30,19,50,21],[30,21,50,23],[30,27,50,23,"fetchDailyTasks"],[30,28,50,30,"token"],[30,33,50,43],[30,35,50,45,"regenerate"],[30,45,50,64],[30,48,50,67],[30,53,50,72],[30,58,50,77],[31,6,51,8,"set"],[31,9,51,11],[31,10,51,12],[32,8,51,14,"loading"],[32,15,51,21],[32,17,51,23],[32,21,51,27],[33,8,51,29,"error"],[33,13,51,34],[33,15,51,36],[34,6,51,41],[34,7,51,42],[34,8,51,43],[35,6,52,8],[35,10,52,12],[36,8,53,10],[36,14,53,16,"url"],[36,17,53,19],[36,20,53,22,"regenerate"],[36,30,53,32],[36,33,53,35],[36,36,53,38,"BACKEND_URL"],[36,47,53,49],[36,81,53,83],[36,84,53,86],[36,87,53,89,"BACKEND_URL"],[36,98,53,100],[36,116,53,118],[37,8,54,10],[37,14,54,16,"response"],[37,22,54,24],[37,25,54,27],[37,31,54,33,"fetch"],[37,36,54,38],[37,37,54,39,"url"],[37,40,54,42],[37,42,54,44],[38,10,55,12,"headers"],[38,17,55,19],[38,19,55,21],[39,12,56,14],[39,27,56,29],[39,29,56,31],[39,39,56,41,"token"],[39,44,56,46],[40,10,57,12],[41,8,58,10],[41,9,58,11],[41,10,58,12],[42,8,60,10],[42,12,60,14],[42,13,60,15,"response"],[42,21,60,23],[42,22,60,24,"ok"],[42,24,60,26],[42,26,60,28],[43,10,61,12],[43,16,61,18],[43,20,61,22,"Error"],[43,25,61,27],[43,26,61,28],[43,55,61,57],[43,56,61,58],[44,8,62,10],[45,8,64,10],[45,14,64,16,"data"],[45,18,64,20],[45,21,64,23],[45,27,64,29,"response"],[45,35,64,37],[45,36,64,38,"json"],[45,40,64,42],[45,41,64,43],[45,42,64,44],[46,8,65,10,"set"],[46,11,65,13],[46,12,65,14],[47,10,66,12,"dailyTasks"],[47,20,66,22],[47,22,66,24,"data"],[47,26,66,28],[47,27,66,29,"tasks"],[47,32,66,34],[47,36,66,38],[47,38,66,40],[48,10,67,12,"loading"],[48,17,67,19],[48,19,67,21],[48,24,67,26],[49,10,68,12,"error"],[49,15,68,17],[49,17,68,19],[50,8,69,10],[50,9,69,11],[50,10,69,12],[51,6,70,8],[51,7,70,9],[51,8,70,10],[51,15,70,17,"error"],[51,20,70,22],[51,22,70,24],[52,8,71,10,"set"],[52,11,71,13],[52,12,71,14],[53,10,72,12,"loading"],[53,17,72,19],[53,19,72,21],[53,24,72,26],[54,10,73,12,"error"],[54,15,73,17],[54,17,73,19,"error"],[54,22,73,24],[54,34,73,36,"Error"],[54,39,73,41],[54,42,73,44,"error"],[54,47,73,49],[54,48,73,50,"message"],[54,55,73,57],[54,58,73,60],[55,8,74,10],[55,9,74,11],[55,10,74,12],[56,6,75,8],[57,4,76,6],[57,5,76,7],[58,4,78,6,"fetchWeeklyTask"],[58,19,78,21],[58,21,78,23],[58,27,78,23,"fetchWeeklyTask"],[58,28,78,30,"token"],[58,33,78,43],[58,35,78,45,"regenerate"],[58,45,78,64],[58,48,78,67],[58,53,78,72],[58,58,78,77],[59,6,79,8,"set"],[59,9,79,11],[59,10,79,12],[60,8,79,14,"loading"],[60,15,79,21],[60,17,79,23],[60,21,79,27],[61,8,79,29,"error"],[61,13,79,34],[61,15,79,36],[62,6,79,41],[62,7,79,42],[62,8,79,43],[63,6,80,8],[63,10,80,12],[64,8,81,10],[64,14,81,16,"url"],[64,17,81,19],[64,20,81,22,"regenerate"],[64,30,81,32],[64,33,81,35],[64,36,81,38,"BACKEND_URL"],[64,47,81,49],[64,82,81,84],[64,85,81,87],[64,88,81,90,"BACKEND_URL"],[64,99,81,101],[64,118,81,120],[65,8,82,10],[65,14,82,16,"response"],[65,22,82,24],[65,25,82,27],[65,31,82,33,"fetch"],[65,36,82,38],[65,37,82,39,"url"],[65,40,82,42],[65,42,82,44],[66,10,83,12,"headers"],[66,17,83,19],[66,19,83,21],[67,12,84,14],[67,27,84,29],[67,29,84,31],[67,39,84,41,"token"],[67,44,84,46],[68,10,85,12],[69,8,86,10],[69,9,86,11],[69,10,86,12],[70,8,88,10],[70,12,88,14],[70,13,88,15,"response"],[70,21,88,23],[70,22,88,24,"ok"],[70,24,88,26],[70,26,88,28],[71,10,89,12],[71,16,89,18],[71,20,89,22,"Error"],[71,25,89,27],[71,26,89,28],[71,55,89,57],[71,56,89,58],[72,8,90,10],[73,8,92,10],[73,14,92,16,"data"],[73,18,92,20],[73,21,92,23],[73,27,92,29,"response"],[73,35,92,37],[73,36,92,38,"json"],[73,40,92,42],[73,41,92,43],[73,42,92,44],[74,8,93,10],[75,8,94,10],[75,14,94,16,"weeklyTask"],[75,24,94,26],[75,27,94,29,"data"],[75,31,94,33],[75,32,94,34,"tasks"],[75,37,94,39],[75,41,94,43,"data"],[75,45,94,47],[75,46,94,48,"tasks"],[75,51,94,53],[75,52,94,54,"length"],[75,58,94,60],[75,61,94,63],[75,62,94,64],[75,65,94,67,"data"],[75,69,94,71],[75,70,94,72,"tasks"],[75,75,94,77],[75,76,94,78],[75,77,94,79],[75,78,94,80],[75,81,94,83],[75,85,94,87],[76,8,95,10,"set"],[76,11,95,13],[76,12,95,14],[77,10,96,12,"weeklyTask"],[77,20,96,22],[77,22,96,24,"weeklyTask"],[77,32,96,34],[78,10,97,12,"loading"],[78,17,97,19],[78,19,97,21],[78,24,97,26],[79,10,98,12,"error"],[79,15,98,17],[79,17,98,19],[80,8,99,10],[80,9,99,11],[80,10,99,12],[81,6,100,8],[81,7,100,9],[81,8,100,10],[81,15,100,17,"error"],[81,20,100,22],[81,22,100,24],[82,8,101,10,"set"],[82,11,101,13],[82,12,101,14],[83,10,102,12,"loading"],[83,17,102,19],[83,19,102,21],[83,24,102,26],[84,10,103,12,"error"],[84,15,103,17],[84,17,103,19,"error"],[84,22,103,24],[84,34,103,36,"Error"],[84,39,103,41],[84,42,103,44,"error"],[84,47,103,49],[84,48,103,50,"message"],[84,55,103,57],[84,58,103,60],[85,8,104,10],[85,9,104,11],[85,10,104,12],[86,6,105,8],[87,4,106,6],[87,5,106,7],[88,4,108,6,"completeTask"],[88,16,108,18],[88,18,108,20],[88,24,108,20,"completeTask"],[88,25,108,27,"taskId"],[88,31,108,41],[88,33,108,43,"token"],[88,38,108,56],[88,43,108,61],[89,6,109,8],[89,10,109,12],[90,8,110,10],[90,14,110,16,"response"],[90,22,110,24],[90,25,110,27],[90,31,110,33,"fetch"],[90,36,110,38],[90,37,110,39],[90,40,110,42,"BACKEND_URL"],[90,51,110,53],[90,72,110,74],[90,74,110,76],[91,10,111,12,"method"],[91,16,111,18],[91,18,111,20],[91,24,111,26],[92,10,112,12,"headers"],[92,17,112,19],[92,19,112,21],[93,12,113,14],[93,26,113,28],[93,28,113,30],[93,46,113,48],[94,12,114,14],[94,27,114,29],[94,29,114,31],[94,39,114,41,"token"],[94,44,114,46],[95,10,115,12],[95,11,115,13],[96,10,116,12,"body"],[96,14,116,16],[96,16,116,18,"JSON"],[96,20,116,22],[96,21,116,23,"stringify"],[96,30,116,32],[96,31,116,33],[97,12,116,35,"task_id"],[97,19,116,42],[97,21,116,44,"taskId"],[98,10,116,51],[98,11,116,52],[99,8,117,10],[99,9,117,11],[99,10,117,12],[100,8,119,10],[100,12,119,14],[100,13,119,15,"response"],[100,21,119,23],[100,22,119,24,"ok"],[100,24,119,26],[100,26,119,28],[101,10,120,12],[101,16,120,18],[101,20,120,22,"Error"],[101,25,120,27],[101,26,120,28],[101,51,120,53],[101,52,120,54],[102,8,121,10],[103,8,123,10],[103,14,123,16,"data"],[103,18,123,20],[103,21,123,23],[103,27,123,29,"response"],[103,35,123,37],[103,36,123,38,"json"],[103,40,123,42],[103,41,123,43],[103,42,123,44],[105,8,125,10],[106,8,126,10,"set"],[106,11,126,13],[106,12,126,14,"state"],[106,17,126,19],[106,21,126,23],[107,10,127,12],[107,16,127,18,"updatedDailyTasks"],[107,33,127,35],[107,36,127,38,"state"],[107,41,127,43],[107,42,127,44,"dailyTasks"],[107,52,127,54],[107,53,127,55,"map"],[107,56,127,58],[107,57,127,59,"task"],[107,61,127,63],[107,65,128,14,"task"],[107,69,128,18],[107,70,128,19,"id"],[107,72,128,21],[107,77,128,26,"taskId"],[107,83,128,32],[107,86,128,32,"Object"],[107,92,128,32],[107,93,128,32,"assign"],[107,99,128,32],[107,104,129,23,"task"],[107,108,129,27],[108,12,129,29,"completed"],[108,21,129,38],[108,23,129,40],[108,27,129,44],[109,12,129,46,"completed_at"],[109,24,129,58],[109,26,129,60],[109,30,129,64,"Date"],[109,34,129,68],[109,35,129,69],[109,36,129,70],[109,37,129,71,"toISOString"],[109,48,129,82],[109,49,129,83],[110,10,129,84],[110,15,130,18,"task"],[110,19,131,12],[110,20,131,13],[111,10,133,12],[111,16,133,18,"updatedWeeklyTask"],[111,33,133,35],[111,36,133,38,"state"],[111,41,133,43],[111,42,133,44,"weeklyTask"],[111,52,133,54],[111,56,133,58,"state"],[111,61,133,63],[111,62,133,64,"weeklyTask"],[111,72,133,74],[111,73,133,75,"id"],[111,75,133,77],[111,80,133,82,"taskId"],[111,86,133,88],[111,89,133,88,"Object"],[111,95,133,88],[111,96,133,88,"assign"],[111,102,133,88],[111,107,134,21,"state"],[111,112,134,26],[111,113,134,27,"weeklyTask"],[111,123,134,37],[112,12,134,39,"completed"],[112,21,134,48],[112,23,134,50],[112,27,134,54],[113,12,134,56,"completed_at"],[113,24,134,68],[113,26,134,70],[113,30,134,74,"Date"],[113,34,134,78],[113,35,134,79],[113,36,134,80],[113,37,134,81,"toISOString"],[113,48,134,92],[113,49,134,93],[114,10,134,94],[114,15,135,16,"state"],[114,20,135,21],[114,21,135,22,"weeklyTask"],[114,31,135,32],[115,10,137,12],[115,17,137,19],[116,12,138,14,"dailyTasks"],[116,22,138,24],[116,24,138,26,"updatedDailyTasks"],[116,41,138,43],[117,12,139,14,"weeklyTask"],[117,22,139,24],[117,24,139,26,"updatedWeeklyTask"],[118,10,140,12],[118,11,140,13],[119,8,141,10],[119,9,141,11],[119,10,141,12],[120,8,143,10],[120,15,143,17],[120,19,143,21],[121,6,144,8],[121,7,144,9],[121,8,144,10],[121,15,144,17,"error"],[121,20,144,22],[121,22,144,24],[122,8,145,10,"set"],[122,11,145,13],[122,12,145,14],[123,10,145,16,"error"],[123,15,145,21],[123,17,145,23,"error"],[123,22,145,28],[123,34,145,40,"Error"],[123,39,145,45],[123,42,145,48,"error"],[123,47,145,53],[123,48,145,54,"message"],[123,55,145,61],[123,58,145,64],[124,8,145,90],[124,9,145,91],[124,10,145,92],[125,8,146,10],[125,15,146,17],[125,20,146,22],[126,6,147,8],[127,4,148,6],[127,5,148,7],[128,4,150,6,"clearError"],[128,14,150,16],[128,16,150,18,"clearError"],[128,17,150,18],[128,22,150,24],[129,6,151,8,"set"],[129,9,151,11],[129,10,151,12],[130,8,151,14,"error"],[130,13,151,19],[130,15,151,21],[131,6,151,26],[131,7,151,27],[131,8,151,28],[132,4,152,6],[133,2,153,4],[133,3,153,5],[133,4,153,6],[133,6,154,4],[134,4,155,6,"name"],[134,8,155,10],[134,10,155,12],[134,22,155,24],[135,4,156,6,"storage"],[135,11,156,13],[135,13,156,15],[135,17,156,15,"createJSONStorage"],[135,35,156,32],[135,36,156,32,"createJSONStorage"],[135,53,156,32],[135,55,156,33],[135,61,156,39,"AsyncStorage"],[135,73,156,51],[135,74,156,52],[136,4,157,6,"partialize"],[136,14,157,16],[136,16,157,19,"state"],[136,21,157,24],[136,26,157,30],[137,6,158,8,"dailyTasks"],[137,16,158,18],[137,18,158,20,"state"],[137,23,158,25],[137,24,158,26,"dailyTasks"],[137,34,158,36],[138,6,159,8,"weeklyTask"],[138,16,159,18],[138,18,159,20,"state"],[138,23,159,25],[138,24,159,26,"weeklyTask"],[139,4,160,6],[139,5,160,7],[140,2,161,4],[140,3,162,2],[140,4,163,0],[140,5,163,1],[141,0,163,2],[141,3]],"functionMap":{"names":["<global>","persist$argument_0","fetchDailyTasks","fetchWeeklyTask","completeTask","set$argument_0","state.dailyTasks.map$argument_0","clearError","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;IC2C;uBCM;OD0B;uBEE;OF4B;oBGE;cCkB;2DCC;sBDG;WDW;OHO;kBME;ONE;MDC;iCQG,kBR;kBSC;QTG"},"hasCjsExports":false},"type":"js/module"}]}