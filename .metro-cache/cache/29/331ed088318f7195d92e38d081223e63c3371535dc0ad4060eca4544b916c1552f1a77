{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoAuthSession = require(_dependencyMap[1], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[2], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n\n      // IMPORTANT: Use Expo's auth proxy to get an HTTPS redirect URI\n      // Google OAuth only accepts http/https, not exp://\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true // This creates an https://auth.expo.io URL that redirects to the app\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n      console.log('Platform:', Platform.default.OS);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":257,"map":[[27,2,242,0,"Object"],[27,8,242,0],[27,9,242,0,"defineProperty"],[27,23,242,0],[27,24,242,0,"exports"],[27,31,242,0],[28,4,242,0,"enumerable"],[28,14,242,0],[29,4,242,0,"get"],[29,7,242,0],[29,18,242,0,"get"],[29,19,242,0],[30,6,242,0],[30,13,242,0,"_default"],[30,21,242,0],[31,4,242,0],[32,2,242,0],[33,2,217,0,"Object"],[33,8,217,0],[33,9,217,0,"defineProperty"],[33,23,217,0],[33,24,217,0,"exports"],[33,31,217,0],[34,4,217,0,"enumerable"],[34,14,217,0],[35,4,217,0,"get"],[35,7,217,0],[35,18,217,0,"get"],[35,19,217,0],[36,6,217,0],[36,13,217,0,"googleOAuthService"],[36,31,217,0],[37,4,217,0],[38,2,217,0],[39,2,220,0,"Object"],[39,8,220,0],[39,9,220,0,"defineProperty"],[39,23,220,0],[39,24,220,0,"exports"],[39,31,220,0],[40,4,220,0,"enumerable"],[40,14,220,0],[41,4,220,0,"get"],[41,7,220,0],[41,18,220,0,"get"],[41,19,220,0],[42,6,220,0],[42,13,220,0,"useGoogleOAuth"],[42,27,220,0],[43,4,220,0],[44,2,220,0],[45,2,240,2],[45,6,240,2,"_expoVirtualEnv"],[45,21,240,2],[45,24,240,2,"require"],[45,31,240,2],[45,32,240,2,"_dependencyMap"],[45,46,240,2],[46,2,1,0],[46,6,1,0,"_expoAuthSession"],[46,22,1,0],[46,25,1,0,"require"],[46,32,1,0],[46,33,1,0,"_dependencyMap"],[46,47,1,0],[47,2,1,0],[47,6,1,0,"AuthSession"],[47,17,1,0],[47,20,1,0,"_interopNamespace"],[47,37,1,0],[47,38,1,0,"_expoAuthSession"],[47,54,1,0],[48,2,2,0],[48,6,2,0,"_expoWebBrowser"],[48,21,2,0],[48,24,2,0,"require"],[48,31,2,0],[48,32,2,0,"_dependencyMap"],[48,46,2,0],[49,2,2,0],[49,6,2,0,"WebBrowser"],[49,16,2,0],[49,19,2,0,"_interopNamespace"],[49,36,2,0],[49,37,2,0,"_expoWebBrowser"],[49,52,2,0],[50,2,2,47],[50,6,2,47,"_reactNativeWebDistExportsPlatform"],[50,40,2,47],[50,43,2,47,"require"],[50,50,2,47],[50,51,2,47,"_dependencyMap"],[50,65,2,47],[51,2,2,47],[51,6,2,47,"Platform"],[51,14,2,47],[51,17,2,47,"_interopDefault"],[51,32,2,47],[51,33,2,47,"_reactNativeWebDistExportsPlatform"],[51,67,2,47],[52,2,5,0],[53,2,6,0,"WebBrowser"],[53,12,6,10],[53,13,6,11,"maybeCompleteAuthSession"],[53,37,6,35],[53,38,6,36],[53,39,6,37],[55,2,8,0],[56,2,9,0],[56,8,9,6,"GOOGLE_CLIENT_ID"],[56,24,9,22],[56,27,9,25],[56,29,9,27],[56,30,9,28],[56,31,9,29],[57,2,10,0],[57,8,10,6,"GOOGLE_CLIENT_SECRET"],[57,28,10,26],[57,31,10,29],[57,33,10,31],[57,34,10,32],[57,35,10,33],[59,2,12,0],[60,2,13,0],[60,8,13,6,"discovery"],[60,17,13,15],[60,20,13,18],[61,4,14,2,"authorizationEndpoint"],[61,25,14,23],[61,27,14,25],[61,73,14,71],[62,4,15,2,"tokenEndpoint"],[62,17,15,15],[62,19,15,17],[62,56,15,54],[63,4,16,2,"revocationEndpoint"],[63,22,16,20],[63,24,16,22],[64,2,17,0],[64,3,17,1],[65,2,31,0],[65,8,31,6,"GoogleOAuthService"],[65,26,31,24],[65,27,31,25],[66,4,32,10,"config"],[66,10,32,16],[66,13,32,45],[66,17,32,49],[67,4,33,10,"authRequest"],[67,15,33,21],[67,18,33,56],[67,22,33,60],[69,4,35,2],[70,0,36,0],[71,0,37,0],[72,4,38,2,"initialize"],[72,14,38,12,"initialize"],[72,15,38,13,"config"],[72,21,38,38],[72,23,38,40],[73,6,39,4],[73,10,39,8],[73,11,39,9,"config"],[73,17,39,15],[73,20,39,18,"config"],[73,26,39,24],[74,4,40,2],[76,4,42,2],[77,0,43,0],[78,0,44,0],[79,4,45,2],[79,10,45,16,"createAuthRequest"],[79,27,45,33,"createAuthRequest"],[79,28,45,33],[79,30,45,70],[80,6,46,4],[80,10,46,8],[80,11,46,9],[80,15,46,13],[80,16,46,14,"config"],[80,22,46,20],[80,24,46,22],[81,8,47,6],[81,14,47,12],[81,18,47,16,"Error"],[81,23,47,21],[81,24,47,22],[81,80,47,78],[81,81,47,79],[82,6,48,4],[84,6,50,4],[85,6,51,4],[86,6,52,4],[86,12,52,10,"redirectUri"],[86,23,52,21],[86,26,52,24,"AuthSession"],[86,37,52,35],[86,38,52,36,"makeRedirectUri"],[86,53,52,51],[86,54,52,52],[87,8,53,6,"useProxy"],[87,16,53,14],[87,18,53,16],[87,22,53,20],[87,23,53,22],[88,6,54,4],[88,7,54,5],[88,8,54,6],[89,6,56,4,"console"],[89,13,56,11],[89,14,56,12,"log"],[89,17,56,15],[89,18,56,16],[89,39,56,37],[89,41,56,39,"redirectUri"],[89,52,56,50],[89,53,56,51],[90,6,57,4,"console"],[90,13,57,11],[90,14,57,12,"log"],[90,17,57,15],[90,18,57,16],[90,29,57,27],[90,31,57,29,"Platform"],[90,39,57,37],[90,40,57,37,"default"],[90,47,57,37],[90,48,57,38,"OS"],[90,50,57,40],[90,51,57,41],[92,6,59,4],[93,6,60,4],[93,12,60,10,"request"],[93,19,60,17],[93,22,60,20],[93,26,60,24,"AuthSession"],[93,37,60,35],[93,38,60,36,"AuthRequest"],[93,49,60,47],[93,50,60,48],[94,8,61,6,"clientId"],[94,16,61,14],[94,18,61,16],[94,22,61,20],[94,23,61,21,"config"],[94,29,61,27],[94,30,61,28,"clientId"],[94,38,61,36],[95,8,62,6,"scopes"],[95,14,62,12],[95,16,62,14],[95,17,62,15],[95,25,62,23],[95,27,62,25],[95,36,62,34],[95,38,62,36],[95,45,62,43],[95,46,62,44],[96,8,63,6,"responseType"],[96,20,63,18],[96,22,63,20,"AuthSession"],[96,33,63,31],[96,34,63,32,"ResponseType"],[96,46,63,44],[96,47,63,45,"Code"],[96,51,63,49],[97,8,63,51],[98,8,64,6,"redirectUri"],[98,19,64,17],[99,8,65,6,"usePKCE"],[99,15,65,13],[99,17,65,15],[99,22,65,20],[100,8,65,22],[101,8,66,6],[102,8,67,6,"extraParams"],[102,19,67,17],[102,21,67,19],[103,10,68,8,"access_type"],[103,21,68,19],[103,23,68,21],[103,32,68,30],[104,10,69,8,"prompt"],[104,16,69,14],[104,18,69,16],[104,34,69,32],[104,35,69,34],[105,8,70,6],[106,6,71,4],[106,7,71,5],[106,8,71,6],[107,6,73,4],[107,13,73,11,"request"],[107,20,73,18],[108,4,74,2],[110,4,76,2],[111,0,77,0],[112,0,78,0],[113,4,79,2],[113,10,79,8,"signIn"],[113,16,79,14,"signIn"],[113,17,79,14],[113,19,79,45],[114,6,80,4],[114,10,80,8],[115,8,81,6],[115,12,81,10],[115,13,81,11],[115,17,81,15],[115,18,81,16,"config"],[115,24,81,22],[115,26,81,24],[116,10,82,8],[116,17,82,15],[117,12,83,10,"type"],[117,16,83,14],[117,18,83,16],[117,25,83,23],[118,12,84,10,"error"],[118,17,84,15],[118,19,84,17],[119,10,85,8],[119,11,85,9],[120,8,86,6],[121,8,88,6,"console"],[121,15,88,13],[121,16,88,14,"log"],[121,19,88,17],[121,20,88,18],[121,49,88,47],[121,50,88,48],[123,8,90,6],[124,8,91,6],[124,12,91,10],[124,13,91,11,"authRequest"],[124,24,91,22],[124,27,91,25],[124,33,91,31],[124,37,91,35],[124,38,91,36,"createAuthRequest"],[124,55,91,53],[124,56,91,54],[124,57,91,55],[125,8,93,6,"console"],[125,15,93,13],[125,16,93,14,"log"],[125,19,93,17],[125,20,93,18],[125,52,93,50],[125,53,93,51],[127,8,95,6],[128,8,96,6],[128,14,96,12,"result"],[128,20,96,18],[128,23,96,21],[128,29,96,27],[128,33,96,31],[128,34,96,32,"authRequest"],[128,45,96,43],[128,46,96,44,"promptAsync"],[128,57,96,55],[128,58,96,56,"discovery"],[128,67,96,65],[128,68,96,66],[129,8,98,6,"console"],[129,15,98,13],[129,16,98,14,"log"],[129,19,98,17],[129,20,98,18],[129,38,98,36],[129,40,98,38,"result"],[129,46,98,44],[129,47,98,45],[130,8,100,6],[130,12,100,10,"result"],[130,18,100,16],[130,19,100,17,"type"],[130,23,100,21],[130,28,100,26],[130,37,100,35],[130,39,100,37],[131,10,101,8],[132,10,102,8],[132,16,102,14],[133,12,102,16,"code"],[134,10,102,21],[134,11,102,22],[134,14,102,25,"result"],[134,20,102,31],[134,21,102,32,"params"],[134,27,102,38],[135,10,104,8,"console"],[135,17,104,15],[135,18,104,16,"log"],[135,21,104,19],[135,22,104,20],[135,68,104,66],[135,70,104,68],[135,71,104,69],[135,72,104,70,"code"],[135,76,104,74],[135,77,104,75],[136,10,106,8],[136,14,106,12,"code"],[136,18,106,16],[136,20,106,18],[137,12,107,10],[138,12,108,10],[138,18,108,16,"tokenResult"],[138,29,108,27],[138,32,108,30],[138,38,108,36,"AuthSession"],[138,49,108,47],[138,50,108,48,"exchangeCodeAsync"],[138,67,108,65],[138,68,109,12],[139,14,110,14,"clientId"],[139,22,110,22],[139,24,110,24],[139,28,110,28],[139,29,110,29,"config"],[139,35,110,35],[139,36,110,36,"clientId"],[139,44,110,44],[140,14,111,14,"code"],[140,18,111,18],[141,14,112,14,"redirectUri"],[141,25,112,25],[141,27,112,27],[141,31,112,31],[141,32,112,32,"authRequest"],[141,43,112,43],[141,44,112,44,"redirectUri"],[141,55,112,55],[142,14,113,14,"extraParams"],[142,25,113,25],[142,27,113,27],[143,16,114,16,"client_secret"],[143,29,114,29],[143,31,114,31],[143,35,114,35],[143,36,114,36,"config"],[143,42,114,42],[143,43,114,43,"clientSecret"],[143,55,114,55],[143,59,114,59],[144,14,115,14],[145,12,116,12],[145,13,116,13],[145,15,117,12,"discovery"],[145,24,118,10],[145,25,118,11],[146,12,120,10,"console"],[146,19,120,17],[146,20,120,18,"log"],[146,23,120,21],[146,24,120,22],[146,54,120,52],[146,55,120,53],[147,12,122,10],[147,19,122,17],[148,14,123,12,"type"],[148,18,123,16],[148,20,123,18],[148,29,123,27],[149,14,124,12,"idToken"],[149,21,124,19],[149,23,124,21,"tokenResult"],[149,34,124,32],[149,35,124,33,"idToken"],[149,42,124,40],[149,46,124,44,"undefined"],[149,55,124,53],[150,14,125,12,"accessToken"],[150,25,125,23],[150,27,125,25,"tokenResult"],[150,38,125,36],[150,39,125,37,"accessToken"],[151,12,126,10],[151,13,126,11],[152,10,127,8],[152,11,127,9],[152,17,127,15],[153,12,128,10],[153,19,128,17],[154,14,129,12,"type"],[154,18,129,16],[154,20,129,18],[154,27,129,25],[155,14,130,12,"error"],[155,19,130,17],[155,21,130,19],[156,12,131,10],[156,13,131,11],[157,10,132,8],[158,8,133,6],[158,9,133,7],[158,15,133,13],[158,19,133,17,"result"],[158,25,133,23],[158,26,133,24,"type"],[158,30,133,28],[158,35,133,33],[158,44,133,42],[158,48,133,46,"result"],[158,54,133,52],[158,55,133,53,"type"],[158,59,133,57],[158,64,133,62],[158,72,133,70],[158,74,133,72],[159,10,134,8,"console"],[159,17,134,15],[159,18,134,16,"log"],[159,21,134,19],[159,22,134,20],[159,60,134,58],[159,61,134,59],[160,10,135,8],[160,17,135,15],[161,12,136,10,"type"],[161,16,136,14],[161,18,136,16],[162,10,137,8],[162,11,137,9],[163,8,138,6],[163,9,138,7],[163,15,138,13],[164,10,139,8,"console"],[164,17,139,15],[164,18,139,16,"error"],[164,23,139,21],[164,24,139,22],[164,40,139,38],[164,42,139,40,"result"],[164,48,139,46],[164,49,139,47],[165,10,140,8],[165,17,140,15],[166,12,141,10,"type"],[166,16,141,14],[166,18,141,16],[166,25,141,23],[167,12,142,10,"error"],[167,17,142,15],[167,19,142,17],[168,10,143,8],[168,11,143,9],[169,8,144,6],[170,6,145,4],[170,7,145,5],[170,8,145,6],[170,15,145,13,"error"],[170,20,145,18],[170,22,145,20],[171,8,146,6,"console"],[171,15,146,13],[171,16,146,14,"error"],[171,21,146,19],[171,22,146,20],[171,45,146,43],[171,47,146,45,"error"],[171,52,146,50],[171,53,146,51],[172,8,147,6],[172,15,147,13],[173,10,148,8,"type"],[173,14,148,12],[173,16,148,14],[173,23,148,21],[174,10,149,8,"error"],[174,15,149,13],[174,17,149,15,"error"],[174,22,149,20],[174,34,149,32,"Error"],[174,39,149,37],[174,42,149,40,"error"],[174,47,149,45],[174,48,149,46,"message"],[174,55,149,53],[174,58,149,56],[175,8,150,6],[175,9,150,7],[176,6,151,4],[177,4,152,2],[179,4,154,2],[180,0,155,0],[181,0,156,0],[182,4,157,2],[182,10,157,8,"authenticateWithBackend"],[182,33,157,31,"authenticateWithBackend"],[182,34,157,32,"idToken"],[182,41,157,47],[182,43,157,49,"accessToken"],[182,54,157,69],[182,56,157,85],[183,6,158,4],[183,10,158,8],[184,8,159,6],[184,14,159,12,"backendUrl"],[184,24,159,22],[184,27,159,25,"_expoVirtualEnv"],[184,42,159,25],[184,43,159,25,"env"],[184,46,159,25],[184,47,159,25,"EXPO_PUBLIC_BACKEND_URL"],[184,70,159,25],[184,74,159,64],[184,76,159,66],[185,8,161,6],[185,14,161,12,"response"],[185,22,161,20],[185,25,161,23],[185,31,161,29,"fetch"],[185,36,161,34],[185,37,161,35],[185,40,161,38,"backendUrl"],[185,50,161,48],[185,74,161,72],[185,76,161,74],[186,10,162,8,"method"],[186,16,162,14],[186,18,162,16],[186,24,162,22],[187,10,163,8,"headers"],[187,17,163,15],[187,19,163,17],[188,12,164,10],[188,26,164,24],[188,28,164,26],[189,10,165,8],[189,11,165,9],[190,10,166,8,"body"],[190,14,166,12],[190,16,166,14,"JSON"],[190,20,166,18],[190,21,166,19,"stringify"],[190,30,166,28],[190,31,166,29],[191,12,167,10,"provider"],[191,20,167,18],[191,22,167,20],[191,30,167,28],[192,12,168,10,"id_token"],[192,20,168,18],[192,22,168,20,"idToken"],[192,29,168,27],[193,12,169,10,"access_token"],[193,24,169,22],[193,26,169,24,"accessToken"],[194,10,170,8],[194,11,170,9],[195,8,171,6],[195,9,171,7],[195,10,171,8],[196,8,173,6],[196,12,173,10],[196,13,173,11,"response"],[196,21,173,19],[196,22,173,20,"ok"],[196,24,173,22],[196,26,173,24],[197,10,174,8],[197,16,174,14,"errorData"],[197,25,174,23],[197,28,174,26],[197,34,174,32,"response"],[197,42,174,40],[197,43,174,41,"json"],[197,47,174,45],[197,48,174,46],[197,49,174,47],[197,50,174,48,"catch"],[197,55,174,53],[197,56,174,54],[197,63,174,61],[197,64,174,62],[197,65,174,63],[197,66,174,64],[197,67,174,65],[198,10,175,8],[198,16,175,14],[198,20,175,18,"Error"],[198,25,175,23],[198,26,175,24,"errorData"],[198,35,175,33],[198,36,175,34,"detail"],[198,42,175,40],[198,46,175,44],[198,77,175,75],[198,78,175,76],[199,8,176,6],[200,8,178,6],[200,15,178,13],[200,21,178,19,"response"],[200,29,178,27],[200,30,178,28,"json"],[200,34,178,32],[200,35,178,33],[200,36,178,34],[201,6,179,4],[201,7,179,5],[201,8,179,6],[201,15,179,13,"error"],[201,20,179,18],[201,22,179,20],[202,8,180,6,"console"],[202,15,180,13],[202,16,180,14,"error"],[202,21,180,19],[202,22,180,20],[202,44,180,42],[202,46,180,44,"error"],[202,51,180,49],[202,52,180,50],[203,8,181,6],[203,14,181,12,"error"],[203,19,181,17],[204,6,182,4],[205,4,183,2],[207,4,185,2],[208,0,186,0],[209,0,187,0],[210,4,188,2],[210,10,188,8,"completeOAuthFlow"],[210,27,188,25,"completeOAuthFlow"],[210,28,188,25],[210,30,188,42],[211,6,189,4],[211,12,189,10,"oauthResult"],[211,23,189,21],[211,26,189,24],[211,32,189,30],[211,36,189,34],[211,37,189,35,"signIn"],[211,43,189,41],[211,44,189,42],[211,45,189,43],[212,6,191,4],[212,10,191,8,"oauthResult"],[212,21,191,19],[212,22,191,20,"type"],[212,26,191,24],[212,31,191,29],[212,40,191,38],[212,44,191,42,"oauthResult"],[212,55,191,53],[212,56,191,54,"idToken"],[212,63,191,61],[212,65,191,63],[213,8,192,6],[213,15,192,13],[213,21,192,19],[213,25,192,23],[213,26,192,24,"authenticateWithBackend"],[213,49,192,47],[213,50,193,8,"oauthResult"],[213,61,193,19],[213,62,193,20,"idToken"],[213,69,193,27],[213,71,194,8,"oauthResult"],[213,82,194,19],[213,83,194,20,"accessToken"],[213,94,195,6],[213,95,195,7],[214,6,196,4],[214,7,196,5],[214,13,196,11],[215,8,197,6],[215,14,197,12],[215,18,197,16,"Error"],[215,23,197,21],[215,24,197,22,"oauthResult"],[215,35,197,33],[215,36,197,34,"error"],[215,41,197,39],[215,45,197,43],[215,64,197,62],[215,65,197,63],[216,6,198,4],[217,4,199,2],[219,4,201,2],[220,0,202,0],[221,0,203,0],[222,4,204,2,"isConfigured"],[222,16,204,14,"isConfigured"],[222,17,204,14],[222,19,204,26],[223,6,205,4],[223,13,205,11],[223,17,205,15],[223,18,205,16,"config"],[223,24,205,22],[223,29,205,27],[223,33,205,31],[223,37,205,35],[223,38,205,36],[223,39,205,37],[223,43,205,41],[223,44,205,42,"config"],[223,50,205,48],[223,51,205,49,"clientId"],[223,59,205,57],[224,4,206,2],[226,4,208,2],[227,0,209,0],[228,0,210,0],[229,4,211,2,"getConfig"],[229,13,211,11,"getConfig"],[229,14,211,11],[229,16,211,40],[230,6,212,4],[230,13,212,11],[230,17,212,15],[230,18,212,16,"config"],[230,24,212,22],[231,4,213,2],[232,2,214,0],[234,2,216,0],[235,2,217,7],[235,8,217,13,"googleOAuthService"],[235,26,217,31],[235,29,217,34],[235,33,217,38,"GoogleOAuthService"],[235,51,217,56],[235,52,217,57],[235,53,217,58],[237,2,219,0],[238,2,220,7],[238,8,220,13,"useGoogleOAuth"],[238,22,220,27],[238,25,220,30,"useGoogleOAuth"],[238,26,220,30],[238,31,220,36],[239,4,221,2],[239,10,221,8,"signIn"],[239,16,221,14],[239,19,221,17],[239,25,221,17,"signIn"],[239,26,221,17],[239,31,221,57],[240,6,222,4],[240,13,222,11],[240,19,222,17,"googleOAuthService"],[240,37,222,35],[240,38,222,36,"signIn"],[240,44,222,42],[240,45,222,43],[240,46,222,44],[241,4,223,2],[241,5,223,3],[242,4,225,2],[242,10,225,8,"authenticateWithBackend"],[242,33,225,31],[242,36,225,34],[242,42,225,34,"authenticateWithBackend"],[242,43,225,41,"idToken"],[242,50,225,56],[242,52,225,58,"accessToken"],[242,63,225,78],[242,68,225,83],[243,6,226,4],[243,13,226,11],[243,19,226,17,"googleOAuthService"],[243,37,226,35],[243,38,226,36,"authenticateWithBackend"],[243,61,226,59],[243,62,226,60,"idToken"],[243,69,226,67],[243,71,226,69,"accessToken"],[243,82,226,80],[243,83,226,81],[244,4,227,2],[244,5,227,3],[245,4,229,2],[245,10,229,8,"completeOAuthFlow"],[245,27,229,25],[245,30,229,28],[245,36,229,28,"completeOAuthFlow"],[245,37,229,28],[245,42,229,40],[246,6,230,4],[246,13,230,11],[246,19,230,17,"googleOAuthService"],[246,37,230,35],[246,38,230,36,"completeOAuthFlow"],[246,55,230,53],[246,56,230,54],[246,57,230,55],[247,4,231,2],[247,5,231,3],[248,4,233,2],[248,11,233,9],[249,6,234,4,"signIn"],[249,12,234,10],[250,6,235,4,"authenticateWithBackend"],[250,29,235,27],[251,6,236,4,"completeOAuthFlow"],[251,23,236,21],[252,6,237,4,"isConfigured"],[252,18,237,16],[252,20,237,18,"googleOAuthService"],[252,38,237,36],[252,39,237,37,"isConfigured"],[252,51,237,49],[252,52,237,50],[252,53,237,51],[253,6,238,4,"initialize"],[253,16,238,14],[253,18,238,16,"googleOAuthService"],[253,36,238,34],[253,37,238,35,"initialize"],[253,47,238,45],[253,48,238,46,"bind"],[253,52,238,50],[253,53,238,51,"googleOAuthService"],[253,71,238,69],[254,4,239,2],[254,5,239,3],[255,2,240,0],[255,3,240,1],[256,2,242,0],[256,6,242,0,"_default"],[256,14,242,0],[256,17,242,15,"googleOAuthService"],[256,35,242,33],[257,0,242,34],[257,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF6B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}