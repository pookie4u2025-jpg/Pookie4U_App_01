{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoAuthSession = require(_dependencyMap[1], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[2], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request with proper configuration\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.IdToken,\n        redirectUri,\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync (new method)\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          const {\n            id_token,\n            access_token\n          } = result.params;\n          console.log('✅ OAuth success, ID token present:', !!id_token);\n          if (id_token) {\n            return {\n              type: 'success',\n              idToken: id_token,\n              accessToken: access_token\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No ID token received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":242,"map":[[27,2,223,0,"Object"],[27,8,223,0],[27,9,223,0,"defineProperty"],[27,23,223,0],[27,24,223,0,"exports"],[27,31,223,0],[28,4,223,0,"enumerable"],[28,14,223,0],[29,4,223,0,"get"],[29,7,223,0],[29,18,223,0,"get"],[29,19,223,0],[30,6,223,0],[30,13,223,0,"_default"],[30,21,223,0],[31,4,223,0],[32,2,223,0],[33,2,198,0,"Object"],[33,8,198,0],[33,9,198,0,"defineProperty"],[33,23,198,0],[33,24,198,0,"exports"],[33,31,198,0],[34,4,198,0,"enumerable"],[34,14,198,0],[35,4,198,0,"get"],[35,7,198,0],[35,18,198,0,"get"],[35,19,198,0],[36,6,198,0],[36,13,198,0,"googleOAuthService"],[36,31,198,0],[37,4,198,0],[38,2,198,0],[39,2,201,0,"Object"],[39,8,201,0],[39,9,201,0,"defineProperty"],[39,23,201,0],[39,24,201,0,"exports"],[39,31,201,0],[40,4,201,0,"enumerable"],[40,14,201,0],[41,4,201,0,"get"],[41,7,201,0],[41,18,201,0,"get"],[41,19,201,0],[42,6,201,0],[42,13,201,0,"useGoogleOAuth"],[42,27,201,0],[43,4,201,0],[44,2,201,0],[45,2,221,2],[45,6,221,2,"_expoVirtualEnv"],[45,21,221,2],[45,24,221,2,"require"],[45,31,221,2],[45,32,221,2,"_dependencyMap"],[45,46,221,2],[46,2,1,0],[46,6,1,0,"_expoAuthSession"],[46,22,1,0],[46,25,1,0,"require"],[46,32,1,0],[46,33,1,0,"_dependencyMap"],[46,47,1,0],[47,2,1,0],[47,6,1,0,"AuthSession"],[47,17,1,0],[47,20,1,0,"_interopNamespace"],[47,37,1,0],[47,38,1,0,"_expoAuthSession"],[47,54,1,0],[48,2,2,0],[48,6,2,0,"_expoWebBrowser"],[48,21,2,0],[48,24,2,0,"require"],[48,31,2,0],[48,32,2,0,"_dependencyMap"],[48,46,2,0],[49,2,2,0],[49,6,2,0,"WebBrowser"],[49,16,2,0],[49,19,2,0,"_interopNamespace"],[49,36,2,0],[49,37,2,0,"_expoWebBrowser"],[49,52,2,0],[50,2,2,47],[50,6,2,47,"_reactNativeWebDistExportsPlatform"],[50,40,2,47],[50,43,2,47,"require"],[50,50,2,47],[50,51,2,47,"_dependencyMap"],[50,65,2,47],[51,2,2,47],[51,6,2,47,"Platform"],[51,14,2,47],[51,17,2,47,"_interopDefault"],[51,32,2,47],[51,33,2,47,"_reactNativeWebDistExportsPlatform"],[51,67,2,47],[52,2,5,0],[53,2,6,0,"WebBrowser"],[53,12,6,10],[53,13,6,11,"maybeCompleteAuthSession"],[53,37,6,35],[53,38,6,36],[53,39,6,37],[55,2,8,0],[56,2,9,0],[56,8,9,6,"GOOGLE_CLIENT_ID"],[56,24,9,22],[56,27,9,25],[56,29,9,27],[56,30,9,28],[56,31,9,29],[57,2,10,0],[57,8,10,6,"GOOGLE_CLIENT_SECRET"],[57,28,10,26],[57,31,10,29],[57,33,10,31],[57,34,10,32],[57,35,10,33],[59,2,12,0],[60,2,13,0],[60,8,13,6,"discovery"],[60,17,13,15],[60,20,13,18],[61,4,14,2,"authorizationEndpoint"],[61,25,14,23],[61,27,14,25],[61,73,14,71],[62,4,15,2,"tokenEndpoint"],[62,17,15,15],[62,19,15,17],[62,56,15,54],[63,4,16,2,"revocationEndpoint"],[63,22,16,20],[63,24,16,22],[64,2,17,0],[64,3,17,1],[65,2,31,0],[65,8,31,6,"GoogleOAuthService"],[65,26,31,24],[65,27,31,25],[66,4,32,10,"config"],[66,10,32,16],[66,13,32,45],[66,17,32,49],[67,4,33,10,"authRequest"],[67,15,33,21],[67,18,33,56],[67,22,33,60],[69,4,35,2],[70,0,36,0],[71,0,37,0],[72,4,38,2,"initialize"],[72,14,38,12,"initialize"],[72,15,38,13,"config"],[72,21,38,38],[72,23,38,40],[73,6,39,4],[73,10,39,8],[73,11,39,9,"config"],[73,17,39,15],[73,20,39,18,"config"],[73,26,39,24],[74,4,40,2],[76,4,42,2],[77,0,43,0],[78,0,44,0],[79,4,45,2],[79,10,45,16,"createAuthRequest"],[79,27,45,33,"createAuthRequest"],[79,28,45,33],[79,30,45,70],[80,6,46,4],[80,10,46,8],[80,11,46,9],[80,15,46,13],[80,16,46,14,"config"],[80,22,46,20],[80,24,46,22],[81,8,47,6],[81,14,47,12],[81,18,47,16,"Error"],[81,23,47,21],[81,24,47,22],[81,80,47,78],[81,81,47,79],[82,6,48,4],[83,6,50,4],[83,12,50,10,"redirectUri"],[83,23,50,21],[83,26,50,24,"AuthSession"],[83,37,50,35],[83,38,50,36,"makeRedirectUri"],[83,53,50,51],[83,54,50,52],[84,8,51,6,"useProxy"],[84,16,51,14],[84,18,51,16],[84,22,51,20],[85,8,51,22],[86,8,52,6,"preferLocalhost"],[86,23,52,21],[86,25,52,23,"Platform"],[86,33,52,31],[86,34,52,31,"default"],[86,41,52,31],[86,42,52,32,"OS"],[86,44,52,34],[86,49,52,39],[87,6,53,4],[87,7,53,5],[87,8,53,6],[88,6,55,4,"console"],[88,13,55,11],[88,14,55,12,"log"],[88,17,55,15],[88,18,55,16],[88,39,55,37],[88,41,55,39,"redirectUri"],[88,52,55,50],[88,53,55,51],[90,6,57,4],[91,6,58,4],[91,12,58,10,"request"],[91,19,58,17],[91,22,58,20],[91,26,58,24,"AuthSession"],[91,37,58,35],[91,38,58,36,"AuthRequest"],[91,49,58,47],[91,50,58,48],[92,8,59,6,"clientId"],[92,16,59,14],[92,18,59,16],[92,22,59,20],[92,23,59,21,"config"],[92,29,59,27],[92,30,59,28,"clientId"],[92,38,59,36],[93,8,60,6,"scopes"],[93,14,60,12],[93,16,60,14],[93,17,60,15],[93,25,60,23],[93,27,60,25],[93,36,60,34],[93,38,60,36],[93,45,60,43],[93,46,60,44],[94,8,61,6,"responseType"],[94,20,61,18],[94,22,61,20,"AuthSession"],[94,33,61,31],[94,34,61,32,"ResponseType"],[94,46,61,44],[94,47,61,45,"IdToken"],[94,54,61,52],[95,8,62,6,"redirectUri"],[95,19,62,17],[96,8,63,6],[97,8,64,6,"extraParams"],[97,19,64,17],[97,21,64,19],[98,10,65,8,"access_type"],[98,21,65,19],[98,23,65,21],[98,32,65,30],[99,10,66,8,"prompt"],[99,16,66,14],[99,18,66,16],[99,34,66,32],[99,35,66,34],[100,8,67,6],[101,6,68,4],[101,7,68,5],[101,8,68,6],[102,6,70,4],[102,13,70,11,"request"],[102,20,70,18],[103,4,71,2],[105,4,73,2],[106,0,74,0],[107,0,75,0],[108,4,76,2],[108,10,76,8,"signIn"],[108,16,76,14,"signIn"],[108,17,76,14],[108,19,76,45],[109,6,77,4],[109,10,77,8],[110,8,78,6],[110,12,78,10],[110,13,78,11],[110,17,78,15],[110,18,78,16,"config"],[110,24,78,22],[110,26,78,24],[111,10,79,8],[111,17,79,15],[112,12,80,10,"type"],[112,16,80,14],[112,18,80,16],[112,25,80,23],[113,12,81,10,"error"],[113,17,81,15],[113,19,81,17],[114,10,82,8],[114,11,82,9],[115,8,83,6],[116,8,85,6,"console"],[116,15,85,13],[116,16,85,14,"log"],[116,19,85,17],[116,20,85,18],[116,49,85,47],[116,50,85,48],[118,8,87,6],[119,8,88,6],[119,12,88,10],[119,13,88,11,"authRequest"],[119,24,88,22],[119,27,88,25],[119,33,88,31],[119,37,88,35],[119,38,88,36,"createAuthRequest"],[119,55,88,53],[119,56,88,54],[119,57,88,55],[120,8,90,6,"console"],[120,15,90,13],[120,16,90,14,"log"],[120,19,90,17],[120,20,90,18],[120,52,90,50],[120,53,90,51],[122,8,92,6],[123,8,93,6],[123,14,93,12,"result"],[123,20,93,18],[123,23,93,21],[123,29,93,27],[123,33,93,31],[123,34,93,32,"authRequest"],[123,45,93,43],[123,46,93,44,"promptAsync"],[123,57,93,55],[123,58,93,56,"discovery"],[123,67,93,65],[123,68,93,66],[124,8,95,6,"console"],[124,15,95,13],[124,16,95,14,"log"],[124,19,95,17],[124,20,95,18],[124,38,95,36],[124,40,95,38,"result"],[124,46,95,44],[124,47,95,45],[125,8,97,6],[125,12,97,10,"result"],[125,18,97,16],[125,19,97,17,"type"],[125,23,97,21],[125,28,97,26],[125,37,97,35],[125,39,97,37],[126,10,98,8],[126,16,98,14],[127,12,98,16,"id_token"],[127,20,98,24],[128,12,98,26,"access_token"],[129,10,98,39],[129,11,98,40],[129,14,98,43,"result"],[129,20,98,49],[129,21,98,50,"params"],[129,27,98,56],[130,10,100,8,"console"],[130,17,100,15],[130,18,100,16,"log"],[130,21,100,19],[130,22,100,20],[130,58,100,56],[130,60,100,58],[130,61,100,59],[130,62,100,60,"id_token"],[130,70,100,68],[130,71,100,69],[131,10,102,8],[131,14,102,12,"id_token"],[131,22,102,20],[131,24,102,22],[132,12,103,10],[132,19,103,17],[133,14,104,12,"type"],[133,18,104,16],[133,20,104,18],[133,29,104,27],[134,14,105,12,"idToken"],[134,21,105,19],[134,23,105,21,"id_token"],[134,31,105,29],[135,14,106,12,"accessToken"],[135,25,106,23],[135,27,106,25,"access_token"],[136,12,107,10],[136,13,107,11],[137,10,108,8],[137,11,108,9],[137,17,108,15],[138,12,109,10],[138,19,109,17],[139,14,110,12,"type"],[139,18,110,16],[139,20,110,18],[139,27,110,25],[140,14,111,12,"error"],[140,19,111,17],[140,21,111,19],[141,12,112,10],[141,13,112,11],[142,10,113,8],[143,8,114,6],[143,9,114,7],[143,15,114,13],[143,19,114,17,"result"],[143,25,114,23],[143,26,114,24,"type"],[143,30,114,28],[143,35,114,33],[143,44,114,42],[143,48,114,46,"result"],[143,54,114,52],[143,55,114,53,"type"],[143,59,114,57],[143,64,114,62],[143,72,114,70],[143,74,114,72],[144,10,115,8,"console"],[144,17,115,15],[144,18,115,16,"log"],[144,21,115,19],[144,22,115,20],[144,60,115,58],[144,61,115,59],[145,10,116,8],[145,17,116,15],[146,12,117,10,"type"],[146,16,117,14],[146,18,117,16],[147,10,118,8],[147,11,118,9],[148,8,119,6],[148,9,119,7],[148,15,119,13],[149,10,120,8,"console"],[149,17,120,15],[149,18,120,16,"error"],[149,23,120,21],[149,24,120,22],[149,40,120,38],[149,42,120,40,"result"],[149,48,120,46],[149,49,120,47],[150,10,121,8],[150,17,121,15],[151,12,122,10,"type"],[151,16,122,14],[151,18,122,16],[151,25,122,23],[152,12,123,10,"error"],[152,17,123,15],[152,19,123,17],[153,10,124,8],[153,11,124,9],[154,8,125,6],[155,6,126,4],[155,7,126,5],[155,8,126,6],[155,15,126,13,"error"],[155,20,126,18],[155,22,126,20],[156,8,127,6,"console"],[156,15,127,13],[156,16,127,14,"error"],[156,21,127,19],[156,22,127,20],[156,45,127,43],[156,47,127,45,"error"],[156,52,127,50],[156,53,127,51],[157,8,128,6],[157,15,128,13],[158,10,129,8,"type"],[158,14,129,12],[158,16,129,14],[158,23,129,21],[159,10,130,8,"error"],[159,15,130,13],[159,17,130,15,"error"],[159,22,130,20],[159,34,130,32,"Error"],[159,39,130,37],[159,42,130,40,"error"],[159,47,130,45],[159,48,130,46,"message"],[159,55,130,53],[159,58,130,56],[160,8,131,6],[160,9,131,7],[161,6,132,4],[162,4,133,2],[164,4,135,2],[165,0,136,0],[166,0,137,0],[167,4,138,2],[167,10,138,8,"authenticateWithBackend"],[167,33,138,31,"authenticateWithBackend"],[167,34,138,32,"idToken"],[167,41,138,47],[167,43,138,49,"accessToken"],[167,54,138,69],[167,56,138,85],[168,6,139,4],[168,10,139,8],[169,8,140,6],[169,14,140,12,"backendUrl"],[169,24,140,22],[169,27,140,25,"_expoVirtualEnv"],[169,42,140,25],[169,43,140,25,"env"],[169,46,140,25],[169,47,140,25,"EXPO_PUBLIC_BACKEND_URL"],[169,70,140,25],[169,74,140,64],[169,76,140,66],[170,8,142,6],[170,14,142,12,"response"],[170,22,142,20],[170,25,142,23],[170,31,142,29,"fetch"],[170,36,142,34],[170,37,142,35],[170,40,142,38,"backendUrl"],[170,50,142,48],[170,74,142,72],[170,76,142,74],[171,10,143,8,"method"],[171,16,143,14],[171,18,143,16],[171,24,143,22],[172,10,144,8,"headers"],[172,17,144,15],[172,19,144,17],[173,12,145,10],[173,26,145,24],[173,28,145,26],[174,10,146,8],[174,11,146,9],[175,10,147,8,"body"],[175,14,147,12],[175,16,147,14,"JSON"],[175,20,147,18],[175,21,147,19,"stringify"],[175,30,147,28],[175,31,147,29],[176,12,148,10,"provider"],[176,20,148,18],[176,22,148,20],[176,30,148,28],[177,12,149,10,"id_token"],[177,20,149,18],[177,22,149,20,"idToken"],[177,29,149,27],[178,12,150,10,"access_token"],[178,24,150,22],[178,26,150,24,"accessToken"],[179,10,151,8],[179,11,151,9],[180,8,152,6],[180,9,152,7],[180,10,152,8],[181,8,154,6],[181,12,154,10],[181,13,154,11,"response"],[181,21,154,19],[181,22,154,20,"ok"],[181,24,154,22],[181,26,154,24],[182,10,155,8],[182,16,155,14,"errorData"],[182,25,155,23],[182,28,155,26],[182,34,155,32,"response"],[182,42,155,40],[182,43,155,41,"json"],[182,47,155,45],[182,48,155,46],[182,49,155,47],[182,50,155,48,"catch"],[182,55,155,53],[182,56,155,54],[182,63,155,61],[182,64,155,62],[182,65,155,63],[182,66,155,64],[182,67,155,65],[183,10,156,8],[183,16,156,14],[183,20,156,18,"Error"],[183,25,156,23],[183,26,156,24,"errorData"],[183,35,156,33],[183,36,156,34,"detail"],[183,42,156,40],[183,46,156,44],[183,77,156,75],[183,78,156,76],[184,8,157,6],[185,8,159,6],[185,15,159,13],[185,21,159,19,"response"],[185,29,159,27],[185,30,159,28,"json"],[185,34,159,32],[185,35,159,33],[185,36,159,34],[186,6,160,4],[186,7,160,5],[186,8,160,6],[186,15,160,13,"error"],[186,20,160,18],[186,22,160,20],[187,8,161,6,"console"],[187,15,161,13],[187,16,161,14,"error"],[187,21,161,19],[187,22,161,20],[187,44,161,42],[187,46,161,44,"error"],[187,51,161,49],[187,52,161,50],[188,8,162,6],[188,14,162,12,"error"],[188,19,162,17],[189,6,163,4],[190,4,164,2],[192,4,166,2],[193,0,167,0],[194,0,168,0],[195,4,169,2],[195,10,169,8,"completeOAuthFlow"],[195,27,169,25,"completeOAuthFlow"],[195,28,169,25],[195,30,169,42],[196,6,170,4],[196,12,170,10,"oauthResult"],[196,23,170,21],[196,26,170,24],[196,32,170,30],[196,36,170,34],[196,37,170,35,"signIn"],[196,43,170,41],[196,44,170,42],[196,45,170,43],[197,6,172,4],[197,10,172,8,"oauthResult"],[197,21,172,19],[197,22,172,20,"type"],[197,26,172,24],[197,31,172,29],[197,40,172,38],[197,44,172,42,"oauthResult"],[197,55,172,53],[197,56,172,54,"idToken"],[197,63,172,61],[197,65,172,63],[198,8,173,6],[198,15,173,13],[198,21,173,19],[198,25,173,23],[198,26,173,24,"authenticateWithBackend"],[198,49,173,47],[198,50,174,8,"oauthResult"],[198,61,174,19],[198,62,174,20,"idToken"],[198,69,174,27],[198,71,175,8,"oauthResult"],[198,82,175,19],[198,83,175,20,"accessToken"],[198,94,176,6],[198,95,176,7],[199,6,177,4],[199,7,177,5],[199,13,177,11],[200,8,178,6],[200,14,178,12],[200,18,178,16,"Error"],[200,23,178,21],[200,24,178,22,"oauthResult"],[200,35,178,33],[200,36,178,34,"error"],[200,41,178,39],[200,45,178,43],[200,64,178,62],[200,65,178,63],[201,6,179,4],[202,4,180,2],[204,4,182,2],[205,0,183,0],[206,0,184,0],[207,4,185,2,"isConfigured"],[207,16,185,14,"isConfigured"],[207,17,185,14],[207,19,185,26],[208,6,186,4],[208,13,186,11],[208,17,186,15],[208,18,186,16,"config"],[208,24,186,22],[208,29,186,27],[208,33,186,31],[208,37,186,35],[208,38,186,36],[208,39,186,37],[208,43,186,41],[208,44,186,42,"config"],[208,50,186,48],[208,51,186,49,"clientId"],[208,59,186,57],[209,4,187,2],[211,4,189,2],[212,0,190,0],[213,0,191,0],[214,4,192,2,"getConfig"],[214,13,192,11,"getConfig"],[214,14,192,11],[214,16,192,40],[215,6,193,4],[215,13,193,11],[215,17,193,15],[215,18,193,16,"config"],[215,24,193,22],[216,4,194,2],[217,2,195,0],[219,2,197,0],[220,2,198,7],[220,8,198,13,"googleOAuthService"],[220,26,198,31],[220,29,198,34],[220,33,198,38,"GoogleOAuthService"],[220,51,198,56],[220,52,198,57],[220,53,198,58],[222,2,200,0],[223,2,201,7],[223,8,201,13,"useGoogleOAuth"],[223,22,201,27],[223,25,201,30,"useGoogleOAuth"],[223,26,201,30],[223,31,201,36],[224,4,202,2],[224,10,202,8,"signIn"],[224,16,202,14],[224,19,202,17],[224,25,202,17,"signIn"],[224,26,202,17],[224,31,202,57],[225,6,203,4],[225,13,203,11],[225,19,203,17,"googleOAuthService"],[225,37,203,35],[225,38,203,36,"signIn"],[225,44,203,42],[225,45,203,43],[225,46,203,44],[226,4,204,2],[226,5,204,3],[227,4,206,2],[227,10,206,8,"authenticateWithBackend"],[227,33,206,31],[227,36,206,34],[227,42,206,34,"authenticateWithBackend"],[227,43,206,41,"idToken"],[227,50,206,56],[227,52,206,58,"accessToken"],[227,63,206,78],[227,68,206,83],[228,6,207,4],[228,13,207,11],[228,19,207,17,"googleOAuthService"],[228,37,207,35],[228,38,207,36,"authenticateWithBackend"],[228,61,207,59],[228,62,207,60,"idToken"],[228,69,207,67],[228,71,207,69,"accessToken"],[228,82,207,80],[228,83,207,81],[229,4,208,2],[229,5,208,3],[230,4,210,2],[230,10,210,8,"completeOAuthFlow"],[230,27,210,25],[230,30,210,28],[230,36,210,28,"completeOAuthFlow"],[230,37,210,28],[230,42,210,40],[231,6,211,4],[231,13,211,11],[231,19,211,17,"googleOAuthService"],[231,37,211,35],[231,38,211,36,"completeOAuthFlow"],[231,55,211,53],[231,56,211,54],[231,57,211,55],[232,4,212,2],[232,5,212,3],[233,4,214,2],[233,11,214,9],[234,6,215,4,"signIn"],[234,12,215,10],[235,6,216,4,"authenticateWithBackend"],[235,29,216,27],[236,6,217,4,"completeOAuthFlow"],[236,23,217,21],[237,6,218,4,"isConfigured"],[237,18,218,16],[237,20,218,18,"googleOAuthService"],[237,38,218,36],[237,39,218,37,"isConfigured"],[237,51,218,49],[237,52,218,50],[237,53,218,51],[238,6,219,4,"initialize"],[238,16,219,14],[238,18,219,16,"googleOAuthService"],[238,36,219,34],[238,37,219,35,"initialize"],[238,47,219,45],[238,48,219,46,"bind"],[238,52,219,50],[238,53,219,51,"googleOAuthService"],[238,71,219,69],[239,4,220,2],[239,5,220,3],[240,2,221,0],[240,3,221,1],[241,2,223,0],[241,6,223,0,"_default"],[241,14,223,0],[241,17,223,15,"googleOAuthService"],[241,35,223,33],[242,0,223,34],[242,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF0B;EGK;GHyD;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}