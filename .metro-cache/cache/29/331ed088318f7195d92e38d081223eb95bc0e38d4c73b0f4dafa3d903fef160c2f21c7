{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoAuthSession = require(_dependencyMap[1], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[2], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":255,"map":[[27,2,240,0,"Object"],[27,8,240,0],[27,9,240,0,"defineProperty"],[27,23,240,0],[27,24,240,0,"exports"],[27,31,240,0],[28,4,240,0,"enumerable"],[28,14,240,0],[29,4,240,0,"get"],[29,7,240,0],[29,18,240,0,"get"],[29,19,240,0],[30,6,240,0],[30,13,240,0,"_default"],[30,21,240,0],[31,4,240,0],[32,2,240,0],[33,2,215,0,"Object"],[33,8,215,0],[33,9,215,0,"defineProperty"],[33,23,215,0],[33,24,215,0,"exports"],[33,31,215,0],[34,4,215,0,"enumerable"],[34,14,215,0],[35,4,215,0,"get"],[35,7,215,0],[35,18,215,0,"get"],[35,19,215,0],[36,6,215,0],[36,13,215,0,"googleOAuthService"],[36,31,215,0],[37,4,215,0],[38,2,215,0],[39,2,218,0,"Object"],[39,8,218,0],[39,9,218,0,"defineProperty"],[39,23,218,0],[39,24,218,0,"exports"],[39,31,218,0],[40,4,218,0,"enumerable"],[40,14,218,0],[41,4,218,0,"get"],[41,7,218,0],[41,18,218,0,"get"],[41,19,218,0],[42,6,218,0],[42,13,218,0,"useGoogleOAuth"],[42,27,218,0],[43,4,218,0],[44,2,218,0],[45,2,238,2],[45,6,238,2,"_expoVirtualEnv"],[45,21,238,2],[45,24,238,2,"require"],[45,31,238,2],[45,32,238,2,"_dependencyMap"],[45,46,238,2],[46,2,1,0],[46,6,1,0,"_expoAuthSession"],[46,22,1,0],[46,25,1,0,"require"],[46,32,1,0],[46,33,1,0,"_dependencyMap"],[46,47,1,0],[47,2,1,0],[47,6,1,0,"AuthSession"],[47,17,1,0],[47,20,1,0,"_interopNamespace"],[47,37,1,0],[47,38,1,0,"_expoAuthSession"],[47,54,1,0],[48,2,2,0],[48,6,2,0,"_expoWebBrowser"],[48,21,2,0],[48,24,2,0,"require"],[48,31,2,0],[48,32,2,0,"_dependencyMap"],[48,46,2,0],[49,2,2,0],[49,6,2,0,"WebBrowser"],[49,16,2,0],[49,19,2,0,"_interopNamespace"],[49,36,2,0],[49,37,2,0,"_expoWebBrowser"],[49,52,2,0],[50,2,2,47],[50,6,2,47,"_reactNativeWebDistExportsPlatform"],[50,40,2,47],[50,43,2,47,"require"],[50,50,2,47],[50,51,2,47,"_dependencyMap"],[50,65,2,47],[51,2,2,47],[51,6,2,47,"Platform"],[51,14,2,47],[51,17,2,47,"_interopDefault"],[51,32,2,47],[51,33,2,47,"_reactNativeWebDistExportsPlatform"],[51,67,2,47],[52,2,5,0],[53,2,6,0,"WebBrowser"],[53,12,6,10],[53,13,6,11,"maybeCompleteAuthSession"],[53,37,6,35],[53,38,6,36],[53,39,6,37],[55,2,8,0],[56,2,9,0],[56,8,9,6,"GOOGLE_CLIENT_ID"],[56,24,9,22],[56,27,9,25],[56,29,9,27],[56,30,9,28],[56,31,9,29],[57,2,10,0],[57,8,10,6,"GOOGLE_CLIENT_SECRET"],[57,28,10,26],[57,31,10,29],[57,33,10,31],[57,34,10,32],[57,35,10,33],[59,2,12,0],[60,2,13,0],[60,8,13,6,"discovery"],[60,17,13,15],[60,20,13,18],[61,4,14,2,"authorizationEndpoint"],[61,25,14,23],[61,27,14,25],[61,73,14,71],[62,4,15,2,"tokenEndpoint"],[62,17,15,15],[62,19,15,17],[62,56,15,54],[63,4,16,2,"revocationEndpoint"],[63,22,16,20],[63,24,16,22],[64,2,17,0],[64,3,17,1],[65,2,31,0],[65,8,31,6,"GoogleOAuthService"],[65,26,31,24],[65,27,31,25],[66,4,32,10,"config"],[66,10,32,16],[66,13,32,45],[66,17,32,49],[67,4,33,10,"authRequest"],[67,15,33,21],[67,18,33,56],[67,22,33,60],[69,4,35,2],[70,0,36,0],[71,0,37,0],[72,4,38,2,"initialize"],[72,14,38,12,"initialize"],[72,15,38,13,"config"],[72,21,38,38],[72,23,38,40],[73,6,39,4],[73,10,39,8],[73,11,39,9,"config"],[73,17,39,15],[73,20,39,18,"config"],[73,26,39,24],[74,4,40,2],[76,4,42,2],[77,0,43,0],[78,0,44,0],[79,4,45,2],[79,10,45,16,"createAuthRequest"],[79,27,45,33,"createAuthRequest"],[79,28,45,33],[79,30,45,70],[80,6,46,4],[80,10,46,8],[80,11,46,9],[80,15,46,13],[80,16,46,14,"config"],[80,22,46,20],[80,24,46,22],[81,8,47,6],[81,14,47,12],[81,18,47,16,"Error"],[81,23,47,21],[81,24,47,22],[81,80,47,78],[81,81,47,79],[82,6,48,4],[83,6,50,4],[83,12,50,10,"redirectUri"],[83,23,50,21],[83,26,50,24,"AuthSession"],[83,37,50,35],[83,38,50,36,"makeRedirectUri"],[83,53,50,51],[83,54,50,52],[84,8,51,6,"useProxy"],[84,16,51,14],[84,18,51,16],[84,22,51,20],[85,8,51,22],[86,8,52,6,"preferLocalhost"],[86,23,52,21],[86,25,52,23,"Platform"],[86,33,52,31],[86,34,52,31,"default"],[86,41,52,31],[86,42,52,32,"OS"],[86,44,52,34],[86,49,52,39],[87,6,53,4],[87,7,53,5],[87,8,53,6],[88,6,55,4,"console"],[88,13,55,11],[88,14,55,12,"log"],[88,17,55,15],[88,18,55,16],[88,39,55,37],[88,41,55,39,"redirectUri"],[88,52,55,50],[88,53,55,51],[90,6,57,4],[91,6,58,4],[91,12,58,10,"request"],[91,19,58,17],[91,22,58,20],[91,26,58,24,"AuthSession"],[91,37,58,35],[91,38,58,36,"AuthRequest"],[91,49,58,47],[91,50,58,48],[92,8,59,6,"clientId"],[92,16,59,14],[92,18,59,16],[92,22,59,20],[92,23,59,21,"config"],[92,29,59,27],[92,30,59,28,"clientId"],[92,38,59,36],[93,8,60,6,"scopes"],[93,14,60,12],[93,16,60,14],[93,17,60,15],[93,25,60,23],[93,27,60,25],[93,36,60,34],[93,38,60,36],[93,45,60,43],[93,46,60,44],[94,8,61,6,"responseType"],[94,20,61,18],[94,22,61,20,"AuthSession"],[94,33,61,31],[94,34,61,32,"ResponseType"],[94,46,61,44],[94,47,61,45,"Code"],[94,51,61,49],[95,8,61,51],[96,8,62,6,"redirectUri"],[96,19,62,17],[97,8,63,6,"usePKCE"],[97,15,63,13],[97,17,63,15],[97,22,63,20],[98,8,63,22],[99,8,64,6],[100,8,65,6,"extraParams"],[100,19,65,17],[100,21,65,19],[101,10,66,8,"access_type"],[101,21,66,19],[101,23,66,21],[101,32,66,30],[102,10,67,8,"prompt"],[102,16,67,14],[102,18,67,16],[102,34,67,32],[102,35,67,34],[103,8,68,6],[104,6,69,4],[104,7,69,5],[104,8,69,6],[105,6,71,4],[105,13,71,11,"request"],[105,20,71,18],[106,4,72,2],[108,4,74,2],[109,0,75,0],[110,0,76,0],[111,4,77,2],[111,10,77,8,"signIn"],[111,16,77,14,"signIn"],[111,17,77,14],[111,19,77,45],[112,6,78,4],[112,10,78,8],[113,8,79,6],[113,12,79,10],[113,13,79,11],[113,17,79,15],[113,18,79,16,"config"],[113,24,79,22],[113,26,79,24],[114,10,80,8],[114,17,80,15],[115,12,81,10,"type"],[115,16,81,14],[115,18,81,16],[115,25,81,23],[116,12,82,10,"error"],[116,17,82,15],[116,19,82,17],[117,10,83,8],[117,11,83,9],[118,8,84,6],[119,8,86,6,"console"],[119,15,86,13],[119,16,86,14,"log"],[119,19,86,17],[119,20,86,18],[119,49,86,47],[119,50,86,48],[121,8,88,6],[122,8,89,6],[122,12,89,10],[122,13,89,11,"authRequest"],[122,24,89,22],[122,27,89,25],[122,33,89,31],[122,37,89,35],[122,38,89,36,"createAuthRequest"],[122,55,89,53],[122,56,89,54],[122,57,89,55],[123,8,91,6,"console"],[123,15,91,13],[123,16,91,14,"log"],[123,19,91,17],[123,20,91,18],[123,52,91,50],[123,53,91,51],[125,8,93,6],[126,8,94,6],[126,14,94,12,"result"],[126,20,94,18],[126,23,94,21],[126,29,94,27],[126,33,94,31],[126,34,94,32,"authRequest"],[126,45,94,43],[126,46,94,44,"promptAsync"],[126,57,94,55],[126,58,94,56,"discovery"],[126,67,94,65],[126,68,94,66],[127,8,96,6,"console"],[127,15,96,13],[127,16,96,14,"log"],[127,19,96,17],[127,20,96,18],[127,38,96,36],[127,40,96,38,"result"],[127,46,96,44],[127,47,96,45],[128,8,98,6],[128,12,98,10,"result"],[128,18,98,16],[128,19,98,17,"type"],[128,23,98,21],[128,28,98,26],[128,37,98,35],[128,39,98,37],[129,10,99,8],[130,10,100,8],[130,16,100,14],[131,12,100,16,"code"],[132,10,100,21],[132,11,100,22],[132,14,100,25,"result"],[132,20,100,31],[132,21,100,32,"params"],[132,27,100,38],[133,10,102,8,"console"],[133,17,102,15],[133,18,102,16,"log"],[133,21,102,19],[133,22,102,20],[133,68,102,66],[133,70,102,68],[133,71,102,69],[133,72,102,70,"code"],[133,76,102,74],[133,77,102,75],[134,10,104,8],[134,14,104,12,"code"],[134,18,104,16],[134,20,104,18],[135,12,105,10],[136,12,106,10],[136,18,106,16,"tokenResult"],[136,29,106,27],[136,32,106,30],[136,38,106,36,"AuthSession"],[136,49,106,47],[136,50,106,48,"exchangeCodeAsync"],[136,67,106,65],[136,68,107,12],[137,14,108,14,"clientId"],[137,22,108,22],[137,24,108,24],[137,28,108,28],[137,29,108,29,"config"],[137,35,108,35],[137,36,108,36,"clientId"],[137,44,108,44],[138,14,109,14,"code"],[138,18,109,18],[139,14,110,14,"redirectUri"],[139,25,110,25],[139,27,110,27],[139,31,110,31],[139,32,110,32,"authRequest"],[139,43,110,43],[139,44,110,44,"redirectUri"],[139,55,110,55],[140,14,111,14,"extraParams"],[140,25,111,25],[140,27,111,27],[141,16,112,16,"client_secret"],[141,29,112,29],[141,31,112,31],[141,35,112,35],[141,36,112,36,"config"],[141,42,112,42],[141,43,112,43,"clientSecret"],[141,55,112,55],[141,59,112,59],[142,14,113,14],[143,12,114,12],[143,13,114,13],[143,15,115,12,"discovery"],[143,24,116,10],[143,25,116,11],[144,12,118,10,"console"],[144,19,118,17],[144,20,118,18,"log"],[144,23,118,21],[144,24,118,22],[144,54,118,52],[144,55,118,53],[145,12,120,10],[145,19,120,17],[146,14,121,12,"type"],[146,18,121,16],[146,20,121,18],[146,29,121,27],[147,14,122,12,"idToken"],[147,21,122,19],[147,23,122,21,"tokenResult"],[147,34,122,32],[147,35,122,33,"idToken"],[147,42,122,40],[147,46,122,44,"undefined"],[147,55,122,53],[148,14,123,12,"accessToken"],[148,25,123,23],[148,27,123,25,"tokenResult"],[148,38,123,36],[148,39,123,37,"accessToken"],[149,12,124,10],[149,13,124,11],[150,10,125,8],[150,11,125,9],[150,17,125,15],[151,12,126,10],[151,19,126,17],[152,14,127,12,"type"],[152,18,127,16],[152,20,127,18],[152,27,127,25],[153,14,128,12,"error"],[153,19,128,17],[153,21,128,19],[154,12,129,10],[154,13,129,11],[155,10,130,8],[156,8,131,6],[156,9,131,7],[156,15,131,13],[156,19,131,17,"result"],[156,25,131,23],[156,26,131,24,"type"],[156,30,131,28],[156,35,131,33],[156,44,131,42],[156,48,131,46,"result"],[156,54,131,52],[156,55,131,53,"type"],[156,59,131,57],[156,64,131,62],[156,72,131,70],[156,74,131,72],[157,10,132,8,"console"],[157,17,132,15],[157,18,132,16,"log"],[157,21,132,19],[157,22,132,20],[157,60,132,58],[157,61,132,59],[158,10,133,8],[158,17,133,15],[159,12,134,10,"type"],[159,16,134,14],[159,18,134,16],[160,10,135,8],[160,11,135,9],[161,8,136,6],[161,9,136,7],[161,15,136,13],[162,10,137,8,"console"],[162,17,137,15],[162,18,137,16,"error"],[162,23,137,21],[162,24,137,22],[162,40,137,38],[162,42,137,40,"result"],[162,48,137,46],[162,49,137,47],[163,10,138,8],[163,17,138,15],[164,12,139,10,"type"],[164,16,139,14],[164,18,139,16],[164,25,139,23],[165,12,140,10,"error"],[165,17,140,15],[165,19,140,17],[166,10,141,8],[166,11,141,9],[167,8,142,6],[168,6,143,4],[168,7,143,5],[168,8,143,6],[168,15,143,13,"error"],[168,20,143,18],[168,22,143,20],[169,8,144,6,"console"],[169,15,144,13],[169,16,144,14,"error"],[169,21,144,19],[169,22,144,20],[169,45,144,43],[169,47,144,45,"error"],[169,52,144,50],[169,53,144,51],[170,8,145,6],[170,15,145,13],[171,10,146,8,"type"],[171,14,146,12],[171,16,146,14],[171,23,146,21],[172,10,147,8,"error"],[172,15,147,13],[172,17,147,15,"error"],[172,22,147,20],[172,34,147,32,"Error"],[172,39,147,37],[172,42,147,40,"error"],[172,47,147,45],[172,48,147,46,"message"],[172,55,147,53],[172,58,147,56],[173,8,148,6],[173,9,148,7],[174,6,149,4],[175,4,150,2],[177,4,152,2],[178,0,153,0],[179,0,154,0],[180,4,155,2],[180,10,155,8,"authenticateWithBackend"],[180,33,155,31,"authenticateWithBackend"],[180,34,155,32,"idToken"],[180,41,155,47],[180,43,155,49,"accessToken"],[180,54,155,69],[180,56,155,85],[181,6,156,4],[181,10,156,8],[182,8,157,6],[182,14,157,12,"backendUrl"],[182,24,157,22],[182,27,157,25,"_expoVirtualEnv"],[182,42,157,25],[182,43,157,25,"env"],[182,46,157,25],[182,47,157,25,"EXPO_PUBLIC_BACKEND_URL"],[182,70,157,25],[182,74,157,64],[182,76,157,66],[183,8,159,6],[183,14,159,12,"response"],[183,22,159,20],[183,25,159,23],[183,31,159,29,"fetch"],[183,36,159,34],[183,37,159,35],[183,40,159,38,"backendUrl"],[183,50,159,48],[183,74,159,72],[183,76,159,74],[184,10,160,8,"method"],[184,16,160,14],[184,18,160,16],[184,24,160,22],[185,10,161,8,"headers"],[185,17,161,15],[185,19,161,17],[186,12,162,10],[186,26,162,24],[186,28,162,26],[187,10,163,8],[187,11,163,9],[188,10,164,8,"body"],[188,14,164,12],[188,16,164,14,"JSON"],[188,20,164,18],[188,21,164,19,"stringify"],[188,30,164,28],[188,31,164,29],[189,12,165,10,"provider"],[189,20,165,18],[189,22,165,20],[189,30,165,28],[190,12,166,10,"id_token"],[190,20,166,18],[190,22,166,20,"idToken"],[190,29,166,27],[191,12,167,10,"access_token"],[191,24,167,22],[191,26,167,24,"accessToken"],[192,10,168,8],[192,11,168,9],[193,8,169,6],[193,9,169,7],[193,10,169,8],[194,8,171,6],[194,12,171,10],[194,13,171,11,"response"],[194,21,171,19],[194,22,171,20,"ok"],[194,24,171,22],[194,26,171,24],[195,10,172,8],[195,16,172,14,"errorData"],[195,25,172,23],[195,28,172,26],[195,34,172,32,"response"],[195,42,172,40],[195,43,172,41,"json"],[195,47,172,45],[195,48,172,46],[195,49,172,47],[195,50,172,48,"catch"],[195,55,172,53],[195,56,172,54],[195,63,172,61],[195,64,172,62],[195,65,172,63],[195,66,172,64],[195,67,172,65],[196,10,173,8],[196,16,173,14],[196,20,173,18,"Error"],[196,25,173,23],[196,26,173,24,"errorData"],[196,35,173,33],[196,36,173,34,"detail"],[196,42,173,40],[196,46,173,44],[196,77,173,75],[196,78,173,76],[197,8,174,6],[198,8,176,6],[198,15,176,13],[198,21,176,19,"response"],[198,29,176,27],[198,30,176,28,"json"],[198,34,176,32],[198,35,176,33],[198,36,176,34],[199,6,177,4],[199,7,177,5],[199,8,177,6],[199,15,177,13,"error"],[199,20,177,18],[199,22,177,20],[200,8,178,6,"console"],[200,15,178,13],[200,16,178,14,"error"],[200,21,178,19],[200,22,178,20],[200,44,178,42],[200,46,178,44,"error"],[200,51,178,49],[200,52,178,50],[201,8,179,6],[201,14,179,12,"error"],[201,19,179,17],[202,6,180,4],[203,4,181,2],[205,4,183,2],[206,0,184,0],[207,0,185,0],[208,4,186,2],[208,10,186,8,"completeOAuthFlow"],[208,27,186,25,"completeOAuthFlow"],[208,28,186,25],[208,30,186,42],[209,6,187,4],[209,12,187,10,"oauthResult"],[209,23,187,21],[209,26,187,24],[209,32,187,30],[209,36,187,34],[209,37,187,35,"signIn"],[209,43,187,41],[209,44,187,42],[209,45,187,43],[210,6,189,4],[210,10,189,8,"oauthResult"],[210,21,189,19],[210,22,189,20,"type"],[210,26,189,24],[210,31,189,29],[210,40,189,38],[210,44,189,42,"oauthResult"],[210,55,189,53],[210,56,189,54,"idToken"],[210,63,189,61],[210,65,189,63],[211,8,190,6],[211,15,190,13],[211,21,190,19],[211,25,190,23],[211,26,190,24,"authenticateWithBackend"],[211,49,190,47],[211,50,191,8,"oauthResult"],[211,61,191,19],[211,62,191,20,"idToken"],[211,69,191,27],[211,71,192,8,"oauthResult"],[211,82,192,19],[211,83,192,20,"accessToken"],[211,94,193,6],[211,95,193,7],[212,6,194,4],[212,7,194,5],[212,13,194,11],[213,8,195,6],[213,14,195,12],[213,18,195,16,"Error"],[213,23,195,21],[213,24,195,22,"oauthResult"],[213,35,195,33],[213,36,195,34,"error"],[213,41,195,39],[213,45,195,43],[213,64,195,62],[213,65,195,63],[214,6,196,4],[215,4,197,2],[217,4,199,2],[218,0,200,0],[219,0,201,0],[220,4,202,2,"isConfigured"],[220,16,202,14,"isConfigured"],[220,17,202,14],[220,19,202,26],[221,6,203,4],[221,13,203,11],[221,17,203,15],[221,18,203,16,"config"],[221,24,203,22],[221,29,203,27],[221,33,203,31],[221,37,203,35],[221,38,203,36],[221,39,203,37],[221,43,203,41],[221,44,203,42,"config"],[221,50,203,48],[221,51,203,49,"clientId"],[221,59,203,57],[222,4,204,2],[224,4,206,2],[225,0,207,0],[226,0,208,0],[227,4,209,2,"getConfig"],[227,13,209,11,"getConfig"],[227,14,209,11],[227,16,209,40],[228,6,210,4],[228,13,210,11],[228,17,210,15],[228,18,210,16,"config"],[228,24,210,22],[229,4,211,2],[230,2,212,0],[232,2,214,0],[233,2,215,7],[233,8,215,13,"googleOAuthService"],[233,26,215,31],[233,29,215,34],[233,33,215,38,"GoogleOAuthService"],[233,51,215,56],[233,52,215,57],[233,53,215,58],[235,2,217,0],[236,2,218,7],[236,8,218,13,"useGoogleOAuth"],[236,22,218,27],[236,25,218,30,"useGoogleOAuth"],[236,26,218,30],[236,31,218,36],[237,4,219,2],[237,10,219,8,"signIn"],[237,16,219,14],[237,19,219,17],[237,25,219,17,"signIn"],[237,26,219,17],[237,31,219,57],[238,6,220,4],[238,13,220,11],[238,19,220,17,"googleOAuthService"],[238,37,220,35],[238,38,220,36,"signIn"],[238,44,220,42],[238,45,220,43],[238,46,220,44],[239,4,221,2],[239,5,221,3],[240,4,223,2],[240,10,223,8,"authenticateWithBackend"],[240,33,223,31],[240,36,223,34],[240,42,223,34,"authenticateWithBackend"],[240,43,223,41,"idToken"],[240,50,223,56],[240,52,223,58,"accessToken"],[240,63,223,78],[240,68,223,83],[241,6,224,4],[241,13,224,11],[241,19,224,17,"googleOAuthService"],[241,37,224,35],[241,38,224,36,"authenticateWithBackend"],[241,61,224,59],[241,62,224,60,"idToken"],[241,69,224,67],[241,71,224,69,"accessToken"],[241,82,224,80],[241,83,224,81],[242,4,225,2],[242,5,225,3],[243,4,227,2],[243,10,227,8,"completeOAuthFlow"],[243,27,227,25],[243,30,227,28],[243,36,227,28,"completeOAuthFlow"],[243,37,227,28],[243,42,227,40],[244,6,228,4],[244,13,228,11],[244,19,228,17,"googleOAuthService"],[244,37,228,35],[244,38,228,36,"completeOAuthFlow"],[244,55,228,53],[244,56,228,54],[244,57,228,55],[245,4,229,2],[245,5,229,3],[246,4,231,2],[246,11,231,9],[247,6,232,4,"signIn"],[247,12,232,10],[248,6,233,4,"authenticateWithBackend"],[248,29,233,27],[249,6,234,4,"completeOAuthFlow"],[249,23,234,21],[250,6,235,4,"isConfigured"],[250,18,235,16],[250,20,235,18,"googleOAuthService"],[250,38,235,36],[250,39,235,37,"isConfigured"],[250,51,235,49],[250,52,235,50],[250,53,235,51],[251,6,236,4,"initialize"],[251,16,236,14],[251,18,236,16,"googleOAuthService"],[251,36,236,34],[251,37,236,35,"initialize"],[251,47,236,45],[251,48,236,46,"bind"],[251,52,236,50],[251,53,236,51,"googleOAuthService"],[251,71,236,69],[252,4,237,2],[252,5,237,3],[253,2,238,0],[253,3,238,1],[254,2,240,0],[254,6,240,0,"_default"],[254,14,240,0],[254,17,240,15,"googleOAuthService"],[254,35,240,33],[255,0,240,34],[255,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF2B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}