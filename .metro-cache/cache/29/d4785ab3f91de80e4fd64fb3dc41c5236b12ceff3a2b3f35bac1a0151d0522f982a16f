{"dependencies":[{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoAuthSession = require(_dependencyMap[0], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n\n      // For development with Expo Go, we need to use the auth proxy\n      // This creates a stable redirect URI that doesn't change with ngrok\n      const redirectUri = AuthSession.makeRedirectUri({\n        scheme: 'exp',\n        path: 'redirect'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n      console.log('Platform:', Platform.default.OS);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":257,"map":[[27,2,243,0,"Object"],[27,8,243,0],[27,9,243,0,"defineProperty"],[27,23,243,0],[27,24,243,0,"exports"],[27,31,243,0],[28,4,243,0,"enumerable"],[28,14,243,0],[29,4,243,0,"get"],[29,7,243,0],[29,18,243,0,"get"],[29,19,243,0],[30,6,243,0],[30,13,243,0,"_default"],[30,21,243,0],[31,4,243,0],[32,2,243,0],[33,2,218,0,"Object"],[33,8,218,0],[33,9,218,0,"defineProperty"],[33,23,218,0],[33,24,218,0,"exports"],[33,31,218,0],[34,4,218,0,"enumerable"],[34,14,218,0],[35,4,218,0,"get"],[35,7,218,0],[35,18,218,0,"get"],[35,19,218,0],[36,6,218,0],[36,13,218,0,"googleOAuthService"],[36,31,218,0],[37,4,218,0],[38,2,218,0],[39,2,221,0,"Object"],[39,8,221,0],[39,9,221,0,"defineProperty"],[39,23,221,0],[39,24,221,0,"exports"],[39,31,221,0],[40,4,221,0,"enumerable"],[40,14,221,0],[41,4,221,0,"get"],[41,7,221,0],[41,18,221,0,"get"],[41,19,221,0],[42,6,221,0],[42,13,221,0,"useGoogleOAuth"],[42,27,221,0],[43,4,221,0],[44,2,221,0],[45,2,1,0],[45,6,1,0,"_expoAuthSession"],[45,22,1,0],[45,25,1,0,"require"],[45,32,1,0],[45,33,1,0,"_dependencyMap"],[45,47,1,0],[46,2,1,0],[46,6,1,0,"AuthSession"],[46,17,1,0],[46,20,1,0,"_interopNamespace"],[46,37,1,0],[46,38,1,0,"_expoAuthSession"],[46,54,1,0],[47,2,2,0],[47,6,2,0,"_expoWebBrowser"],[47,21,2,0],[47,24,2,0,"require"],[47,31,2,0],[47,32,2,0,"_dependencyMap"],[47,46,2,0],[48,2,2,0],[48,6,2,0,"WebBrowser"],[48,16,2,0],[48,19,2,0,"_interopNamespace"],[48,36,2,0],[48,37,2,0,"_expoWebBrowser"],[48,52,2,0],[49,2,2,47],[49,6,2,47,"_reactNativeWebDistExportsPlatform"],[49,40,2,47],[49,43,2,47,"require"],[49,50,2,47],[49,51,2,47,"_dependencyMap"],[49,65,2,47],[50,2,2,47],[50,6,2,47,"Platform"],[50,14,2,47],[50,17,2,47,"_interopDefault"],[50,32,2,47],[50,33,2,47,"_reactNativeWebDistExportsPlatform"],[50,67,2,47],[51,2,5,0],[52,2,6,0,"WebBrowser"],[52,12,6,10],[52,13,6,11,"maybeCompleteAuthSession"],[52,37,6,35],[52,38,6,36],[52,39,6,37],[54,2,8,0],[55,2,9,0],[55,8,9,6,"GOOGLE_CLIENT_ID"],[55,24,9,22],[55,27,9,25],[55,29,9,27],[55,30,9,28],[55,31,9,29],[56,2,10,0],[56,8,10,6,"GOOGLE_CLIENT_SECRET"],[56,28,10,26],[56,31,10,29],[56,33,10,31],[56,34,10,32],[56,35,10,33],[58,2,12,0],[59,2,13,0],[59,8,13,6,"discovery"],[59,17,13,15],[59,20,13,18],[60,4,14,2,"authorizationEndpoint"],[60,25,14,23],[60,27,14,25],[60,73,14,71],[61,4,15,2,"tokenEndpoint"],[61,17,15,15],[61,19,15,17],[61,56,15,54],[62,4,16,2,"revocationEndpoint"],[62,22,16,20],[62,24,16,22],[63,2,17,0],[63,3,17,1],[64,2,31,0],[64,8,31,6,"GoogleOAuthService"],[64,26,31,24],[64,27,31,25],[65,4,32,10,"config"],[65,10,32,16],[65,13,32,45],[65,17,32,49],[66,4,33,10,"authRequest"],[66,15,33,21],[66,18,33,56],[66,22,33,60],[68,4,35,2],[69,0,36,0],[70,0,37,0],[71,4,38,2,"initialize"],[71,14,38,12,"initialize"],[71,15,38,13,"config"],[71,21,38,38],[71,23,38,40],[72,6,39,4],[72,10,39,8],[72,11,39,9,"config"],[72,17,39,15],[72,20,39,18,"config"],[72,26,39,24],[73,4,40,2],[75,4,42,2],[76,0,43,0],[77,0,44,0],[78,4,45,2],[78,10,45,16,"createAuthRequest"],[78,27,45,33,"createAuthRequest"],[78,28,45,33],[78,30,45,70],[79,6,46,4],[79,10,46,8],[79,11,46,9],[79,15,46,13],[79,16,46,14,"config"],[79,22,46,20],[79,24,46,22],[80,8,47,6],[80,14,47,12],[80,18,47,16,"Error"],[80,23,47,21],[80,24,47,22],[80,80,47,78],[80,81,47,79],[81,6,48,4],[83,6,50,4],[84,6,51,4],[85,6,52,4],[85,12,52,10,"redirectUri"],[85,23,52,21],[85,26,52,24,"AuthSession"],[85,37,52,35],[85,38,52,36,"makeRedirectUri"],[85,53,52,51],[85,54,52,52],[86,8,53,6,"scheme"],[86,14,53,12],[86,16,53,14],[86,21,53,19],[87,8,54,6,"path"],[87,12,54,10],[87,14,54,12],[88,6,55,4],[88,7,55,5],[88,8,55,6],[89,6,57,4,"console"],[89,13,57,11],[89,14,57,12,"log"],[89,17,57,15],[89,18,57,16],[89,39,57,37],[89,41,57,39,"redirectUri"],[89,52,57,50],[89,53,57,51],[90,6,58,4,"console"],[90,13,58,11],[90,14,58,12,"log"],[90,17,58,15],[90,18,58,16],[90,29,58,27],[90,31,58,29,"Platform"],[90,39,58,37],[90,40,58,37,"default"],[90,47,58,37],[90,48,58,38,"OS"],[90,50,58,40],[90,51,58,41],[92,6,60,4],[93,6,61,4],[93,12,61,10,"request"],[93,19,61,17],[93,22,61,20],[93,26,61,24,"AuthSession"],[93,37,61,35],[93,38,61,36,"AuthRequest"],[93,49,61,47],[93,50,61,48],[94,8,62,6,"clientId"],[94,16,62,14],[94,18,62,16],[94,22,62,20],[94,23,62,21,"config"],[94,29,62,27],[94,30,62,28,"clientId"],[94,38,62,36],[95,8,63,6,"scopes"],[95,14,63,12],[95,16,63,14],[95,17,63,15],[95,25,63,23],[95,27,63,25],[95,36,63,34],[95,38,63,36],[95,45,63,43],[95,46,63,44],[96,8,64,6,"responseType"],[96,20,64,18],[96,22,64,20,"AuthSession"],[96,33,64,31],[96,34,64,32,"ResponseType"],[96,46,64,44],[96,47,64,45,"Code"],[96,51,64,49],[97,8,64,51],[98,8,65,6,"redirectUri"],[98,19,65,17],[99,8,66,6,"usePKCE"],[99,15,66,13],[99,17,66,15],[99,22,66,20],[100,8,66,22],[101,8,67,6],[102,8,68,6,"extraParams"],[102,19,68,17],[102,21,68,19],[103,10,69,8,"access_type"],[103,21,69,19],[103,23,69,21],[103,32,69,30],[104,10,70,8,"prompt"],[104,16,70,14],[104,18,70,16],[104,34,70,32],[104,35,70,34],[105,8,71,6],[106,6,72,4],[106,7,72,5],[106,8,72,6],[107,6,74,4],[107,13,74,11,"request"],[107,20,74,18],[108,4,75,2],[110,4,77,2],[111,0,78,0],[112,0,79,0],[113,4,80,2],[113,10,80,8,"signIn"],[113,16,80,14,"signIn"],[113,17,80,14],[113,19,80,45],[114,6,81,4],[114,10,81,8],[115,8,82,6],[115,12,82,10],[115,13,82,11],[115,17,82,15],[115,18,82,16,"config"],[115,24,82,22],[115,26,82,24],[116,10,83,8],[116,17,83,15],[117,12,84,10,"type"],[117,16,84,14],[117,18,84,16],[117,25,84,23],[118,12,85,10,"error"],[118,17,85,15],[118,19,85,17],[119,10,86,8],[119,11,86,9],[120,8,87,6],[121,8,89,6,"console"],[121,15,89,13],[121,16,89,14,"log"],[121,19,89,17],[121,20,89,18],[121,49,89,47],[121,50,89,48],[123,8,91,6],[124,8,92,6],[124,12,92,10],[124,13,92,11,"authRequest"],[124,24,92,22],[124,27,92,25],[124,33,92,31],[124,37,92,35],[124,38,92,36,"createAuthRequest"],[124,55,92,53],[124,56,92,54],[124,57,92,55],[125,8,94,6,"console"],[125,15,94,13],[125,16,94,14,"log"],[125,19,94,17],[125,20,94,18],[125,52,94,50],[125,53,94,51],[127,8,96,6],[128,8,97,6],[128,14,97,12,"result"],[128,20,97,18],[128,23,97,21],[128,29,97,27],[128,33,97,31],[128,34,97,32,"authRequest"],[128,45,97,43],[128,46,97,44,"promptAsync"],[128,57,97,55],[128,58,97,56,"discovery"],[128,67,97,65],[128,68,97,66],[129,8,99,6,"console"],[129,15,99,13],[129,16,99,14,"log"],[129,19,99,17],[129,20,99,18],[129,38,99,36],[129,40,99,38,"result"],[129,46,99,44],[129,47,99,45],[130,8,101,6],[130,12,101,10,"result"],[130,18,101,16],[130,19,101,17,"type"],[130,23,101,21],[130,28,101,26],[130,37,101,35],[130,39,101,37],[131,10,102,8],[132,10,103,8],[132,16,103,14],[133,12,103,16,"code"],[134,10,103,21],[134,11,103,22],[134,14,103,25,"result"],[134,20,103,31],[134,21,103,32,"params"],[134,27,103,38],[135,10,105,8,"console"],[135,17,105,15],[135,18,105,16,"log"],[135,21,105,19],[135,22,105,20],[135,68,105,66],[135,70,105,68],[135,71,105,69],[135,72,105,70,"code"],[135,76,105,74],[135,77,105,75],[136,10,107,8],[136,14,107,12,"code"],[136,18,107,16],[136,20,107,18],[137,12,108,10],[138,12,109,10],[138,18,109,16,"tokenResult"],[138,29,109,27],[138,32,109,30],[138,38,109,36,"AuthSession"],[138,49,109,47],[138,50,109,48,"exchangeCodeAsync"],[138,67,109,65],[138,68,110,12],[139,14,111,14,"clientId"],[139,22,111,22],[139,24,111,24],[139,28,111,28],[139,29,111,29,"config"],[139,35,111,35],[139,36,111,36,"clientId"],[139,44,111,44],[140,14,112,14,"code"],[140,18,112,18],[141,14,113,14,"redirectUri"],[141,25,113,25],[141,27,113,27],[141,31,113,31],[141,32,113,32,"authRequest"],[141,43,113,43],[141,44,113,44,"redirectUri"],[141,55,113,55],[142,14,114,14,"extraParams"],[142,25,114,25],[142,27,114,27],[143,16,115,16,"client_secret"],[143,29,115,29],[143,31,115,31],[143,35,115,35],[143,36,115,36,"config"],[143,42,115,42],[143,43,115,43,"clientSecret"],[143,55,115,55],[143,59,115,59],[144,14,116,14],[145,12,117,12],[145,13,117,13],[145,15,118,12,"discovery"],[145,24,119,10],[145,25,119,11],[146,12,121,10,"console"],[146,19,121,17],[146,20,121,18,"log"],[146,23,121,21],[146,24,121,22],[146,54,121,52],[146,55,121,53],[147,12,123,10],[147,19,123,17],[148,14,124,12,"type"],[148,18,124,16],[148,20,124,18],[148,29,124,27],[149,14,125,12,"idToken"],[149,21,125,19],[149,23,125,21,"tokenResult"],[149,34,125,32],[149,35,125,33,"idToken"],[149,42,125,40],[149,46,125,44,"undefined"],[149,55,125,53],[150,14,126,12,"accessToken"],[150,25,126,23],[150,27,126,25,"tokenResult"],[150,38,126,36],[150,39,126,37,"accessToken"],[151,12,127,10],[151,13,127,11],[152,10,128,8],[152,11,128,9],[152,17,128,15],[153,12,129,10],[153,19,129,17],[154,14,130,12,"type"],[154,18,130,16],[154,20,130,18],[154,27,130,25],[155,14,131,12,"error"],[155,19,131,17],[155,21,131,19],[156,12,132,10],[156,13,132,11],[157,10,133,8],[158,8,134,6],[158,9,134,7],[158,15,134,13],[158,19,134,17,"result"],[158,25,134,23],[158,26,134,24,"type"],[158,30,134,28],[158,35,134,33],[158,44,134,42],[158,48,134,46,"result"],[158,54,134,52],[158,55,134,53,"type"],[158,59,134,57],[158,64,134,62],[158,72,134,70],[158,74,134,72],[159,10,135,8,"console"],[159,17,135,15],[159,18,135,16,"log"],[159,21,135,19],[159,22,135,20],[159,60,135,58],[159,61,135,59],[160,10,136,8],[160,17,136,15],[161,12,137,10,"type"],[161,16,137,14],[161,18,137,16],[162,10,138,8],[162,11,138,9],[163,8,139,6],[163,9,139,7],[163,15,139,13],[164,10,140,8,"console"],[164,17,140,15],[164,18,140,16,"error"],[164,23,140,21],[164,24,140,22],[164,40,140,38],[164,42,140,40,"result"],[164,48,140,46],[164,49,140,47],[165,10,141,8],[165,17,141,15],[166,12,142,10,"type"],[166,16,142,14],[166,18,142,16],[166,25,142,23],[167,12,143,10,"error"],[167,17,143,15],[167,19,143,17],[168,10,144,8],[168,11,144,9],[169,8,145,6],[170,6,146,4],[170,7,146,5],[170,8,146,6],[170,15,146,13,"error"],[170,20,146,18],[170,22,146,20],[171,8,147,6,"console"],[171,15,147,13],[171,16,147,14,"error"],[171,21,147,19],[171,22,147,20],[171,45,147,43],[171,47,147,45,"error"],[171,52,147,50],[171,53,147,51],[172,8,148,6],[172,15,148,13],[173,10,149,8,"type"],[173,14,149,12],[173,16,149,14],[173,23,149,21],[174,10,150,8,"error"],[174,15,150,13],[174,17,150,15,"error"],[174,22,150,20],[174,34,150,32,"Error"],[174,39,150,37],[174,42,150,40,"error"],[174,47,150,45],[174,48,150,46,"message"],[174,55,150,53],[174,58,150,56],[175,8,151,6],[175,9,151,7],[176,6,152,4],[177,4,153,2],[179,4,155,2],[180,0,156,0],[181,0,157,0],[182,4,158,2],[182,10,158,8,"authenticateWithBackend"],[182,33,158,31,"authenticateWithBackend"],[182,34,158,32,"idToken"],[182,41,158,47],[182,43,158,49,"accessToken"],[182,54,158,69],[182,56,158,85],[183,6,159,4],[183,10,159,8],[184,8,160,6],[184,14,160,12,"backendUrl"],[184,24,160,22],[184,27,160,25,"process"],[184,34,160,32],[184,35,160,33,"env"],[184,38,160,36],[184,39,160,37,"EXPO_PUBLIC_BACKEND_URL"],[184,62,160,60],[184,66,160,64],[184,68,160,66],[185,8,162,6],[185,14,162,12,"response"],[185,22,162,20],[185,25,162,23],[185,31,162,29,"fetch"],[185,36,162,34],[185,37,162,35],[185,40,162,38,"backendUrl"],[185,50,162,48],[185,74,162,72],[185,76,162,74],[186,10,163,8,"method"],[186,16,163,14],[186,18,163,16],[186,24,163,22],[187,10,164,8,"headers"],[187,17,164,15],[187,19,164,17],[188,12,165,10],[188,26,165,24],[188,28,165,26],[189,10,166,8],[189,11,166,9],[190,10,167,8,"body"],[190,14,167,12],[190,16,167,14,"JSON"],[190,20,167,18],[190,21,167,19,"stringify"],[190,30,167,28],[190,31,167,29],[191,12,168,10,"provider"],[191,20,168,18],[191,22,168,20],[191,30,168,28],[192,12,169,10,"id_token"],[192,20,169,18],[192,22,169,20,"idToken"],[192,29,169,27],[193,12,170,10,"access_token"],[193,24,170,22],[193,26,170,24,"accessToken"],[194,10,171,8],[194,11,171,9],[195,8,172,6],[195,9,172,7],[195,10,172,8],[196,8,174,6],[196,12,174,10],[196,13,174,11,"response"],[196,21,174,19],[196,22,174,20,"ok"],[196,24,174,22],[196,26,174,24],[197,10,175,8],[197,16,175,14,"errorData"],[197,25,175,23],[197,28,175,26],[197,34,175,32,"response"],[197,42,175,40],[197,43,175,41,"json"],[197,47,175,45],[197,48,175,46],[197,49,175,47],[197,50,175,48,"catch"],[197,55,175,53],[197,56,175,54],[197,63,175,61],[197,64,175,62],[197,65,175,63],[197,66,175,64],[197,67,175,65],[198,10,176,8],[198,16,176,14],[198,20,176,18,"Error"],[198,25,176,23],[198,26,176,24,"errorData"],[198,35,176,33],[198,36,176,34,"detail"],[198,42,176,40],[198,46,176,44],[198,77,176,75],[198,78,176,76],[199,8,177,6],[200,8,179,6],[200,15,179,13],[200,21,179,19,"response"],[200,29,179,27],[200,30,179,28,"json"],[200,34,179,32],[200,35,179,33],[200,36,179,34],[201,6,180,4],[201,7,180,5],[201,8,180,6],[201,15,180,13,"error"],[201,20,180,18],[201,22,180,20],[202,8,181,6,"console"],[202,15,181,13],[202,16,181,14,"error"],[202,21,181,19],[202,22,181,20],[202,44,181,42],[202,46,181,44,"error"],[202,51,181,49],[202,52,181,50],[203,8,182,6],[203,14,182,12,"error"],[203,19,182,17],[204,6,183,4],[205,4,184,2],[207,4,186,2],[208,0,187,0],[209,0,188,0],[210,4,189,2],[210,10,189,8,"completeOAuthFlow"],[210,27,189,25,"completeOAuthFlow"],[210,28,189,25],[210,30,189,42],[211,6,190,4],[211,12,190,10,"oauthResult"],[211,23,190,21],[211,26,190,24],[211,32,190,30],[211,36,190,34],[211,37,190,35,"signIn"],[211,43,190,41],[211,44,190,42],[211,45,190,43],[212,6,192,4],[212,10,192,8,"oauthResult"],[212,21,192,19],[212,22,192,20,"type"],[212,26,192,24],[212,31,192,29],[212,40,192,38],[212,44,192,42,"oauthResult"],[212,55,192,53],[212,56,192,54,"idToken"],[212,63,192,61],[212,65,192,63],[213,8,193,6],[213,15,193,13],[213,21,193,19],[213,25,193,23],[213,26,193,24,"authenticateWithBackend"],[213,49,193,47],[213,50,194,8,"oauthResult"],[213,61,194,19],[213,62,194,20,"idToken"],[213,69,194,27],[213,71,195,8,"oauthResult"],[213,82,195,19],[213,83,195,20,"accessToken"],[213,94,196,6],[213,95,196,7],[214,6,197,4],[214,7,197,5],[214,13,197,11],[215,8,198,6],[215,14,198,12],[215,18,198,16,"Error"],[215,23,198,21],[215,24,198,22,"oauthResult"],[215,35,198,33],[215,36,198,34,"error"],[215,41,198,39],[215,45,198,43],[215,64,198,62],[215,65,198,63],[216,6,199,4],[217,4,200,2],[219,4,202,2],[220,0,203,0],[221,0,204,0],[222,4,205,2,"isConfigured"],[222,16,205,14,"isConfigured"],[222,17,205,14],[222,19,205,26],[223,6,206,4],[223,13,206,11],[223,17,206,15],[223,18,206,16,"config"],[223,24,206,22],[223,29,206,27],[223,33,206,31],[223,37,206,35],[223,38,206,36],[223,39,206,37],[223,43,206,41],[223,44,206,42,"config"],[223,50,206,48],[223,51,206,49,"clientId"],[223,59,206,57],[224,4,207,2],[226,4,209,2],[227,0,210,0],[228,0,211,0],[229,4,212,2,"getConfig"],[229,13,212,11,"getConfig"],[229,14,212,11],[229,16,212,40],[230,6,213,4],[230,13,213,11],[230,17,213,15],[230,18,213,16,"config"],[230,24,213,22],[231,4,214,2],[232,2,215,0],[234,2,217,0],[235,2,218,7],[235,8,218,13,"googleOAuthService"],[235,26,218,31],[235,29,218,34],[235,33,218,38,"GoogleOAuthService"],[235,51,218,56],[235,52,218,57],[235,53,218,58],[237,2,220,0],[238,2,221,7],[238,8,221,13,"useGoogleOAuth"],[238,22,221,27],[238,25,221,30,"useGoogleOAuth"],[238,26,221,30],[238,31,221,36],[239,4,222,2],[239,10,222,8,"signIn"],[239,16,222,14],[239,19,222,17],[239,25,222,17,"signIn"],[239,26,222,17],[239,31,222,57],[240,6,223,4],[240,13,223,11],[240,19,223,17,"googleOAuthService"],[240,37,223,35],[240,38,223,36,"signIn"],[240,44,223,42],[240,45,223,43],[240,46,223,44],[241,4,224,2],[241,5,224,3],[242,4,226,2],[242,10,226,8,"authenticateWithBackend"],[242,33,226,31],[242,36,226,34],[242,42,226,34,"authenticateWithBackend"],[242,43,226,41,"idToken"],[242,50,226,56],[242,52,226,58,"accessToken"],[242,63,226,78],[242,68,226,83],[243,6,227,4],[243,13,227,11],[243,19,227,17,"googleOAuthService"],[243,37,227,35],[243,38,227,36,"authenticateWithBackend"],[243,61,227,59],[243,62,227,60,"idToken"],[243,69,227,67],[243,71,227,69,"accessToken"],[243,82,227,80],[243,83,227,81],[244,4,228,2],[244,5,228,3],[245,4,230,2],[245,10,230,8,"completeOAuthFlow"],[245,27,230,25],[245,30,230,28],[245,36,230,28,"completeOAuthFlow"],[245,37,230,28],[245,42,230,40],[246,6,231,4],[246,13,231,11],[246,19,231,17,"googleOAuthService"],[246,37,231,35],[246,38,231,36,"completeOAuthFlow"],[246,55,231,53],[246,56,231,54],[246,57,231,55],[247,4,232,2],[247,5,232,3],[248,4,234,2],[248,11,234,9],[249,6,235,4,"signIn"],[249,12,235,10],[250,6,236,4,"authenticateWithBackend"],[250,29,236,27],[251,6,237,4,"completeOAuthFlow"],[251,23,237,21],[252,6,238,4,"isConfigured"],[252,18,238,16],[252,20,238,18,"googleOAuthService"],[252,38,238,36],[252,39,238,37,"isConfigured"],[252,51,238,49],[252,52,238,50],[252,53,238,51],[253,6,239,4,"initialize"],[253,16,239,14],[253,18,239,16,"googleOAuthService"],[253,36,239,34],[253,37,239,35,"initialize"],[253,47,239,45],[253,48,239,46,"bind"],[253,52,239,50],[253,53,239,51,"googleOAuthService"],[253,71,239,69],[254,4,240,2],[254,5,240,3],[255,2,241,0],[255,3,241,1],[256,2,243,0],[256,6,243,0,"_default"],[256,14,243,0],[256,17,243,15,"googleOAuthService"],[256,35,243,33],[257,0,243,34],[257,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF8B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}