{"dependencies":[{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoAuthSession = require(_dependencyMap[0], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n\n      // IMPORTANT: Use Expo's auth proxy to get an HTTPS redirect URI\n      // Google OAuth only accepts http/https, not exp://\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true // This creates an https://auth.expo.io URL that redirects to the app\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n      console.log('Platform:', Platform.default.OS);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":256,"map":[[27,2,242,0,"Object"],[27,8,242,0],[27,9,242,0,"defineProperty"],[27,23,242,0],[27,24,242,0,"exports"],[27,31,242,0],[28,4,242,0,"enumerable"],[28,14,242,0],[29,4,242,0,"get"],[29,7,242,0],[29,18,242,0,"get"],[29,19,242,0],[30,6,242,0],[30,13,242,0,"_default"],[30,21,242,0],[31,4,242,0],[32,2,242,0],[33,2,217,0,"Object"],[33,8,217,0],[33,9,217,0,"defineProperty"],[33,23,217,0],[33,24,217,0,"exports"],[33,31,217,0],[34,4,217,0,"enumerable"],[34,14,217,0],[35,4,217,0,"get"],[35,7,217,0],[35,18,217,0,"get"],[35,19,217,0],[36,6,217,0],[36,13,217,0,"googleOAuthService"],[36,31,217,0],[37,4,217,0],[38,2,217,0],[39,2,220,0,"Object"],[39,8,220,0],[39,9,220,0,"defineProperty"],[39,23,220,0],[39,24,220,0,"exports"],[39,31,220,0],[40,4,220,0,"enumerable"],[40,14,220,0],[41,4,220,0,"get"],[41,7,220,0],[41,18,220,0,"get"],[41,19,220,0],[42,6,220,0],[42,13,220,0,"useGoogleOAuth"],[42,27,220,0],[43,4,220,0],[44,2,220,0],[45,2,1,0],[45,6,1,0,"_expoAuthSession"],[45,22,1,0],[45,25,1,0,"require"],[45,32,1,0],[45,33,1,0,"_dependencyMap"],[45,47,1,0],[46,2,1,0],[46,6,1,0,"AuthSession"],[46,17,1,0],[46,20,1,0,"_interopNamespace"],[46,37,1,0],[46,38,1,0,"_expoAuthSession"],[46,54,1,0],[47,2,2,0],[47,6,2,0,"_expoWebBrowser"],[47,21,2,0],[47,24,2,0,"require"],[47,31,2,0],[47,32,2,0,"_dependencyMap"],[47,46,2,0],[48,2,2,0],[48,6,2,0,"WebBrowser"],[48,16,2,0],[48,19,2,0,"_interopNamespace"],[48,36,2,0],[48,37,2,0,"_expoWebBrowser"],[48,52,2,0],[49,2,2,47],[49,6,2,47,"_reactNativeWebDistExportsPlatform"],[49,40,2,47],[49,43,2,47,"require"],[49,50,2,47],[49,51,2,47,"_dependencyMap"],[49,65,2,47],[50,2,2,47],[50,6,2,47,"Platform"],[50,14,2,47],[50,17,2,47,"_interopDefault"],[50,32,2,47],[50,33,2,47,"_reactNativeWebDistExportsPlatform"],[50,67,2,47],[51,2,5,0],[52,2,6,0,"WebBrowser"],[52,12,6,10],[52,13,6,11,"maybeCompleteAuthSession"],[52,37,6,35],[52,38,6,36],[52,39,6,37],[54,2,8,0],[55,2,9,0],[55,8,9,6,"GOOGLE_CLIENT_ID"],[55,24,9,22],[55,27,9,25],[55,29,9,27],[55,30,9,28],[55,31,9,29],[56,2,10,0],[56,8,10,6,"GOOGLE_CLIENT_SECRET"],[56,28,10,26],[56,31,10,29],[56,33,10,31],[56,34,10,32],[56,35,10,33],[58,2,12,0],[59,2,13,0],[59,8,13,6,"discovery"],[59,17,13,15],[59,20,13,18],[60,4,14,2,"authorizationEndpoint"],[60,25,14,23],[60,27,14,25],[60,73,14,71],[61,4,15,2,"tokenEndpoint"],[61,17,15,15],[61,19,15,17],[61,56,15,54],[62,4,16,2,"revocationEndpoint"],[62,22,16,20],[62,24,16,22],[63,2,17,0],[63,3,17,1],[64,2,31,0],[64,8,31,6,"GoogleOAuthService"],[64,26,31,24],[64,27,31,25],[65,4,32,10,"config"],[65,10,32,16],[65,13,32,45],[65,17,32,49],[66,4,33,10,"authRequest"],[66,15,33,21],[66,18,33,56],[66,22,33,60],[68,4,35,2],[69,0,36,0],[70,0,37,0],[71,4,38,2,"initialize"],[71,14,38,12,"initialize"],[71,15,38,13,"config"],[71,21,38,38],[71,23,38,40],[72,6,39,4],[72,10,39,8],[72,11,39,9,"config"],[72,17,39,15],[72,20,39,18,"config"],[72,26,39,24],[73,4,40,2],[75,4,42,2],[76,0,43,0],[77,0,44,0],[78,4,45,2],[78,10,45,16,"createAuthRequest"],[78,27,45,33,"createAuthRequest"],[78,28,45,33],[78,30,45,70],[79,6,46,4],[79,10,46,8],[79,11,46,9],[79,15,46,13],[79,16,46,14,"config"],[79,22,46,20],[79,24,46,22],[80,8,47,6],[80,14,47,12],[80,18,47,16,"Error"],[80,23,47,21],[80,24,47,22],[80,80,47,78],[80,81,47,79],[81,6,48,4],[83,6,50,4],[84,6,51,4],[85,6,52,4],[85,12,52,10,"redirectUri"],[85,23,52,21],[85,26,52,24,"AuthSession"],[85,37,52,35],[85,38,52,36,"makeRedirectUri"],[85,53,52,51],[85,54,52,52],[86,8,53,6,"useProxy"],[86,16,53,14],[86,18,53,16],[86,22,53,20],[86,23,53,22],[87,6,54,4],[87,7,54,5],[87,8,54,6],[88,6,56,4,"console"],[88,13,56,11],[88,14,56,12,"log"],[88,17,56,15],[88,18,56,16],[88,39,56,37],[88,41,56,39,"redirectUri"],[88,52,56,50],[88,53,56,51],[89,6,57,4,"console"],[89,13,57,11],[89,14,57,12,"log"],[89,17,57,15],[89,18,57,16],[89,29,57,27],[89,31,57,29,"Platform"],[89,39,57,37],[89,40,57,37,"default"],[89,47,57,37],[89,48,57,38,"OS"],[89,50,57,40],[89,51,57,41],[91,6,59,4],[92,6,60,4],[92,12,60,10,"request"],[92,19,60,17],[92,22,60,20],[92,26,60,24,"AuthSession"],[92,37,60,35],[92,38,60,36,"AuthRequest"],[92,49,60,47],[92,50,60,48],[93,8,61,6,"clientId"],[93,16,61,14],[93,18,61,16],[93,22,61,20],[93,23,61,21,"config"],[93,29,61,27],[93,30,61,28,"clientId"],[93,38,61,36],[94,8,62,6,"scopes"],[94,14,62,12],[94,16,62,14],[94,17,62,15],[94,25,62,23],[94,27,62,25],[94,36,62,34],[94,38,62,36],[94,45,62,43],[94,46,62,44],[95,8,63,6,"responseType"],[95,20,63,18],[95,22,63,20,"AuthSession"],[95,33,63,31],[95,34,63,32,"ResponseType"],[95,46,63,44],[95,47,63,45,"Code"],[95,51,63,49],[96,8,63,51],[97,8,64,6,"redirectUri"],[97,19,64,17],[98,8,65,6,"usePKCE"],[98,15,65,13],[98,17,65,15],[98,22,65,20],[99,8,65,22],[100,8,66,6],[101,8,67,6,"extraParams"],[101,19,67,17],[101,21,67,19],[102,10,68,8,"access_type"],[102,21,68,19],[102,23,68,21],[102,32,68,30],[103,10,69,8,"prompt"],[103,16,69,14],[103,18,69,16],[103,34,69,32],[103,35,69,34],[104,8,70,6],[105,6,71,4],[105,7,71,5],[105,8,71,6],[106,6,73,4],[106,13,73,11,"request"],[106,20,73,18],[107,4,74,2],[109,4,76,2],[110,0,77,0],[111,0,78,0],[112,4,79,2],[112,10,79,8,"signIn"],[112,16,79,14,"signIn"],[112,17,79,14],[112,19,79,45],[113,6,80,4],[113,10,80,8],[114,8,81,6],[114,12,81,10],[114,13,81,11],[114,17,81,15],[114,18,81,16,"config"],[114,24,81,22],[114,26,81,24],[115,10,82,8],[115,17,82,15],[116,12,83,10,"type"],[116,16,83,14],[116,18,83,16],[116,25,83,23],[117,12,84,10,"error"],[117,17,84,15],[117,19,84,17],[118,10,85,8],[118,11,85,9],[119,8,86,6],[120,8,88,6,"console"],[120,15,88,13],[120,16,88,14,"log"],[120,19,88,17],[120,20,88,18],[120,49,88,47],[120,50,88,48],[122,8,90,6],[123,8,91,6],[123,12,91,10],[123,13,91,11,"authRequest"],[123,24,91,22],[123,27,91,25],[123,33,91,31],[123,37,91,35],[123,38,91,36,"createAuthRequest"],[123,55,91,53],[123,56,91,54],[123,57,91,55],[124,8,93,6,"console"],[124,15,93,13],[124,16,93,14,"log"],[124,19,93,17],[124,20,93,18],[124,52,93,50],[124,53,93,51],[126,8,95,6],[127,8,96,6],[127,14,96,12,"result"],[127,20,96,18],[127,23,96,21],[127,29,96,27],[127,33,96,31],[127,34,96,32,"authRequest"],[127,45,96,43],[127,46,96,44,"promptAsync"],[127,57,96,55],[127,58,96,56,"discovery"],[127,67,96,65],[127,68,96,66],[128,8,98,6,"console"],[128,15,98,13],[128,16,98,14,"log"],[128,19,98,17],[128,20,98,18],[128,38,98,36],[128,40,98,38,"result"],[128,46,98,44],[128,47,98,45],[129,8,100,6],[129,12,100,10,"result"],[129,18,100,16],[129,19,100,17,"type"],[129,23,100,21],[129,28,100,26],[129,37,100,35],[129,39,100,37],[130,10,101,8],[131,10,102,8],[131,16,102,14],[132,12,102,16,"code"],[133,10,102,21],[133,11,102,22],[133,14,102,25,"result"],[133,20,102,31],[133,21,102,32,"params"],[133,27,102,38],[134,10,104,8,"console"],[134,17,104,15],[134,18,104,16,"log"],[134,21,104,19],[134,22,104,20],[134,68,104,66],[134,70,104,68],[134,71,104,69],[134,72,104,70,"code"],[134,76,104,74],[134,77,104,75],[135,10,106,8],[135,14,106,12,"code"],[135,18,106,16],[135,20,106,18],[136,12,107,10],[137,12,108,10],[137,18,108,16,"tokenResult"],[137,29,108,27],[137,32,108,30],[137,38,108,36,"AuthSession"],[137,49,108,47],[137,50,108,48,"exchangeCodeAsync"],[137,67,108,65],[137,68,109,12],[138,14,110,14,"clientId"],[138,22,110,22],[138,24,110,24],[138,28,110,28],[138,29,110,29,"config"],[138,35,110,35],[138,36,110,36,"clientId"],[138,44,110,44],[139,14,111,14,"code"],[139,18,111,18],[140,14,112,14,"redirectUri"],[140,25,112,25],[140,27,112,27],[140,31,112,31],[140,32,112,32,"authRequest"],[140,43,112,43],[140,44,112,44,"redirectUri"],[140,55,112,55],[141,14,113,14,"extraParams"],[141,25,113,25],[141,27,113,27],[142,16,114,16,"client_secret"],[142,29,114,29],[142,31,114,31],[142,35,114,35],[142,36,114,36,"config"],[142,42,114,42],[142,43,114,43,"clientSecret"],[142,55,114,55],[142,59,114,59],[143,14,115,14],[144,12,116,12],[144,13,116,13],[144,15,117,12,"discovery"],[144,24,118,10],[144,25,118,11],[145,12,120,10,"console"],[145,19,120,17],[145,20,120,18,"log"],[145,23,120,21],[145,24,120,22],[145,54,120,52],[145,55,120,53],[146,12,122,10],[146,19,122,17],[147,14,123,12,"type"],[147,18,123,16],[147,20,123,18],[147,29,123,27],[148,14,124,12,"idToken"],[148,21,124,19],[148,23,124,21,"tokenResult"],[148,34,124,32],[148,35,124,33,"idToken"],[148,42,124,40],[148,46,124,44,"undefined"],[148,55,124,53],[149,14,125,12,"accessToken"],[149,25,125,23],[149,27,125,25,"tokenResult"],[149,38,125,36],[149,39,125,37,"accessToken"],[150,12,126,10],[150,13,126,11],[151,10,127,8],[151,11,127,9],[151,17,127,15],[152,12,128,10],[152,19,128,17],[153,14,129,12,"type"],[153,18,129,16],[153,20,129,18],[153,27,129,25],[154,14,130,12,"error"],[154,19,130,17],[154,21,130,19],[155,12,131,10],[155,13,131,11],[156,10,132,8],[157,8,133,6],[157,9,133,7],[157,15,133,13],[157,19,133,17,"result"],[157,25,133,23],[157,26,133,24,"type"],[157,30,133,28],[157,35,133,33],[157,44,133,42],[157,48,133,46,"result"],[157,54,133,52],[157,55,133,53,"type"],[157,59,133,57],[157,64,133,62],[157,72,133,70],[157,74,133,72],[158,10,134,8,"console"],[158,17,134,15],[158,18,134,16,"log"],[158,21,134,19],[158,22,134,20],[158,60,134,58],[158,61,134,59],[159,10,135,8],[159,17,135,15],[160,12,136,10,"type"],[160,16,136,14],[160,18,136,16],[161,10,137,8],[161,11,137,9],[162,8,138,6],[162,9,138,7],[162,15,138,13],[163,10,139,8,"console"],[163,17,139,15],[163,18,139,16,"error"],[163,23,139,21],[163,24,139,22],[163,40,139,38],[163,42,139,40,"result"],[163,48,139,46],[163,49,139,47],[164,10,140,8],[164,17,140,15],[165,12,141,10,"type"],[165,16,141,14],[165,18,141,16],[165,25,141,23],[166,12,142,10,"error"],[166,17,142,15],[166,19,142,17],[167,10,143,8],[167,11,143,9],[168,8,144,6],[169,6,145,4],[169,7,145,5],[169,8,145,6],[169,15,145,13,"error"],[169,20,145,18],[169,22,145,20],[170,8,146,6,"console"],[170,15,146,13],[170,16,146,14,"error"],[170,21,146,19],[170,22,146,20],[170,45,146,43],[170,47,146,45,"error"],[170,52,146,50],[170,53,146,51],[171,8,147,6],[171,15,147,13],[172,10,148,8,"type"],[172,14,148,12],[172,16,148,14],[172,23,148,21],[173,10,149,8,"error"],[173,15,149,13],[173,17,149,15,"error"],[173,22,149,20],[173,34,149,32,"Error"],[173,39,149,37],[173,42,149,40,"error"],[173,47,149,45],[173,48,149,46,"message"],[173,55,149,53],[173,58,149,56],[174,8,150,6],[174,9,150,7],[175,6,151,4],[176,4,152,2],[178,4,154,2],[179,0,155,0],[180,0,156,0],[181,4,157,2],[181,10,157,8,"authenticateWithBackend"],[181,33,157,31,"authenticateWithBackend"],[181,34,157,32,"idToken"],[181,41,157,47],[181,43,157,49,"accessToken"],[181,54,157,69],[181,56,157,85],[182,6,158,4],[182,10,158,8],[183,8,159,6],[183,14,159,12,"backendUrl"],[183,24,159,22],[183,27,159,25,"process"],[183,34,159,32],[183,35,159,33,"env"],[183,38,159,36],[183,39,159,37,"EXPO_PUBLIC_BACKEND_URL"],[183,62,159,60],[183,66,159,64],[183,68,159,66],[184,8,161,6],[184,14,161,12,"response"],[184,22,161,20],[184,25,161,23],[184,31,161,29,"fetch"],[184,36,161,34],[184,37,161,35],[184,40,161,38,"backendUrl"],[184,50,161,48],[184,74,161,72],[184,76,161,74],[185,10,162,8,"method"],[185,16,162,14],[185,18,162,16],[185,24,162,22],[186,10,163,8,"headers"],[186,17,163,15],[186,19,163,17],[187,12,164,10],[187,26,164,24],[187,28,164,26],[188,10,165,8],[188,11,165,9],[189,10,166,8,"body"],[189,14,166,12],[189,16,166,14,"JSON"],[189,20,166,18],[189,21,166,19,"stringify"],[189,30,166,28],[189,31,166,29],[190,12,167,10,"provider"],[190,20,167,18],[190,22,167,20],[190,30,167,28],[191,12,168,10,"id_token"],[191,20,168,18],[191,22,168,20,"idToken"],[191,29,168,27],[192,12,169,10,"access_token"],[192,24,169,22],[192,26,169,24,"accessToken"],[193,10,170,8],[193,11,170,9],[194,8,171,6],[194,9,171,7],[194,10,171,8],[195,8,173,6],[195,12,173,10],[195,13,173,11,"response"],[195,21,173,19],[195,22,173,20,"ok"],[195,24,173,22],[195,26,173,24],[196,10,174,8],[196,16,174,14,"errorData"],[196,25,174,23],[196,28,174,26],[196,34,174,32,"response"],[196,42,174,40],[196,43,174,41,"json"],[196,47,174,45],[196,48,174,46],[196,49,174,47],[196,50,174,48,"catch"],[196,55,174,53],[196,56,174,54],[196,63,174,61],[196,64,174,62],[196,65,174,63],[196,66,174,64],[196,67,174,65],[197,10,175,8],[197,16,175,14],[197,20,175,18,"Error"],[197,25,175,23],[197,26,175,24,"errorData"],[197,35,175,33],[197,36,175,34,"detail"],[197,42,175,40],[197,46,175,44],[197,77,175,75],[197,78,175,76],[198,8,176,6],[199,8,178,6],[199,15,178,13],[199,21,178,19,"response"],[199,29,178,27],[199,30,178,28,"json"],[199,34,178,32],[199,35,178,33],[199,36,178,34],[200,6,179,4],[200,7,179,5],[200,8,179,6],[200,15,179,13,"error"],[200,20,179,18],[200,22,179,20],[201,8,180,6,"console"],[201,15,180,13],[201,16,180,14,"error"],[201,21,180,19],[201,22,180,20],[201,44,180,42],[201,46,180,44,"error"],[201,51,180,49],[201,52,180,50],[202,8,181,6],[202,14,181,12,"error"],[202,19,181,17],[203,6,182,4],[204,4,183,2],[206,4,185,2],[207,0,186,0],[208,0,187,0],[209,4,188,2],[209,10,188,8,"completeOAuthFlow"],[209,27,188,25,"completeOAuthFlow"],[209,28,188,25],[209,30,188,42],[210,6,189,4],[210,12,189,10,"oauthResult"],[210,23,189,21],[210,26,189,24],[210,32,189,30],[210,36,189,34],[210,37,189,35,"signIn"],[210,43,189,41],[210,44,189,42],[210,45,189,43],[211,6,191,4],[211,10,191,8,"oauthResult"],[211,21,191,19],[211,22,191,20,"type"],[211,26,191,24],[211,31,191,29],[211,40,191,38],[211,44,191,42,"oauthResult"],[211,55,191,53],[211,56,191,54,"idToken"],[211,63,191,61],[211,65,191,63],[212,8,192,6],[212,15,192,13],[212,21,192,19],[212,25,192,23],[212,26,192,24,"authenticateWithBackend"],[212,49,192,47],[212,50,193,8,"oauthResult"],[212,61,193,19],[212,62,193,20,"idToken"],[212,69,193,27],[212,71,194,8,"oauthResult"],[212,82,194,19],[212,83,194,20,"accessToken"],[212,94,195,6],[212,95,195,7],[213,6,196,4],[213,7,196,5],[213,13,196,11],[214,8,197,6],[214,14,197,12],[214,18,197,16,"Error"],[214,23,197,21],[214,24,197,22,"oauthResult"],[214,35,197,33],[214,36,197,34,"error"],[214,41,197,39],[214,45,197,43],[214,64,197,62],[214,65,197,63],[215,6,198,4],[216,4,199,2],[218,4,201,2],[219,0,202,0],[220,0,203,0],[221,4,204,2,"isConfigured"],[221,16,204,14,"isConfigured"],[221,17,204,14],[221,19,204,26],[222,6,205,4],[222,13,205,11],[222,17,205,15],[222,18,205,16,"config"],[222,24,205,22],[222,29,205,27],[222,33,205,31],[222,37,205,35],[222,38,205,36],[222,39,205,37],[222,43,205,41],[222,44,205,42,"config"],[222,50,205,48],[222,51,205,49,"clientId"],[222,59,205,57],[223,4,206,2],[225,4,208,2],[226,0,209,0],[227,0,210,0],[228,4,211,2,"getConfig"],[228,13,211,11,"getConfig"],[228,14,211,11],[228,16,211,40],[229,6,212,4],[229,13,212,11],[229,17,212,15],[229,18,212,16,"config"],[229,24,212,22],[230,4,213,2],[231,2,214,0],[233,2,216,0],[234,2,217,7],[234,8,217,13,"googleOAuthService"],[234,26,217,31],[234,29,217,34],[234,33,217,38,"GoogleOAuthService"],[234,51,217,56],[234,52,217,57],[234,53,217,58],[236,2,219,0],[237,2,220,7],[237,8,220,13,"useGoogleOAuth"],[237,22,220,27],[237,25,220,30,"useGoogleOAuth"],[237,26,220,30],[237,31,220,36],[238,4,221,2],[238,10,221,8,"signIn"],[238,16,221,14],[238,19,221,17],[238,25,221,17,"signIn"],[238,26,221,17],[238,31,221,57],[239,6,222,4],[239,13,222,11],[239,19,222,17,"googleOAuthService"],[239,37,222,35],[239,38,222,36,"signIn"],[239,44,222,42],[239,45,222,43],[239,46,222,44],[240,4,223,2],[240,5,223,3],[241,4,225,2],[241,10,225,8,"authenticateWithBackend"],[241,33,225,31],[241,36,225,34],[241,42,225,34,"authenticateWithBackend"],[241,43,225,41,"idToken"],[241,50,225,56],[241,52,225,58,"accessToken"],[241,63,225,78],[241,68,225,83],[242,6,226,4],[242,13,226,11],[242,19,226,17,"googleOAuthService"],[242,37,226,35],[242,38,226,36,"authenticateWithBackend"],[242,61,226,59],[242,62,226,60,"idToken"],[242,69,226,67],[242,71,226,69,"accessToken"],[242,82,226,80],[242,83,226,81],[243,4,227,2],[243,5,227,3],[244,4,229,2],[244,10,229,8,"completeOAuthFlow"],[244,27,229,25],[244,30,229,28],[244,36,229,28,"completeOAuthFlow"],[244,37,229,28],[244,42,229,40],[245,6,230,4],[245,13,230,11],[245,19,230,17,"googleOAuthService"],[245,37,230,35],[245,38,230,36,"completeOAuthFlow"],[245,55,230,53],[245,56,230,54],[245,57,230,55],[246,4,231,2],[246,5,231,3],[247,4,233,2],[247,11,233,9],[248,6,234,4,"signIn"],[248,12,234,10],[249,6,235,4,"authenticateWithBackend"],[249,29,235,27],[250,6,236,4,"completeOAuthFlow"],[250,23,236,21],[251,6,237,4,"isConfigured"],[251,18,237,16],[251,20,237,18,"googleOAuthService"],[251,38,237,36],[251,39,237,37,"isConfigured"],[251,51,237,49],[251,52,237,50],[251,53,237,51],[252,6,238,4,"initialize"],[252,16,238,14],[252,18,238,16,"googleOAuthService"],[252,36,238,34],[252,37,238,35,"initialize"],[252,47,238,45],[252,48,238,46,"bind"],[252,52,238,50],[252,53,238,51,"googleOAuthService"],[252,71,238,69],[253,4,239,2],[253,5,239,3],[254,2,240,0],[254,3,240,1],[255,2,242,0],[255,6,242,0,"_default"],[255,14,242,0],[255,17,242,15,"googleOAuthService"],[255,35,242,33],[256,0,242,34],[256,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF6B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}