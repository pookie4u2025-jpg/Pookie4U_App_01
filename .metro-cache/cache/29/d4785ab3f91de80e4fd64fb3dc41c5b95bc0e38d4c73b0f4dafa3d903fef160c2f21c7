{"dependencies":[{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoAuthSession = require(_dependencyMap[0], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":254,"map":[[27,2,240,0,"Object"],[27,8,240,0],[27,9,240,0,"defineProperty"],[27,23,240,0],[27,24,240,0,"exports"],[27,31,240,0],[28,4,240,0,"enumerable"],[28,14,240,0],[29,4,240,0,"get"],[29,7,240,0],[29,18,240,0,"get"],[29,19,240,0],[30,6,240,0],[30,13,240,0,"_default"],[30,21,240,0],[31,4,240,0],[32,2,240,0],[33,2,215,0,"Object"],[33,8,215,0],[33,9,215,0,"defineProperty"],[33,23,215,0],[33,24,215,0,"exports"],[33,31,215,0],[34,4,215,0,"enumerable"],[34,14,215,0],[35,4,215,0,"get"],[35,7,215,0],[35,18,215,0,"get"],[35,19,215,0],[36,6,215,0],[36,13,215,0,"googleOAuthService"],[36,31,215,0],[37,4,215,0],[38,2,215,0],[39,2,218,0,"Object"],[39,8,218,0],[39,9,218,0,"defineProperty"],[39,23,218,0],[39,24,218,0,"exports"],[39,31,218,0],[40,4,218,0,"enumerable"],[40,14,218,0],[41,4,218,0,"get"],[41,7,218,0],[41,18,218,0,"get"],[41,19,218,0],[42,6,218,0],[42,13,218,0,"useGoogleOAuth"],[42,27,218,0],[43,4,218,0],[44,2,218,0],[45,2,1,0],[45,6,1,0,"_expoAuthSession"],[45,22,1,0],[45,25,1,0,"require"],[45,32,1,0],[45,33,1,0,"_dependencyMap"],[45,47,1,0],[46,2,1,0],[46,6,1,0,"AuthSession"],[46,17,1,0],[46,20,1,0,"_interopNamespace"],[46,37,1,0],[46,38,1,0,"_expoAuthSession"],[46,54,1,0],[47,2,2,0],[47,6,2,0,"_expoWebBrowser"],[47,21,2,0],[47,24,2,0,"require"],[47,31,2,0],[47,32,2,0,"_dependencyMap"],[47,46,2,0],[48,2,2,0],[48,6,2,0,"WebBrowser"],[48,16,2,0],[48,19,2,0,"_interopNamespace"],[48,36,2,0],[48,37,2,0,"_expoWebBrowser"],[48,52,2,0],[49,2,2,47],[49,6,2,47,"_reactNativeWebDistExportsPlatform"],[49,40,2,47],[49,43,2,47,"require"],[49,50,2,47],[49,51,2,47,"_dependencyMap"],[49,65,2,47],[50,2,2,47],[50,6,2,47,"Platform"],[50,14,2,47],[50,17,2,47,"_interopDefault"],[50,32,2,47],[50,33,2,47,"_reactNativeWebDistExportsPlatform"],[50,67,2,47],[51,2,5,0],[52,2,6,0,"WebBrowser"],[52,12,6,10],[52,13,6,11,"maybeCompleteAuthSession"],[52,37,6,35],[52,38,6,36],[52,39,6,37],[54,2,8,0],[55,2,9,0],[55,8,9,6,"GOOGLE_CLIENT_ID"],[55,24,9,22],[55,27,9,25],[55,29,9,27],[55,30,9,28],[55,31,9,29],[56,2,10,0],[56,8,10,6,"GOOGLE_CLIENT_SECRET"],[56,28,10,26],[56,31,10,29],[56,33,10,31],[56,34,10,32],[56,35,10,33],[58,2,12,0],[59,2,13,0],[59,8,13,6,"discovery"],[59,17,13,15],[59,20,13,18],[60,4,14,2,"authorizationEndpoint"],[60,25,14,23],[60,27,14,25],[60,73,14,71],[61,4,15,2,"tokenEndpoint"],[61,17,15,15],[61,19,15,17],[61,56,15,54],[62,4,16,2,"revocationEndpoint"],[62,22,16,20],[62,24,16,22],[63,2,17,0],[63,3,17,1],[64,2,31,0],[64,8,31,6,"GoogleOAuthService"],[64,26,31,24],[64,27,31,25],[65,4,32,10,"config"],[65,10,32,16],[65,13,32,45],[65,17,32,49],[66,4,33,10,"authRequest"],[66,15,33,21],[66,18,33,56],[66,22,33,60],[68,4,35,2],[69,0,36,0],[70,0,37,0],[71,4,38,2,"initialize"],[71,14,38,12,"initialize"],[71,15,38,13,"config"],[71,21,38,38],[71,23,38,40],[72,6,39,4],[72,10,39,8],[72,11,39,9,"config"],[72,17,39,15],[72,20,39,18,"config"],[72,26,39,24],[73,4,40,2],[75,4,42,2],[76,0,43,0],[77,0,44,0],[78,4,45,2],[78,10,45,16,"createAuthRequest"],[78,27,45,33,"createAuthRequest"],[78,28,45,33],[78,30,45,70],[79,6,46,4],[79,10,46,8],[79,11,46,9],[79,15,46,13],[79,16,46,14,"config"],[79,22,46,20],[79,24,46,22],[80,8,47,6],[80,14,47,12],[80,18,47,16,"Error"],[80,23,47,21],[80,24,47,22],[80,80,47,78],[80,81,47,79],[81,6,48,4],[82,6,50,4],[82,12,50,10,"redirectUri"],[82,23,50,21],[82,26,50,24,"AuthSession"],[82,37,50,35],[82,38,50,36,"makeRedirectUri"],[82,53,50,51],[82,54,50,52],[83,8,51,6,"useProxy"],[83,16,51,14],[83,18,51,16],[83,22,51,20],[84,8,51,22],[85,8,52,6,"preferLocalhost"],[85,23,52,21],[85,25,52,23,"Platform"],[85,33,52,31],[85,34,52,31,"default"],[85,41,52,31],[85,42,52,32,"OS"],[85,44,52,34],[85,49,52,39],[86,6,53,4],[86,7,53,5],[86,8,53,6],[87,6,55,4,"console"],[87,13,55,11],[87,14,55,12,"log"],[87,17,55,15],[87,18,55,16],[87,39,55,37],[87,41,55,39,"redirectUri"],[87,52,55,50],[87,53,55,51],[89,6,57,4],[90,6,58,4],[90,12,58,10,"request"],[90,19,58,17],[90,22,58,20],[90,26,58,24,"AuthSession"],[90,37,58,35],[90,38,58,36,"AuthRequest"],[90,49,58,47],[90,50,58,48],[91,8,59,6,"clientId"],[91,16,59,14],[91,18,59,16],[91,22,59,20],[91,23,59,21,"config"],[91,29,59,27],[91,30,59,28,"clientId"],[91,38,59,36],[92,8,60,6,"scopes"],[92,14,60,12],[92,16,60,14],[92,17,60,15],[92,25,60,23],[92,27,60,25],[92,36,60,34],[92,38,60,36],[92,45,60,43],[92,46,60,44],[93,8,61,6,"responseType"],[93,20,61,18],[93,22,61,20,"AuthSession"],[93,33,61,31],[93,34,61,32,"ResponseType"],[93,46,61,44],[93,47,61,45,"Code"],[93,51,61,49],[94,8,61,51],[95,8,62,6,"redirectUri"],[95,19,62,17],[96,8,63,6,"usePKCE"],[96,15,63,13],[96,17,63,15],[96,22,63,20],[97,8,63,22],[98,8,64,6],[99,8,65,6,"extraParams"],[99,19,65,17],[99,21,65,19],[100,10,66,8,"access_type"],[100,21,66,19],[100,23,66,21],[100,32,66,30],[101,10,67,8,"prompt"],[101,16,67,14],[101,18,67,16],[101,34,67,32],[101,35,67,34],[102,8,68,6],[103,6,69,4],[103,7,69,5],[103,8,69,6],[104,6,71,4],[104,13,71,11,"request"],[104,20,71,18],[105,4,72,2],[107,4,74,2],[108,0,75,0],[109,0,76,0],[110,4,77,2],[110,10,77,8,"signIn"],[110,16,77,14,"signIn"],[110,17,77,14],[110,19,77,45],[111,6,78,4],[111,10,78,8],[112,8,79,6],[112,12,79,10],[112,13,79,11],[112,17,79,15],[112,18,79,16,"config"],[112,24,79,22],[112,26,79,24],[113,10,80,8],[113,17,80,15],[114,12,81,10,"type"],[114,16,81,14],[114,18,81,16],[114,25,81,23],[115,12,82,10,"error"],[115,17,82,15],[115,19,82,17],[116,10,83,8],[116,11,83,9],[117,8,84,6],[118,8,86,6,"console"],[118,15,86,13],[118,16,86,14,"log"],[118,19,86,17],[118,20,86,18],[118,49,86,47],[118,50,86,48],[120,8,88,6],[121,8,89,6],[121,12,89,10],[121,13,89,11,"authRequest"],[121,24,89,22],[121,27,89,25],[121,33,89,31],[121,37,89,35],[121,38,89,36,"createAuthRequest"],[121,55,89,53],[121,56,89,54],[121,57,89,55],[122,8,91,6,"console"],[122,15,91,13],[122,16,91,14,"log"],[122,19,91,17],[122,20,91,18],[122,52,91,50],[122,53,91,51],[124,8,93,6],[125,8,94,6],[125,14,94,12,"result"],[125,20,94,18],[125,23,94,21],[125,29,94,27],[125,33,94,31],[125,34,94,32,"authRequest"],[125,45,94,43],[125,46,94,44,"promptAsync"],[125,57,94,55],[125,58,94,56,"discovery"],[125,67,94,65],[125,68,94,66],[126,8,96,6,"console"],[126,15,96,13],[126,16,96,14,"log"],[126,19,96,17],[126,20,96,18],[126,38,96,36],[126,40,96,38,"result"],[126,46,96,44],[126,47,96,45],[127,8,98,6],[127,12,98,10,"result"],[127,18,98,16],[127,19,98,17,"type"],[127,23,98,21],[127,28,98,26],[127,37,98,35],[127,39,98,37],[128,10,99,8],[129,10,100,8],[129,16,100,14],[130,12,100,16,"code"],[131,10,100,21],[131,11,100,22],[131,14,100,25,"result"],[131,20,100,31],[131,21,100,32,"params"],[131,27,100,38],[132,10,102,8,"console"],[132,17,102,15],[132,18,102,16,"log"],[132,21,102,19],[132,22,102,20],[132,68,102,66],[132,70,102,68],[132,71,102,69],[132,72,102,70,"code"],[132,76,102,74],[132,77,102,75],[133,10,104,8],[133,14,104,12,"code"],[133,18,104,16],[133,20,104,18],[134,12,105,10],[135,12,106,10],[135,18,106,16,"tokenResult"],[135,29,106,27],[135,32,106,30],[135,38,106,36,"AuthSession"],[135,49,106,47],[135,50,106,48,"exchangeCodeAsync"],[135,67,106,65],[135,68,107,12],[136,14,108,14,"clientId"],[136,22,108,22],[136,24,108,24],[136,28,108,28],[136,29,108,29,"config"],[136,35,108,35],[136,36,108,36,"clientId"],[136,44,108,44],[137,14,109,14,"code"],[137,18,109,18],[138,14,110,14,"redirectUri"],[138,25,110,25],[138,27,110,27],[138,31,110,31],[138,32,110,32,"authRequest"],[138,43,110,43],[138,44,110,44,"redirectUri"],[138,55,110,55],[139,14,111,14,"extraParams"],[139,25,111,25],[139,27,111,27],[140,16,112,16,"client_secret"],[140,29,112,29],[140,31,112,31],[140,35,112,35],[140,36,112,36,"config"],[140,42,112,42],[140,43,112,43,"clientSecret"],[140,55,112,55],[140,59,112,59],[141,14,113,14],[142,12,114,12],[142,13,114,13],[142,15,115,12,"discovery"],[142,24,116,10],[142,25,116,11],[143,12,118,10,"console"],[143,19,118,17],[143,20,118,18,"log"],[143,23,118,21],[143,24,118,22],[143,54,118,52],[143,55,118,53],[144,12,120,10],[144,19,120,17],[145,14,121,12,"type"],[145,18,121,16],[145,20,121,18],[145,29,121,27],[146,14,122,12,"idToken"],[146,21,122,19],[146,23,122,21,"tokenResult"],[146,34,122,32],[146,35,122,33,"idToken"],[146,42,122,40],[146,46,122,44,"undefined"],[146,55,122,53],[147,14,123,12,"accessToken"],[147,25,123,23],[147,27,123,25,"tokenResult"],[147,38,123,36],[147,39,123,37,"accessToken"],[148,12,124,10],[148,13,124,11],[149,10,125,8],[149,11,125,9],[149,17,125,15],[150,12,126,10],[150,19,126,17],[151,14,127,12,"type"],[151,18,127,16],[151,20,127,18],[151,27,127,25],[152,14,128,12,"error"],[152,19,128,17],[152,21,128,19],[153,12,129,10],[153,13,129,11],[154,10,130,8],[155,8,131,6],[155,9,131,7],[155,15,131,13],[155,19,131,17,"result"],[155,25,131,23],[155,26,131,24,"type"],[155,30,131,28],[155,35,131,33],[155,44,131,42],[155,48,131,46,"result"],[155,54,131,52],[155,55,131,53,"type"],[155,59,131,57],[155,64,131,62],[155,72,131,70],[155,74,131,72],[156,10,132,8,"console"],[156,17,132,15],[156,18,132,16,"log"],[156,21,132,19],[156,22,132,20],[156,60,132,58],[156,61,132,59],[157,10,133,8],[157,17,133,15],[158,12,134,10,"type"],[158,16,134,14],[158,18,134,16],[159,10,135,8],[159,11,135,9],[160,8,136,6],[160,9,136,7],[160,15,136,13],[161,10,137,8,"console"],[161,17,137,15],[161,18,137,16,"error"],[161,23,137,21],[161,24,137,22],[161,40,137,38],[161,42,137,40,"result"],[161,48,137,46],[161,49,137,47],[162,10,138,8],[162,17,138,15],[163,12,139,10,"type"],[163,16,139,14],[163,18,139,16],[163,25,139,23],[164,12,140,10,"error"],[164,17,140,15],[164,19,140,17],[165,10,141,8],[165,11,141,9],[166,8,142,6],[167,6,143,4],[167,7,143,5],[167,8,143,6],[167,15,143,13,"error"],[167,20,143,18],[167,22,143,20],[168,8,144,6,"console"],[168,15,144,13],[168,16,144,14,"error"],[168,21,144,19],[168,22,144,20],[168,45,144,43],[168,47,144,45,"error"],[168,52,144,50],[168,53,144,51],[169,8,145,6],[169,15,145,13],[170,10,146,8,"type"],[170,14,146,12],[170,16,146,14],[170,23,146,21],[171,10,147,8,"error"],[171,15,147,13],[171,17,147,15,"error"],[171,22,147,20],[171,34,147,32,"Error"],[171,39,147,37],[171,42,147,40,"error"],[171,47,147,45],[171,48,147,46,"message"],[171,55,147,53],[171,58,147,56],[172,8,148,6],[172,9,148,7],[173,6,149,4],[174,4,150,2],[176,4,152,2],[177,0,153,0],[178,0,154,0],[179,4,155,2],[179,10,155,8,"authenticateWithBackend"],[179,33,155,31,"authenticateWithBackend"],[179,34,155,32,"idToken"],[179,41,155,47],[179,43,155,49,"accessToken"],[179,54,155,69],[179,56,155,85],[180,6,156,4],[180,10,156,8],[181,8,157,6],[181,14,157,12,"backendUrl"],[181,24,157,22],[181,27,157,25,"process"],[181,34,157,32],[181,35,157,33,"env"],[181,38,157,36],[181,39,157,37,"EXPO_PUBLIC_BACKEND_URL"],[181,62,157,60],[181,66,157,64],[181,68,157,66],[182,8,159,6],[182,14,159,12,"response"],[182,22,159,20],[182,25,159,23],[182,31,159,29,"fetch"],[182,36,159,34],[182,37,159,35],[182,40,159,38,"backendUrl"],[182,50,159,48],[182,74,159,72],[182,76,159,74],[183,10,160,8,"method"],[183,16,160,14],[183,18,160,16],[183,24,160,22],[184,10,161,8,"headers"],[184,17,161,15],[184,19,161,17],[185,12,162,10],[185,26,162,24],[185,28,162,26],[186,10,163,8],[186,11,163,9],[187,10,164,8,"body"],[187,14,164,12],[187,16,164,14,"JSON"],[187,20,164,18],[187,21,164,19,"stringify"],[187,30,164,28],[187,31,164,29],[188,12,165,10,"provider"],[188,20,165,18],[188,22,165,20],[188,30,165,28],[189,12,166,10,"id_token"],[189,20,166,18],[189,22,166,20,"idToken"],[189,29,166,27],[190,12,167,10,"access_token"],[190,24,167,22],[190,26,167,24,"accessToken"],[191,10,168,8],[191,11,168,9],[192,8,169,6],[192,9,169,7],[192,10,169,8],[193,8,171,6],[193,12,171,10],[193,13,171,11,"response"],[193,21,171,19],[193,22,171,20,"ok"],[193,24,171,22],[193,26,171,24],[194,10,172,8],[194,16,172,14,"errorData"],[194,25,172,23],[194,28,172,26],[194,34,172,32,"response"],[194,42,172,40],[194,43,172,41,"json"],[194,47,172,45],[194,48,172,46],[194,49,172,47],[194,50,172,48,"catch"],[194,55,172,53],[194,56,172,54],[194,63,172,61],[194,64,172,62],[194,65,172,63],[194,66,172,64],[194,67,172,65],[195,10,173,8],[195,16,173,14],[195,20,173,18,"Error"],[195,25,173,23],[195,26,173,24,"errorData"],[195,35,173,33],[195,36,173,34,"detail"],[195,42,173,40],[195,46,173,44],[195,77,173,75],[195,78,173,76],[196,8,174,6],[197,8,176,6],[197,15,176,13],[197,21,176,19,"response"],[197,29,176,27],[197,30,176,28,"json"],[197,34,176,32],[197,35,176,33],[197,36,176,34],[198,6,177,4],[198,7,177,5],[198,8,177,6],[198,15,177,13,"error"],[198,20,177,18],[198,22,177,20],[199,8,178,6,"console"],[199,15,178,13],[199,16,178,14,"error"],[199,21,178,19],[199,22,178,20],[199,44,178,42],[199,46,178,44,"error"],[199,51,178,49],[199,52,178,50],[200,8,179,6],[200,14,179,12,"error"],[200,19,179,17],[201,6,180,4],[202,4,181,2],[204,4,183,2],[205,0,184,0],[206,0,185,0],[207,4,186,2],[207,10,186,8,"completeOAuthFlow"],[207,27,186,25,"completeOAuthFlow"],[207,28,186,25],[207,30,186,42],[208,6,187,4],[208,12,187,10,"oauthResult"],[208,23,187,21],[208,26,187,24],[208,32,187,30],[208,36,187,34],[208,37,187,35,"signIn"],[208,43,187,41],[208,44,187,42],[208,45,187,43],[209,6,189,4],[209,10,189,8,"oauthResult"],[209,21,189,19],[209,22,189,20,"type"],[209,26,189,24],[209,31,189,29],[209,40,189,38],[209,44,189,42,"oauthResult"],[209,55,189,53],[209,56,189,54,"idToken"],[209,63,189,61],[209,65,189,63],[210,8,190,6],[210,15,190,13],[210,21,190,19],[210,25,190,23],[210,26,190,24,"authenticateWithBackend"],[210,49,190,47],[210,50,191,8,"oauthResult"],[210,61,191,19],[210,62,191,20,"idToken"],[210,69,191,27],[210,71,192,8,"oauthResult"],[210,82,192,19],[210,83,192,20,"accessToken"],[210,94,193,6],[210,95,193,7],[211,6,194,4],[211,7,194,5],[211,13,194,11],[212,8,195,6],[212,14,195,12],[212,18,195,16,"Error"],[212,23,195,21],[212,24,195,22,"oauthResult"],[212,35,195,33],[212,36,195,34,"error"],[212,41,195,39],[212,45,195,43],[212,64,195,62],[212,65,195,63],[213,6,196,4],[214,4,197,2],[216,4,199,2],[217,0,200,0],[218,0,201,0],[219,4,202,2,"isConfigured"],[219,16,202,14,"isConfigured"],[219,17,202,14],[219,19,202,26],[220,6,203,4],[220,13,203,11],[220,17,203,15],[220,18,203,16,"config"],[220,24,203,22],[220,29,203,27],[220,33,203,31],[220,37,203,35],[220,38,203,36],[220,39,203,37],[220,43,203,41],[220,44,203,42,"config"],[220,50,203,48],[220,51,203,49,"clientId"],[220,59,203,57],[221,4,204,2],[223,4,206,2],[224,0,207,0],[225,0,208,0],[226,4,209,2,"getConfig"],[226,13,209,11,"getConfig"],[226,14,209,11],[226,16,209,40],[227,6,210,4],[227,13,210,11],[227,17,210,15],[227,18,210,16,"config"],[227,24,210,22],[228,4,211,2],[229,2,212,0],[231,2,214,0],[232,2,215,7],[232,8,215,13,"googleOAuthService"],[232,26,215,31],[232,29,215,34],[232,33,215,38,"GoogleOAuthService"],[232,51,215,56],[232,52,215,57],[232,53,215,58],[234,2,217,0],[235,2,218,7],[235,8,218,13,"useGoogleOAuth"],[235,22,218,27],[235,25,218,30,"useGoogleOAuth"],[235,26,218,30],[235,31,218,36],[236,4,219,2],[236,10,219,8,"signIn"],[236,16,219,14],[236,19,219,17],[236,25,219,17,"signIn"],[236,26,219,17],[236,31,219,57],[237,6,220,4],[237,13,220,11],[237,19,220,17,"googleOAuthService"],[237,37,220,35],[237,38,220,36,"signIn"],[237,44,220,42],[237,45,220,43],[237,46,220,44],[238,4,221,2],[238,5,221,3],[239,4,223,2],[239,10,223,8,"authenticateWithBackend"],[239,33,223,31],[239,36,223,34],[239,42,223,34,"authenticateWithBackend"],[239,43,223,41,"idToken"],[239,50,223,56],[239,52,223,58,"accessToken"],[239,63,223,78],[239,68,223,83],[240,6,224,4],[240,13,224,11],[240,19,224,17,"googleOAuthService"],[240,37,224,35],[240,38,224,36,"authenticateWithBackend"],[240,61,224,59],[240,62,224,60,"idToken"],[240,69,224,67],[240,71,224,69,"accessToken"],[240,82,224,80],[240,83,224,81],[241,4,225,2],[241,5,225,3],[242,4,227,2],[242,10,227,8,"completeOAuthFlow"],[242,27,227,25],[242,30,227,28],[242,36,227,28,"completeOAuthFlow"],[242,37,227,28],[242,42,227,40],[243,6,228,4],[243,13,228,11],[243,19,228,17,"googleOAuthService"],[243,37,228,35],[243,38,228,36,"completeOAuthFlow"],[243,55,228,53],[243,56,228,54],[243,57,228,55],[244,4,229,2],[244,5,229,3],[245,4,231,2],[245,11,231,9],[246,6,232,4,"signIn"],[246,12,232,10],[247,6,233,4,"authenticateWithBackend"],[247,29,233,27],[248,6,234,4,"completeOAuthFlow"],[248,23,234,21],[249,6,235,4,"isConfigured"],[249,18,235,16],[249,20,235,18,"googleOAuthService"],[249,38,235,36],[249,39,235,37,"isConfigured"],[249,51,235,49],[249,52,235,50],[249,53,235,51],[250,6,236,4,"initialize"],[250,16,236,14],[250,18,236,16,"googleOAuthService"],[250,36,236,34],[250,37,236,35,"initialize"],[250,47,236,45],[250,48,236,46,"bind"],[250,52,236,50],[250,53,236,51,"googleOAuthService"],[250,71,236,69],[251,4,237,2],[251,5,237,3],[252,2,238,0],[252,3,238,1],[253,2,240,0],[253,6,240,0,"_default"],[253,14,240,0],[253,17,240,15,"googleOAuthService"],[253,35,240,33],[254,0,240,34],[254,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF2B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}