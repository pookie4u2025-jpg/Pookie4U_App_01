{"dependencies":[{"name":"react-native-worklets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":55,"index":70}}],"key":"upgdvla269Vpw38V/0PgHoMDZsA=","exportNames":["*"],"imports":1}},{"name":"../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":71},"end":{"line":4,"column":93,"index":164}}],"key":"IDJz4HWb8BkS18xB4AVSbpQcs+Y=","exportNames":["*"],"imports":1}},{"name":"../../commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":165},"end":{"line":5,"column":47,"index":212}}],"key":"vhHMm+PKBSj2e9y550uvksCLTMU=","exportNames":["*"],"imports":1}},{"name":"../../platform-specific/workletsVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":213},"end":{"line":6,"column":80,"index":293}}],"key":"br8njJR0dHe9vM9ZlZbGLX/J8dI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.createJSReanimatedModule = createJSReanimatedModule;\n  Object.defineProperty(exports, \"Platform\", {\n    enumerable: true,\n    get: function () {\n      return Platform;\n    }\n  });\n  var _reactNativeWorklets = require(_dependencyMap[0], \"react-native-worklets\");\n  var _common = require(_dependencyMap[1], \"../../common\");\n  var _commonTypes = require(_dependencyMap[2], \"../../commonTypes\");\n  var _platformSpecificWorkletsVersion = require(_dependencyMap[3], \"../../platform-specific/workletsVersion\");\n  function createJSReanimatedModule() {\n    return new JSReanimated();\n  }\n  class JSReanimated {\n    /**\n     * We keep the instance of `WorkletsModule` here to keep correct coupling of\n     * the modules and initialization order.\n     */\n    // eslint-disable-next-line no-unused-private-class-members\n    #workletsModule = _reactNativeWorklets.WorkletsModule;\n    nextSensorId = 0;\n    sensors = new Map();\n    platform = undefined;\n    constructor() {\n      if (__DEV__) {\n        (0, _platformSpecificWorkletsVersion.assertWorkletsVersion)();\n      }\n    }\n    registerEventHandler(_eventHandler, _eventName, _emitterReactTag) {\n      throw new _common.ReanimatedError('registerEventHandler is not available in JSReanimated.');\n    }\n    unregisterEventHandler(_) {\n      throw new _common.ReanimatedError('unregisterEventHandler is not available in JSReanimated.');\n    }\n    configureLayoutAnimationBatch() {\n      // no-op\n    }\n    setShouldAnimateExitingForTag() {\n      // no-op\n    }\n    registerSensor(sensorType, interval, _iosReferenceFrame, eventHandler) {\n      if (!_common.IS_WINDOW_AVAILABLE) {\n        // the window object is unavailable when building the server portion of a site that uses SSG\n        // this check is here to ensure that the server build won't fail\n        return -1;\n      }\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      if (!(this.getSensorName(sensorType) in window)) {\n        // https://w3c.github.io/sensors/#secure-context\n        _common.logger.warn('Sensor is not available.' + (_common.IS_WEB && location.protocol !== 'https:' ? ' Make sure you use secure origin with `npx expo start --web --https`.' : '') + (this.platform === Platform.WEB_IOS ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.' : ''));\n        return -1;\n      }\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      const sensor = this.initializeSensor(sensorType, interval);\n      sensor.addEventListener('reading', this.getSensorCallback(sensor, sensorType, eventHandler));\n      sensor.start();\n      this.sensors.set(this.nextSensorId, sensor);\n      return this.nextSensorId++;\n    }\n    getSensorCallback = (sensor, sensorType, eventHandler) => {\n      switch (sensorType) {\n        case _commonTypes.SensorType.ACCELEROMETER:\n        case _commonTypes.SensorType.GRAVITY:\n          return () => {\n            let {\n              x,\n              y,\n              z\n            } = sensor;\n\n            // Web Android sensors have a different coordinate system than iOS\n            if (this.platform === Platform.WEB_ANDROID) {\n              [x, y, z] = [-x, -y, -z];\n            }\n            // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n            eventHandler({\n              x,\n              y,\n              z,\n              interfaceOrientation: 0\n            });\n          };\n        case _commonTypes.SensorType.GYROSCOPE:\n        case _commonTypes.SensorType.MAGNETIC_FIELD:\n          return () => {\n            const {\n              x,\n              y,\n              z\n            } = sensor;\n            // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n            eventHandler({\n              x,\n              y,\n              z,\n              interfaceOrientation: 0\n            });\n          };\n        case _commonTypes.SensorType.ROTATION:\n          return () => {\n            const [qw, qx] = sensor.quaternion;\n            let [,, qy, qz] = sensor.quaternion;\n\n            // Android sensors have a different coordinate system than iOS\n            if (this.platform === Platform.WEB_ANDROID) {\n              [qy, qz] = [qz, -qy];\n            }\n\n            // reference: https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion\n            const yaw = -Math.atan2(2.0 * (qy * qz + qw * qx), qw * qw - qx * qx - qy * qy + qz * qz);\n            const pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n            const roll = -Math.atan2(2.0 * (qx * qy + qw * qz), qw * qw + qx * qx - qy * qy - qz * qz);\n            // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n            eventHandler({\n              qw,\n              qx,\n              qy,\n              qz,\n              yaw,\n              pitch,\n              roll,\n              interfaceOrientation: 0\n            });\n          };\n      }\n    };\n    unregisterSensor(id) {\n      const sensor = this.sensors.get(id);\n      if (sensor !== undefined) {\n        sensor.stop();\n        this.sensors.delete(id);\n      }\n    }\n    subscribeForKeyboardEvents(_) {\n      if (_common.IS_WEB) {\n        _common.logger.warn('useAnimatedKeyboard is not available on web yet.');\n      } else if (_common.IS_JEST) {\n        _common.logger.warn('useAnimatedKeyboard is not available when using Jest.');\n      } else {\n        _common.logger.warn('useAnimatedKeyboard is not available on this configuration.');\n      }\n      return -1;\n    }\n    unsubscribeFromKeyboardEvents(_) {\n      // noop\n    }\n    initializeSensor(sensorType, interval) {\n      const config = interval <= 0 ? {\n        referenceFrame: 'device'\n      } : {\n        frequency: 1000 / interval\n      };\n      switch (sensorType) {\n        case _commonTypes.SensorType.ACCELEROMETER:\n          return new window.Accelerometer(config);\n        case _commonTypes.SensorType.GYROSCOPE:\n          return new window.Gyroscope(config);\n        case _commonTypes.SensorType.GRAVITY:\n          return new window.GravitySensor(config);\n        case _commonTypes.SensorType.MAGNETIC_FIELD:\n          return new window.Magnetometer(config);\n        case _commonTypes.SensorType.ROTATION:\n          return new window.AbsoluteOrientationSensor(config);\n      }\n    }\n    getSensorName(sensorType) {\n      switch (sensorType) {\n        case _commonTypes.SensorType.ACCELEROMETER:\n          return 'Accelerometer';\n        case _commonTypes.SensorType.GRAVITY:\n          return 'GravitySensor';\n        case _commonTypes.SensorType.GYROSCOPE:\n          return 'Gyroscope';\n        case _commonTypes.SensorType.MAGNETIC_FIELD:\n          return 'Magnetometer';\n        case _commonTypes.SensorType.ROTATION:\n          return 'AbsoluteOrientationSensor';\n      }\n    }\n    detectPlatform() {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      if (userAgent === undefined) {\n        this.platform = Platform.UNKNOWN;\n      } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n        this.platform = Platform.WEB_IOS;\n      } else if (/android/i.test(userAgent)) {\n        this.platform = Platform.WEB_ANDROID;\n      } else {\n        this.platform = Platform.WEB;\n      }\n    }\n    getViewProp(_viewTag, _propName, _component, _callback) {\n      throw new _common.ReanimatedError('getViewProp is not available in JSReanimated.');\n    }\n    getStaticFeatureFlag() {\n      // mock implementation\n      return false;\n    }\n    setDynamicFeatureFlag() {\n      // noop\n    }\n    setViewStyle(_viewTag, _style) {\n      throw new _common.ReanimatedError('setViewStyle is not available in JSReanimated.');\n    }\n    markNodeAsRemovable(_shadowNodeWrapper) {\n      throw new _common.ReanimatedError('markNodeAsRemovable is not available in JSReanimated.');\n    }\n    unmarkNodeAsRemovable(_viewTag) {\n      throw new _common.ReanimatedError('unmarkNodeAsRemovable is not available in JSReanimated.');\n    }\n    registerCSSKeyframes(_animationName, _viewName, _keyframesConfig) {\n      throw new _common.ReanimatedError('`registerCSSKeyframes` is not available in JSReanimated.');\n    }\n    unregisterCSSKeyframes(_animationName, _viewName) {\n      throw new _common.ReanimatedError('`unregisterCSSKeyframes` is not available in JSReanimated.');\n    }\n    applyCSSAnimations(_shadowNodeWrapper, _animationUpdates) {\n      throw new _common.ReanimatedError('`applyCSSAnimations` is not available in JSReanimated.');\n    }\n    unregisterCSSAnimations(_viewTag) {\n      throw new _common.ReanimatedError('`unregisterCSSAnimations` is not available in JSReanimated.');\n    }\n    registerCSSTransition(_shadowNodeWrapper, _transitionConfig) {\n      throw new _common.ReanimatedError('`registerCSSTransition` is not available in JSReanimated.');\n    }\n    updateCSSTransition(_viewTag, _settingsUpdates) {\n      throw new _common.ReanimatedError('`updateCSSTransition` is not available in JSReanimated.');\n    }\n    unregisterCSSTransition(_viewTag) {\n      throw new _common.ReanimatedError('`unregisterCSSTransition` is not available in JSReanimated.');\n    }\n  }\n\n  // Lack of this export breaks TypeScript generation since\n  // an enum transpiles into JavaScript code.\n  /** @knipIgnore */\n  let Platform = /*#__PURE__*/function (Platform) {\n    Platform[\"WEB_IOS\"] = \"web iOS\";\n    Platform[\"WEB_ANDROID\"] = \"web Android\";\n    Platform[\"WEB\"] = \"web\";\n    Platform[\"UNKNOWN\"] = \"unknown\";\n    return Platform;\n  }({});\n});","lineCount":255,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,7,0,"exports"],[7,9,7,0],[7,10,7,0,"createJSReanimatedModule"],[7,34,7,0],[7,37,7,0,"createJSReanimatedModule"],[7,61,7,0],[8,2,237,0,"Object"],[8,8,237,0],[8,9,237,0,"defineProperty"],[8,23,237,0],[8,24,237,0,"exports"],[8,31,237,0],[9,4,237,0,"enumerable"],[9,14,237,0],[10,4,237,0,"get"],[10,7,237,0],[10,18,237,0,"get"],[10,19,237,0],[11,6,237,0],[11,13,237,0,"Platform"],[11,21,237,0],[12,4,237,0],[13,2,237,0],[14,2,3,0],[14,6,3,0,"_reactNativeWorklets"],[14,26,3,0],[14,29,3,0,"require"],[14,36,3,0],[14,37,3,0,"_dependencyMap"],[14,51,3,0],[15,2,4,0],[15,6,4,0,"_common"],[15,13,4,0],[15,16,4,0,"require"],[15,23,4,0],[15,24,4,0,"_dependencyMap"],[15,38,4,0],[16,2,5,0],[16,6,5,0,"_commonTypes"],[16,18,5,0],[16,21,5,0,"require"],[16,28,5,0],[16,29,5,0,"_dependencyMap"],[16,43,5,0],[17,2,6,0],[17,6,6,0,"_platformSpecificWorkletsVersion"],[17,38,6,0],[17,41,6,0,"require"],[17,48,6,0],[17,49,6,0,"_dependencyMap"],[17,63,6,0],[18,2,7,7],[18,11,7,16,"createJSReanimatedModule"],[18,35,7,40,"createJSReanimatedModule"],[18,36,7,40],[18,38,7,43],[19,4,8,2],[19,11,8,9],[19,15,8,13,"JSReanimated"],[19,27,8,25],[19,28,8,26],[19,29,8,27],[20,2,9,0],[21,2,10,0],[21,8,10,6,"JSReanimated"],[21,20,10,18],[21,21,10,19],[22,4,11,2],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,4,15,2],[27,4,16,2],[27,5,16,3,"workletsModule"],[27,19,16,17],[27,22,16,20,"WorkletsModule"],[27,42,16,34],[27,43,16,34,"WorkletsModule"],[27,57,16,34],[28,4,17,2,"nextSensorId"],[28,16,17,14],[28,19,17,17],[28,20,17,18],[29,4,18,2,"sensors"],[29,11,18,9],[29,14,18,12],[29,18,18,16,"Map"],[29,21,18,19],[29,22,18,20],[29,23,18,21],[30,4,19,2,"platform"],[30,12,19,10],[30,15,19,13,"undefined"],[30,24,19,22],[31,4,20,2,"constructor"],[31,15,20,13,"constructor"],[31,16,20,13],[31,18,20,16],[32,6,21,4],[32,10,21,8,"__DEV__"],[32,17,21,15],[32,19,21,17],[33,8,22,6],[33,12,22,6,"assertWorkletsVersion"],[33,44,22,27],[33,45,22,27,"assertWorkletsVersion"],[33,66,22,27],[33,68,22,28],[33,69,22,29],[34,6,23,4],[35,4,24,2],[36,4,25,2,"registerEventHandler"],[36,24,25,22,"registerEventHandler"],[36,25,25,23,"_eventHandler"],[36,38,25,36],[36,40,25,38,"_eventName"],[36,50,25,48],[36,52,25,50,"_emitterReactTag"],[36,68,25,66],[36,70,25,68],[37,6,26,4],[37,12,26,10],[37,16,26,14,"ReanimatedError"],[37,23,26,29],[37,24,26,29,"ReanimatedError"],[37,39,26,29],[37,40,26,30],[37,96,26,86],[37,97,26,87],[38,4,27,2],[39,4,28,2,"unregisterEventHandler"],[39,26,28,24,"unregisterEventHandler"],[39,27,28,25,"_"],[39,28,28,26],[39,30,28,28],[40,6,29,4],[40,12,29,10],[40,16,29,14,"ReanimatedError"],[40,23,29,29],[40,24,29,29,"ReanimatedError"],[40,39,29,29],[40,40,29,30],[40,98,29,88],[40,99,29,89],[41,4,30,2],[42,4,31,2,"configureLayoutAnimationBatch"],[42,33,31,31,"configureLayoutAnimationBatch"],[42,34,31,31],[42,36,31,34],[43,6,32,4],[44,4,32,4],[45,4,34,2,"setShouldAnimateExitingForTag"],[45,33,34,31,"setShouldAnimateExitingForTag"],[45,34,34,31],[45,36,34,34],[46,6,35,4],[47,4,35,4],[48,4,37,2,"registerSensor"],[48,18,37,16,"registerSensor"],[48,19,37,17,"sensorType"],[48,29,37,27],[48,31,37,29,"interval"],[48,39,37,37],[48,41,37,39,"_iosReferenceFrame"],[48,59,37,57],[48,61,37,59,"eventHandler"],[48,73,37,71],[48,75,37,73],[49,6,38,4],[49,10,38,8],[49,11,38,9,"IS_WINDOW_AVAILABLE"],[49,18,38,28],[49,19,38,28,"IS_WINDOW_AVAILABLE"],[49,38,38,28],[49,40,38,30],[50,8,39,6],[51,8,40,6],[52,8,41,6],[52,15,41,13],[52,16,41,14],[52,17,41,15],[53,6,42,4],[54,6,43,4],[54,10,43,8],[54,14,43,12],[54,15,43,13,"platform"],[54,23,43,21],[54,28,43,26,"undefined"],[54,37,43,35],[54,39,43,37],[55,8,44,6],[55,12,44,10],[55,13,44,11,"detectPlatform"],[55,27,44,25],[55,28,44,26],[55,29,44,27],[56,6,45,4],[57,6,46,4],[57,10,46,8],[57,12,46,10],[57,16,46,14],[57,17,46,15,"getSensorName"],[57,30,46,28],[57,31,46,29,"sensorType"],[57,41,46,39],[57,42,46,40],[57,46,46,44,"window"],[57,52,46,50],[57,53,46,51],[57,55,46,53],[58,8,47,6],[59,8,48,6,"logger"],[59,15,48,12],[59,16,48,12,"logger"],[59,22,48,12],[59,23,48,13,"warn"],[59,27,48,17],[59,28,48,18],[59,54,48,44],[59,58,48,48,"IS_WEB"],[59,65,48,54],[59,66,48,54,"IS_WEB"],[59,72,48,54],[59,76,48,58,"location"],[59,84,48,66],[59,85,48,67,"protocol"],[59,93,48,75],[59,98,48,80],[59,106,48,88],[59,109,48,91],[59,180,48,162],[59,183,48,165],[59,185,48,167],[59,186,48,168],[59,190,48,172],[59,194,48,176],[59,195,48,177,"platform"],[59,203,48,185],[59,208,48,190,"Platform"],[59,216,48,198],[59,217,48,199,"WEB_IOS"],[59,224,48,206],[59,227,48,209],[59,407,48,389],[59,410,48,392],[59,412,48,394],[59,413,48,395],[59,414,48,396],[60,8,49,6],[60,15,49,13],[60,16,49,14],[60,17,49,15],[61,6,50,4],[62,6,51,4],[62,10,51,8],[62,14,51,12],[62,15,51,13,"platform"],[62,23,51,21],[62,28,51,26,"undefined"],[62,37,51,35],[62,39,51,37],[63,8,52,6],[63,12,52,10],[63,13,52,11,"detectPlatform"],[63,27,52,25],[63,28,52,26],[63,29,52,27],[64,6,53,4],[65,6,54,4],[65,12,54,10,"sensor"],[65,18,54,16],[65,21,54,19],[65,25,54,23],[65,26,54,24,"initializeSensor"],[65,42,54,40],[65,43,54,41,"sensorType"],[65,53,54,51],[65,55,54,53,"interval"],[65,63,54,61],[65,64,54,62],[66,6,55,4,"sensor"],[66,12,55,10],[66,13,55,11,"addEventListener"],[66,29,55,27],[66,30,55,28],[66,39,55,37],[66,41,55,39],[66,45,55,43],[66,46,55,44,"getSensorCallback"],[66,63,55,61],[66,64,55,62,"sensor"],[66,70,55,68],[66,72,55,70,"sensorType"],[66,82,55,80],[66,84,55,82,"eventHandler"],[66,96,55,94],[66,97,55,95],[66,98,55,96],[67,6,56,4,"sensor"],[67,12,56,10],[67,13,56,11,"start"],[67,18,56,16],[67,19,56,17],[67,20,56,18],[68,6,57,4],[68,10,57,8],[68,11,57,9,"sensors"],[68,18,57,16],[68,19,57,17,"set"],[68,22,57,20],[68,23,57,21],[68,27,57,25],[68,28,57,26,"nextSensorId"],[68,40,57,38],[68,42,57,40,"sensor"],[68,48,57,46],[68,49,57,47],[69,6,58,4],[69,13,58,11],[69,17,58,15],[69,18,58,16,"nextSensorId"],[69,30,58,28],[69,32,58,30],[70,4,59,2],[71,4,60,2,"getSensorCallback"],[71,21,60,19],[71,24,60,22,"getSensorCallback"],[71,25,60,23,"sensor"],[71,31,60,29],[71,33,60,31,"sensorType"],[71,43,60,41],[71,45,60,43,"eventHandler"],[71,57,60,55],[71,62,60,60],[72,6,61,4],[72,14,61,12,"sensorType"],[72,24,61,22],[73,8,62,6],[73,13,62,11,"SensorType"],[73,25,62,21],[73,26,62,21,"SensorType"],[73,36,62,21],[73,37,62,22,"ACCELEROMETER"],[73,50,62,35],[74,8,63,6],[74,13,63,11,"SensorType"],[74,25,63,21],[74,26,63,21,"SensorType"],[74,36,63,21],[74,37,63,22,"GRAVITY"],[74,44,63,29],[75,10,64,8],[75,17,64,15],[75,23,64,21],[76,12,65,10],[76,16,65,14],[77,14,66,12,"x"],[77,15,66,13],[78,14,67,12,"y"],[78,15,67,13],[79,14,68,12,"z"],[80,12,69,10],[80,13,69,11],[80,16,69,14,"sensor"],[80,22,69,20],[82,12,71,10],[83,12,72,10],[83,16,72,14],[83,20,72,18],[83,21,72,19,"platform"],[83,29,72,27],[83,34,72,32,"Platform"],[83,42,72,40],[83,43,72,41,"WEB_ANDROID"],[83,54,72,52],[83,56,72,54],[84,14,73,12],[84,15,73,13,"x"],[84,16,73,14],[84,18,73,16,"y"],[84,19,73,17],[84,21,73,19,"z"],[84,22,73,20],[84,23,73,21],[84,26,73,24],[84,27,73,25],[84,28,73,26,"x"],[84,29,73,27],[84,31,73,29],[84,32,73,30,"y"],[84,33,73,31],[84,35,73,33],[84,36,73,34,"z"],[84,37,73,35],[84,38,73,36],[85,12,74,10],[86,12,75,10],[87,12,76,10,"eventHandler"],[87,24,76,22],[87,25,76,23],[88,14,77,12,"x"],[88,15,77,13],[89,14,78,12,"y"],[89,15,78,13],[90,14,79,12,"z"],[90,15,79,13],[91,14,80,12,"interfaceOrientation"],[91,34,80,32],[91,36,80,34],[92,12,81,10],[92,13,81,11],[92,14,81,12],[93,10,82,8],[93,11,82,9],[94,8,83,6],[94,13,83,11,"SensorType"],[94,25,83,21],[94,26,83,21,"SensorType"],[94,36,83,21],[94,37,83,22,"GYROSCOPE"],[94,46,83,31],[95,8,84,6],[95,13,84,11,"SensorType"],[95,25,84,21],[95,26,84,21,"SensorType"],[95,36,84,21],[95,37,84,22,"MAGNETIC_FIELD"],[95,51,84,36],[96,10,85,8],[96,17,85,15],[96,23,85,21],[97,12,86,10],[97,18,86,16],[98,14,87,12,"x"],[98,15,87,13],[99,14,88,12,"y"],[99,15,88,13],[100,14,89,12,"z"],[101,12,90,10],[101,13,90,11],[101,16,90,14,"sensor"],[101,22,90,20],[102,12,91,10],[103,12,92,10,"eventHandler"],[103,24,92,22],[103,25,92,23],[104,14,93,12,"x"],[104,15,93,13],[105,14,94,12,"y"],[105,15,94,13],[106,14,95,12,"z"],[106,15,95,13],[107,14,96,12,"interfaceOrientation"],[107,34,96,32],[107,36,96,34],[108,12,97,10],[108,13,97,11],[108,14,97,12],[109,10,98,8],[109,11,98,9],[110,8,99,6],[110,13,99,11,"SensorType"],[110,25,99,21],[110,26,99,21,"SensorType"],[110,36,99,21],[110,37,99,22,"ROTATION"],[110,45,99,30],[111,10,100,8],[111,17,100,15],[111,23,100,21],[112,12,101,10],[112,18,101,16],[112,19,101,17,"qw"],[112,21,101,19],[112,23,101,21,"qx"],[112,25,101,23],[112,26,101,24],[112,29,101,27,"sensor"],[112,35,101,33],[112,36,101,34,"quaternion"],[112,46,101,44],[113,12,102,10],[113,16,102,14],[113,20,102,18,"qy"],[113,22,102,20],[113,24,102,22,"qz"],[113,26,102,24],[113,27,102,25],[113,30,102,28,"sensor"],[113,36,102,34],[113,37,102,35,"quaternion"],[113,47,102,45],[115,12,104,10],[116,12,105,10],[116,16,105,14],[116,20,105,18],[116,21,105,19,"platform"],[116,29,105,27],[116,34,105,32,"Platform"],[116,42,105,40],[116,43,105,41,"WEB_ANDROID"],[116,54,105,52],[116,56,105,54],[117,14,106,12],[117,15,106,13,"qy"],[117,17,106,15],[117,19,106,17,"qz"],[117,21,106,19],[117,22,106,20],[117,25,106,23],[117,26,106,24,"qz"],[117,28,106,26],[117,30,106,28],[117,31,106,29,"qy"],[117,33,106,31],[117,34,106,32],[118,12,107,10],[120,12,109,10],[121,12,110,10],[121,18,110,16,"yaw"],[121,21,110,19],[121,24,110,22],[121,25,110,23,"Math"],[121,29,110,27],[121,30,110,28,"atan2"],[121,35,110,33],[121,36,110,34],[121,39,110,37],[121,43,110,41,"qy"],[121,45,110,43],[121,48,110,46,"qz"],[121,50,110,48],[121,53,110,51,"qw"],[121,55,110,53],[121,58,110,56,"qx"],[121,60,110,58],[121,61,110,59],[121,63,110,61,"qw"],[121,65,110,63],[121,68,110,66,"qw"],[121,70,110,68],[121,73,110,71,"qx"],[121,75,110,73],[121,78,110,76,"qx"],[121,80,110,78],[121,83,110,81,"qy"],[121,85,110,83],[121,88,110,86,"qy"],[121,90,110,88],[121,93,110,91,"qz"],[121,95,110,93],[121,98,110,96,"qz"],[121,100,110,98],[121,101,110,99],[122,12,111,10],[122,18,111,16,"pitch"],[122,23,111,21],[122,26,111,24,"Math"],[122,30,111,28],[122,31,111,29,"sin"],[122,34,111,32],[122,35,111,33],[122,36,111,34],[122,39,111,37],[122,43,111,41,"qx"],[122,45,111,43],[122,48,111,46,"qz"],[122,50,111,48],[122,53,111,51,"qw"],[122,55,111,53],[122,58,111,56,"qy"],[122,60,111,58],[122,61,111,59],[122,62,111,60],[123,12,112,10],[123,18,112,16,"roll"],[123,22,112,20],[123,25,112,23],[123,26,112,24,"Math"],[123,30,112,28],[123,31,112,29,"atan2"],[123,36,112,34],[123,37,112,35],[123,40,112,38],[123,44,112,42,"qx"],[123,46,112,44],[123,49,112,47,"qy"],[123,51,112,49],[123,54,112,52,"qw"],[123,56,112,54],[123,59,112,57,"qz"],[123,61,112,59],[123,62,112,60],[123,64,112,62,"qw"],[123,66,112,64],[123,69,112,67,"qw"],[123,71,112,69],[123,74,112,72,"qx"],[123,76,112,74],[123,79,112,77,"qx"],[123,81,112,79],[123,84,112,82,"qy"],[123,86,112,84],[123,89,112,87,"qy"],[123,91,112,89],[123,94,112,92,"qz"],[123,96,112,94],[123,99,112,97,"qz"],[123,101,112,99],[123,102,112,100],[124,12,113,10],[125,12,114,10,"eventHandler"],[125,24,114,22],[125,25,114,23],[126,14,115,12,"qw"],[126,16,115,14],[127,14,116,12,"qx"],[127,16,116,14],[128,14,117,12,"qy"],[128,16,117,14],[129,14,118,12,"qz"],[129,16,118,14],[130,14,119,12,"yaw"],[130,17,119,15],[131,14,120,12,"pitch"],[131,19,120,17],[132,14,121,12,"roll"],[132,18,121,16],[133,14,122,12,"interfaceOrientation"],[133,34,122,32],[133,36,122,34],[134,12,123,10],[134,13,123,11],[134,14,123,12],[135,10,124,8],[135,11,124,9],[136,6,125,4],[137,4,126,2],[137,5,126,3],[138,4,127,2,"unregisterSensor"],[138,20,127,18,"unregisterSensor"],[138,21,127,19,"id"],[138,23,127,21],[138,25,127,23],[139,6,128,4],[139,12,128,10,"sensor"],[139,18,128,16],[139,21,128,19],[139,25,128,23],[139,26,128,24,"sensors"],[139,33,128,31],[139,34,128,32,"get"],[139,37,128,35],[139,38,128,36,"id"],[139,40,128,38],[139,41,128,39],[140,6,129,4],[140,10,129,8,"sensor"],[140,16,129,14],[140,21,129,19,"undefined"],[140,30,129,28],[140,32,129,30],[141,8,130,6,"sensor"],[141,14,130,12],[141,15,130,13,"stop"],[141,19,130,17],[141,20,130,18],[141,21,130,19],[142,8,131,6],[142,12,131,10],[142,13,131,11,"sensors"],[142,20,131,18],[142,21,131,19,"delete"],[142,27,131,25],[142,28,131,26,"id"],[142,30,131,28],[142,31,131,29],[143,6,132,4],[144,4,133,2],[145,4,134,2,"subscribeForKeyboardEvents"],[145,30,134,28,"subscribeForKeyboardEvents"],[145,31,134,29,"_"],[145,32,134,30],[145,34,134,32],[146,6,135,4],[146,10,135,8,"IS_WEB"],[146,17,135,14],[146,18,135,14,"IS_WEB"],[146,24,135,14],[146,26,135,16],[147,8,136,6,"logger"],[147,15,136,12],[147,16,136,12,"logger"],[147,22,136,12],[147,23,136,13,"warn"],[147,27,136,17],[147,28,136,18],[147,78,136,68],[147,79,136,69],[148,6,137,4],[148,7,137,5],[148,13,137,11],[148,17,137,15,"IS_JEST"],[148,24,137,22],[148,25,137,22,"IS_JEST"],[148,32,137,22],[148,34,137,24],[149,8,138,6,"logger"],[149,15,138,12],[149,16,138,12,"logger"],[149,22,138,12],[149,23,138,13,"warn"],[149,27,138,17],[149,28,138,18],[149,83,138,73],[149,84,138,74],[150,6,139,4],[150,7,139,5],[150,13,139,11],[151,8,140,6,"logger"],[151,15,140,12],[151,16,140,12,"logger"],[151,22,140,12],[151,23,140,13,"warn"],[151,27,140,17],[151,28,140,18],[151,89,140,79],[151,90,140,80],[152,6,141,4],[153,6,142,4],[153,13,142,11],[153,14,142,12],[153,15,142,13],[154,4,143,2],[155,4,144,2,"unsubscribeFromKeyboardEvents"],[155,33,144,31,"unsubscribeFromKeyboardEvents"],[155,34,144,32,"_"],[155,35,144,33],[155,37,144,35],[156,6,145,4],[157,4,145,4],[158,4,147,2,"initializeSensor"],[158,20,147,18,"initializeSensor"],[158,21,147,19,"sensorType"],[158,31,147,29],[158,33,147,31,"interval"],[158,41,147,39],[158,43,147,41],[159,6,148,4],[159,12,148,10,"config"],[159,18,148,16],[159,21,148,19,"interval"],[159,29,148,27],[159,33,148,31],[159,34,148,32],[159,37,148,35],[160,8,149,6,"referenceFrame"],[160,22,149,20],[160,24,149,22],[161,6,150,4],[161,7,150,5],[161,10,150,8],[162,8,151,6,"frequency"],[162,17,151,15],[162,19,151,17],[162,23,151,21],[162,26,151,24,"interval"],[163,6,152,4],[163,7,152,5],[164,6,153,4],[164,14,153,12,"sensorType"],[164,24,153,22],[165,8,154,6],[165,13,154,11,"SensorType"],[165,25,154,21],[165,26,154,21,"SensorType"],[165,36,154,21],[165,37,154,22,"ACCELEROMETER"],[165,50,154,35],[166,10,155,8],[166,17,155,15],[166,21,155,19,"window"],[166,27,155,25],[166,28,155,26,"Accelerometer"],[166,41,155,39],[166,42,155,40,"config"],[166,48,155,46],[166,49,155,47],[167,8,156,6],[167,13,156,11,"SensorType"],[167,25,156,21],[167,26,156,21,"SensorType"],[167,36,156,21],[167,37,156,22,"GYROSCOPE"],[167,46,156,31],[168,10,157,8],[168,17,157,15],[168,21,157,19,"window"],[168,27,157,25],[168,28,157,26,"Gyroscope"],[168,37,157,35],[168,38,157,36,"config"],[168,44,157,42],[168,45,157,43],[169,8,158,6],[169,13,158,11,"SensorType"],[169,25,158,21],[169,26,158,21,"SensorType"],[169,36,158,21],[169,37,158,22,"GRAVITY"],[169,44,158,29],[170,10,159,8],[170,17,159,15],[170,21,159,19,"window"],[170,27,159,25],[170,28,159,26,"GravitySensor"],[170,41,159,39],[170,42,159,40,"config"],[170,48,159,46],[170,49,159,47],[171,8,160,6],[171,13,160,11,"SensorType"],[171,25,160,21],[171,26,160,21,"SensorType"],[171,36,160,21],[171,37,160,22,"MAGNETIC_FIELD"],[171,51,160,36],[172,10,161,8],[172,17,161,15],[172,21,161,19,"window"],[172,27,161,25],[172,28,161,26,"Magnetometer"],[172,40,161,38],[172,41,161,39,"config"],[172,47,161,45],[172,48,161,46],[173,8,162,6],[173,13,162,11,"SensorType"],[173,25,162,21],[173,26,162,21,"SensorType"],[173,36,162,21],[173,37,162,22,"ROTATION"],[173,45,162,30],[174,10,163,8],[174,17,163,15],[174,21,163,19,"window"],[174,27,163,25],[174,28,163,26,"AbsoluteOrientationSensor"],[174,53,163,51],[174,54,163,52,"config"],[174,60,163,58],[174,61,163,59],[175,6,164,4],[176,4,165,2],[177,4,166,2,"getSensorName"],[177,17,166,15,"getSensorName"],[177,18,166,16,"sensorType"],[177,28,166,26],[177,30,166,28],[178,6,167,4],[178,14,167,12,"sensorType"],[178,24,167,22],[179,8,168,6],[179,13,168,11,"SensorType"],[179,25,168,21],[179,26,168,21,"SensorType"],[179,36,168,21],[179,37,168,22,"ACCELEROMETER"],[179,50,168,35],[180,10,169,8],[180,17,169,15],[180,32,169,30],[181,8,170,6],[181,13,170,11,"SensorType"],[181,25,170,21],[181,26,170,21,"SensorType"],[181,36,170,21],[181,37,170,22,"GRAVITY"],[181,44,170,29],[182,10,171,8],[182,17,171,15],[182,32,171,30],[183,8,172,6],[183,13,172,11,"SensorType"],[183,25,172,21],[183,26,172,21,"SensorType"],[183,36,172,21],[183,37,172,22,"GYROSCOPE"],[183,46,172,31],[184,10,173,8],[184,17,173,15],[184,28,173,26],[185,8,174,6],[185,13,174,11,"SensorType"],[185,25,174,21],[185,26,174,21,"SensorType"],[185,36,174,21],[185,37,174,22,"MAGNETIC_FIELD"],[185,51,174,36],[186,10,175,8],[186,17,175,15],[186,31,175,29],[187,8,176,6],[187,13,176,11,"SensorType"],[187,25,176,21],[187,26,176,21,"SensorType"],[187,36,176,21],[187,37,176,22,"ROTATION"],[187,45,176,30],[188,10,177,8],[188,17,177,15],[188,44,177,42],[189,6,178,4],[190,4,179,2],[191,4,180,2,"detectPlatform"],[191,18,180,16,"detectPlatform"],[191,19,180,16],[191,21,180,19],[192,6,181,4],[192,12,181,10,"userAgent"],[192,21,181,19],[192,24,181,22,"navigator"],[192,33,181,31],[192,34,181,32,"userAgent"],[192,43,181,41],[192,47,181,45,"navigator"],[192,56,181,54],[192,57,181,55,"vendor"],[192,63,181,61],[192,67,181,65,"window"],[192,73,181,71],[192,74,181,72,"opera"],[192,79,181,77],[193,6,182,4],[193,10,182,8,"userAgent"],[193,19,182,17],[193,24,182,22,"undefined"],[193,33,182,31],[193,35,182,33],[194,8,183,6],[194,12,183,10],[194,13,183,11,"platform"],[194,21,183,19],[194,24,183,22,"Platform"],[194,32,183,30],[194,33,183,31,"UNKNOWN"],[194,40,183,38],[195,6,184,4],[195,7,184,5],[195,13,184,11],[195,17,184,15],[195,35,184,33],[195,36,184,34,"test"],[195,40,184,38],[195,41,184,39,"userAgent"],[195,50,184,48],[195,51,184,49],[195,53,184,51],[196,8,185,6],[196,12,185,10],[196,13,185,11,"platform"],[196,21,185,19],[196,24,185,22,"Platform"],[196,32,185,30],[196,33,185,31,"WEB_IOS"],[196,40,185,38],[197,6,186,4],[197,7,186,5],[197,13,186,11],[197,17,186,15],[197,27,186,25],[197,28,186,26,"test"],[197,32,186,30],[197,33,186,31,"userAgent"],[197,42,186,40],[197,43,186,41],[197,45,186,43],[198,8,187,6],[198,12,187,10],[198,13,187,11,"platform"],[198,21,187,19],[198,24,187,22,"Platform"],[198,32,187,30],[198,33,187,31,"WEB_ANDROID"],[198,44,187,42],[199,6,188,4],[199,7,188,5],[199,13,188,11],[200,8,189,6],[200,12,189,10],[200,13,189,11,"platform"],[200,21,189,19],[200,24,189,22,"Platform"],[200,32,189,30],[200,33,189,31,"WEB"],[200,36,189,34],[201,6,190,4],[202,4,191,2],[203,4,192,2,"getViewProp"],[203,15,192,13,"getViewProp"],[203,16,192,14,"_viewTag"],[203,24,192,22],[203,26,192,24,"_propName"],[203,35,192,33],[203,37,192,35,"_component"],[203,47,192,45],[203,49,192,47,"_callback"],[203,58,192,56],[203,60,192,58],[204,6,193,4],[204,12,193,10],[204,16,193,14,"ReanimatedError"],[204,23,193,29],[204,24,193,29,"ReanimatedError"],[204,39,193,29],[204,40,193,30],[204,87,193,77],[204,88,193,78],[205,4,194,2],[206,4,195,2,"getStaticFeatureFlag"],[206,24,195,22,"getStaticFeatureFlag"],[206,25,195,22],[206,27,195,25],[207,6,196,4],[208,6,197,4],[208,13,197,11],[208,18,197,16],[209,4,198,2],[210,4,199,2,"setDynamicFeatureFlag"],[210,25,199,23,"setDynamicFeatureFlag"],[210,26,199,23],[210,28,199,26],[211,6,200,4],[212,4,200,4],[213,4,202,2,"setViewStyle"],[213,16,202,14,"setViewStyle"],[213,17,202,15,"_viewTag"],[213,25,202,23],[213,27,202,25,"_style"],[213,33,202,31],[213,35,202,33],[214,6,203,4],[214,12,203,10],[214,16,203,14,"ReanimatedError"],[214,23,203,29],[214,24,203,29,"ReanimatedError"],[214,39,203,29],[214,40,203,30],[214,88,203,78],[214,89,203,79],[215,4,204,2],[216,4,205,2,"markNodeAsRemovable"],[216,23,205,21,"markNodeAsRemovable"],[216,24,205,22,"_shadowNodeWrapper"],[216,42,205,40],[216,44,205,42],[217,6,206,4],[217,12,206,10],[217,16,206,14,"ReanimatedError"],[217,23,206,29],[217,24,206,29,"ReanimatedError"],[217,39,206,29],[217,40,206,30],[217,95,206,85],[217,96,206,86],[218,4,207,2],[219,4,208,2,"unmarkNodeAsRemovable"],[219,25,208,23,"unmarkNodeAsRemovable"],[219,26,208,24,"_viewTag"],[219,34,208,32],[219,36,208,34],[220,6,209,4],[220,12,209,10],[220,16,209,14,"ReanimatedError"],[220,23,209,29],[220,24,209,29,"ReanimatedError"],[220,39,209,29],[220,40,209,30],[220,97,209,87],[220,98,209,88],[221,4,210,2],[222,4,211,2,"registerCSSKeyframes"],[222,24,211,22,"registerCSSKeyframes"],[222,25,211,23,"_animationName"],[222,39,211,37],[222,41,211,39,"_viewName"],[222,50,211,48],[222,52,211,50,"_keyframesConfig"],[222,68,211,66],[222,70,211,68],[223,6,212,4],[223,12,212,10],[223,16,212,14,"ReanimatedError"],[223,23,212,29],[223,24,212,29,"ReanimatedError"],[223,39,212,29],[223,40,212,30],[223,98,212,88],[223,99,212,89],[224,4,213,2],[225,4,214,2,"unregisterCSSKeyframes"],[225,26,214,24,"unregisterCSSKeyframes"],[225,27,214,25,"_animationName"],[225,41,214,39],[225,43,214,41,"_viewName"],[225,52,214,50],[225,54,214,52],[226,6,215,4],[226,12,215,10],[226,16,215,14,"ReanimatedError"],[226,23,215,29],[226,24,215,29,"ReanimatedError"],[226,39,215,29],[226,40,215,30],[226,100,215,90],[226,101,215,91],[227,4,216,2],[228,4,217,2,"applyCSSAnimations"],[228,22,217,20,"applyCSSAnimations"],[228,23,217,21,"_shadowNodeWrapper"],[228,41,217,39],[228,43,217,41,"_animationUpdates"],[228,60,217,58],[228,62,217,60],[229,6,218,4],[229,12,218,10],[229,16,218,14,"ReanimatedError"],[229,23,218,29],[229,24,218,29,"ReanimatedError"],[229,39,218,29],[229,40,218,30],[229,96,218,86],[229,97,218,87],[230,4,219,2],[231,4,220,2,"unregisterCSSAnimations"],[231,27,220,25,"unregisterCSSAnimations"],[231,28,220,26,"_viewTag"],[231,36,220,34],[231,38,220,36],[232,6,221,4],[232,12,221,10],[232,16,221,14,"ReanimatedError"],[232,23,221,29],[232,24,221,29,"ReanimatedError"],[232,39,221,29],[232,40,221,30],[232,101,221,91],[232,102,221,92],[233,4,222,2],[234,4,223,2,"registerCSSTransition"],[234,25,223,23,"registerCSSTransition"],[234,26,223,24,"_shadowNodeWrapper"],[234,44,223,42],[234,46,223,44,"_transitionConfig"],[234,63,223,61],[234,65,223,63],[235,6,224,4],[235,12,224,10],[235,16,224,14,"ReanimatedError"],[235,23,224,29],[235,24,224,29,"ReanimatedError"],[235,39,224,29],[235,40,224,30],[235,99,224,89],[235,100,224,90],[236,4,225,2],[237,4,226,2,"updateCSSTransition"],[237,23,226,21,"updateCSSTransition"],[237,24,226,22,"_viewTag"],[237,32,226,30],[237,34,226,32,"_settingsUpdates"],[237,50,226,48],[237,52,226,50],[238,6,227,4],[238,12,227,10],[238,16,227,14,"ReanimatedError"],[238,23,227,29],[238,24,227,29,"ReanimatedError"],[238,39,227,29],[238,40,227,30],[238,97,227,87],[238,98,227,88],[239,4,228,2],[240,4,229,2,"unregisterCSSTransition"],[240,27,229,25,"unregisterCSSTransition"],[240,28,229,26,"_viewTag"],[240,36,229,34],[240,38,229,36],[241,6,230,4],[241,12,230,10],[241,16,230,14,"ReanimatedError"],[241,23,230,29],[241,24,230,29,"ReanimatedError"],[241,39,230,29],[241,40,230,30],[241,101,230,91],[241,102,230,92],[242,4,231,2],[243,2,232,0],[245,2,234,0],[246,2,235,0],[247,2,236,0],[248,2,237,7],[248,6,237,11,"Platform"],[248,14,237,19],[248,17,237,22],[248,30,237,35],[248,40,237,45,"Platform"],[248,48,237,53],[248,50,237,55],[249,4,238,2,"Platform"],[249,12,238,10],[249,13,238,11],[249,22,238,20],[249,23,238,21],[249,26,238,24],[249,35,238,33],[250,4,239,2,"Platform"],[250,12,239,10],[250,13,239,11],[250,26,239,24],[250,27,239,25],[250,30,239,28],[250,43,239,41],[251,4,240,2,"Platform"],[251,12,240,10],[251,13,240,11],[251,18,240,16],[251,19,240,17],[251,22,240,20],[251,27,240,25],[252,4,241,2,"Platform"],[252,12,241,10],[252,13,241,11],[252,22,241,20],[252,23,241,21],[252,26,241,24],[252,35,241,33],[253,4,242,2],[253,11,242,9,"Platform"],[253,19,242,17],[254,2,243,0],[254,3,243,1],[254,4,243,2],[254,5,243,3],[254,6,243,4],[254,7,243,5],[255,0,243,6],[255,3]],"functionMap":{"names":["<global>","createJSReanimatedModule","JSReanimated","constructor","registerEventHandler","unregisterEventHandler","configureLayoutAnimationBatch","setShouldAnimateExitingForTag","registerSensor","getSensorCallback","<anonymous>","unregisterSensor","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","initializeSensor","getSensorName","detectPlatform","getViewProp","getStaticFeatureFlag","setDynamicFeatureFlag","setViewStyle","markNodeAsRemovable","unmarkNodeAsRemovable","registerCSSKeyframes","unregisterCSSKeyframes","applyCSSAnimations","unregisterCSSAnimations","registerCSSTransition","updateCSSTransition","unregisterCSSTransition"],"mappings":"AAA;OCM;CDE;AEC;ECU;GDI;EEC;GFE;EGC;GHE;EIC;GJE;EKC;GLE;EMC;GNsB;sBOC;eCI;SDkB;eCG;SDa;eCE;SDwB;GPE;ESC;GTM;EUC;GVS;EWC;GXE;EYC;GZkB;EaC;Gba;EcC;GdW;EeC;GfE;EgBC;GhBG;EiBC;GjBE;EkBC;GlBE;EmBC;GnBE;EoBC;GpBE;EqBC;GrBE;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BE;E2BC;G3BE;CFC;mCUK;CVM"},"hasCjsExports":false},"type":"js/module"}]}