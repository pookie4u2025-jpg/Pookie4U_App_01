{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":209},"end":{"line":6,"column":69,"index":261}}],"key":"lV14QuoELkLKy4kI0aEcfvvcE84=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAuthStore\", {\n    enumerable: true,\n    get: function () {\n      return useAuthStore;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[2], \"zustand/middleware\");\n  // Import AsyncStorage conditionally to avoid SSR issues\n  let AsyncStorage = null;\n  try {\n    AsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\").default;\n  } catch (error) {\n    // AsyncStorage not available (e.g., during SSR)\n    console.log('AsyncStorage not available during initialization');\n  }\n  const BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useAuthStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    loading: false,\n    error: null,\n    login: async (email, password) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.detail || 'Login failed');\n        }\n        set({\n          token: data.access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null\n        });\n\n        // Fetch user profile\n        await get().fetchProfile();\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Login failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    register: async (email, password, name) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.detail || 'Registration failed');\n        }\n        set({\n          token: data.access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null\n        });\n\n        // Fetch user profile\n        await get().fetchProfile();\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Registration failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    loginWithOAuth: async oauthData => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const {\n          access_token,\n          user,\n          is_new_user\n        } = oauthData;\n        if (!access_token || !user) {\n          throw new Error('Invalid OAuth response from server');\n        }\n\n        // Store token and user data\n        const userData = {\n          id: user.id,\n          email: user.email,\n          name: user.name,\n          relationship_mode: user.relationship_mode,\n          partner_profile: user.partner_profile || {},\n          total_points: user.total_points || 0,\n          current_level: user.current_level || 1,\n          current_streak: user.current_streak || 0,\n          longest_streak: user.longest_streak || 0,\n          tasks_completed: user.tasks_completed || 0,\n          badges: user.badges || [],\n          profile_completed: user.profile_completed || false,\n          profile_image: user.profile_image,\n          created_at: user.created_at || new Date().toISOString(),\n          updated_at: user.updated_at || new Date().toISOString()\n        };\n        set({\n          user: userData,\n          token: access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null\n        });\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'OAuth login failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    logout: () => {\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      });\n    },\n    fetchProfile: async () => {\n      const {\n        token\n      } = get();\n      if (!token) return;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch profile');\n        }\n        const user = await response.json();\n        set({\n          user\n        });\n      } catch (error) {\n        console.error('Failed to fetch profile:', error);\n        set({\n          error: 'Failed to fetch profile'\n        });\n      }\n    },\n    updateProfile: profile => {\n      set(state => ({\n        user: state.user ? Object.assign({}, state.user, profile) : null\n      }));\n    },\n    updatePartnerProfile: async partner => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/partner-profile`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(partner)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update partner profile');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? Object.assign({}, state.user, {\n            partner_profile: partner,\n            profile_completed: true\n          }) : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update partner profile'\n        });\n        return false;\n      }\n    },\n    updateUserProfile: async profile => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(profile)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update user profile');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? Object.assign({}, state.user, profile) : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update user profile'\n        });\n        return false;\n      }\n    },\n    updateRelationshipMode: async mode => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/relationship-mode`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            mode\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update relationship mode');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? Object.assign({}, state.user, {\n            relationship_mode: mode\n          }) : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update relationship mode'\n        });\n        return false;\n      }\n    },\n    updateProfileImage: async imageBase64 => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile-image`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            profile_image: imageBase64\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update profile image');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? Object.assign({}, state.user, {\n            profile_image: imageBase64\n          }) : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update profile image'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    }\n  }), {\n    name: 'auth-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage),\n    partialize: state => ({\n      user: state.user,\n      token: state.token,\n      isAuthenticated: state.isAuthenticated\n    })\n  }));\n});","lineCount":347,"map":[[7,2,67,0,"Object"],[7,8,67,0],[7,9,67,0,"defineProperty"],[7,23,67,0],[7,24,67,0,"exports"],[7,31,67,0],[8,4,67,0,"enumerable"],[8,14,67,0],[9,4,67,0,"get"],[9,7,67,0],[9,18,67,0,"get"],[9,19,67,0],[10,6,67,0],[10,13,67,0,"useAuthStore"],[10,25,67,0],[11,4,67,0],[12,2,67,0],[13,2,386,2],[13,6,386,2,"_expoVirtualEnv"],[13,21,386,2],[13,24,386,2,"require"],[13,31,386,2],[13,32,386,2,"_dependencyMap"],[13,46,386,2],[14,2,1,0],[14,6,1,0,"_zustand"],[14,14,1,0],[14,17,1,0,"require"],[14,24,1,0],[14,25,1,0,"_dependencyMap"],[14,39,1,0],[15,2,2,0],[15,6,2,0,"_zustandMiddleware"],[15,24,2,0],[15,27,2,0,"require"],[15,34,2,0],[15,35,2,0,"_dependencyMap"],[15,49,2,0],[16,2,3,0],[17,2,4,0],[17,6,4,4,"AsyncStorage"],[17,18,4,21],[17,21,4,24],[17,25,4,28],[18,2,5,0],[18,6,5,4],[19,4,6,2,"AsyncStorage"],[19,16,6,14],[19,19,6,17,"require"],[19,26,6,24],[19,27,6,24,"_dependencyMap"],[19,41,6,24],[19,89,6,68],[19,90,6,69],[19,91,6,70,"default"],[19,98,6,77],[20,2,7,0],[20,3,7,1],[20,4,7,2],[20,11,7,9,"error"],[20,16,7,14],[20,18,7,16],[21,4,8,2],[22,4,9,2,"console"],[22,11,9,9],[22,12,9,10,"log"],[22,15,9,13],[22,16,9,14],[22,66,9,64],[22,67,9,65],[23,2,10,0],[24,2,12,0],[24,8,12,6,"BACKEND_URL"],[24,19,12,17],[24,22,12,20,"_expoVirtualEnv"],[24,37,12,20],[24,38,12,20,"env"],[24,41,12,20],[24,42,12,20,"EXPO_PUBLIC_BACKEND_URL"],[24,65,12,20],[24,69,12,59],[24,71,12,61],[25,2,67,7],[25,8,67,13,"useAuthStore"],[25,20,67,25],[25,23,67,28],[25,27,67,28,"create"],[25,35,67,34],[25,36,67,34,"create"],[25,42,67,34],[25,44,67,46],[25,45,67,47],[25,46,68,2],[25,50,68,2,"persist"],[25,68,68,9],[25,69,68,9,"persist"],[25,76,68,9],[25,78,69,4],[25,79,69,5,"set"],[25,82,69,8],[25,84,69,10,"get"],[25,87,69,13],[25,93,69,19],[26,4,70,6,"user"],[26,8,70,10],[26,10,70,12],[26,14,70,16],[27,4,71,6,"token"],[27,9,71,11],[27,11,71,13],[27,15,71,17],[28,4,72,6,"isAuthenticated"],[28,19,72,21],[28,21,72,23],[28,26,72,28],[29,4,73,6,"loading"],[29,11,73,13],[29,13,73,15],[29,18,73,20],[30,4,74,6,"error"],[30,9,74,11],[30,11,74,13],[30,15,74,17],[31,4,76,6,"login"],[31,9,76,11],[31,11,76,13],[31,17,76,13,"login"],[31,18,76,20,"email"],[31,23,76,33],[31,25,76,35,"password"],[31,33,76,51],[31,38,76,56],[32,6,77,8,"set"],[32,9,77,11],[32,10,77,12],[33,8,77,14,"loading"],[33,15,77,21],[33,17,77,23],[33,21,77,27],[34,8,77,29,"error"],[34,13,77,34],[34,15,77,36],[35,6,77,41],[35,7,77,42],[35,8,77,43],[36,6,78,8],[36,10,78,12],[37,8,79,10],[37,14,79,16,"response"],[37,22,79,24],[37,25,79,27],[37,31,79,33,"fetch"],[37,36,79,38],[37,37,79,39],[37,40,79,42,"BACKEND_URL"],[37,51,79,53],[37,68,79,70],[37,70,79,72],[38,10,80,12,"method"],[38,16,80,18],[38,18,80,20],[38,24,80,26],[39,10,81,12,"headers"],[39,17,81,19],[39,19,81,21],[40,12,82,14],[40,26,82,28],[40,28,82,30],[41,10,83,12],[41,11,83,13],[42,10,84,12,"body"],[42,14,84,16],[42,16,84,18,"JSON"],[42,20,84,22],[42,21,84,23,"stringify"],[42,30,84,32],[42,31,84,33],[43,12,84,35,"email"],[43,17,84,40],[44,12,84,42,"password"],[45,10,84,51],[45,11,84,52],[46,8,85,10],[46,9,85,11],[46,10,85,12],[47,8,87,10],[47,14,87,16,"data"],[47,18,87,20],[47,21,87,23],[47,27,87,29,"response"],[47,35,87,37],[47,36,87,38,"json"],[47,40,87,42],[47,41,87,43],[47,42,87,44],[48,8,89,10],[48,12,89,14],[48,13,89,15,"response"],[48,21,89,23],[48,22,89,24,"ok"],[48,24,89,26],[48,26,89,28],[49,10,90,12],[49,16,90,18],[49,20,90,22,"Error"],[49,25,90,27],[49,26,90,28,"data"],[49,30,90,32],[49,31,90,33,"detail"],[49,37,90,39],[49,41,90,43],[49,55,90,57],[49,56,90,58],[50,8,91,10],[51,8,93,10,"set"],[51,11,93,13],[51,12,93,14],[52,10,94,12,"token"],[52,15,94,17],[52,17,94,19,"data"],[52,21,94,23],[52,22,94,24,"access_token"],[52,34,94,36],[53,10,95,12,"isAuthenticated"],[53,25,95,27],[53,27,95,29],[53,31,95,33],[54,10,96,12,"loading"],[54,17,96,19],[54,19,96,21],[54,24,96,26],[55,10,97,12,"error"],[55,15,97,17],[55,17,97,19],[56,8,98,10],[56,9,98,11],[56,10,98,12],[58,8,100,10],[59,8,101,10],[59,14,101,16,"get"],[59,17,101,19],[59,18,101,20],[59,19,101,21],[59,20,101,22,"fetchProfile"],[59,32,101,34],[59,33,101,35],[59,34,101,36],[60,8,102,10],[60,15,102,17],[60,19,102,21],[61,6,103,8],[61,7,103,9],[61,8,103,10],[61,15,103,17,"error"],[61,20,103,22],[61,22,103,24],[62,8,104,10,"set"],[62,11,104,13],[62,12,104,14],[63,10,105,12,"loading"],[63,17,105,19],[63,19,105,21],[63,24,105,26],[64,10,106,12,"error"],[64,15,106,17],[64,17,106,19,"error"],[64,22,106,24],[64,34,106,36,"Error"],[64,39,106,41],[64,42,106,44,"error"],[64,47,106,49],[64,48,106,50,"message"],[64,55,106,57],[64,58,106,60],[64,72,106,74],[65,10,107,12,"isAuthenticated"],[65,25,107,27],[65,27,107,29],[65,32,107,34],[66,10,108,12,"token"],[66,15,108,17],[66,17,108,19],[67,8,109,10],[67,9,109,11],[67,10,109,12],[68,8,110,10],[68,15,110,17],[68,20,110,22],[69,6,111,8],[70,4,112,6],[70,5,112,7],[71,4,114,6,"register"],[71,12,114,14],[71,14,114,16],[71,20,114,16,"register"],[71,21,114,23,"email"],[71,26,114,36],[71,28,114,38,"password"],[71,36,114,54],[71,38,114,56,"name"],[71,42,114,68],[71,47,114,73],[72,6,115,8,"set"],[72,9,115,11],[72,10,115,12],[73,8,115,14,"loading"],[73,15,115,21],[73,17,115,23],[73,21,115,27],[74,8,115,29,"error"],[74,13,115,34],[74,15,115,36],[75,6,115,41],[75,7,115,42],[75,8,115,43],[76,6,116,8],[76,10,116,12],[77,8,117,10],[77,14,117,16,"response"],[77,22,117,24],[77,25,117,27],[77,31,117,33,"fetch"],[77,36,117,38],[77,37,117,39],[77,40,117,42,"BACKEND_URL"],[77,51,117,53],[77,71,117,73],[77,73,117,75],[78,10,118,12,"method"],[78,16,118,18],[78,18,118,20],[78,24,118,26],[79,10,119,12,"headers"],[79,17,119,19],[79,19,119,21],[80,12,120,14],[80,26,120,28],[80,28,120,30],[81,10,121,12],[81,11,121,13],[82,10,122,12,"body"],[82,14,122,16],[82,16,122,18,"JSON"],[82,20,122,22],[82,21,122,23,"stringify"],[82,30,122,32],[82,31,122,33],[83,12,122,35,"email"],[83,17,122,40],[84,12,122,42,"password"],[84,20,122,50],[85,12,122,52,"name"],[86,10,122,57],[86,11,122,58],[87,8,123,10],[87,9,123,11],[87,10,123,12],[88,8,125,10],[88,14,125,16,"data"],[88,18,125,20],[88,21,125,23],[88,27,125,29,"response"],[88,35,125,37],[88,36,125,38,"json"],[88,40,125,42],[88,41,125,43],[88,42,125,44],[89,8,127,10],[89,12,127,14],[89,13,127,15,"response"],[89,21,127,23],[89,22,127,24,"ok"],[89,24,127,26],[89,26,127,28],[90,10,128,12],[90,16,128,18],[90,20,128,22,"Error"],[90,25,128,27],[90,26,128,28,"data"],[90,30,128,32],[90,31,128,33,"detail"],[90,37,128,39],[90,41,128,43],[90,62,128,64],[90,63,128,65],[91,8,129,10],[92,8,131,10,"set"],[92,11,131,13],[92,12,131,14],[93,10,132,12,"token"],[93,15,132,17],[93,17,132,19,"data"],[93,21,132,23],[93,22,132,24,"access_token"],[93,34,132,36],[94,10,133,12,"isAuthenticated"],[94,25,133,27],[94,27,133,29],[94,31,133,33],[95,10,134,12,"loading"],[95,17,134,19],[95,19,134,21],[95,24,134,26],[96,10,135,12,"error"],[96,15,135,17],[96,17,135,19],[97,8,136,10],[97,9,136,11],[97,10,136,12],[99,8,138,10],[100,8,139,10],[100,14,139,16,"get"],[100,17,139,19],[100,18,139,20],[100,19,139,21],[100,20,139,22,"fetchProfile"],[100,32,139,34],[100,33,139,35],[100,34,139,36],[101,8,140,10],[101,15,140,17],[101,19,140,21],[102,6,141,8],[102,7,141,9],[102,8,141,10],[102,15,141,17,"error"],[102,20,141,22],[102,22,141,24],[103,8,142,10,"set"],[103,11,142,13],[103,12,142,14],[104,10,143,12,"loading"],[104,17,143,19],[104,19,143,21],[104,24,143,26],[105,10,144,12,"error"],[105,15,144,17],[105,17,144,19,"error"],[105,22,144,24],[105,34,144,36,"Error"],[105,39,144,41],[105,42,144,44,"error"],[105,47,144,49],[105,48,144,50,"message"],[105,55,144,57],[105,58,144,60],[105,79,144,81],[106,10,145,12,"isAuthenticated"],[106,25,145,27],[106,27,145,29],[106,32,145,34],[107,10,146,12,"token"],[107,15,146,17],[107,17,146,19],[108,8,147,10],[108,9,147,11],[108,10,147,12],[109,8,148,10],[109,15,148,17],[109,20,148,22],[110,6,149,8],[111,4,150,6],[111,5,150,7],[112,4,152,6,"loginWithOAuth"],[112,18,152,20],[112,20,152,22],[112,26,152,29,"oauthData"],[112,35,152,43],[112,39,152,48],[113,6,153,8,"set"],[113,9,153,11],[113,10,153,12],[114,8,153,14,"loading"],[114,15,153,21],[114,17,153,23],[114,21,153,27],[115,8,153,29,"error"],[115,13,153,34],[115,15,153,36],[116,6,153,41],[116,7,153,42],[116,8,153,43],[117,6,154,8],[117,10,154,12],[118,8,155,10],[118,14,155,16],[119,10,155,18,"access_token"],[119,22,155,30],[120,10,155,32,"user"],[120,14,155,36],[121,10,155,38,"is_new_user"],[122,8,155,50],[122,9,155,51],[122,12,155,54,"oauthData"],[122,21,155,63],[123,8,157,10],[123,12,157,14],[123,13,157,15,"access_token"],[123,25,157,27],[123,29,157,31],[123,30,157,32,"user"],[123,34,157,36],[123,36,157,38],[124,10,158,12],[124,16,158,18],[124,20,158,22,"Error"],[124,25,158,27],[124,26,158,28],[124,62,158,64],[124,63,158,65],[125,8,159,10],[127,8,161,10],[128,8,162,10],[128,14,162,16,"userData"],[128,22,162,24],[128,25,162,27],[129,10,163,12,"id"],[129,12,163,14],[129,14,163,16,"user"],[129,18,163,20],[129,19,163,21,"id"],[129,21,163,23],[130,10,164,12,"email"],[130,15,164,17],[130,17,164,19,"user"],[130,21,164,23],[130,22,164,24,"email"],[130,27,164,29],[131,10,165,12,"name"],[131,14,165,16],[131,16,165,18,"user"],[131,20,165,22],[131,21,165,23,"name"],[131,25,165,27],[132,10,166,12,"relationship_mode"],[132,27,166,29],[132,29,166,31,"user"],[132,33,166,35],[132,34,166,36,"relationship_mode"],[132,51,166,53],[133,10,167,12,"partner_profile"],[133,25,167,27],[133,27,167,29,"user"],[133,31,167,33],[133,32,167,34,"partner_profile"],[133,47,167,49],[133,51,167,53],[133,52,167,54],[133,53,167,55],[134,10,168,12,"total_points"],[134,22,168,24],[134,24,168,26,"user"],[134,28,168,30],[134,29,168,31,"total_points"],[134,41,168,43],[134,45,168,47],[134,46,168,48],[135,10,169,12,"current_level"],[135,23,169,25],[135,25,169,27,"user"],[135,29,169,31],[135,30,169,32,"current_level"],[135,43,169,45],[135,47,169,49],[135,48,169,50],[136,10,170,12,"current_streak"],[136,24,170,26],[136,26,170,28,"user"],[136,30,170,32],[136,31,170,33,"current_streak"],[136,45,170,47],[136,49,170,51],[136,50,170,52],[137,10,171,12,"longest_streak"],[137,24,171,26],[137,26,171,28,"user"],[137,30,171,32],[137,31,171,33,"longest_streak"],[137,45,171,47],[137,49,171,51],[137,50,171,52],[138,10,172,12,"tasks_completed"],[138,25,172,27],[138,27,172,29,"user"],[138,31,172,33],[138,32,172,34,"tasks_completed"],[138,47,172,49],[138,51,172,53],[138,52,172,54],[139,10,173,12,"badges"],[139,16,173,18],[139,18,173,20,"user"],[139,22,173,24],[139,23,173,25,"badges"],[139,29,173,31],[139,33,173,35],[139,35,173,37],[140,10,174,12,"profile_completed"],[140,27,174,29],[140,29,174,31,"user"],[140,33,174,35],[140,34,174,36,"profile_completed"],[140,51,174,53],[140,55,174,57],[140,60,174,62],[141,10,175,12,"profile_image"],[141,23,175,25],[141,25,175,27,"user"],[141,29,175,31],[141,30,175,32,"profile_image"],[141,43,175,45],[142,10,176,12,"created_at"],[142,20,176,22],[142,22,176,24,"user"],[142,26,176,28],[142,27,176,29,"created_at"],[142,37,176,39],[142,41,176,43],[142,45,176,47,"Date"],[142,49,176,51],[142,50,176,52],[142,51,176,53],[142,52,176,54,"toISOString"],[142,63,176,65],[142,64,176,66],[142,65,176,67],[143,10,177,12,"updated_at"],[143,20,177,22],[143,22,177,24,"user"],[143,26,177,28],[143,27,177,29,"updated_at"],[143,37,177,39],[143,41,177,43],[143,45,177,47,"Date"],[143,49,177,51],[143,50,177,52],[143,51,177,53],[143,52,177,54,"toISOString"],[143,63,177,65],[143,64,177,66],[144,8,178,10],[144,9,178,11],[145,8,180,10,"set"],[145,11,180,13],[145,12,180,14],[146,10,181,12,"user"],[146,14,181,16],[146,16,181,18,"userData"],[146,24,181,26],[147,10,182,12,"token"],[147,15,182,17],[147,17,182,19,"access_token"],[147,29,182,31],[148,10,183,12,"isAuthenticated"],[148,25,183,27],[148,27,183,29],[148,31,183,33],[149,10,184,12,"loading"],[149,17,184,19],[149,19,184,21],[149,24,184,26],[150,10,185,12,"error"],[150,15,185,17],[150,17,185,19],[151,8,186,10],[151,9,186,11],[151,10,186,12],[152,8,188,10],[152,15,188,17],[152,19,188,21],[153,6,189,8],[153,7,189,9],[153,8,189,10],[153,15,189,17,"error"],[153,20,189,22],[153,22,189,24],[154,8,190,10,"set"],[154,11,190,13],[154,12,190,14],[155,10,191,12,"loading"],[155,17,191,19],[155,19,191,21],[155,24,191,26],[156,10,192,12,"error"],[156,15,192,17],[156,17,192,19,"error"],[156,22,192,24],[156,34,192,36,"Error"],[156,39,192,41],[156,42,192,44,"error"],[156,47,192,49],[156,48,192,50,"message"],[156,55,192,57],[156,58,192,60],[156,78,192,80],[157,10,193,12,"isAuthenticated"],[157,25,193,27],[157,27,193,29],[157,32,193,34],[158,10,194,12,"token"],[158,15,194,17],[158,17,194,19],[159,8,195,10],[159,9,195,11],[159,10,195,12],[160,8,196,10],[160,15,196,17],[160,20,196,22],[161,6,197,8],[162,4,198,6],[162,5,198,7],[163,4,200,6,"logout"],[163,10,200,12],[163,12,200,14,"logout"],[163,13,200,14],[163,18,200,20],[164,6,201,8,"set"],[164,9,201,11],[164,10,201,12],[165,8,202,10,"user"],[165,12,202,14],[165,14,202,16],[165,18,202,20],[166,8,203,10,"token"],[166,13,203,15],[166,15,203,17],[166,19,203,21],[167,8,204,10,"isAuthenticated"],[167,23,204,25],[167,25,204,27],[167,30,204,32],[168,8,205,10,"loading"],[168,15,205,17],[168,17,205,19],[168,22,205,24],[169,8,206,10,"error"],[169,13,206,15],[169,15,206,17],[170,6,207,8],[170,7,207,9],[170,8,207,10],[171,4,208,6],[171,5,208,7],[172,4,210,6,"fetchProfile"],[172,16,210,18],[172,18,210,20],[172,24,210,20,"fetchProfile"],[172,25,210,20],[172,30,210,32],[173,6,211,8],[173,12,211,14],[174,8,211,16,"token"],[175,6,211,22],[175,7,211,23],[175,10,211,26,"get"],[175,13,211,29],[175,14,211,30],[175,15,211,31],[176,6,212,8],[176,10,212,12],[176,11,212,13,"token"],[176,16,212,18],[176,18,212,20],[177,6,214,8],[177,10,214,12],[178,8,215,10],[178,14,215,16,"response"],[178,22,215,24],[178,25,215,27],[178,31,215,33,"fetch"],[178,36,215,38],[178,37,215,39],[178,40,215,42,"BACKEND_URL"],[178,51,215,53],[178,70,215,72],[178,72,215,74],[179,10,216,12,"headers"],[179,17,216,19],[179,19,216,21],[180,12,217,14],[180,27,217,29],[180,29,217,31],[180,39,217,41,"token"],[180,44,217,46],[181,10,218,12],[182,8,219,10],[182,9,219,11],[182,10,219,12],[183,8,221,10],[183,12,221,14],[183,13,221,15,"response"],[183,21,221,23],[183,22,221,24,"ok"],[183,24,221,26],[183,26,221,28],[184,10,222,12],[184,16,222,18],[184,20,222,22,"Error"],[184,25,222,27],[184,26,222,28],[184,51,222,53],[184,52,222,54],[185,8,223,10],[186,8,225,10],[186,14,225,16,"user"],[186,18,225,20],[186,21,225,23],[186,27,225,29,"response"],[186,35,225,37],[186,36,225,38,"json"],[186,40,225,42],[186,41,225,43],[186,42,225,44],[187,8,226,10,"set"],[187,11,226,13],[187,12,226,14],[188,10,226,16,"user"],[189,8,226,21],[189,9,226,22],[189,10,226,23],[190,6,227,8],[190,7,227,9],[190,8,227,10],[190,15,227,17,"error"],[190,20,227,22],[190,22,227,24],[191,8,228,10,"console"],[191,15,228,17],[191,16,228,18,"error"],[191,21,228,23],[191,22,228,24],[191,48,228,50],[191,50,228,52,"error"],[191,55,228,57],[191,56,228,58],[192,8,229,10,"set"],[192,11,229,13],[192,12,229,14],[193,10,229,16,"error"],[193,15,229,21],[193,17,229,23],[194,8,229,49],[194,9,229,50],[194,10,229,51],[195,6,230,8],[196,4,231,6],[196,5,231,7],[197,4,233,6,"updateProfile"],[197,17,233,19],[197,19,233,22,"profile"],[197,26,233,44],[197,30,233,49],[198,6,234,8,"set"],[198,9,234,11],[198,10,234,12,"state"],[198,15,234,17],[198,20,234,22],[199,8,235,10,"user"],[199,12,235,14],[199,14,235,16,"state"],[199,19,235,21],[199,20,235,22,"user"],[199,24,235,26],[199,27,235,26,"Object"],[199,33,235,26],[199,34,235,26,"assign"],[199,40,235,26],[199,45,235,34,"state"],[199,50,235,39],[199,51,235,40,"user"],[199,55,235,44],[199,57,235,49,"profile"],[199,64,235,56],[199,68,235,61],[200,6,236,8],[200,7,236,9],[200,8,236,10],[200,9,236,11],[201,4,237,6],[201,5,237,7],[202,4,239,6,"updatePartnerProfile"],[202,24,239,26],[202,26,239,28],[202,32,239,35,"partner"],[202,39,239,58],[202,43,239,63],[203,6,240,8],[203,12,240,14],[204,8,240,16,"token"],[205,6,240,22],[205,7,240,23],[205,10,240,26,"get"],[205,13,240,29],[205,14,240,30],[205,15,240,31],[206,6,241,8],[206,10,241,12],[206,11,241,13,"token"],[206,16,241,18],[206,18,241,20],[206,25,241,27],[206,30,241,32],[207,6,243,8],[207,10,243,12],[208,8,244,10],[208,14,244,16,"response"],[208,22,244,24],[208,25,244,27],[208,31,244,33,"fetch"],[208,36,244,38],[208,37,244,39],[208,40,244,42,"BACKEND_URL"],[208,51,244,53],[208,78,244,80],[208,80,244,82],[209,10,245,12,"method"],[209,16,245,18],[209,18,245,20],[209,23,245,25],[210,10,246,12,"headers"],[210,17,246,19],[210,19,246,21],[211,12,247,14],[211,26,247,28],[211,28,247,30],[211,46,247,48],[212,12,248,14],[212,27,248,29],[212,29,248,31],[212,39,248,41,"token"],[212,44,248,46],[213,10,249,12],[213,11,249,13],[214,10,250,12,"body"],[214,14,250,16],[214,16,250,18,"JSON"],[214,20,250,22],[214,21,250,23,"stringify"],[214,30,250,32],[214,31,250,33,"partner"],[214,38,250,40],[215,8,251,10],[215,9,251,11],[215,10,251,12],[216,8,253,10],[216,12,253,14],[216,13,253,15,"response"],[216,21,253,23],[216,22,253,24,"ok"],[216,24,253,26],[216,26,253,28],[217,10,254,12],[217,16,254,18],[217,20,254,22,"Error"],[217,25,254,27],[217,26,254,28],[217,60,254,62],[217,61,254,63],[218,8,255,10],[220,8,257,10],[221,8,258,10,"set"],[221,11,258,13],[221,12,258,14,"state"],[221,17,258,19],[221,22,258,24],[222,10,259,12,"user"],[222,14,259,16],[222,16,259,18,"state"],[222,21,259,23],[222,22,259,24,"user"],[222,26,259,28],[222,29,259,28,"Object"],[222,35,259,28],[222,36,259,28,"assign"],[222,42,259,28],[222,47,260,17,"state"],[222,52,260,22],[222,53,260,23,"user"],[222,57,260,27],[223,12,261,14,"partner_profile"],[223,27,261,29],[223,29,261,31,"partner"],[223,36,261,38],[224,12,262,14,"profile_completed"],[224,29,262,31],[224,31,262,33],[225,10,262,37],[225,15,263,16],[226,8,264,10],[226,9,264,11],[226,10,264,12],[226,11,264,13],[227,8,266,10],[227,15,266,17],[227,19,266,21],[228,6,267,8],[228,7,267,9],[228,8,267,10],[228,15,267,17,"error"],[228,20,267,22],[228,22,267,24],[229,8,268,10,"set"],[229,11,268,13],[229,12,268,14],[230,10,268,16,"error"],[230,15,268,21],[230,17,268,23],[231,8,268,58],[231,9,268,59],[231,10,268,60],[232,8,269,10],[232,15,269,17],[232,20,269,22],[233,6,270,8],[234,4,271,6],[234,5,271,7],[235,4,273,6,"updateUserProfile"],[235,21,273,23],[235,23,273,25],[235,29,273,32,"profile"],[235,36,273,74],[235,40,273,79],[236,6,274,8],[236,12,274,14],[237,8,274,16,"token"],[238,6,274,22],[238,7,274,23],[238,10,274,26,"get"],[238,13,274,29],[238,14,274,30],[238,15,274,31],[239,6,275,8],[239,10,275,12],[239,11,275,13,"token"],[239,16,275,18],[239,18,275,20],[239,25,275,27],[239,30,275,32],[240,6,277,8],[240,10,277,12],[241,8,278,10],[241,14,278,16,"response"],[241,22,278,24],[241,25,278,27],[241,31,278,33,"fetch"],[241,36,278,38],[241,37,278,39],[241,40,278,42,"BACKEND_URL"],[241,51,278,53],[241,70,278,72],[241,72,278,74],[242,10,279,12,"method"],[242,16,279,18],[242,18,279,20],[242,23,279,25],[243,10,280,12,"headers"],[243,17,280,19],[243,19,280,21],[244,12,281,14],[244,26,281,28],[244,28,281,30],[244,46,281,48],[245,12,282,14],[245,27,282,29],[245,29,282,31],[245,39,282,41,"token"],[245,44,282,46],[246,10,283,12],[246,11,283,13],[247,10,284,12,"body"],[247,14,284,16],[247,16,284,18,"JSON"],[247,20,284,22],[247,21,284,23,"stringify"],[247,30,284,32],[247,31,284,33,"profile"],[247,38,284,40],[248,8,285,10],[248,9,285,11],[248,10,285,12],[249,8,287,10],[249,12,287,14],[249,13,287,15,"response"],[249,21,287,23],[249,22,287,24,"ok"],[249,24,287,26],[249,26,287,28],[250,10,288,12],[250,16,288,18],[250,20,288,22,"Error"],[250,25,288,27],[250,26,288,28],[250,57,288,59],[250,58,288,60],[251,8,289,10],[253,8,291,10],[254,8,292,10,"set"],[254,11,292,13],[254,12,292,14,"state"],[254,17,292,19],[254,22,292,24],[255,10,293,12,"user"],[255,14,293,16],[255,16,293,18,"state"],[255,21,293,23],[255,22,293,24,"user"],[255,26,293,28],[255,29,293,28,"Object"],[255,35,293,28],[255,36,293,28,"assign"],[255,42,293,28],[255,47,294,17,"state"],[255,52,294,22],[255,53,294,23,"user"],[255,57,294,27],[255,59,295,17,"profile"],[255,66,295,24],[255,70,296,16],[256,8,297,10],[256,9,297,11],[256,10,297,12],[256,11,297,13],[257,8,299,10],[257,15,299,17],[257,19,299,21],[258,6,300,8],[258,7,300,9],[258,8,300,10],[258,15,300,17,"error"],[258,20,300,22],[258,22,300,24],[259,8,301,10,"set"],[259,11,301,13],[259,12,301,14],[260,10,301,16,"error"],[260,15,301,21],[260,17,301,23],[261,8,301,55],[261,9,301,56],[261,10,301,57],[262,8,302,10],[262,15,302,17],[262,20,302,22],[263,6,303,8],[264,4,304,6],[264,5,304,7],[265,4,306,6,"updateRelationshipMode"],[265,26,306,28],[265,28,306,30],[265,34,306,37,"mode"],[265,38,306,49],[265,42,306,54],[266,6,307,8],[266,12,307,14],[267,8,307,16,"token"],[268,6,307,22],[268,7,307,23],[268,10,307,26,"get"],[268,13,307,29],[268,14,307,30],[268,15,307,31],[269,6,308,8],[269,10,308,12],[269,11,308,13,"token"],[269,16,308,18],[269,18,308,20],[269,25,308,27],[269,30,308,32],[270,6,310,8],[270,10,310,12],[271,8,311,10],[271,14,311,16,"response"],[271,22,311,24],[271,25,311,27],[271,31,311,33,"fetch"],[271,36,311,38],[271,37,311,39],[271,40,311,42,"BACKEND_URL"],[271,51,311,53],[271,80,311,82],[271,82,311,84],[272,10,312,12,"method"],[272,16,312,18],[272,18,312,20],[272,23,312,25],[273,10,313,12,"headers"],[273,17,313,19],[273,19,313,21],[274,12,314,14],[274,26,314,28],[274,28,314,30],[274,46,314,48],[275,12,315,14],[275,27,315,29],[275,29,315,31],[275,39,315,41,"token"],[275,44,315,46],[276,10,316,12],[276,11,316,13],[277,10,317,12,"body"],[277,14,317,16],[277,16,317,18,"JSON"],[277,20,317,22],[277,21,317,23,"stringify"],[277,30,317,32],[277,31,317,33],[278,12,317,35,"mode"],[279,10,317,40],[279,11,317,41],[280,8,318,10],[280,9,318,11],[280,10,318,12],[281,8,320,10],[281,12,320,14],[281,13,320,15,"response"],[281,21,320,23],[281,22,320,24,"ok"],[281,24,320,26],[281,26,320,28],[282,10,321,12],[282,16,321,18],[282,20,321,22,"Error"],[282,25,321,27],[282,26,321,28],[282,62,321,64],[282,63,321,65],[283,8,322,10],[285,8,324,10],[286,8,325,10,"set"],[286,11,325,13],[286,12,325,14,"state"],[286,17,325,19],[286,22,325,24],[287,10,326,12,"user"],[287,14,326,16],[287,16,326,18,"state"],[287,21,326,23],[287,22,326,24,"user"],[287,26,326,28],[287,29,326,28,"Object"],[287,35,326,28],[287,36,326,28,"assign"],[287,42,326,28],[287,47,327,17,"state"],[287,52,327,22],[287,53,327,23,"user"],[287,57,327,27],[288,12,328,14,"relationship_mode"],[288,29,328,31],[288,31,328,33,"mode"],[289,10,328,37],[289,15,329,16],[290,8,330,10],[290,9,330,11],[290,10,330,12],[290,11,330,13],[291,8,332,10],[291,15,332,17],[291,19,332,21],[292,6,333,8],[292,7,333,9],[292,8,333,10],[292,15,333,17,"error"],[292,20,333,22],[292,22,333,24],[293,8,334,10,"set"],[293,11,334,13],[293,12,334,14],[294,10,334,16,"error"],[294,15,334,21],[294,17,334,23],[295,8,334,60],[295,9,334,61],[295,10,334,62],[296,8,335,10],[296,15,335,17],[296,20,335,22],[297,6,336,8],[298,4,337,6],[298,5,337,7],[299,4,339,6,"updateProfileImage"],[299,22,339,24],[299,24,339,26],[299,30,339,33,"imageBase64"],[299,41,339,52],[299,45,339,57],[300,6,340,8],[300,12,340,14],[301,8,340,16,"token"],[302,6,340,22],[302,7,340,23],[302,10,340,26,"get"],[302,13,340,29],[302,14,340,30],[302,15,340,31],[303,6,341,8],[303,10,341,12],[303,11,341,13,"token"],[303,16,341,18],[303,18,341,20],[303,25,341,27],[303,30,341,32],[304,6,343,8],[304,10,343,12],[305,8,344,10],[305,14,344,16,"response"],[305,22,344,24],[305,25,344,27],[305,31,344,33,"fetch"],[305,36,344,38],[305,37,344,39],[305,40,344,42,"BACKEND_URL"],[305,51,344,53],[305,76,344,78],[305,78,344,80],[306,10,345,12,"method"],[306,16,345,18],[306,18,345,20],[306,23,345,25],[307,10,346,12,"headers"],[307,17,346,19],[307,19,346,21],[308,12,347,14],[308,26,347,28],[308,28,347,30],[308,46,347,48],[309,12,348,14],[309,27,348,29],[309,29,348,31],[309,39,348,41,"token"],[309,44,348,46],[310,10,349,12],[310,11,349,13],[311,10,350,12,"body"],[311,14,350,16],[311,16,350,18,"JSON"],[311,20,350,22],[311,21,350,23,"stringify"],[311,30,350,32],[311,31,350,33],[312,12,350,35,"profile_image"],[312,25,350,48],[312,27,350,50,"imageBase64"],[313,10,350,62],[313,11,350,63],[314,8,351,10],[314,9,351,11],[314,10,351,12],[315,8,353,10],[315,12,353,14],[315,13,353,15,"response"],[315,21,353,23],[315,22,353,24,"ok"],[315,24,353,26],[315,26,353,28],[316,10,354,12],[316,16,354,18],[316,20,354,22,"Error"],[316,25,354,27],[316,26,354,28],[316,58,354,60],[316,59,354,61],[317,8,355,10],[319,8,357,10],[320,8,358,10,"set"],[320,11,358,13],[320,12,358,14,"state"],[320,17,358,19],[320,22,358,24],[321,10,359,12,"user"],[321,14,359,16],[321,16,359,18,"state"],[321,21,359,23],[321,22,359,24,"user"],[321,26,359,28],[321,29,359,28,"Object"],[321,35,359,28],[321,36,359,28,"assign"],[321,42,359,28],[321,47,360,17,"state"],[321,52,360,22],[321,53,360,23,"user"],[321,57,360,27],[322,12,361,14,"profile_image"],[322,25,361,27],[322,27,361,29,"imageBase64"],[323,10,361,40],[323,15,362,16],[324,8,363,10],[324,9,363,11],[324,10,363,12],[324,11,363,13],[325,8,365,10],[325,15,365,17],[325,19,365,21],[326,6,366,8],[326,7,366,9],[326,8,366,10],[326,15,366,17,"error"],[326,20,366,22],[326,22,366,24],[327,8,367,10,"set"],[327,11,367,13],[327,12,367,14],[328,10,367,16,"error"],[328,15,367,21],[328,17,367,23],[329,8,367,56],[329,9,367,57],[329,10,367,58],[330,8,368,10],[330,15,368,17],[330,20,368,22],[331,6,369,8],[332,4,370,6],[332,5,370,7],[333,4,372,6,"clearError"],[333,14,372,16],[333,16,372,18,"clearError"],[333,17,372,18],[333,22,372,24],[334,6,373,8,"set"],[334,9,373,11],[334,10,373,12],[335,8,373,14,"error"],[335,13,373,19],[335,15,373,21],[336,6,373,26],[336,7,373,27],[336,8,373,28],[337,4,374,6],[338,2,375,4],[338,3,375,5],[338,4,375,6],[338,6,376,4],[339,4,377,6,"name"],[339,8,377,10],[339,10,377,12],[339,22,377,24],[340,4,378,6,"storage"],[340,11,378,13],[340,13,378,15],[340,17,378,15,"createJSONStorage"],[340,35,378,32],[340,36,378,32,"createJSONStorage"],[340,53,378,32],[340,55,378,33],[340,61,378,39,"AsyncStorage"],[340,73,378,51],[340,74,378,52],[341,4,379,6,"partialize"],[341,14,379,16],[341,16,379,19,"state"],[341,21,379,24],[341,26,379,30],[342,6,380,8,"user"],[342,10,380,12],[342,12,380,14,"state"],[342,17,380,19],[342,18,380,20,"user"],[342,22,380,24],[343,6,381,8,"token"],[343,11,381,13],[343,13,381,15,"state"],[343,18,381,20],[343,19,381,21,"token"],[343,24,381,26],[344,6,382,8,"isAuthenticated"],[344,21,382,23],[344,23,382,25,"state"],[344,28,382,30],[344,29,382,31,"isAuthenticated"],[345,4,383,6],[345,5,383,7],[346,2,384,4],[346,3,385,2],[346,4,386,0],[346,5,386,1],[347,0,386,2],[347,3]],"functionMap":{"names":["<global>","persist$argument_0","login","register","loginWithOAuth","logout","fetchProfile","updateProfile","set$argument_0","updatePartnerProfile","updateUserProfile","updateRelationshipMode","updateProfileImage","clearError","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;ICoE;aCO;ODoC;gBEE;OFoC;sBGE;OH8C;cIE;OJQ;oBKE;OLqB;qBME;YCC;UDE;ONC;4BQE;cDmB;YCM;ORO;yBSE;cFmB;YEK;OTO;8BUE;cHmB;YGK;OVO;0BWE;cJmB;YIK;OXO;kBYE;OZE;MDC;iCcG,kBd;kBeC;QfI"},"hasCjsExports":false},"type":"js/module"}]}