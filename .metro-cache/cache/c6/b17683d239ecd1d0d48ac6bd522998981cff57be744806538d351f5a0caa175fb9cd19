{"dependencies":[{"name":"@radix-ui/react-dialog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":376},"end":{"line":11,"column":58,"index":434}}],"key":"uXyNp9DwWLrEZrCOsG2B7mCGMrQ=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":435},"end":{"line":12,"column":31,"index":466}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Content\", {\n    enumerable: true,\n    get: function () {\n      return Content;\n    }\n  });\n  Object.defineProperty(exports, \"Drawer\", {\n    enumerable: true,\n    get: function () {\n      return Drawer;\n    }\n  });\n  Object.defineProperty(exports, \"Handle\", {\n    enumerable: true,\n    get: function () {\n      return Handle;\n    }\n  });\n  Object.defineProperty(exports, \"NestedRoot\", {\n    enumerable: true,\n    get: function () {\n      return NestedRoot;\n    }\n  });\n  Object.defineProperty(exports, \"Overlay\", {\n    enumerable: true,\n    get: function () {\n      return Overlay;\n    }\n  });\n  Object.defineProperty(exports, \"Portal\", {\n    enumerable: true,\n    get: function () {\n      return Portal;\n    }\n  });\n  Object.defineProperty(exports, \"Root\", {\n    enumerable: true,\n    get: function () {\n      return Root;\n    }\n  });\n  var _radixUiReactDialog = require(_dependencyMap[0], \"@radix-ui/react-dialog\");\n  var DialogPrimitive = _interopNamespace(_radixUiReactDialog);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var React__default = _interopDefault(_react);\n  function __insertCSS(code) {\n    if (!code || typeof document == 'undefined') return;\n    let head = document.head || document.getElementsByTagName('head')[0];\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    head.appendChild(style);\n    style.styleSheet ? style.styleSheet.cssText = code : style.appendChild(document.createTextNode(code));\n  }\n  const DrawerContext = /*#__PURE__*/React__default.default.createContext({\n    drawerRef: {\n      current: null\n    },\n    overlayRef: {\n      current: null\n    },\n    onPress: () => {},\n    onRelease: () => {},\n    onDrag: () => {},\n    onNestedDrag: () => {},\n    onNestedOpenChange: () => {},\n    onNestedRelease: () => {},\n    openProp: undefined,\n    dismissible: false,\n    isOpen: false,\n    isDragging: false,\n    keyboardIsOpen: {\n      current: false\n    },\n    snapPointsOffset: null,\n    snapPoints: null,\n    handleOnly: false,\n    modal: false,\n    shouldFade: false,\n    activeSnapPoint: null,\n    onOpenChange: () => {},\n    setActiveSnapPoint: () => {},\n    closeDrawer: () => {},\n    direction: 'bottom',\n    shouldAnimate: {\n      current: true\n    },\n    shouldScaleBackground: false,\n    setBackgroundColorOnScale: true,\n    noBodyStyles: false,\n    container: null,\n    autoFocus: false\n  });\n  const useDrawerContext = () => {\n    const context = React__default.default.useContext(DrawerContext);\n    if (!context) {\n      throw new Error('useDrawerContext must be used within a Drawer.Root');\n    }\n    return context;\n  };\n  __insertCSS(\"[data-vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32, .72, 0, 1);animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=open]{animation-name:slideFromBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=closed]{animation-name:slideToBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=open]{animation-name:slideFromTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=closed]{animation-name:slideToTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=open]{animation-name:slideFromLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=closed]{animation-name:slideToLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=open]{animation-name:slideFromRight}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=closed]{animation-name:slideToRight}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--initial-transform,100%),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--initial-transform,100%),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-overlay][data-vaul-snap-points=false]{animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=false][data-state=open]{animation-name:fadeIn}[data-vaul-overlay][data-state=closed]{animation-name:fadeOut}[data-vaul-animate=false]{animation:none!important}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:0;transition:opacity .5s cubic-bezier(.32, .72, 0, 1)}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:1}[data-vaul-drawer]:not([data-vaul-custom-container=true])::after{content:'';position:absolute;background:inherit;background-color:inherit}[data-vaul-drawer][data-vaul-drawer-direction=top]::after{top:initial;bottom:100%;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=bottom]::after{top:100%;bottom:initial;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=left]::after{left:initial;right:100%;top:0;bottom:0;width:200%}[data-vaul-drawer][data-vaul-drawer-direction=right]::after{left:100%;right:initial;top:0;bottom:0;width:200%}[data-vaul-overlay][data-vaul-snap-points=true]:not([data-vaul-snap-points-overlay=true]):not(\\n[data-state=closed]\\n){opacity:0}[data-vaul-overlay][data-vaul-snap-points-overlay=true]{opacity:1}[data-vaul-handle]{display:block;position:relative;opacity:.7;background:#e2e2e4;margin-left:auto;margin-right:auto;height:5px;width:32px;border-radius:1rem;touch-action:pan-y}[data-vaul-handle]:active,[data-vaul-handle]:hover{opacity:1}[data-vaul-handle-hitarea]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:max(100%,2.75rem);height:max(100%,2.75rem);touch-action:inherit}@media (hover:hover) and (pointer:fine){[data-vaul-drawer]{user-select:none}}@media (pointer:fine){[data-vaul-handle-hitarea]:{width:100%;height:100%}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeOut{to{opacity:0}}@keyframes slideFromBottom{from{transform:translate3d(0,var(--initial-transform,100%),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToBottom{to{transform:translate3d(0,var(--initial-transform,100%),0)}}@keyframes slideFromTop{from{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToTop{to{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}}@keyframes slideFromLeft{from{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToLeft{to{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}}@keyframes slideFromRight{from{transform:translate3d(var(--initial-transform,100%),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToRight{to{transform:translate3d(var(--initial-transform,100%),0,0)}}\");\n  function isMobileFirefox() {\n    const userAgent = navigator.userAgent;\n    return typeof window !== 'undefined' && (/Firefox/.test(userAgent) && /Mobile/.test(userAgent) ||\n    // Android Firefox\n    /FxiOS/.test(userAgent) // iOS Firefox\n    );\n  }\n  function isMac() {\n    return testPlatform(/^Mac/);\n  }\n  function isIPhone() {\n    return testPlatform(/^iPhone/);\n  }\n  function isSafari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  function isIPad() {\n    return testPlatform(/^iPad/) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    isMac() && navigator.maxTouchPoints > 1;\n  }\n  function isIOS() {\n    return isIPhone() || isIPad();\n  }\n  function testPlatform(re) {\n    return typeof window !== 'undefined' && window.navigator != null ? re.test(window.navigator.platform) : undefined;\n  }\n\n  // This code comes from https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/overlays/src/usePreventScroll.ts\n  const KEYBOARD_BUFFER = 24;\n  const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;\n  function chain$1(...callbacks) {\n    return (...args) => {\n      for (let callback of callbacks) {\n        if (typeof callback === 'function') {\n          callback(...args);\n        }\n      }\n    };\n  }\n  // @ts-ignore\n  const visualViewport = typeof document !== 'undefined' && window.visualViewport;\n  function isScrollable(node) {\n    let style = window.getComputedStyle(node);\n    return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n  }\n  function getScrollParent(node) {\n    if (isScrollable(node)) {\n      node = node.parentElement;\n    }\n    while (node && !isScrollable(node)) {\n      node = node.parentElement;\n    }\n    return node || document.scrollingElement || document.documentElement;\n  }\n  // HTML input types that do not cause the software keyboard to appear.\n  const nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\n  // The number of active usePreventScroll calls. Used to determine whether to revert back to the original page style/scroll position\n  let preventScrollCount = 0;\n  let restore;\n  /**\n   * Prevents scrolling on the document body on mount, and\n   * restores it on unmount. Also ensures that content does not\n   * shift due to the scrollbars disappearing.\n   */\n  function usePreventScroll(options = {}) {\n    let {\n      isDisabled\n    } = options;\n    useIsomorphicLayoutEffect(() => {\n      if (isDisabled) {\n        return;\n      }\n      preventScrollCount++;\n      if (preventScrollCount === 1) {\n        if (isIOS()) {\n          restore = preventScrollMobileSafari();\n        }\n      }\n      return () => {\n        preventScrollCount--;\n        if (preventScrollCount === 0) {\n          restore == null ? void 0 : restore();\n        }\n      };\n    }, [isDisabled]);\n  }\n  // Mobile Safari is a whole different beast. Even with overflow: hidden,\n  // it still scrolls the page in many situations:\n  //\n  // 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n  // 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n  //    it, so it becomes scrollable.\n  // 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n  //    This may cause even fixed position elements to scroll off the screen.\n  // 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n  //    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n  //\n  // In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n  //\n  // 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n  //    on the window.\n  // 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n  //    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n  // 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n  // 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n  //    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n  //    into view ourselves, without scrolling the whole page.\n  // 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n  //    same visually, but makes the actual scroll position always zero. This is required to make all of the\n  //    above work or Safari will still try to scroll the page when focusing an input.\n  // 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n  //    to navigate to an input with the next/previous buttons that's outside a modal.\n  function preventScrollMobileSafari() {\n    let scrollable;\n    let lastY = 0;\n    let onTouchStart = e => {\n      // Store the nearest scrollable parent element from the element that the user touched.\n      scrollable = getScrollParent(e.target);\n      if (scrollable === document.documentElement && scrollable === document.body) {\n        return;\n      }\n      lastY = e.changedTouches[0].pageY;\n    };\n    let onTouchMove = e => {\n      // Prevent scrolling the window.\n      if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {\n        e.preventDefault();\n        return;\n      }\n      // Prevent scrolling up when at the top and scrolling down when at the bottom\n      // of a nested scrollable area, otherwise mobile Safari will start scrolling\n      // the window instead. Unfortunately, this disables bounce scrolling when at\n      // the top but it's the best we can do.\n      let y = e.changedTouches[0].pageY;\n      let scrollTop = scrollable.scrollTop;\n      let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n      if (bottom === 0) {\n        return;\n      }\n      if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) {\n        e.preventDefault();\n      }\n      lastY = y;\n    };\n    let onTouchEnd = e => {\n      let target = e.target;\n      // Apply this change if we're not already focused on the target element\n      if (isInput(target) && target !== document.activeElement) {\n        e.preventDefault();\n        // Apply a transform to trick Safari into thinking the input is at the top of the page\n        // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n        // be done before the \"focus\" event, so we have to focus the element ourselves.\n        target.style.transform = 'translateY(-2000px)';\n        target.focus();\n        requestAnimationFrame(() => {\n          target.style.transform = '';\n        });\n      }\n    };\n    let onFocus = e => {\n      let target = e.target;\n      if (isInput(target)) {\n        // Transform also needs to be applied in the focus event in cases where focus moves\n        // other than tapping on an input directly, e.g. the next/previous buttons in the\n        // software keyboard. In these cases, it seems applying the transform in the focus event\n        // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n        target.style.transform = 'translateY(-2000px)';\n        requestAnimationFrame(() => {\n          target.style.transform = '';\n          // This will have prevented the browser from scrolling the focused element into view,\n          // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n          if (visualViewport) {\n            if (visualViewport.height < window.innerHeight) {\n              // If the keyboard is already visible, do this after one additional frame\n              // to wait for the transform to be removed.\n              requestAnimationFrame(() => {\n                scrollIntoView(target);\n              });\n            } else {\n              // Otherwise, wait for the visual viewport to resize before scrolling so we can\n              // measure the correct position to scroll to.\n              visualViewport.addEventListener('resize', () => scrollIntoView(target), {\n                once: true\n              });\n            }\n          }\n        });\n      }\n    };\n    let onWindowScroll = () => {\n      // Last resort. If the window scrolled, scroll it back to the top.\n      // It should always be at the top because the body will have a negative margin (see below).\n      window.scrollTo(0, 0);\n    };\n    // Record the original scroll position so we can restore it.\n    // Then apply a negative margin to the body to offset it by the scroll position. This will\n    // enable us to scroll the window to the top, which is required for the rest of this to work.\n    let scrollX = window.pageXOffset;\n    let scrollY = window.pageYOffset;\n    let restoreStyles = chain$1(setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`));\n    // Scroll to the top. The negative margin on the body will make this appear the same.\n    window.scrollTo(0, 0);\n    let removeEvents = chain$1(addEvent(document, 'touchstart', onTouchStart, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'touchmove', onTouchMove, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'touchend', onTouchEnd, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'focus', onFocus, true), addEvent(window, 'scroll', onWindowScroll));\n    return () => {\n      // Restore styles and scroll the page back to where it was.\n      restoreStyles();\n      removeEvents();\n      window.scrollTo(scrollX, scrollY);\n    };\n  }\n  // Sets a CSS property on an element, and returns a function to revert it to the previous value.\n  function setStyle(element, style, value) {\n    // https://github.com/microsoft/TypeScript/issues/17827#issuecomment-391663310\n    // @ts-ignore\n    let cur = element.style[style];\n    // @ts-ignore\n    element.style[style] = value;\n    return () => {\n      // @ts-ignore\n      element.style[style] = cur;\n    };\n  }\n  // Adds an event listener to an element, and returns a function to remove it.\n  function addEvent(target, event, handler, options) {\n    // @ts-ignore\n    target.addEventListener(event, handler, options);\n    return () => {\n      // @ts-ignore\n      target.removeEventListener(event, handler, options);\n    };\n  }\n  function scrollIntoView(target) {\n    let root = document.scrollingElement || document.documentElement;\n    while (target && target !== root) {\n      // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n      let scrollable = getScrollParent(target);\n      if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n        let scrollableTop = scrollable.getBoundingClientRect().top;\n        let targetTop = target.getBoundingClientRect().top;\n        let targetBottom = target.getBoundingClientRect().bottom;\n        // Buffer is needed for some edge cases\n        const keyboardHeight = scrollable.getBoundingClientRect().bottom + KEYBOARD_BUFFER;\n        if (targetBottom > keyboardHeight) {\n          scrollable.scrollTop += targetTop - scrollableTop;\n        }\n      }\n      // @ts-ignore\n      target = scrollable.parentElement;\n    }\n  }\n  function isInput(target) {\n    return target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n  }\n\n  // This code comes from https://github.com/radix-ui/primitives/tree/main/packages/react/compose-refs\n  /**\n   * Set a given ref to a given value\n   * This utility takes care of different types of refs: callback refs and RefObject(s)\n   */\n  function setRef(ref, value) {\n    if (typeof ref === 'function') {\n      ref(value);\n    } else if (ref !== null && ref !== undefined) {\n      ref.current = value;\n    }\n  }\n  /**\n   * A utility to compose multiple refs together\n   * Accepts callback refs and RefObject(s)\n   */\n  function composeRefs(...refs) {\n    return node => refs.forEach(ref => setRef(ref, node));\n  }\n  /**\n   * A custom hook that composes multiple refs\n   * Accepts callback refs and RefObject(s)\n   */\n  function useComposedRefs(...refs) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React.useCallback(composeRefs(...refs), refs);\n  }\n  const cache = new WeakMap();\n  function set(el, styles, ignoreCache = false) {\n    if (!el || !(el instanceof HTMLElement)) return;\n    let originalStyles = {};\n    Object.entries(styles).forEach(([key, value]) => {\n      if (key.startsWith('--')) {\n        el.style.setProperty(key, value);\n        return;\n      }\n      originalStyles[key] = el.style[key];\n      el.style[key] = value;\n    });\n    if (ignoreCache) return;\n    cache.set(el, originalStyles);\n  }\n  function reset(el, prop) {\n    if (!el || !(el instanceof HTMLElement)) return;\n    let originalStyles = cache.get(el);\n    if (!originalStyles) {\n      return;\n    }\n    {\n      el.style[prop] = originalStyles[prop];\n    }\n  }\n  const isVertical = direction => {\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return true;\n      case 'left':\n      case 'right':\n        return false;\n      default:\n        return direction;\n    }\n  };\n  function getTranslate(element, direction) {\n    if (!element) {\n      return null;\n    }\n    const style = window.getComputedStyle(element);\n    const transform =\n    // @ts-ignore\n    style.transform || style.webkitTransform || style.mozTransform;\n    let mat = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (mat) {\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\n      return parseFloat(mat[1].split(', ')[isVertical(direction) ? 13 : 12]);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n    mat = transform.match(/^matrix\\((.+)\\)$/);\n    return mat ? parseFloat(mat[1].split(', ')[isVertical(direction) ? 5 : 4]) : null;\n  }\n  function dampenValue(v) {\n    return 8 * (Math.log(v + 1) - 2);\n  }\n  function assignStyle(element, style) {\n    if (!element) return () => {};\n    const prevStyle = element.style.cssText;\n    Object.assign(element.style, style);\n    return () => {\n      element.style.cssText = prevStyle;\n    };\n  }\n  /**\n   * Receives functions as arguments and returns a new function that calls all.\n   */\n  function chain(...fns) {\n    return (...args) => {\n      for (const fn of fns) {\n        if (typeof fn === 'function') {\n          // @ts-ignore\n          fn(...args);\n        }\n      }\n    };\n  }\n  const TRANSITIONS = {\n    DURATION: 0.5,\n    EASE: [0.32, 0.72, 0, 1]\n  };\n  const VELOCITY_THRESHOLD = 0.4;\n  const CLOSE_THRESHOLD = 0.25;\n  const SCROLL_LOCK_TIMEOUT = 100;\n  const BORDER_RADIUS = 8;\n  const NESTED_DISPLACEMENT = 16;\n  const WINDOW_TOP_OFFSET = 26;\n  const DRAG_CLASS = 'vaul-dragging';\n\n  // This code comes from https://github.com/radix-ui/primitives/blob/main/packages/react/use-controllable-state/src/useControllableState.tsx\n  function useCallbackRef(callback) {\n    const callbackRef = React__default.default.useRef(callback);\n    React__default.default.useEffect(() => {\n      callbackRef.current = callback;\n    });\n    // https://github.com/facebook/react/issues/19240\n    return React__default.default.useMemo(() => (...args) => callbackRef.current == null ? void 0 : callbackRef.current.call(callbackRef, ...args), []);\n  }\n  function useUncontrolledState({\n    defaultProp,\n    onChange\n  }) {\n    const uncontrolledState = React__default.default.useState(defaultProp);\n    const [value] = uncontrolledState;\n    const prevValueRef = React__default.default.useRef(value);\n    const handleChange = useCallbackRef(onChange);\n    React__default.default.useEffect(() => {\n      if (prevValueRef.current !== value) {\n        handleChange(value);\n        prevValueRef.current = value;\n      }\n    }, [value, prevValueRef, handleChange]);\n    return uncontrolledState;\n  }\n  function useControllableState({\n    prop,\n    defaultProp,\n    onChange = () => {}\n  }) {\n    const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({\n      defaultProp,\n      onChange\n    });\n    const isControlled = prop !== undefined;\n    const value = isControlled ? prop : uncontrolledProp;\n    const handleChange = useCallbackRef(onChange);\n    const setValue = React__default.default.useCallback(nextValue => {\n      if (isControlled) {\n        const setter = nextValue;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    }, [isControlled, prop, setUncontrolledProp, handleChange]);\n    return [value, setValue];\n  }\n  function useSnapPoints({\n    activeSnapPointProp,\n    setActiveSnapPointProp,\n    snapPoints,\n    drawerRef,\n    overlayRef,\n    fadeFromIndex,\n    onSnapPointChange,\n    direction = 'bottom',\n    container,\n    snapToSequentialPoint\n  }) {\n    const [activeSnapPoint, setActiveSnapPoint] = useControllableState({\n      prop: activeSnapPointProp,\n      defaultProp: snapPoints == null ? void 0 : snapPoints[0],\n      onChange: setActiveSnapPointProp\n    });\n    const [windowDimensions, setWindowDimensions] = React__default.default.useState(typeof window !== 'undefined' ? {\n      innerWidth: window.innerWidth,\n      innerHeight: window.innerHeight\n    } : undefined);\n    React__default.default.useEffect(() => {\n      function onResize() {\n        setWindowDimensions({\n          innerWidth: window.innerWidth,\n          innerHeight: window.innerHeight\n        });\n      }\n      window.addEventListener('resize', onResize);\n      return () => window.removeEventListener('resize', onResize);\n    }, []);\n    const isLastSnapPoint = React__default.default.useMemo(() => activeSnapPoint === (snapPoints == null ? void 0 : snapPoints[snapPoints.length - 1]) || null, [snapPoints, activeSnapPoint]);\n    const activeSnapPointIndex = React__default.default.useMemo(() => {\n      var _snapPoints_findIndex;\n      return (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex(snapPoint => snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : null;\n    }, [snapPoints, activeSnapPoint]);\n    const shouldFade = snapPoints && snapPoints.length > 0 && (fadeFromIndex || fadeFromIndex === 0) && !Number.isNaN(fadeFromIndex) && snapPoints[fadeFromIndex] === activeSnapPoint || !snapPoints;\n    const snapPointsOffset = React__default.default.useMemo(() => {\n      const containerSize = container ? {\n        width: container.getBoundingClientRect().width,\n        height: container.getBoundingClientRect().height\n      } : typeof window !== 'undefined' ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      } : {\n        width: 0,\n        height: 0\n      };\n      var _snapPoints_map;\n      return (_snapPoints_map = snapPoints == null ? void 0 : snapPoints.map(snapPoint => {\n        const isPx = typeof snapPoint === 'string';\n        let snapPointAsNumber = 0;\n        if (isPx) {\n          snapPointAsNumber = parseInt(snapPoint, 10);\n        }\n        if (isVertical(direction)) {\n          const height = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.height : 0;\n          if (windowDimensions) {\n            return direction === 'bottom' ? containerSize.height - height : -containerSize.height + height;\n          }\n          return height;\n        }\n        const width = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.width : 0;\n        if (windowDimensions) {\n          return direction === 'right' ? containerSize.width - width : -containerSize.width + width;\n        }\n        return width;\n      })) != null ? _snapPoints_map : [];\n    }, [snapPoints, windowDimensions, container]);\n    const activeSnapPointOffset = React__default.default.useMemo(() => activeSnapPointIndex !== null ? snapPointsOffset == null ? void 0 : snapPointsOffset[activeSnapPointIndex] : null, [snapPointsOffset, activeSnapPointIndex]);\n    const snapToPoint = React__default.default.useCallback(dimension => {\n      var _snapPointsOffset_findIndex;\n      const newSnapPointIndex = (_snapPointsOffset_findIndex = snapPointsOffset == null ? void 0 : snapPointsOffset.findIndex(snapPointDim => snapPointDim === dimension)) != null ? _snapPointsOffset_findIndex : null;\n      onSnapPointChange(newSnapPointIndex);\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction) ? `translate3d(0, ${dimension}px, 0)` : `translate3d(${dimension}px, 0, 0)`\n      });\n      if (snapPointsOffset && newSnapPointIndex !== snapPointsOffset.length - 1 && fadeFromIndex !== undefined && newSnapPointIndex !== fadeFromIndex && newSnapPointIndex < fadeFromIndex) {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '0'\n        });\n      } else {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '1'\n        });\n      }\n      setActiveSnapPoint(snapPoints == null ? void 0 : snapPoints[Math.max(newSnapPointIndex, 0)]);\n    }, [drawerRef.current, snapPoints, snapPointsOffset, fadeFromIndex, overlayRef, setActiveSnapPoint]);\n    React__default.default.useEffect(() => {\n      if (activeSnapPoint || activeSnapPointProp) {\n        var _snapPoints_findIndex;\n        const newIndex = (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex(snapPoint => snapPoint === activeSnapPointProp || snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : -1;\n        if (snapPointsOffset && newIndex !== -1 && typeof snapPointsOffset[newIndex] === 'number') {\n          snapToPoint(snapPointsOffset[newIndex]);\n        }\n      }\n    }, [activeSnapPoint, activeSnapPointProp, snapPoints, snapPointsOffset, snapToPoint]);\n    function onRelease({\n      draggedDistance,\n      closeDrawer,\n      velocity,\n      dismissible\n    }) {\n      if (fadeFromIndex === undefined) return;\n      const currentPosition = direction === 'bottom' || direction === 'right' ? (activeSnapPointOffset != null ? activeSnapPointOffset : 0) - draggedDistance : (activeSnapPointOffset != null ? activeSnapPointOffset : 0) + draggedDistance;\n      const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n      const isFirst = activeSnapPointIndex === 0;\n      const hasDraggedUp = draggedDistance > 0;\n      if (isOverlaySnapPoint) {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        });\n      }\n      if (!snapToSequentialPoint && velocity > 2 && !hasDraggedUp) {\n        if (dismissible) closeDrawer();else snapToPoint(snapPointsOffset[0]); // snap to initial point\n        return;\n      }\n      if (!snapToSequentialPoint && velocity > 2 && hasDraggedUp && snapPointsOffset && snapPoints) {\n        snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n        return;\n      }\n      // Find the closest snap point to the current position\n      const closestSnapPoint = snapPointsOffset == null ? void 0 : snapPointsOffset.reduce((prev, curr) => {\n        if (typeof prev !== 'number' || typeof curr !== 'number') return prev;\n        return Math.abs(curr - currentPosition) < Math.abs(prev - currentPosition) ? curr : prev;\n      });\n      const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n      if (velocity > VELOCITY_THRESHOLD && Math.abs(draggedDistance) < dim * 0.4) {\n        const dragDirection = hasDraggedUp ? 1 : -1; // 1 = up, -1 = down\n        // Don't do anything if we swipe upwards while being on the last snap point\n        if (dragDirection > 0 && isLastSnapPoint && snapPoints) {\n          snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n          return;\n        }\n        if (isFirst && dragDirection < 0 && dismissible) {\n          closeDrawer();\n        }\n        if (activeSnapPointIndex === null) return;\n        snapToPoint(snapPointsOffset[activeSnapPointIndex + dragDirection]);\n        return;\n      }\n      snapToPoint(closestSnapPoint);\n    }\n    function onDrag({\n      draggedDistance\n    }) {\n      if (activeSnapPointOffset === null) return;\n      const newValue = direction === 'bottom' || direction === 'right' ? activeSnapPointOffset - draggedDistance : activeSnapPointOffset + draggedDistance;\n      // Don't do anything if we exceed the last(biggest) snap point\n      if ((direction === 'bottom' || direction === 'right') && newValue < snapPointsOffset[snapPointsOffset.length - 1]) {\n        return;\n      }\n      if ((direction === 'top' || direction === 'left') && newValue > snapPointsOffset[snapPointsOffset.length - 1]) {\n        return;\n      }\n      set(drawerRef.current, {\n        transform: isVertical(direction) ? `translate3d(0, ${newValue}px, 0)` : `translate3d(${newValue}px, 0, 0)`\n      });\n    }\n    function getPercentageDragged(absDraggedDistance, isDraggingDown) {\n      if (!snapPoints || typeof activeSnapPointIndex !== 'number' || !snapPointsOffset || fadeFromIndex === undefined) return null;\n      // If this is true we are dragging to a snap point that is supposed to have an overlay\n      const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n      const isOverlaySnapPointOrHigher = activeSnapPointIndex >= fadeFromIndex;\n      if (isOverlaySnapPointOrHigher && isDraggingDown) {\n        return 0;\n      }\n      // Don't animate, but still use this one if we are dragging away from the overlaySnapPoint\n      if (isOverlaySnapPoint && !isDraggingDown) return 1;\n      if (!shouldFade && !isOverlaySnapPoint) return null;\n      // Either fadeFrom index or the one before\n      const targetSnapPointIndex = isOverlaySnapPoint ? activeSnapPointIndex + 1 : activeSnapPointIndex - 1;\n      // Get the distance from overlaySnapPoint to the one before or vice-versa to calculate the opacity percentage accordingly\n      const snapPointDistance = isOverlaySnapPoint ? snapPointsOffset[targetSnapPointIndex] - snapPointsOffset[targetSnapPointIndex - 1] : snapPointsOffset[targetSnapPointIndex + 1] - snapPointsOffset[targetSnapPointIndex];\n      const percentageDragged = absDraggedDistance / Math.abs(snapPointDistance);\n      if (isOverlaySnapPoint) {\n        return 1 - percentageDragged;\n      } else {\n        return percentageDragged;\n      }\n    }\n    return {\n      isLastSnapPoint,\n      activeSnapPoint,\n      shouldFade,\n      getPercentageDragged,\n      setActiveSnapPoint,\n      activeSnapPointIndex,\n      onRelease,\n      onDrag,\n      snapPointsOffset\n    };\n  }\n  const noop = () => () => {};\n  function useScaleBackground() {\n    const {\n      direction,\n      isOpen,\n      shouldScaleBackground,\n      setBackgroundColorOnScale,\n      noBodyStyles\n    } = useDrawerContext();\n    const timeoutIdRef = React__default.default.useRef(null);\n    const initialBackgroundColor = (0, _react.useMemo)(() => document.body.style.backgroundColor, []);\n    function getScale() {\n      return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n    }\n    React__default.default.useEffect(() => {\n      if (isOpen && shouldScaleBackground) {\n        if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n        const wrapper = document.querySelector('[data-vaul-drawer-wrapper]') || document.querySelector('[vaul-drawer-wrapper]');\n        if (!wrapper) return;\n        chain(setBackgroundColorOnScale && !noBodyStyles ? assignStyle(document.body, {\n          background: 'black'\n        }) : noop, assignStyle(wrapper, {\n          transformOrigin: isVertical(direction) ? 'top' : 'left',\n          transitionProperty: 'transform, border-radius',\n          transitionDuration: `${TRANSITIONS.DURATION}s`,\n          transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        }));\n        const wrapperStylesCleanup = assignStyle(wrapper, {\n          borderRadius: `${BORDER_RADIUS}px`,\n          overflow: 'hidden',\n          ...(isVertical(direction) ? {\n            transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`\n          } : {\n            transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`\n          })\n        });\n        return () => {\n          wrapperStylesCleanup();\n          timeoutIdRef.current = window.setTimeout(() => {\n            if (initialBackgroundColor) {\n              document.body.style.background = initialBackgroundColor;\n            } else {\n              document.body.style.removeProperty('background');\n            }\n          }, TRANSITIONS.DURATION * 1000);\n        };\n      }\n    }, [isOpen, shouldScaleBackground, initialBackgroundColor]);\n  }\n  let previousBodyPosition = null;\n  /**\n   * This hook is necessary to prevent buggy behavior on iOS devices (need to test on Android).\n   * I won't get into too much detail about what bugs it solves, but so far I've found that setting the body to `position: fixed` is the most reliable way to prevent those bugs.\n   * Issues that this hook solves:\n   * https://github.com/emilkowalski/vaul/issues/435\n   * https://github.com/emilkowalski/vaul/issues/433\n   * And more that I discovered, but were just not reported.\n   */\n  function usePositionFixed({\n    isOpen,\n    modal,\n    nested,\n    hasBeenOpened,\n    preventScrollRestoration,\n    noBodyStyles\n  }) {\n    const [activeUrl, setActiveUrl] = React__default.default.useState(() => typeof window !== 'undefined' ? window.location.href : '');\n    const scrollPos = React__default.default.useRef(0);\n    const setPositionFixed = React__default.default.useCallback(() => {\n      // All browsers on iOS will return true here.\n      if (!isSafari()) return;\n      // If previousBodyPosition is already set, don't set it again.\n      if (previousBodyPosition === null && isOpen && !noBodyStyles) {\n        previousBodyPosition = {\n          position: document.body.style.position,\n          top: document.body.style.top,\n          left: document.body.style.left,\n          height: document.body.style.height,\n          right: 'unset'\n        };\n        // Update the dom inside an animation frame\n        const {\n          scrollX,\n          innerHeight\n        } = window;\n        document.body.style.setProperty('position', 'fixed', 'important');\n        Object.assign(document.body.style, {\n          top: `${-scrollPos.current}px`,\n          left: `${-scrollX}px`,\n          right: '0px',\n          height: 'auto'\n        });\n        window.setTimeout(() => window.requestAnimationFrame(() => {\n          // Attempt to check if the bottom bar appeared due to the position change\n          const bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollPos.current >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = `${-(scrollPos.current + bottomBarHeight)}px`;\n          }\n        }), 300);\n      }\n    }, [isOpen]);\n    const restorePositionSetting = React__default.default.useCallback(() => {\n      // All browsers on iOS will return true here.\n      if (!isSafari()) return;\n      if (previousBodyPosition !== null && !noBodyStyles) {\n        // Convert the position from \"px\" to Int\n        const y = -parseInt(document.body.style.top, 10);\n        const x = -parseInt(document.body.style.left, 10);\n        // Restore styles\n        Object.assign(document.body.style, previousBodyPosition);\n        window.requestAnimationFrame(() => {\n          if (preventScrollRestoration && activeUrl !== window.location.href) {\n            setActiveUrl(window.location.href);\n            return;\n          }\n          window.scrollTo(x, y);\n        });\n        previousBodyPosition = null;\n      }\n    }, [activeUrl]);\n    React__default.default.useEffect(() => {\n      function onScroll() {\n        scrollPos.current = window.scrollY;\n      }\n      onScroll();\n      window.addEventListener('scroll', onScroll);\n      return () => {\n        window.removeEventListener('scroll', onScroll);\n      };\n    }, []);\n    React__default.default.useEffect(() => {\n      if (!modal) return;\n      return () => {\n        if (typeof document === 'undefined') return;\n        // Another drawer is opened, safe to ignore the execution\n        const hasDrawerOpened = !!document.querySelector('[data-vaul-drawer]');\n        if (hasDrawerOpened) return;\n        restorePositionSetting();\n      };\n    }, [modal, restorePositionSetting]);\n    React__default.default.useEffect(() => {\n      if (nested || !hasBeenOpened) return;\n      // This is needed to force Safari toolbar to show **before** the drawer starts animating to prevent a gnarly shift from happening\n      if (isOpen) {\n        // avoid for standalone mode (PWA)\n        const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n        !isStandalone && setPositionFixed();\n        if (!modal) {\n          window.setTimeout(() => {\n            restorePositionSetting();\n          }, 500);\n        }\n      } else {\n        restorePositionSetting();\n      }\n    }, [isOpen, hasBeenOpened, activeUrl, modal, nested, setPositionFixed, restorePositionSetting]);\n    return {\n      restorePositionSetting\n    };\n  }\n  function Root({\n    open: openProp,\n    onOpenChange,\n    children,\n    onDrag: onDragProp,\n    onRelease: onReleaseProp,\n    snapPoints,\n    shouldScaleBackground = false,\n    setBackgroundColorOnScale = true,\n    closeThreshold = CLOSE_THRESHOLD,\n    scrollLockTimeout = SCROLL_LOCK_TIMEOUT,\n    dismissible = true,\n    handleOnly = false,\n    fadeFromIndex = snapPoints && snapPoints.length - 1,\n    activeSnapPoint: activeSnapPointProp,\n    setActiveSnapPoint: setActiveSnapPointProp,\n    fixed,\n    modal = true,\n    onClose,\n    nested,\n    noBodyStyles = false,\n    direction = 'bottom',\n    defaultOpen = false,\n    disablePreventScroll = true,\n    snapToSequentialPoint = false,\n    preventScrollRestoration = false,\n    repositionInputs = true,\n    onAnimationEnd,\n    container,\n    autoFocus = false\n  }) {\n    var _drawerRef_current, _drawerRef_current1;\n    const [isOpen = false, setIsOpen] = useControllableState({\n      defaultProp: defaultOpen,\n      prop: openProp,\n      onChange: o => {\n        onOpenChange == null ? void 0 : onOpenChange(o);\n        if (!o && !nested) {\n          restorePositionSetting();\n        }\n        setTimeout(() => {\n          onAnimationEnd == null ? void 0 : onAnimationEnd(o);\n        }, TRANSITIONS.DURATION * 1000);\n        if (o && !modal) {\n          if (typeof window !== 'undefined') {\n            window.requestAnimationFrame(() => {\n              document.body.style.pointerEvents = 'auto';\n            });\n          }\n        }\n        if (!o) {\n          // This will be removed when the exit animation ends (`500ms`)\n          document.body.style.pointerEvents = 'auto';\n        }\n      }\n    });\n    const [hasBeenOpened, setHasBeenOpened] = React__default.default.useState(false);\n    const [isDragging, setIsDragging] = React__default.default.useState(false);\n    const [justReleased, setJustReleased] = React__default.default.useState(false);\n    const overlayRef = React__default.default.useRef(null);\n    const openTime = React__default.default.useRef(null);\n    const dragStartTime = React__default.default.useRef(null);\n    const dragEndTime = React__default.default.useRef(null);\n    const lastTimeDragPrevented = React__default.default.useRef(null);\n    const isAllowedToDrag = React__default.default.useRef(false);\n    const nestedOpenChangeTimer = React__default.default.useRef(null);\n    const pointerStart = React__default.default.useRef(0);\n    const keyboardIsOpen = React__default.default.useRef(false);\n    const shouldAnimate = React__default.default.useRef(!defaultOpen);\n    const previousDiffFromInitial = React__default.default.useRef(0);\n    const drawerRef = React__default.default.useRef(null);\n    const drawerHeightRef = React__default.default.useRef(((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0);\n    const drawerWidthRef = React__default.default.useRef(((_drawerRef_current1 = drawerRef.current) == null ? void 0 : _drawerRef_current1.getBoundingClientRect().width) || 0);\n    const initialDrawerHeight = React__default.default.useRef(0);\n    const onSnapPointChange = React__default.default.useCallback(activeSnapPointIndex => {\n      // Change openTime ref when we reach the last snap point to prevent dragging for 500ms incase it's scrollable.\n      if (snapPoints && activeSnapPointIndex === snapPointsOffset.length - 1) openTime.current = new Date();\n    }, []);\n    const {\n      activeSnapPoint,\n      activeSnapPointIndex,\n      setActiveSnapPoint,\n      onRelease: onReleaseSnapPoints,\n      snapPointsOffset,\n      onDrag: onDragSnapPoints,\n      shouldFade,\n      getPercentageDragged: getSnapPointsPercentageDragged\n    } = useSnapPoints({\n      snapPoints,\n      activeSnapPointProp,\n      setActiveSnapPointProp,\n      drawerRef,\n      fadeFromIndex,\n      overlayRef,\n      onSnapPointChange,\n      direction,\n      container,\n      snapToSequentialPoint\n    });\n    usePreventScroll({\n      isDisabled: !isOpen || isDragging || !modal || justReleased || !hasBeenOpened || !repositionInputs || !disablePreventScroll\n    });\n    const {\n      restorePositionSetting\n    } = usePositionFixed({\n      isOpen,\n      modal,\n      nested: nested != null ? nested : false,\n      hasBeenOpened,\n      preventScrollRestoration,\n      noBodyStyles\n    });\n    function getScale() {\n      return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n    }\n    function onPress(event) {\n      var _drawerRef_current, _drawerRef_current1;\n      if (!dismissible && !snapPoints) return;\n      if (drawerRef.current && !drawerRef.current.contains(event.target)) return;\n      drawerHeightRef.current = ((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0;\n      drawerWidthRef.current = ((_drawerRef_current1 = drawerRef.current) == null ? void 0 : _drawerRef_current1.getBoundingClientRect().width) || 0;\n      setIsDragging(true);\n      dragStartTime.current = new Date();\n      // iOS doesn't trigger mouseUp after scrolling so we need to listen to touched in order to disallow dragging\n      if (isIOS()) {\n        window.addEventListener('touchend', () => isAllowedToDrag.current = false, {\n          once: true\n        });\n      }\n      // Ensure we maintain correct pointer capture even when going outside of the drawer\n      event.target.setPointerCapture(event.pointerId);\n      pointerStart.current = isVertical(direction) ? event.pageY : event.pageX;\n    }\n    function shouldDrag(el, isDraggingInDirection) {\n      var _window_getSelection;\n      let element = el;\n      const highlightedText = (_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString();\n      const swipeAmount = drawerRef.current ? getTranslate(drawerRef.current, direction) : null;\n      const date = new Date();\n      // Fixes https://github.com/emilkowalski/vaul/issues/483\n      if (element.tagName === 'SELECT') {\n        return false;\n      }\n      if (element.hasAttribute('data-vaul-no-drag') || element.closest('[data-vaul-no-drag]')) {\n        return false;\n      }\n      if (direction === 'right' || direction === 'left') {\n        return true;\n      }\n      // Allow scrolling when animating\n      if (openTime.current && date.getTime() - openTime.current.getTime() < 500) {\n        return false;\n      }\n      if (swipeAmount !== null) {\n        if (direction === 'bottom' ? swipeAmount > 0 : swipeAmount < 0) {\n          return true;\n        }\n      }\n      // Don't drag if there's highlighted text\n      if (highlightedText && highlightedText.length > 0) {\n        return false;\n      }\n      // Disallow dragging if drawer was scrolled within `scrollLockTimeout`\n      if (lastTimeDragPrevented.current && date.getTime() - lastTimeDragPrevented.current.getTime() < scrollLockTimeout && swipeAmount === 0) {\n        lastTimeDragPrevented.current = date;\n        return false;\n      }\n      if (isDraggingInDirection) {\n        lastTimeDragPrevented.current = date;\n        // We are dragging down so we should allow scrolling\n        return false;\n      }\n      // Keep climbing up the DOM tree as long as there's a parent\n      while (element) {\n        // Check if the element is scrollable\n        if (element.scrollHeight > element.clientHeight) {\n          if (element.scrollTop !== 0) {\n            lastTimeDragPrevented.current = new Date();\n            // The element is scrollable and not scrolled to the top, so don't drag\n            return false;\n          }\n          if (element.getAttribute('role') === 'dialog') {\n            return true;\n          }\n        }\n        // Move up to the parent element\n        element = element.parentNode;\n      }\n      // No scrollable parents not scrolled to the top found, so drag\n      return true;\n    }\n    function onDrag(event) {\n      if (!drawerRef.current) {\n        return;\n      }\n      // We need to know how much of the drawer has been dragged in percentages so that we can transform background accordingly\n      if (isDragging) {\n        const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n        const draggedDistance = (pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX)) * directionMultiplier;\n        const isDraggingInDirection = draggedDistance > 0;\n        // Pre condition for disallowing dragging in the close direction.\n        const noCloseSnapPointsPreCondition = snapPoints && !dismissible && !isDraggingInDirection;\n        // Disallow dragging down to close when first snap point is the active one and dismissible prop is set to false.\n        if (noCloseSnapPointsPreCondition && activeSnapPointIndex === 0) return;\n        // We need to capture last time when drag with scroll was triggered and have a timeout between\n        const absDraggedDistance = Math.abs(draggedDistance);\n        const wrapper = document.querySelector('[data-vaul-drawer-wrapper]');\n        const drawerDimension = direction === 'bottom' || direction === 'top' ? drawerHeightRef.current : drawerWidthRef.current;\n        // Calculate the percentage dragged, where 1 is the closed position\n        let percentageDragged = absDraggedDistance / drawerDimension;\n        const snapPointPercentageDragged = getSnapPointsPercentageDragged(absDraggedDistance, isDraggingInDirection);\n        if (snapPointPercentageDragged !== null) {\n          percentageDragged = snapPointPercentageDragged;\n        }\n        // Disallow close dragging beyond the smallest snap point.\n        if (noCloseSnapPointsPreCondition && percentageDragged >= 1) {\n          return;\n        }\n        if (!isAllowedToDrag.current && !shouldDrag(event.target, isDraggingInDirection)) return;\n        drawerRef.current.classList.add(DRAG_CLASS);\n        // If shouldDrag gave true once after pressing down on the drawer, we set isAllowedToDrag to true and it will remain true until we let go, there's no reason to disable dragging mid way, ever, and that's the solution to it\n        isAllowedToDrag.current = true;\n        set(drawerRef.current, {\n          transition: 'none'\n        });\n        set(overlayRef.current, {\n          transition: 'none'\n        });\n        if (snapPoints) {\n          onDragSnapPoints({\n            draggedDistance\n          });\n        }\n        // Run this only if snapPoints are not defined or if we are at the last snap point (highest one)\n        if (isDraggingInDirection && !snapPoints) {\n          const dampenedDraggedDistance = dampenValue(draggedDistance);\n          const translateValue = Math.min(dampenedDraggedDistance * -1, 0) * directionMultiplier;\n          set(drawerRef.current, {\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n          return;\n        }\n        const opacityValue = 1 - percentageDragged;\n        if (shouldFade || fadeFromIndex && activeSnapPointIndex === fadeFromIndex - 1) {\n          onDragProp == null ? void 0 : onDragProp(event, percentageDragged);\n          set(overlayRef.current, {\n            opacity: `${opacityValue}`,\n            transition: 'none'\n          }, true);\n        }\n        if (wrapper && overlayRef.current && shouldScaleBackground) {\n          // Calculate percentageDragged as a fraction (0 to 1)\n          const scaleValue = Math.min(getScale() + percentageDragged * (1 - getScale()), 1);\n          const borderRadiusValue = 8 - percentageDragged * 8;\n          const translateValue = Math.max(0, 14 - percentageDragged * 14);\n          set(wrapper, {\n            borderRadius: `${borderRadiusValue}px`,\n            transform: isVertical(direction) ? `scale(${scaleValue}) translate3d(0, ${translateValue}px, 0)` : `scale(${scaleValue}) translate3d(${translateValue}px, 0, 0)`,\n            transition: 'none'\n          }, true);\n        }\n        if (!snapPoints) {\n          const translateValue = absDraggedDistance * directionMultiplier;\n          set(drawerRef.current, {\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n        }\n      }\n    }\n    React__default.default.useEffect(() => {\n      window.requestAnimationFrame(() => {\n        shouldAnimate.current = true;\n      });\n    }, []);\n    React__default.default.useEffect(() => {\n      var _window_visualViewport;\n      function onVisualViewportChange() {\n        if (!drawerRef.current || !repositionInputs) return;\n        const focusedElement = document.activeElement;\n        if (isInput(focusedElement) || keyboardIsOpen.current) {\n          var _window_visualViewport;\n          const visualViewportHeight = ((_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.height) || 0;\n          const totalHeight = window.innerHeight;\n          // This is the height of the keyboard\n          let diffFromInitial = totalHeight - visualViewportHeight;\n          const drawerHeight = drawerRef.current.getBoundingClientRect().height || 0;\n          // Adjust drawer height only if it's tall enough\n          const isTallEnough = drawerHeight > totalHeight * 0.8;\n          if (!initialDrawerHeight.current) {\n            initialDrawerHeight.current = drawerHeight;\n          }\n          const offsetFromTop = drawerRef.current.getBoundingClientRect().top;\n          // visualViewport height may change due to somq e subtle changes to the keyboard. Checking if the height changed by 60 or more will make sure that they keyboard really changed its open state.\n          if (Math.abs(previousDiffFromInitial.current - diffFromInitial) > 60) {\n            keyboardIsOpen.current = !keyboardIsOpen.current;\n          }\n          if (snapPoints && snapPoints.length > 0 && snapPointsOffset && activeSnapPointIndex) {\n            const activeSnapPointHeight = snapPointsOffset[activeSnapPointIndex] || 0;\n            diffFromInitial += activeSnapPointHeight;\n          }\n          previousDiffFromInitial.current = diffFromInitial;\n          // We don't have to change the height if the input is in view, when we are here we are in the opened keyboard state so we can correctly check if the input is in view\n          if (drawerHeight > visualViewportHeight || keyboardIsOpen.current) {\n            const height = drawerRef.current.getBoundingClientRect().height;\n            let newDrawerHeight = height;\n            if (height > visualViewportHeight) {\n              newDrawerHeight = visualViewportHeight - (isTallEnough ? offsetFromTop : WINDOW_TOP_OFFSET);\n            }\n            // When fixed, don't move the drawer upwards if there's space, but rather only change it's height so it's fully scrollable when the keyboard is open\n            if (fixed) {\n              drawerRef.current.style.height = `${height - Math.max(diffFromInitial, 0)}px`;\n            } else {\n              drawerRef.current.style.height = `${Math.max(newDrawerHeight, visualViewportHeight - offsetFromTop)}px`;\n            }\n          } else if (!isMobileFirefox()) {\n            drawerRef.current.style.height = `${initialDrawerHeight.current}px`;\n          }\n          if (snapPoints && snapPoints.length > 0 && !keyboardIsOpen.current) {\n            drawerRef.current.style.bottom = `0px`;\n          } else {\n            // Negative bottom value would never make sense\n            drawerRef.current.style.bottom = `${Math.max(diffFromInitial, 0)}px`;\n          }\n        }\n      }\n      (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.addEventListener('resize', onVisualViewportChange);\n      return () => {\n        var _window_visualViewport;\n        return (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.removeEventListener('resize', onVisualViewportChange);\n      };\n    }, [activeSnapPointIndex, snapPoints, snapPointsOffset]);\n    function closeDrawer(fromWithin) {\n      cancelDrag();\n      onClose == null ? void 0 : onClose();\n      if (!fromWithin) {\n        setIsOpen(false);\n      }\n      setTimeout(() => {\n        if (snapPoints) {\n          setActiveSnapPoint(snapPoints[0]);\n        }\n      }, TRANSITIONS.DURATION * 1000); // seconds to ms\n    }\n    function resetDrawer() {\n      if (!drawerRef.current) return;\n      const wrapper = document.querySelector('[data-vaul-drawer-wrapper]');\n      const currentSwipeAmount = getTranslate(drawerRef.current, direction);\n      set(drawerRef.current, {\n        transform: 'translate3d(0, 0, 0)',\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n      });\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        opacity: '1'\n      });\n      // Don't reset background if swiped upwards\n      if (shouldScaleBackground && currentSwipeAmount && currentSwipeAmount > 0 && isOpen) {\n        set(wrapper, {\n          borderRadius: `${BORDER_RADIUS}px`,\n          overflow: 'hidden',\n          ...(isVertical(direction) ? {\n            transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,\n            transformOrigin: 'top'\n          } : {\n            transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,\n            transformOrigin: 'left'\n          }),\n          transitionProperty: 'transform, border-radius',\n          transitionDuration: `${TRANSITIONS.DURATION}s`,\n          transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        }, true);\n      }\n    }\n    function cancelDrag() {\n      if (!isDragging || !drawerRef.current) return;\n      drawerRef.current.classList.remove(DRAG_CLASS);\n      isAllowedToDrag.current = false;\n      setIsDragging(false);\n      dragEndTime.current = new Date();\n    }\n    function onRelease(event) {\n      if (!isDragging || !drawerRef.current) return;\n      drawerRef.current.classList.remove(DRAG_CLASS);\n      isAllowedToDrag.current = false;\n      setIsDragging(false);\n      dragEndTime.current = new Date();\n      const swipeAmount = getTranslate(drawerRef.current, direction);\n      if (!event || !shouldDrag(event.target, false) || !swipeAmount || Number.isNaN(swipeAmount)) return;\n      if (dragStartTime.current === null) return;\n      const timeTaken = dragEndTime.current.getTime() - dragStartTime.current.getTime();\n      const distMoved = pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX);\n      const velocity = Math.abs(distMoved) / timeTaken;\n      if (velocity > 0.05) {\n        // `justReleased` is needed to prevent the drawer from focusing on an input when the drag ends, as it's not the intent most of the time.\n        setJustReleased(true);\n        setTimeout(() => {\n          setJustReleased(false);\n        }, 200);\n      }\n      if (snapPoints) {\n        const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n        onReleaseSnapPoints({\n          draggedDistance: distMoved * directionMultiplier,\n          closeDrawer,\n          velocity,\n          dismissible\n        });\n        onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n        return;\n      }\n      // Moved upwards, don't do anything\n      if (direction === 'bottom' || direction === 'right' ? distMoved > 0 : distMoved < 0) {\n        resetDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n        return;\n      }\n      if (velocity > VELOCITY_THRESHOLD) {\n        closeDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n        return;\n      }\n      var _drawerRef_current_getBoundingClientRect_height;\n      const visibleDrawerHeight = Math.min((_drawerRef_current_getBoundingClientRect_height = drawerRef.current.getBoundingClientRect().height) != null ? _drawerRef_current_getBoundingClientRect_height : 0, window.innerHeight);\n      var _drawerRef_current_getBoundingClientRect_width;\n      const visibleDrawerWidth = Math.min((_drawerRef_current_getBoundingClientRect_width = drawerRef.current.getBoundingClientRect().width) != null ? _drawerRef_current_getBoundingClientRect_width : 0, window.innerWidth);\n      const isHorizontalSwipe = direction === 'left' || direction === 'right';\n      if (Math.abs(swipeAmount) >= (isHorizontalSwipe ? visibleDrawerWidth : visibleDrawerHeight) * closeThreshold) {\n        closeDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n        return;\n      }\n      onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n      resetDrawer();\n    }\n    React__default.default.useEffect(() => {\n      // Trigger enter animation without using CSS animation\n      if (isOpen) {\n        set(document.documentElement, {\n          scrollBehavior: 'auto'\n        });\n        openTime.current = new Date();\n      }\n      return () => {\n        reset(document.documentElement, 'scrollBehavior');\n      };\n    }, [isOpen]);\n    function onNestedOpenChange(o) {\n      const scale = o ? (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth : 1;\n      const initialTranslate = o ? -NESTED_DISPLACEMENT : 0;\n      if (nestedOpenChangeTimer.current) {\n        window.clearTimeout(nestedOpenChangeTimer.current);\n      }\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${initialTranslate}px, 0)` : `scale(${scale}) translate3d(${initialTranslate}px, 0, 0)`\n      });\n      if (!o && drawerRef.current) {\n        nestedOpenChangeTimer.current = setTimeout(() => {\n          const translateValue = getTranslate(drawerRef.current, direction);\n          set(drawerRef.current, {\n            transition: 'none',\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n        }, 500);\n      }\n    }\n    function onNestedDrag(_event, percentageDragged) {\n      if (percentageDragged < 0) return;\n      const initialScale = (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth;\n      const newScale = initialScale + percentageDragged * (1 - initialScale);\n      const newTranslate = -NESTED_DISPLACEMENT + percentageDragged * NESTED_DISPLACEMENT;\n      set(drawerRef.current, {\n        transform: isVertical(direction) ? `scale(${newScale}) translate3d(0, ${newTranslate}px, 0)` : `scale(${newScale}) translate3d(${newTranslate}px, 0, 0)`,\n        transition: 'none'\n      });\n    }\n    function onNestedRelease(_event, o) {\n      const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n      const scale = o ? (dim - NESTED_DISPLACEMENT) / dim : 1;\n      const translate = o ? -NESTED_DISPLACEMENT : 0;\n      if (o) {\n        set(drawerRef.current, {\n          transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${translate}px, 0)` : `scale(${scale}) translate3d(${translate}px, 0, 0)`\n        });\n      }\n    }\n    React__default.default.useEffect(() => {\n      if (!modal) {\n        // Need to do this manually unfortunately\n        window.requestAnimationFrame(() => {\n          document.body.style.pointerEvents = 'auto';\n        });\n      }\n    }, [modal]);\n    return /*#__PURE__*/React__default.default.createElement(DialogPrimitive.Root, {\n      defaultOpen: defaultOpen,\n      onOpenChange: open => {\n        if (!dismissible && !open) return;\n        if (open) {\n          setHasBeenOpened(true);\n        } else {\n          closeDrawer(true);\n        }\n        setIsOpen(open);\n      },\n      open: isOpen\n    }, /*#__PURE__*/React__default.default.createElement(DrawerContext.Provider, {\n      value: {\n        activeSnapPoint,\n        snapPoints,\n        setActiveSnapPoint,\n        drawerRef,\n        overlayRef,\n        onOpenChange,\n        onPress,\n        onRelease,\n        onDrag,\n        dismissible,\n        shouldAnimate,\n        handleOnly,\n        isOpen,\n        isDragging,\n        shouldFade,\n        closeDrawer,\n        onNestedDrag,\n        onNestedOpenChange,\n        onNestedRelease,\n        keyboardIsOpen,\n        modal,\n        snapPointsOffset,\n        activeSnapPointIndex,\n        direction,\n        shouldScaleBackground,\n        setBackgroundColorOnScale,\n        noBodyStyles,\n        container,\n        autoFocus\n      }\n    }, children));\n  }\n  const Overlay = /*#__PURE__*/React__default.default.forwardRef(function ({\n    ...rest\n  }, ref) {\n    const {\n      overlayRef,\n      snapPoints,\n      onRelease,\n      shouldFade,\n      isOpen,\n      modal,\n      shouldAnimate\n    } = useDrawerContext();\n    const composedRef = useComposedRefs(ref, overlayRef);\n    const hasSnapPoints = snapPoints && snapPoints.length > 0;\n    // Overlay is the component that is locking scroll, removing it will unlock the scroll without having to dig into Radix's Dialog library\n    if (!modal) {\n      return null;\n    }\n    const onMouseUp = React__default.default.useCallback(event => onRelease(event), [onRelease]);\n    return /*#__PURE__*/React__default.default.createElement(DialogPrimitive.Overlay, {\n      onMouseUp: onMouseUp,\n      ref: composedRef,\n      \"data-vaul-overlay\": \"\",\n      \"data-vaul-snap-points\": isOpen && hasSnapPoints ? 'true' : 'false',\n      \"data-vaul-snap-points-overlay\": isOpen && shouldFade ? 'true' : 'false',\n      \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? 'true' : 'false',\n      ...rest\n    });\n  });\n  Overlay.displayName = 'Drawer.Overlay';\n  const Content = /*#__PURE__*/React__default.default.forwardRef(function ({\n    onPointerDownOutside,\n    style,\n    onOpenAutoFocus,\n    ...rest\n  }, ref) {\n    const {\n      drawerRef,\n      onPress,\n      onRelease,\n      onDrag,\n      keyboardIsOpen,\n      snapPointsOffset,\n      activeSnapPointIndex,\n      modal,\n      isOpen,\n      direction,\n      snapPoints,\n      container,\n      handleOnly,\n      shouldAnimate,\n      autoFocus\n    } = useDrawerContext();\n    // Needed to use transition instead of animations\n    const [delayedSnapPoints, setDelayedSnapPoints] = React__default.default.useState(false);\n    const composedRef = useComposedRefs(ref, drawerRef);\n    const pointerStartRef = React__default.default.useRef(null);\n    const lastKnownPointerEventRef = React__default.default.useRef(null);\n    const wasBeyondThePointRef = React__default.default.useRef(false);\n    const hasSnapPoints = snapPoints && snapPoints.length > 0;\n    useScaleBackground();\n    const isDeltaInDirection = (delta, direction, threshold = 0) => {\n      if (wasBeyondThePointRef.current) return true;\n      const deltaY = Math.abs(delta.y);\n      const deltaX = Math.abs(delta.x);\n      const isDeltaX = deltaX > deltaY;\n      const dFactor = ['bottom', 'right'].includes(direction) ? 1 : -1;\n      if (direction === 'left' || direction === 'right') {\n        const isReverseDirection = delta.x * dFactor < 0;\n        if (!isReverseDirection && deltaX >= 0 && deltaX <= threshold) {\n          return isDeltaX;\n        }\n      } else {\n        const isReverseDirection = delta.y * dFactor < 0;\n        if (!isReverseDirection && deltaY >= 0 && deltaY <= threshold) {\n          return !isDeltaX;\n        }\n      }\n      wasBeyondThePointRef.current = true;\n      return true;\n    };\n    React__default.default.useEffect(() => {\n      if (hasSnapPoints) {\n        window.requestAnimationFrame(() => {\n          setDelayedSnapPoints(true);\n        });\n      }\n    }, []);\n    function handleOnPointerUp(event) {\n      pointerStartRef.current = null;\n      wasBeyondThePointRef.current = false;\n      onRelease(event);\n    }\n    return /*#__PURE__*/React__default.default.createElement(DialogPrimitive.Content, {\n      \"data-vaul-drawer-direction\": direction,\n      \"data-vaul-drawer\": \"\",\n      \"data-vaul-delayed-snap-points\": delayedSnapPoints ? 'true' : 'false',\n      \"data-vaul-snap-points\": isOpen && hasSnapPoints ? 'true' : 'false',\n      \"data-vaul-custom-container\": container ? 'true' : 'false',\n      \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? 'true' : 'false',\n      ...rest,\n      ref: composedRef,\n      style: snapPointsOffset && snapPointsOffset.length > 0 ? {\n        '--snap-point-height': `${snapPointsOffset[activeSnapPointIndex != null ? activeSnapPointIndex : 0]}px`,\n        ...style\n      } : style,\n      onPointerDown: event => {\n        if (handleOnly) return;\n        rest.onPointerDown == null ? void 0 : rest.onPointerDown.call(rest, event);\n        pointerStartRef.current = {\n          x: event.pageX,\n          y: event.pageY\n        };\n        onPress(event);\n      },\n      onOpenAutoFocus: e => {\n        onOpenAutoFocus == null ? void 0 : onOpenAutoFocus(e);\n        if (!autoFocus) {\n          e.preventDefault();\n        }\n      },\n      onPointerDownOutside: e => {\n        onPointerDownOutside == null ? void 0 : onPointerDownOutside(e);\n        if (!modal || e.defaultPrevented) {\n          e.preventDefault();\n          return;\n        }\n        if (keyboardIsOpen.current) {\n          keyboardIsOpen.current = false;\n        }\n      },\n      onFocusOutside: e => {\n        if (!modal) {\n          e.preventDefault();\n          return;\n        }\n      },\n      onPointerMove: event => {\n        lastKnownPointerEventRef.current = event;\n        if (handleOnly) return;\n        rest.onPointerMove == null ? void 0 : rest.onPointerMove.call(rest, event);\n        if (!pointerStartRef.current) return;\n        const yPosition = event.pageY - pointerStartRef.current.y;\n        const xPosition = event.pageX - pointerStartRef.current.x;\n        const swipeStartThreshold = event.pointerType === 'touch' ? 10 : 2;\n        const delta = {\n          x: xPosition,\n          y: yPosition\n        };\n        const isAllowedToSwipe = isDeltaInDirection(delta, direction, swipeStartThreshold);\n        if (isAllowedToSwipe) onDrag(event);else if (Math.abs(xPosition) > swipeStartThreshold || Math.abs(yPosition) > swipeStartThreshold) {\n          pointerStartRef.current = null;\n        }\n      },\n      onPointerUp: event => {\n        rest.onPointerUp == null ? void 0 : rest.onPointerUp.call(rest, event);\n        pointerStartRef.current = null;\n        wasBeyondThePointRef.current = false;\n        onRelease(event);\n      },\n      onPointerOut: event => {\n        rest.onPointerOut == null ? void 0 : rest.onPointerOut.call(rest, event);\n        handleOnPointerUp(lastKnownPointerEventRef.current);\n      },\n      onContextMenu: event => {\n        rest.onContextMenu == null ? void 0 : rest.onContextMenu.call(rest, event);\n        if (lastKnownPointerEventRef.current) {\n          handleOnPointerUp(lastKnownPointerEventRef.current);\n        }\n      }\n    });\n  });\n  Content.displayName = 'Drawer.Content';\n  const LONG_HANDLE_PRESS_TIMEOUT = 250;\n  const DOUBLE_TAP_TIMEOUT = 120;\n  const Handle = /*#__PURE__*/React__default.default.forwardRef(function ({\n    preventCycle = false,\n    children,\n    ...rest\n  }, ref) {\n    const {\n      closeDrawer,\n      isDragging,\n      snapPoints,\n      activeSnapPoint,\n      setActiveSnapPoint,\n      dismissible,\n      handleOnly,\n      isOpen,\n      onPress,\n      onDrag\n    } = useDrawerContext();\n    const closeTimeoutIdRef = React__default.default.useRef(null);\n    const shouldCancelInteractionRef = React__default.default.useRef(false);\n    function handleStartCycle() {\n      // Stop if this is the second click of a double click\n      if (shouldCancelInteractionRef.current) {\n        handleCancelInteraction();\n        return;\n      }\n      window.setTimeout(() => {\n        handleCycleSnapPoints();\n      }, DOUBLE_TAP_TIMEOUT);\n    }\n    function handleCycleSnapPoints() {\n      // Prevent accidental taps while resizing drawer\n      if (isDragging || preventCycle || shouldCancelInteractionRef.current) {\n        handleCancelInteraction();\n        return;\n      }\n      // Make sure to clear the timeout id if the user releases the handle before the cancel timeout\n      handleCancelInteraction();\n      if (!snapPoints || snapPoints.length === 0) {\n        if (!dismissible) {\n          closeDrawer();\n        }\n        return;\n      }\n      const isLastSnapPoint = activeSnapPoint === snapPoints[snapPoints.length - 1];\n      if (isLastSnapPoint && dismissible) {\n        closeDrawer();\n        return;\n      }\n      const currentSnapIndex = snapPoints.findIndex(point => point === activeSnapPoint);\n      if (currentSnapIndex === -1) return; // activeSnapPoint not found in snapPoints\n      const nextSnapPoint = snapPoints[currentSnapIndex + 1];\n      setActiveSnapPoint(nextSnapPoint);\n    }\n    function handleStartInteraction() {\n      closeTimeoutIdRef.current = window.setTimeout(() => {\n        // Cancel click interaction on a long press\n        shouldCancelInteractionRef.current = true;\n      }, LONG_HANDLE_PRESS_TIMEOUT);\n    }\n    function handleCancelInteraction() {\n      if (closeTimeoutIdRef.current) {\n        window.clearTimeout(closeTimeoutIdRef.current);\n      }\n      shouldCancelInteractionRef.current = false;\n    }\n    return /*#__PURE__*/React__default.default.createElement(\"div\", {\n      onClick: handleStartCycle,\n      onPointerCancel: handleCancelInteraction,\n      onPointerDown: e => {\n        if (handleOnly) onPress(e);\n        handleStartInteraction();\n      },\n      onPointerMove: e => {\n        if (handleOnly) onDrag(e);\n      },\n      // onPointerUp is already handled by the content component\n      ref: ref,\n      \"data-vaul-drawer-visible\": isOpen ? 'true' : 'false',\n      \"data-vaul-handle\": \"\",\n      \"aria-hidden\": \"true\",\n      ...rest\n    }, /*#__PURE__*/React__default.default.createElement(\"span\", {\n      \"data-vaul-handle-hitarea\": \"\",\n      \"aria-hidden\": \"true\"\n    }, children));\n  });\n  Handle.displayName = 'Drawer.Handle';\n  function NestedRoot({\n    onDrag,\n    onOpenChange,\n    open: nestedIsOpen,\n    ...rest\n  }) {\n    const {\n      onNestedDrag,\n      onNestedOpenChange,\n      onNestedRelease\n    } = useDrawerContext();\n    if (!onNestedDrag) {\n      throw new Error('Drawer.NestedRoot must be placed in another drawer');\n    }\n    return /*#__PURE__*/React__default.default.createElement(Root, {\n      nested: true,\n      open: nestedIsOpen,\n      onClose: () => {\n        onNestedOpenChange(false);\n      },\n      onDrag: (e, p) => {\n        onNestedDrag(e, p);\n        onDrag == null ? void 0 : onDrag(e, p);\n      },\n      onOpenChange: o => {\n        if (o) {\n          onNestedOpenChange(o);\n        }\n        onOpenChange == null ? void 0 : onOpenChange(o);\n      },\n      onRelease: onNestedRelease,\n      ...rest\n    });\n  }\n  function Portal(props) {\n    const context = useDrawerContext();\n    const {\n      container = context.container,\n      ...portalProps\n    } = props;\n    return /*#__PURE__*/React__default.default.createElement(DialogPrimitive.Portal, {\n      container: container,\n      ...portalProps\n    });\n  }\n  const Drawer = {\n    Root,\n    NestedRoot,\n    Content,\n    Overlay,\n    Trigger: DialogPrimitive.Trigger,\n    Portal,\n    Handle,\n    Close: DialogPrimitive.Close,\n    Title: DialogPrimitive.Title,\n    Description: DialogPrimitive.Description\n  };\n});","lineCount":1776,"map":[[2,2,1,0],[2,14,1,12],[3,2,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13],[8,11,1,13,"_interopNamespace"],[8,29,1,13,"e"],[8,30,1,13],[9,4,1,13],[9,8,1,13,"e"],[9,9,1,13],[9,13,1,13,"e"],[9,14,1,13],[9,15,1,13,"__esModule"],[9,25,1,13],[9,34,1,13,"e"],[9,35,1,13],[10,4,1,13],[10,8,1,13,"n"],[10,9,1,13],[11,4,1,13],[11,8,1,13,"e"],[11,9,1,13],[11,11,1,13,"Object"],[11,17,1,13],[11,18,1,13,"keys"],[11,22,1,13],[11,23,1,13,"e"],[11,24,1,13],[11,26,1,13,"forEach"],[11,33,1,13],[11,44,1,13,"k"],[11,45,1,13],[12,6,1,13],[12,10,1,13,"d"],[12,11,1,13],[12,14,1,13,"Object"],[12,20,1,13],[12,21,1,13,"getOwnPropertyDescriptor"],[12,45,1,13],[12,46,1,13,"e"],[12,47,1,13],[12,49,1,13,"k"],[12,50,1,13],[13,6,1,13,"Object"],[13,12,1,13],[13,13,1,13,"defineProperty"],[13,27,1,13],[13,28,1,13,"n"],[13,29,1,13],[13,31,1,13,"k"],[13,32,1,13],[13,34,1,13,"d"],[13,35,1,13],[13,36,1,13,"get"],[13,39,1,13],[13,42,1,13,"d"],[13,43,1,13],[14,8,1,13,"enumerable"],[14,18,1,13],[15,8,1,13,"get"],[15,11,1,13],[15,22,1,13,"get"],[15,23,1,13],[16,10,1,13],[16,17,1,13,"e"],[16,18,1,13],[16,19,1,13,"k"],[16,20,1,13],[17,8,1,13],[18,6,1,13],[19,4,1,13],[20,4,1,13,"n"],[20,5,1,13],[20,6,1,13,"default"],[20,13,1,13],[20,16,1,13,"e"],[20,17,1,13],[21,4,1,13],[21,11,1,13,"n"],[21,12,1,13],[22,2,1,13],[23,2,1,13],[23,11,1,13,"_interopDefault"],[23,27,1,13,"e"],[23,28,1,13],[24,4,1,13],[24,11,1,13,"e"],[24,12,1,13],[24,16,1,13,"e"],[24,17,1,13],[24,18,1,13,"__esModule"],[24,28,1,13],[24,31,1,13,"e"],[24,32,1,13],[25,6,1,13,"default"],[25,13,1,13],[25,15,1,13,"e"],[26,4,1,13],[27,2,1,13],[28,2,1655,0,"Object"],[28,8,1655,0],[28,9,1655,0,"defineProperty"],[28,23,1655,0],[28,24,1655,0,"exports"],[28,31,1655,0],[29,4,1655,0,"enumerable"],[29,14,1655,0],[30,4,1655,0,"get"],[30,7,1655,0],[30,18,1655,0,"get"],[30,19,1655,0],[31,6,1655,0],[31,13,1655,9,"Content"],[31,20,1655,16],[32,4,1655,16],[33,2,1655,16],[34,2,1655,0,"Object"],[34,8,1655,0],[34,9,1655,0,"defineProperty"],[34,23,1655,0],[34,24,1655,0,"exports"],[34,31,1655,0],[35,4,1655,0,"enumerable"],[35,14,1655,0],[36,4,1655,0,"get"],[36,7,1655,0],[36,18,1655,0,"get"],[36,19,1655,0],[37,6,1655,0],[37,13,1655,18,"Drawer"],[37,19,1655,24],[38,4,1655,24],[39,2,1655,24],[40,2,1655,0,"Object"],[40,8,1655,0],[40,9,1655,0,"defineProperty"],[40,23,1655,0],[40,24,1655,0,"exports"],[40,31,1655,0],[41,4,1655,0,"enumerable"],[41,14,1655,0],[42,4,1655,0,"get"],[42,7,1655,0],[42,18,1655,0,"get"],[42,19,1655,0],[43,6,1655,0],[43,13,1655,26,"Handle"],[43,19,1655,32],[44,4,1655,32],[45,2,1655,32],[46,2,1655,0,"Object"],[46,8,1655,0],[46,9,1655,0,"defineProperty"],[46,23,1655,0],[46,24,1655,0,"exports"],[46,31,1655,0],[47,4,1655,0,"enumerable"],[47,14,1655,0],[48,4,1655,0,"get"],[48,7,1655,0],[48,18,1655,0,"get"],[48,19,1655,0],[49,6,1655,0],[49,13,1655,34,"NestedRoot"],[49,23,1655,44],[50,4,1655,44],[51,2,1655,44],[52,2,1655,0,"Object"],[52,8,1655,0],[52,9,1655,0,"defineProperty"],[52,23,1655,0],[52,24,1655,0,"exports"],[52,31,1655,0],[53,4,1655,0,"enumerable"],[53,14,1655,0],[54,4,1655,0,"get"],[54,7,1655,0],[54,18,1655,0,"get"],[54,19,1655,0],[55,6,1655,0],[55,13,1655,46,"Overlay"],[55,20,1655,53],[56,4,1655,53],[57,2,1655,53],[58,2,1655,0,"Object"],[58,8,1655,0],[58,9,1655,0,"defineProperty"],[58,23,1655,0],[58,24,1655,0,"exports"],[58,31,1655,0],[59,4,1655,0,"enumerable"],[59,14,1655,0],[60,4,1655,0,"get"],[60,7,1655,0],[60,18,1655,0,"get"],[60,19,1655,0],[61,6,1655,0],[61,13,1655,55,"Portal"],[61,19,1655,61],[62,4,1655,61],[63,2,1655,61],[64,2,1655,0,"Object"],[64,8,1655,0],[64,9,1655,0,"defineProperty"],[64,23,1655,0],[64,24,1655,0,"exports"],[64,31,1655,0],[65,4,1655,0,"enumerable"],[65,14,1655,0],[66,4,1655,0,"get"],[66,7,1655,0],[66,18,1655,0,"get"],[66,19,1655,0],[67,6,1655,0],[67,13,1655,63,"Root"],[67,17,1655,67],[68,4,1655,67],[69,2,1655,67],[70,2,11,0],[70,6,11,0,"_radixUiReactDialog"],[70,25,11,0],[70,28,11,0,"require"],[70,35,11,0],[70,36,11,0,"_dependencyMap"],[70,50,11,0],[71,2,11,0],[71,6,11,0,"DialogPrimitive"],[71,21,11,0],[71,24,11,0,"_interopNamespace"],[71,41,11,0],[71,42,11,0,"_radixUiReactDialog"],[71,61,11,0],[72,2,12,0],[72,6,12,0,"_react"],[72,12,12,0],[72,15,12,0,"require"],[72,22,12,0],[72,23,12,0,"_dependencyMap"],[72,37,12,0],[73,2,12,0],[73,6,12,0,"React"],[73,11,12,0],[73,14,12,0,"_interopNamespace"],[73,31,12,0],[73,32,12,0,"_react"],[73,38,12,0],[74,2,13,0],[74,6,13,0,"React__default"],[74,20,13,0],[74,23,13,0,"_interopDefault"],[74,38,13,0],[74,39,13,0,"_react"],[74,45,13,0],[75,2,2,0],[75,11,2,9,"__insertCSS"],[75,22,2,20,"__insertCSS"],[75,23,2,21,"code"],[75,27,2,25],[75,29,2,27],[76,4,3,2],[76,8,3,6],[76,9,3,7,"code"],[76,13,3,11],[76,17,3,15],[76,24,3,22,"document"],[76,32,3,30],[76,36,3,34],[76,47,3,45],[76,49,3,47],[77,4,4,2],[77,8,4,6,"head"],[77,12,4,10],[77,15,4,13,"document"],[77,23,4,21],[77,24,4,22,"head"],[77,28,4,26],[77,32,4,30,"document"],[77,40,4,38],[77,41,4,39,"getElementsByTagName"],[77,61,4,59],[77,62,4,60],[77,68,4,66],[77,69,4,67],[77,70,4,68],[77,71,4,69],[77,72,4,70],[78,4,5,2],[78,8,5,6,"style"],[78,13,5,11],[78,16,5,14,"document"],[78,24,5,22],[78,25,5,23,"createElement"],[78,38,5,36],[78,39,5,37],[78,46,5,44],[78,47,5,45],[79,4,6,2,"style"],[79,9,6,7],[79,10,6,8,"type"],[79,14,6,12],[79,17,6,15],[79,27,6,25],[80,4,7,2,"head"],[80,8,7,6],[80,9,7,7,"appendChild"],[80,20,7,18],[80,21,7,19,"style"],[80,26,7,24],[80,27,7,25],[81,4,8,3,"style"],[81,9,8,8],[81,10,8,9,"styleSheet"],[81,20,8,19],[81,23,8,23,"style"],[81,28,8,28],[81,29,8,29,"styleSheet"],[81,39,8,39],[81,40,8,40,"cssText"],[81,47,8,47],[81,50,8,50,"code"],[81,54,8,54],[81,57,8,58,"style"],[81,62,8,63],[81,63,8,64,"appendChild"],[81,74,8,75],[81,75,8,76,"document"],[81,83,8,84],[81,84,8,85,"createTextNode"],[81,98,8,99],[81,99,8,100,"code"],[81,103,8,104],[81,104,8,105],[81,105,8,106],[82,2,9,0],[83,2,15,0],[83,8,15,6,"DrawerContext"],[83,21,15,19],[83,37,15,22,"React__default"],[83,51,15,36],[83,52,15,36,"default"],[83,59,15,36],[83,60,15,37,"createContext"],[83,73,15,50],[83,74,15,51],[84,4,16,4,"drawerRef"],[84,13,16,13],[84,15,16,15],[85,6,17,8,"current"],[85,13,17,15],[85,15,17,17],[86,4,18,4],[86,5,18,5],[87,4,19,4,"overlayRef"],[87,14,19,14],[87,16,19,16],[88,6,20,8,"current"],[88,13,20,15],[88,15,20,17],[89,4,21,4],[89,5,21,5],[90,4,22,4,"onPress"],[90,11,22,11],[90,13,22,13,"onPress"],[90,14,22,13],[90,19,22,17],[90,20,22,18],[90,21,22,19],[91,4,23,4,"onRelease"],[91,13,23,13],[91,15,23,15,"onRelease"],[91,16,23,15],[91,21,23,19],[91,22,23,20],[91,23,23,21],[92,4,24,4,"onDrag"],[92,10,24,10],[92,12,24,12,"onDrag"],[92,13,24,12],[92,18,24,16],[92,19,24,17],[92,20,24,18],[93,4,25,4,"onNestedDrag"],[93,16,25,16],[93,18,25,18,"onNestedDrag"],[93,19,25,18],[93,24,25,22],[93,25,25,23],[93,26,25,24],[94,4,26,4,"onNestedOpenChange"],[94,22,26,22],[94,24,26,24,"onNestedOpenChange"],[94,25,26,24],[94,30,26,28],[94,31,26,29],[94,32,26,30],[95,4,27,4,"onNestedRelease"],[95,19,27,19],[95,21,27,21,"onNestedRelease"],[95,22,27,21],[95,27,27,25],[95,28,27,26],[95,29,27,27],[96,4,28,4,"openProp"],[96,12,28,12],[96,14,28,14,"undefined"],[96,23,28,23],[97,4,29,4,"dismissible"],[97,15,29,15],[97,17,29,17],[97,22,29,22],[98,4,30,4,"isOpen"],[98,10,30,10],[98,12,30,12],[98,17,30,17],[99,4,31,4,"isDragging"],[99,14,31,14],[99,16,31,16],[99,21,31,21],[100,4,32,4,"keyboardIsOpen"],[100,18,32,18],[100,20,32,20],[101,6,33,8,"current"],[101,13,33,15],[101,15,33,17],[102,4,34,4],[102,5,34,5],[103,4,35,4,"snapPointsOffset"],[103,20,35,20],[103,22,35,22],[103,26,35,26],[104,4,36,4,"snapPoints"],[104,14,36,14],[104,16,36,16],[104,20,36,20],[105,4,37,4,"handleOnly"],[105,14,37,14],[105,16,37,16],[105,21,37,21],[106,4,38,4,"modal"],[106,9,38,9],[106,11,38,11],[106,16,38,16],[107,4,39,4,"shouldFade"],[107,14,39,14],[107,16,39,16],[107,21,39,21],[108,4,40,4,"activeSnapPoint"],[108,19,40,19],[108,21,40,21],[108,25,40,25],[109,4,41,4,"onOpenChange"],[109,16,41,16],[109,18,41,18,"onOpenChange"],[109,19,41,18],[109,24,41,22],[109,25,41,23],[109,26,41,24],[110,4,42,4,"setActiveSnapPoint"],[110,22,42,22],[110,24,42,24,"setActiveSnapPoint"],[110,25,42,24],[110,30,42,28],[110,31,42,29],[110,32,42,30],[111,4,43,4,"closeDrawer"],[111,15,43,15],[111,17,43,17,"closeDrawer"],[111,18,43,17],[111,23,43,21],[111,24,43,22],[111,25,43,23],[112,4,44,4,"direction"],[112,13,44,13],[112,15,44,15],[112,23,44,23],[113,4,45,4,"shouldAnimate"],[113,17,45,17],[113,19,45,19],[114,6,46,8,"current"],[114,13,46,15],[114,15,46,17],[115,4,47,4],[115,5,47,5],[116,4,48,4,"shouldScaleBackground"],[116,25,48,25],[116,27,48,27],[116,32,48,32],[117,4,49,4,"setBackgroundColorOnScale"],[117,29,49,29],[117,31,49,31],[117,35,49,35],[118,4,50,4,"noBodyStyles"],[118,16,50,16],[118,18,50,18],[118,23,50,23],[119,4,51,4,"container"],[119,13,51,13],[119,15,51,15],[119,19,51,19],[120,4,52,4,"autoFocus"],[120,13,52,13],[120,15,52,15],[121,2,53,0],[121,3,53,1],[121,4,53,2],[122,2,54,0],[122,8,54,6,"useDrawerContext"],[122,24,54,22],[122,27,54,25,"useDrawerContext"],[122,28,54,25],[122,33,54,29],[123,4,55,4],[123,10,55,10,"context"],[123,17,55,17],[123,20,55,20,"React__default"],[123,34,55,34],[123,35,55,34,"default"],[123,42,55,34],[123,43,55,35,"useContext"],[123,53,55,45],[123,54,55,46,"DrawerContext"],[123,67,55,59],[123,68,55,60],[124,4,56,4],[124,8,56,8],[124,9,56,9,"context"],[124,16,56,16],[124,18,56,18],[125,6,57,8],[125,12,57,14],[125,16,57,18,"Error"],[125,21,57,23],[125,22,57,24],[125,74,57,76],[125,75,57,77],[126,4,58,4],[127,4,59,4],[127,11,59,11,"context"],[127,18,59,18],[128,2,60,0],[128,3,60,1],[129,2,62,0,"__insertCSS"],[129,13,62,11],[129,14,62,12],[129,5135,62,5133],[129,5136,62,5134],[130,2,64,0],[130,11,64,9,"isMobileFirefox"],[130,26,64,24,"isMobileFirefox"],[130,27,64,24],[130,29,64,27],[131,4,65,4],[131,10,65,10,"userAgent"],[131,19,65,19],[131,22,65,22,"navigator"],[131,31,65,31],[131,32,65,32,"userAgent"],[131,41,65,41],[132,4,66,4],[132,11,66,11],[132,18,66,18,"window"],[132,24,66,24],[132,29,66,29],[132,40,66,40],[132,45,66,45],[132,54,66,54],[132,55,66,55,"test"],[132,59,66,59],[132,60,66,60,"userAgent"],[132,69,66,69],[132,70,66,70],[132,74,66,74],[132,82,66,82],[132,83,66,83,"test"],[132,87,66,87],[132,88,66,88,"userAgent"],[132,97,66,97],[132,98,66,98],[133,4,66,102],[134,4,67,4],[134,11,67,11],[134,12,67,12,"test"],[134,16,67,16],[134,17,67,17,"userAgent"],[134,26,67,26],[134,27,67,27],[134,28,67,28],[135,4,67,28],[135,5,68,5],[136,2,69,0],[137,2,70,0],[137,11,70,9,"isMac"],[137,16,70,14,"isMac"],[137,17,70,14],[137,19,70,17],[138,4,71,4],[138,11,71,11,"testPlatform"],[138,23,71,23],[138,24,71,24],[138,30,71,30],[138,31,71,31],[139,2,72,0],[140,2,73,0],[140,11,73,9,"isIPhone"],[140,19,73,17,"isIPhone"],[140,20,73,17],[140,22,73,20],[141,4,74,4],[141,11,74,11,"testPlatform"],[141,23,74,23],[141,24,74,24],[141,33,74,33],[141,34,74,34],[142,2,75,0],[143,2,76,0],[143,11,76,9,"isSafari"],[143,19,76,17,"isSafari"],[143,20,76,17],[143,22,76,20],[144,4,77,4],[144,11,77,11],[144,43,77,43],[144,44,77,44,"test"],[144,48,77,48],[144,49,77,49,"navigator"],[144,58,77,58],[144,59,77,59,"userAgent"],[144,68,77,68],[144,69,77,69],[145,2,78,0],[146,2,79,0],[146,11,79,9,"isIPad"],[146,17,79,15,"isIPad"],[146,18,79,15],[146,20,79,18],[147,4,80,4],[147,11,80,11,"testPlatform"],[147,23,80,23],[147,24,80,24],[147,31,80,31],[147,32,80,32],[148,4,80,36],[149,4,81,4,"isMac"],[149,9,81,9],[149,10,81,10],[149,11,81,11],[149,15,81,15,"navigator"],[149,24,81,24],[149,25,81,25,"maxTouchPoints"],[149,39,81,39],[149,42,81,42],[149,43,81,43],[150,2,82,0],[151,2,83,0],[151,11,83,9,"isIOS"],[151,16,83,14,"isIOS"],[151,17,83,14],[151,19,83,17],[152,4,84,4],[152,11,84,11,"isIPhone"],[152,19,84,19],[152,20,84,20],[152,21,84,21],[152,25,84,25,"isIPad"],[152,31,84,31],[152,32,84,32],[152,33,84,33],[153,2,85,0],[154,2,86,0],[154,11,86,9,"testPlatform"],[154,23,86,21,"testPlatform"],[154,24,86,22,"re"],[154,26,86,24],[154,28,86,26],[155,4,87,4],[155,11,87,11],[155,18,87,18,"window"],[155,24,87,24],[155,29,87,29],[155,40,87,40],[155,44,87,44,"window"],[155,50,87,50],[155,51,87,51,"navigator"],[155,60,87,60],[155,64,87,64],[155,68,87,68],[155,71,87,71,"re"],[155,73,87,73],[155,74,87,74,"test"],[155,78,87,78],[155,79,87,79,"window"],[155,85,87,85],[155,86,87,86,"navigator"],[155,95,87,95],[155,96,87,96,"platform"],[155,104,87,104],[155,105,87,105],[155,108,87,108,"undefined"],[155,117,87,117],[156,2,88,0],[158,2,90,0],[159,2,91,0],[159,8,91,6,"KEYBOARD_BUFFER"],[159,23,91,21],[159,26,91,24],[159,28,91,26],[160,2,92,0],[160,8,92,6,"useIsomorphicLayoutEffect"],[160,33,92,31],[160,36,92,34],[160,43,92,41,"window"],[160,49,92,47],[160,54,92,52],[160,65,92,63],[160,68,92,66,"useLayoutEffect"],[160,74,92,81],[160,75,92,81,"useLayoutEffect"],[160,90,92,81],[160,93,92,84,"useEffect"],[160,99,92,93],[160,100,92,93,"useEffect"],[160,109,92,93],[161,2,93,0],[161,11,93,9,"chain$1"],[161,18,93,16,"chain$1"],[161,19,93,17],[161,22,93,20,"callbacks"],[161,31,93,29],[161,33,93,31],[162,4,94,4],[162,11,94,11],[162,12,94,12],[162,15,94,15,"args"],[162,19,94,19],[162,24,94,22],[163,6,95,8],[163,11,95,13],[163,15,95,17,"callback"],[163,23,95,25],[163,27,95,29,"callbacks"],[163,36,95,38],[163,38,95,39],[164,8,96,12],[164,12,96,16],[164,19,96,23,"callback"],[164,27,96,31],[164,32,96,36],[164,42,96,46],[164,44,96,48],[165,10,97,16,"callback"],[165,18,97,24],[165,19,97,25],[165,22,97,28,"args"],[165,26,97,32],[165,27,97,33],[166,8,98,12],[167,6,99,8],[168,4,100,4],[168,5,100,5],[169,2,101,0],[170,2,102,0],[171,2,103,0],[171,8,103,6,"visualViewport"],[171,22,103,20],[171,25,103,23],[171,32,103,30,"document"],[171,40,103,38],[171,45,103,43],[171,56,103,54],[171,60,103,58,"window"],[171,66,103,64],[171,67,103,65,"visualViewport"],[171,81,103,79],[172,2,104,0],[172,11,104,9,"isScrollable"],[172,23,104,21,"isScrollable"],[172,24,104,22,"node"],[172,28,104,26],[172,30,104,28],[173,4,105,4],[173,8,105,8,"style"],[173,13,105,13],[173,16,105,16,"window"],[173,22,105,22],[173,23,105,23,"getComputedStyle"],[173,39,105,39],[173,40,105,40,"node"],[173,44,105,44],[173,45,105,45],[174,4,106,4],[174,11,106,11],[174,26,106,26],[174,27,106,27,"test"],[174,31,106,31],[174,32,106,32,"style"],[174,37,106,37],[174,38,106,38,"overflow"],[174,46,106,46],[174,49,106,49,"style"],[174,54,106,54],[174,55,106,55,"overflowX"],[174,64,106,64],[174,67,106,67,"style"],[174,72,106,72],[174,73,106,73,"overflowY"],[174,82,106,82],[174,83,106,83],[175,2,107,0],[176,2,108,0],[176,11,108,9,"getScrollParent"],[176,26,108,24,"getScrollParent"],[176,27,108,25,"node"],[176,31,108,29],[176,33,108,31],[177,4,109,4],[177,8,109,8,"isScrollable"],[177,20,109,20],[177,21,109,21,"node"],[177,25,109,25],[177,26,109,26],[177,28,109,28],[178,6,110,8,"node"],[178,10,110,12],[178,13,110,15,"node"],[178,17,110,19],[178,18,110,20,"parentElement"],[178,31,110,33],[179,4,111,4],[180,4,112,4],[180,11,112,10,"node"],[180,15,112,14],[180,19,112,18],[180,20,112,19,"isScrollable"],[180,32,112,31],[180,33,112,32,"node"],[180,37,112,36],[180,38,112,37],[180,40,112,38],[181,6,113,8,"node"],[181,10,113,12],[181,13,113,15,"node"],[181,17,113,19],[181,18,113,20,"parentElement"],[181,31,113,33],[182,4,114,4],[183,4,115,4],[183,11,115,11,"node"],[183,15,115,15],[183,19,115,19,"document"],[183,27,115,27],[183,28,115,28,"scrollingElement"],[183,44,115,44],[183,48,115,48,"document"],[183,56,115,56],[183,57,115,57,"documentElement"],[183,72,115,72],[184,2,116,0],[185,2,117,0],[186,2,118,0],[186,8,118,6,"nonTextInputTypes"],[186,25,118,23],[186,28,118,26],[186,32,118,30,"Set"],[186,35,118,33],[186,36,118,34],[186,37,119,4],[186,47,119,14],[186,49,120,4],[186,56,120,11],[186,58,121,4],[186,65,121,11],[186,67,122,4],[186,74,122,11],[186,76,123,4],[186,82,123,10],[186,84,124,4],[186,91,124,11],[186,93,125,4],[186,101,125,12],[186,103,126,4],[186,111,126,12],[186,113,127,4],[186,120,127,11],[186,121,128,1],[186,122,128,2],[187,2,129,0],[188,2,130,0],[188,6,130,4,"preventScrollCount"],[188,24,130,22],[188,27,130,25],[188,28,130,26],[189,2,131,0],[189,6,131,4,"restore"],[189,13,131,11],[190,2,132,0],[191,0,133,0],[192,0,134,0],[193,0,135,0],[194,0,136,0],[195,2,136,4],[195,11,136,13,"usePreventScroll"],[195,27,136,29,"usePreventScroll"],[195,28,136,30,"options"],[195,35,136,37],[195,38,136,40],[195,39,136,41],[195,40,136,42],[195,42,136,44],[196,4,137,4],[196,8,137,8],[197,6,137,10,"isDisabled"],[198,4,137,21],[198,5,137,22],[198,8,137,25,"options"],[198,15,137,32],[199,4,138,4,"useIsomorphicLayoutEffect"],[199,29,138,29],[199,30,138,30],[199,36,138,34],[200,6,139,8],[200,10,139,12,"isDisabled"],[200,20,139,22],[200,22,139,24],[201,8,140,12],[202,6,141,8],[203,6,142,8,"preventScrollCount"],[203,24,142,26],[203,26,142,28],[204,6,143,8],[204,10,143,12,"preventScrollCount"],[204,28,143,30],[204,33,143,35],[204,34,143,36],[204,36,143,38],[205,8,144,12],[205,12,144,16,"isIOS"],[205,17,144,21],[205,18,144,22],[205,19,144,23],[205,21,144,25],[206,10,145,16,"restore"],[206,17,145,23],[206,20,145,26,"preventScrollMobileSafari"],[206,45,145,51],[206,46,145,52],[206,47,145,53],[207,8,146,12],[208,6,147,8],[209,6,148,8],[209,13,148,15],[209,19,148,19],[210,8,149,12,"preventScrollCount"],[210,26,149,30],[210,28,149,32],[211,8,150,12],[211,12,150,16,"preventScrollCount"],[211,30,150,34],[211,35,150,39],[211,36,150,40],[211,38,150,42],[212,10,151,16,"restore"],[212,17,151,23],[212,21,151,27],[212,25,151,31],[212,28,151,34],[212,33,151,39],[212,34,151,40],[212,37,151,43,"restore"],[212,44,151,50],[212,45,151,51],[212,46,151,52],[213,8,152,12],[214,6,153,8],[214,7,153,9],[215,4,154,4],[215,5,154,5],[215,7,154,7],[215,8,155,8,"isDisabled"],[215,18,155,18],[215,19,156,5],[215,20,156,6],[216,2,157,0],[217,2,158,0],[218,2,159,0],[219,2,160,0],[220,2,161,0],[221,2,162,0],[222,2,163,0],[223,2,164,0],[224,2,165,0],[225,2,166,0],[226,2,167,0],[227,2,168,0],[228,2,169,0],[229,2,170,0],[230,2,171,0],[231,2,172,0],[232,2,173,0],[233,2,174,0],[234,2,175,0],[235,2,176,0],[236,2,177,0],[237,2,178,0],[238,2,179,0],[239,2,180,0],[240,2,181,0],[241,2,182,0],[242,2,183,0],[243,2,184,0],[243,11,184,9,"preventScrollMobileSafari"],[243,36,184,34,"preventScrollMobileSafari"],[243,37,184,34],[243,39,184,37],[244,4,185,4],[244,8,185,8,"scrollable"],[244,18,185,18],[245,4,186,4],[245,8,186,8,"lastY"],[245,13,186,13],[245,16,186,16],[245,17,186,17],[246,4,187,4],[246,8,187,8,"onTouchStart"],[246,20,187,20],[246,23,187,24,"e"],[246,24,187,25],[246,28,187,28],[247,6,188,8],[248,6,189,8,"scrollable"],[248,16,189,18],[248,19,189,21,"getScrollParent"],[248,34,189,36],[248,35,189,37,"e"],[248,36,189,38],[248,37,189,39,"target"],[248,43,189,45],[248,44,189,46],[249,6,190,8],[249,10,190,12,"scrollable"],[249,20,190,22],[249,25,190,27,"document"],[249,33,190,35],[249,34,190,36,"documentElement"],[249,49,190,51],[249,53,190,55,"scrollable"],[249,63,190,65],[249,68,190,70,"document"],[249,76,190,78],[249,77,190,79,"body"],[249,81,190,83],[249,83,190,85],[250,8,191,12],[251,6,192,8],[252,6,193,8,"lastY"],[252,11,193,13],[252,14,193,16,"e"],[252,15,193,17],[252,16,193,18,"changedTouches"],[252,30,193,32],[252,31,193,33],[252,32,193,34],[252,33,193,35],[252,34,193,36,"pageY"],[252,39,193,41],[253,4,194,4],[253,5,194,5],[254,4,195,4],[254,8,195,8,"onTouchMove"],[254,19,195,19],[254,22,195,23,"e"],[254,23,195,24],[254,27,195,27],[255,6,196,8],[256,6,197,8],[256,10,197,12],[256,11,197,13,"scrollable"],[256,21,197,23],[256,25,197,27,"scrollable"],[256,35,197,37],[256,40,197,42,"document"],[256,48,197,50],[256,49,197,51,"documentElement"],[256,64,197,66],[256,68,197,70,"scrollable"],[256,78,197,80],[256,83,197,85,"document"],[256,91,197,93],[256,92,197,94,"body"],[256,96,197,98],[256,98,197,100],[257,8,198,12,"e"],[257,9,198,13],[257,10,198,14,"preventDefault"],[257,24,198,28],[257,25,198,29],[257,26,198,30],[258,8,199,12],[259,6,200,8],[260,6,201,8],[261,6,202,8],[262,6,203,8],[263,6,204,8],[264,6,205,8],[264,10,205,12,"y"],[264,11,205,13],[264,14,205,16,"e"],[264,15,205,17],[264,16,205,18,"changedTouches"],[264,30,205,32],[264,31,205,33],[264,32,205,34],[264,33,205,35],[264,34,205,36,"pageY"],[264,39,205,41],[265,6,206,8],[265,10,206,12,"scrollTop"],[265,19,206,21],[265,22,206,24,"scrollable"],[265,32,206,34],[265,33,206,35,"scrollTop"],[265,42,206,44],[266,6,207,8],[266,10,207,12,"bottom"],[266,16,207,18],[266,19,207,21,"scrollable"],[266,29,207,31],[266,30,207,32,"scrollHeight"],[266,42,207,44],[266,45,207,47,"scrollable"],[266,55,207,57],[266,56,207,58,"clientHeight"],[266,68,207,70],[267,6,208,8],[267,10,208,12,"bottom"],[267,16,208,18],[267,21,208,23],[267,22,208,24],[267,24,208,26],[268,8,209,12],[269,6,210,8],[270,6,211,8],[270,10,211,12,"scrollTop"],[270,19,211,21],[270,23,211,25],[270,24,211,26],[270,28,211,30,"y"],[270,29,211,31],[270,32,211,34,"lastY"],[270,37,211,39],[270,41,211,43,"scrollTop"],[270,50,211,52],[270,54,211,56,"bottom"],[270,60,211,62],[270,64,211,66,"y"],[270,65,211,67],[270,68,211,70,"lastY"],[270,73,211,75],[270,75,211,77],[271,8,212,12,"e"],[271,9,212,13],[271,10,212,14,"preventDefault"],[271,24,212,28],[271,25,212,29],[271,26,212,30],[272,6,213,8],[273,6,214,8,"lastY"],[273,11,214,13],[273,14,214,16,"y"],[273,15,214,17],[274,4,215,4],[274,5,215,5],[275,4,216,4],[275,8,216,8,"onTouchEnd"],[275,18,216,18],[275,21,216,22,"e"],[275,22,216,23],[275,26,216,26],[276,6,217,8],[276,10,217,12,"target"],[276,16,217,18],[276,19,217,21,"e"],[276,20,217,22],[276,21,217,23,"target"],[276,27,217,29],[277,6,218,8],[278,6,219,8],[278,10,219,12,"isInput"],[278,17,219,19],[278,18,219,20,"target"],[278,24,219,26],[278,25,219,27],[278,29,219,31,"target"],[278,35,219,37],[278,40,219,42,"document"],[278,48,219,50],[278,49,219,51,"activeElement"],[278,62,219,64],[278,64,219,66],[279,8,220,12,"e"],[279,9,220,13],[279,10,220,14,"preventDefault"],[279,24,220,28],[279,25,220,29],[279,26,220,30],[280,8,221,12],[281,8,222,12],[282,8,223,12],[283,8,224,12,"target"],[283,14,224,18],[283,15,224,19,"style"],[283,20,224,24],[283,21,224,25,"transform"],[283,30,224,34],[283,33,224,37],[283,54,224,58],[284,8,225,12,"target"],[284,14,225,18],[284,15,225,19,"focus"],[284,20,225,24],[284,21,225,25],[284,22,225,26],[285,8,226,12,"requestAnimationFrame"],[285,29,226,33],[285,30,226,34],[285,36,226,38],[286,10,227,16,"target"],[286,16,227,22],[286,17,227,23,"style"],[286,22,227,28],[286,23,227,29,"transform"],[286,32,227,38],[286,35,227,41],[286,37,227,43],[287,8,228,12],[287,9,228,13],[287,10,228,14],[288,6,229,8],[289,4,230,4],[289,5,230,5],[290,4,231,4],[290,8,231,8,"onFocus"],[290,15,231,15],[290,18,231,19,"e"],[290,19,231,20],[290,23,231,23],[291,6,232,8],[291,10,232,12,"target"],[291,16,232,18],[291,19,232,21,"e"],[291,20,232,22],[291,21,232,23,"target"],[291,27,232,29],[292,6,233,8],[292,10,233,12,"isInput"],[292,17,233,19],[292,18,233,20,"target"],[292,24,233,26],[292,25,233,27],[292,27,233,29],[293,8,234,12],[294,8,235,12],[295,8,236,12],[296,8,237,12],[297,8,238,12,"target"],[297,14,238,18],[297,15,238,19,"style"],[297,20,238,24],[297,21,238,25,"transform"],[297,30,238,34],[297,33,238,37],[297,54,238,58],[298,8,239,12,"requestAnimationFrame"],[298,29,239,33],[298,30,239,34],[298,36,239,38],[299,10,240,16,"target"],[299,16,240,22],[299,17,240,23,"style"],[299,22,240,28],[299,23,240,29,"transform"],[299,32,240,38],[299,35,240,41],[299,37,240,43],[300,10,241,16],[301,10,242,16],[302,10,243,16],[302,14,243,20,"visualViewport"],[302,28,243,34],[302,30,243,36],[303,12,244,20],[303,16,244,24,"visualViewport"],[303,30,244,38],[303,31,244,39,"height"],[303,37,244,45],[303,40,244,48,"window"],[303,46,244,54],[303,47,244,55,"innerHeight"],[303,58,244,66],[303,60,244,68],[304,14,245,24],[305,14,246,24],[306,14,247,24,"requestAnimationFrame"],[306,35,247,45],[306,36,247,46],[306,42,247,50],[307,16,248,28,"scrollIntoView"],[307,30,248,42],[307,31,248,43,"target"],[307,37,248,49],[307,38,248,50],[308,14,249,24],[308,15,249,25],[308,16,249,26],[309,12,250,20],[309,13,250,21],[309,19,250,27],[310,14,251,24],[311,14,252,24],[312,14,253,24,"visualViewport"],[312,28,253,38],[312,29,253,39,"addEventListener"],[312,45,253,55],[312,46,253,56],[312,54,253,64],[312,56,253,66],[312,62,253,70,"scrollIntoView"],[312,76,253,84],[312,77,253,85,"target"],[312,83,253,91],[312,84,253,92],[312,86,253,94],[313,16,254,28,"once"],[313,20,254,32],[313,22,254,34],[314,14,255,24],[314,15,255,25],[314,16,255,26],[315,12,256,20],[316,10,257,16],[317,8,258,12],[317,9,258,13],[317,10,258,14],[318,6,259,8],[319,4,260,4],[319,5,260,5],[320,4,261,4],[320,8,261,8,"onWindowScroll"],[320,22,261,22],[320,25,261,25,"onWindowScroll"],[320,26,261,25],[320,31,261,29],[321,6,262,8],[322,6,263,8],[323,6,264,8,"window"],[323,12,264,14],[323,13,264,15,"scrollTo"],[323,21,264,23],[323,22,264,24],[323,23,264,25],[323,25,264,27],[323,26,264,28],[323,27,264,29],[324,4,265,4],[324,5,265,5],[325,4,266,4],[326,4,267,4],[327,4,268,4],[328,4,269,4],[328,8,269,8,"scrollX"],[328,15,269,15],[328,18,269,18,"window"],[328,24,269,24],[328,25,269,25,"pageXOffset"],[328,36,269,36],[329,4,270,4],[329,8,270,8,"scrollY"],[329,15,270,15],[329,18,270,18,"window"],[329,24,270,24],[329,25,270,25,"pageYOffset"],[329,36,270,36],[330,4,271,4],[330,8,271,8,"restoreStyles"],[330,21,271,21],[330,24,271,24,"chain$1"],[330,31,271,31],[330,32,271,32,"setStyle"],[330,40,271,40],[330,41,271,41,"document"],[330,49,271,49],[330,50,271,50,"documentElement"],[330,65,271,65],[330,67,271,67],[330,81,271,81],[330,83,271,83],[330,86,271,86,"window"],[330,92,271,92],[330,93,271,93,"innerWidth"],[330,103,271,103],[330,106,271,106,"document"],[330,114,271,114],[330,115,271,115,"documentElement"],[330,130,271,130],[330,131,271,131,"clientWidth"],[330,142,271,142],[330,146,271,146],[330,147,271,147],[330,148,271,148],[331,4,272,4],[332,4,273,4,"window"],[332,10,273,10],[332,11,273,11,"scrollTo"],[332,19,273,19],[332,20,273,20],[332,21,273,21],[332,23,273,23],[332,24,273,24],[332,25,273,25],[333,4,274,4],[333,8,274,8,"removeEvents"],[333,20,274,20],[333,23,274,23,"chain$1"],[333,30,274,30],[333,31,274,31,"addEvent"],[333,39,274,39],[333,40,274,40,"document"],[333,48,274,48],[333,50,274,50],[333,62,274,62],[333,64,274,64,"onTouchStart"],[333,76,274,76],[333,78,274,78],[334,6,275,8,"passive"],[334,13,275,15],[334,15,275,17],[334,20,275,22],[335,6,276,8,"capture"],[335,13,276,15],[335,15,276,17],[336,4,277,4],[336,5,277,5],[336,6,277,6],[336,8,277,8,"addEvent"],[336,16,277,16],[336,17,277,17,"document"],[336,25,277,25],[336,27,277,27],[336,38,277,38],[336,40,277,40,"onTouchMove"],[336,51,277,51],[336,53,277,53],[337,6,278,8,"passive"],[337,13,278,15],[337,15,278,17],[337,20,278,22],[338,6,279,8,"capture"],[338,13,279,15],[338,15,279,17],[339,4,280,4],[339,5,280,5],[339,6,280,6],[339,8,280,8,"addEvent"],[339,16,280,16],[339,17,280,17,"document"],[339,25,280,25],[339,27,280,27],[339,37,280,37],[339,39,280,39,"onTouchEnd"],[339,49,280,49],[339,51,280,51],[340,6,281,8,"passive"],[340,13,281,15],[340,15,281,17],[340,20,281,22],[341,6,282,8,"capture"],[341,13,282,15],[341,15,282,17],[342,4,283,4],[342,5,283,5],[342,6,283,6],[342,8,283,8,"addEvent"],[342,16,283,16],[342,17,283,17,"document"],[342,25,283,25],[342,27,283,27],[342,34,283,34],[342,36,283,36,"onFocus"],[342,43,283,43],[342,45,283,45],[342,49,283,49],[342,50,283,50],[342,52,283,52,"addEvent"],[342,60,283,60],[342,61,283,61,"window"],[342,67,283,67],[342,69,283,69],[342,77,283,77],[342,79,283,79,"onWindowScroll"],[342,93,283,93],[342,94,283,94],[342,95,283,95],[343,4,284,4],[343,11,284,11],[343,17,284,15],[344,6,285,8],[345,6,286,8,"restoreStyles"],[345,19,286,21],[345,20,286,22],[345,21,286,23],[346,6,287,8,"removeEvents"],[346,18,287,20],[346,19,287,21],[346,20,287,22],[347,6,288,8,"window"],[347,12,288,14],[347,13,288,15,"scrollTo"],[347,21,288,23],[347,22,288,24,"scrollX"],[347,29,288,31],[347,31,288,33,"scrollY"],[347,38,288,40],[347,39,288,41],[348,4,289,4],[348,5,289,5],[349,2,290,0],[350,2,291,0],[351,2,292,0],[351,11,292,9,"setStyle"],[351,19,292,17,"setStyle"],[351,20,292,18,"element"],[351,27,292,25],[351,29,292,27,"style"],[351,34,292,32],[351,36,292,34,"value"],[351,41,292,39],[351,43,292,41],[352,4,293,4],[353,4,294,4],[354,4,295,4],[354,8,295,8,"cur"],[354,11,295,11],[354,14,295,14,"element"],[354,21,295,21],[354,22,295,22,"style"],[354,27,295,27],[354,28,295,28,"style"],[354,33,295,33],[354,34,295,34],[355,4,296,4],[356,4,297,4,"element"],[356,11,297,11],[356,12,297,12,"style"],[356,17,297,17],[356,18,297,18,"style"],[356,23,297,23],[356,24,297,24],[356,27,297,27,"value"],[356,32,297,32],[357,4,298,4],[357,11,298,11],[357,17,298,15],[358,6,299,8],[359,6,300,8,"element"],[359,13,300,15],[359,14,300,16,"style"],[359,19,300,21],[359,20,300,22,"style"],[359,25,300,27],[359,26,300,28],[359,29,300,31,"cur"],[359,32,300,34],[360,4,301,4],[360,5,301,5],[361,2,302,0],[362,2,303,0],[363,2,304,0],[363,11,304,9,"addEvent"],[363,19,304,17,"addEvent"],[363,20,304,18,"target"],[363,26,304,24],[363,28,304,26,"event"],[363,33,304,31],[363,35,304,33,"handler"],[363,42,304,40],[363,44,304,42,"options"],[363,51,304,49],[363,53,304,51],[364,4,305,4],[365,4,306,4,"target"],[365,10,306,10],[365,11,306,11,"addEventListener"],[365,27,306,27],[365,28,306,28,"event"],[365,33,306,33],[365,35,306,35,"handler"],[365,42,306,42],[365,44,306,44,"options"],[365,51,306,51],[365,52,306,52],[366,4,307,4],[366,11,307,11],[366,17,307,15],[367,6,308,8],[368,6,309,8,"target"],[368,12,309,14],[368,13,309,15,"removeEventListener"],[368,32,309,34],[368,33,309,35,"event"],[368,38,309,40],[368,40,309,42,"handler"],[368,47,309,49],[368,49,309,51,"options"],[368,56,309,58],[368,57,309,59],[369,4,310,4],[369,5,310,5],[370,2,311,0],[371,2,312,0],[371,11,312,9,"scrollIntoView"],[371,25,312,23,"scrollIntoView"],[371,26,312,24,"target"],[371,32,312,30],[371,34,312,32],[372,4,313,4],[372,8,313,8,"root"],[372,12,313,12],[372,15,313,15,"document"],[372,23,313,23],[372,24,313,24,"scrollingElement"],[372,40,313,40],[372,44,313,44,"document"],[372,52,313,52],[372,53,313,53,"documentElement"],[372,68,313,68],[373,4,314,4],[373,11,314,10,"target"],[373,17,314,16],[373,21,314,20,"target"],[373,27,314,26],[373,32,314,31,"root"],[373,36,314,35],[373,38,314,36],[374,6,315,8],[375,6,316,8],[375,10,316,12,"scrollable"],[375,20,316,22],[375,23,316,25,"getScrollParent"],[375,38,316,40],[375,39,316,41,"target"],[375,45,316,47],[375,46,316,48],[376,6,317,8],[376,10,317,12,"scrollable"],[376,20,317,22],[376,25,317,27,"document"],[376,33,317,35],[376,34,317,36,"documentElement"],[376,49,317,51],[376,53,317,55,"scrollable"],[376,63,317,65],[376,68,317,70,"document"],[376,76,317,78],[376,77,317,79,"body"],[376,81,317,83],[376,85,317,87,"scrollable"],[376,95,317,97],[376,100,317,102,"target"],[376,106,317,108],[376,108,317,110],[377,8,318,12],[377,12,318,16,"scrollableTop"],[377,25,318,29],[377,28,318,32,"scrollable"],[377,38,318,42],[377,39,318,43,"getBoundingClientRect"],[377,60,318,64],[377,61,318,65],[377,62,318,66],[377,63,318,67,"top"],[377,66,318,70],[378,8,319,12],[378,12,319,16,"targetTop"],[378,21,319,25],[378,24,319,28,"target"],[378,30,319,34],[378,31,319,35,"getBoundingClientRect"],[378,52,319,56],[378,53,319,57],[378,54,319,58],[378,55,319,59,"top"],[378,58,319,62],[379,8,320,12],[379,12,320,16,"targetBottom"],[379,24,320,28],[379,27,320,31,"target"],[379,33,320,37],[379,34,320,38,"getBoundingClientRect"],[379,55,320,59],[379,56,320,60],[379,57,320,61],[379,58,320,62,"bottom"],[379,64,320,68],[380,8,321,12],[381,8,322,12],[381,14,322,18,"keyboardHeight"],[381,28,322,32],[381,31,322,35,"scrollable"],[381,41,322,45],[381,42,322,46,"getBoundingClientRect"],[381,63,322,67],[381,64,322,68],[381,65,322,69],[381,66,322,70,"bottom"],[381,72,322,76],[381,75,322,79,"KEYBOARD_BUFFER"],[381,90,322,94],[382,8,323,12],[382,12,323,16,"targetBottom"],[382,24,323,28],[382,27,323,31,"keyboardHeight"],[382,41,323,45],[382,43,323,47],[383,10,324,16,"scrollable"],[383,20,324,26],[383,21,324,27,"scrollTop"],[383,30,324,36],[383,34,324,40,"targetTop"],[383,43,324,49],[383,46,324,52,"scrollableTop"],[383,59,324,65],[384,8,325,12],[385,6,326,8],[386,6,327,8],[387,6,328,8,"target"],[387,12,328,14],[387,15,328,17,"scrollable"],[387,25,328,27],[387,26,328,28,"parentElement"],[387,39,328,41],[388,4,329,4],[389,2,330,0],[390,2,331,0],[390,11,331,9,"isInput"],[390,18,331,16,"isInput"],[390,19,331,17,"target"],[390,25,331,23],[390,27,331,25],[391,4,332,4],[391,11,332,11,"target"],[391,17,332,17],[391,29,332,29,"HTMLInputElement"],[391,45,332,45],[391,49,332,49],[391,50,332,50,"nonTextInputTypes"],[391,67,332,67],[391,68,332,68,"has"],[391,71,332,71],[391,72,332,72,"target"],[391,78,332,78],[391,79,332,79,"type"],[391,83,332,83],[391,84,332,84],[391,88,332,88,"target"],[391,94,332,94],[391,106,332,106,"HTMLTextAreaElement"],[391,125,332,125],[391,129,332,129,"target"],[391,135,332,135],[391,147,332,147,"HTMLElement"],[391,158,332,158],[391,162,332,162,"target"],[391,168,332,168],[391,169,332,169,"isContentEditable"],[391,186,332,186],[392,2,333,0],[394,2,335,0],[395,2,336,0],[396,0,337,0],[397,0,338,0],[398,0,339,0],[399,2,339,4],[399,11,339,13,"setRef"],[399,17,339,19,"setRef"],[399,18,339,20,"ref"],[399,21,339,23],[399,23,339,25,"value"],[399,28,339,30],[399,30,339,32],[400,4,340,4],[400,8,340,8],[400,15,340,15,"ref"],[400,18,340,18],[400,23,340,23],[400,33,340,33],[400,35,340,35],[401,6,341,8,"ref"],[401,9,341,11],[401,10,341,12,"value"],[401,15,341,17],[401,16,341,18],[402,4,342,4],[402,5,342,5],[402,11,342,11],[402,15,342,15,"ref"],[402,18,342,18],[402,23,342,23],[402,27,342,27],[402,31,342,31,"ref"],[402,34,342,34],[402,39,342,39,"undefined"],[402,48,342,48],[402,50,342,50],[403,6,343,8,"ref"],[403,9,343,11],[403,10,343,12,"current"],[403,17,343,19],[403,20,343,22,"value"],[403,25,343,27],[404,4,344,4],[405,2,345,0],[406,2,346,0],[407,0,347,0],[408,0,348,0],[409,0,349,0],[410,2,349,4],[410,11,349,13,"composeRefs"],[410,22,349,24,"composeRefs"],[410,23,349,25],[410,26,349,28,"refs"],[410,30,349,32],[410,32,349,34],[411,4,350,4],[411,11,350,12,"node"],[411,15,350,16],[411,19,350,19,"refs"],[411,23,350,23],[411,24,350,24,"forEach"],[411,31,350,31],[411,32,350,33,"ref"],[411,35,350,36],[411,39,350,39,"setRef"],[411,45,350,45],[411,46,350,46,"ref"],[411,49,350,49],[411,51,350,51,"node"],[411,55,350,55],[411,56,350,56],[411,57,350,57],[412,2,351,0],[413,2,352,0],[414,0,353,0],[415,0,354,0],[416,0,355,0],[417,2,355,4],[417,11,355,13,"useComposedRefs"],[417,26,355,28,"useComposedRefs"],[417,27,355,29],[417,30,355,32,"refs"],[417,34,355,36],[417,36,355,38],[418,4,356,4],[419,4,357,4],[419,11,357,11,"React"],[419,16,357,16],[419,17,357,17,"useCallback"],[419,28,357,28],[419,29,357,29,"composeRefs"],[419,40,357,40],[419,41,357,41],[419,44,357,44,"refs"],[419,48,357,48],[419,49,357,49],[419,51,357,51,"refs"],[419,55,357,55],[419,56,357,56],[420,2,358,0],[421,2,360,0],[421,8,360,6,"cache"],[421,13,360,11],[421,16,360,14],[421,20,360,18,"WeakMap"],[421,27,360,25],[421,28,360,26],[421,29,360,27],[422,2,361,0],[422,11,361,9,"set"],[422,14,361,12,"set"],[422,15,361,13,"el"],[422,17,361,15],[422,19,361,17,"styles"],[422,25,361,23],[422,27,361,25,"ignoreCache"],[422,38,361,36],[422,41,361,39],[422,46,361,44],[422,48,361,46],[423,4,362,4],[423,8,362,8],[423,9,362,9,"el"],[423,11,362,11],[423,15,362,15],[423,17,362,17,"el"],[423,19,362,19],[423,31,362,31,"HTMLElement"],[423,42,362,42],[423,43,362,43],[423,45,362,45],[424,4,363,4],[424,8,363,8,"originalStyles"],[424,22,363,22],[424,25,363,25],[424,26,363,26],[424,27,363,27],[425,4,364,4,"Object"],[425,10,364,10],[425,11,364,11,"entries"],[425,18,364,18],[425,19,364,19,"styles"],[425,25,364,25],[425,26,364,26],[425,27,364,27,"forEach"],[425,34,364,34],[425,35,364,35],[425,36,364,36],[425,37,364,37,"key"],[425,40,364,40],[425,42,364,42,"value"],[425,47,364,47],[425,48,364,48],[425,53,364,51],[426,6,365,8],[426,10,365,12,"key"],[426,13,365,15],[426,14,365,16,"startsWith"],[426,24,365,26],[426,25,365,27],[426,29,365,31],[426,30,365,32],[426,32,365,34],[427,8,366,12,"el"],[427,10,366,14],[427,11,366,15,"style"],[427,16,366,20],[427,17,366,21,"setProperty"],[427,28,366,32],[427,29,366,33,"key"],[427,32,366,36],[427,34,366,38,"value"],[427,39,366,43],[427,40,366,44],[428,8,367,12],[429,6,368,8],[430,6,369,8,"originalStyles"],[430,20,369,22],[430,21,369,23,"key"],[430,24,369,26],[430,25,369,27],[430,28,369,30,"el"],[430,30,369,32],[430,31,369,33,"style"],[430,36,369,38],[430,37,369,39,"key"],[430,40,369,42],[430,41,369,43],[431,6,370,8,"el"],[431,8,370,10],[431,9,370,11,"style"],[431,14,370,16],[431,15,370,17,"key"],[431,18,370,20],[431,19,370,21],[431,22,370,24,"value"],[431,27,370,29],[432,4,371,4],[432,5,371,5],[432,6,371,6],[433,4,372,4],[433,8,372,8,"ignoreCache"],[433,19,372,19],[433,21,372,21],[434,4,373,4,"cache"],[434,9,373,9],[434,10,373,10,"set"],[434,13,373,13],[434,14,373,14,"el"],[434,16,373,16],[434,18,373,18,"originalStyles"],[434,32,373,32],[434,33,373,33],[435,2,374,0],[436,2,375,0],[436,11,375,9,"reset"],[436,16,375,14,"reset"],[436,17,375,15,"el"],[436,19,375,17],[436,21,375,19,"prop"],[436,25,375,23],[436,27,375,25],[437,4,376,4],[437,8,376,8],[437,9,376,9,"el"],[437,11,376,11],[437,15,376,15],[437,17,376,17,"el"],[437,19,376,19],[437,31,376,31,"HTMLElement"],[437,42,376,42],[437,43,376,43],[437,45,376,45],[438,4,377,4],[438,8,377,8,"originalStyles"],[438,22,377,22],[438,25,377,25,"cache"],[438,30,377,30],[438,31,377,31,"get"],[438,34,377,34],[438,35,377,35,"el"],[438,37,377,37],[438,38,377,38],[439,4,378,4],[439,8,378,8],[439,9,378,9,"originalStyles"],[439,23,378,23],[439,25,378,25],[440,6,379,8],[441,4,380,4],[442,4,381,4],[443,6,382,8,"el"],[443,8,382,10],[443,9,382,11,"style"],[443,14,382,16],[443,15,382,17,"prop"],[443,19,382,21],[443,20,382,22],[443,23,382,25,"originalStyles"],[443,37,382,39],[443,38,382,40,"prop"],[443,42,382,44],[443,43,382,45],[444,4,383,4],[445,2,384,0],[446,2,385,0],[446,8,385,6,"isVertical"],[446,18,385,16],[446,21,385,20,"direction"],[446,30,385,29],[446,34,385,32],[447,4,386,4],[447,12,386,11,"direction"],[447,21,386,20],[448,6,387,8],[448,11,387,13],[448,16,387,18],[449,6,388,8],[449,11,388,13],[449,19,388,21],[450,8,389,12],[450,15,389,19],[450,19,389,23],[451,6,390,8],[451,11,390,13],[451,17,390,19],[452,6,391,8],[452,11,391,13],[452,18,391,20],[453,8,392,12],[453,15,392,19],[453,20,392,24],[454,6,393,8],[455,8,394,12],[455,15,394,19,"direction"],[455,24,394,28],[456,4,395,4],[457,2,396,0],[457,3,396,1],[458,2,397,0],[458,11,397,9,"getTranslate"],[458,23,397,21,"getTranslate"],[458,24,397,22,"element"],[458,31,397,29],[458,33,397,31,"direction"],[458,42,397,40],[458,44,397,42],[459,4,398,4],[459,8,398,8],[459,9,398,9,"element"],[459,16,398,16],[459,18,398,18],[460,6,399,8],[460,13,399,15],[460,17,399,19],[461,4,400,4],[462,4,401,4],[462,10,401,10,"style"],[462,15,401,15],[462,18,401,18,"window"],[462,24,401,24],[462,25,401,25,"getComputedStyle"],[462,41,401,41],[462,42,401,42,"element"],[462,49,401,49],[462,50,401,50],[463,4,402,4],[463,10,402,10,"transform"],[463,19,402,19],[464,4,402,22],[465,4,403,4,"style"],[465,9,403,9],[465,10,403,10,"transform"],[465,19,403,19],[465,23,403,23,"style"],[465,28,403,28],[465,29,403,29,"webkitTransform"],[465,44,403,44],[465,48,403,48,"style"],[465,53,403,53],[465,54,403,54,"mozTransform"],[465,66,403,66],[466,4,404,4],[466,8,404,8,"mat"],[466,11,404,11],[466,14,404,14,"transform"],[466,23,404,23],[466,24,404,24,"match"],[466,29,404,29],[466,30,404,30],[466,50,404,50],[466,51,404,51],[467,4,405,4],[467,8,405,8,"mat"],[467,11,405,11],[467,13,405,13],[468,6,406,8],[469,6,407,8],[469,13,407,15,"parseFloat"],[469,23,407,25],[469,24,407,26,"mat"],[469,27,407,29],[469,28,407,30],[469,29,407,31],[469,30,407,32],[469,31,407,33,"split"],[469,36,407,38],[469,37,407,39],[469,41,407,43],[469,42,407,44],[469,43,407,45,"isVertical"],[469,53,407,55],[469,54,407,56,"direction"],[469,63,407,65],[469,64,407,66],[469,67,407,69],[469,69,407,71],[469,72,407,74],[469,74,407,76],[469,75,407,77],[469,76,407,78],[470,4,408,4],[471,4,409,4],[472,4,410,4,"mat"],[472,7,410,7],[472,10,410,10,"transform"],[472,19,410,19],[472,20,410,20,"match"],[472,25,410,25],[472,26,410,26],[472,44,410,44],[472,45,410,45],[473,4,411,4],[473,11,411,11,"mat"],[473,14,411,14],[473,17,411,17,"parseFloat"],[473,27,411,27],[473,28,411,28,"mat"],[473,31,411,31],[473,32,411,32],[473,33,411,33],[473,34,411,34],[473,35,411,35,"split"],[473,40,411,40],[473,41,411,41],[473,45,411,45],[473,46,411,46],[473,47,411,47,"isVertical"],[473,57,411,57],[473,58,411,58,"direction"],[473,67,411,67],[473,68,411,68],[473,71,411,71],[473,72,411,72],[473,75,411,75],[473,76,411,76],[473,77,411,77],[473,78,411,78],[473,81,411,81],[473,85,411,85],[474,2,412,0],[475,2,413,0],[475,11,413,9,"dampenValue"],[475,22,413,20,"dampenValue"],[475,23,413,21,"v"],[475,24,413,22],[475,26,413,24],[476,4,414,4],[476,11,414,11],[476,12,414,12],[476,16,414,16,"Math"],[476,20,414,20],[476,21,414,21,"log"],[476,24,414,24],[476,25,414,25,"v"],[476,26,414,26],[476,29,414,29],[476,30,414,30],[476,31,414,31],[476,34,414,34],[476,35,414,35],[476,36,414,36],[477,2,415,0],[478,2,416,0],[478,11,416,9,"assignStyle"],[478,22,416,20,"assignStyle"],[478,23,416,21,"element"],[478,30,416,28],[478,32,416,30,"style"],[478,37,416,35],[478,39,416,37],[479,4,417,4],[479,8,417,8],[479,9,417,9,"element"],[479,16,417,16],[479,18,417,18],[479,25,417,25],[479,31,417,29],[479,32,417,30],[479,33,417,31],[480,4,418,4],[480,10,418,10,"prevStyle"],[480,19,418,19],[480,22,418,22,"element"],[480,29,418,29],[480,30,418,30,"style"],[480,35,418,35],[480,36,418,36,"cssText"],[480,43,418,43],[481,4,419,4,"Object"],[481,10,419,10],[481,11,419,11,"assign"],[481,17,419,17],[481,18,419,18,"element"],[481,25,419,25],[481,26,419,26,"style"],[481,31,419,31],[481,33,419,33,"style"],[481,38,419,38],[481,39,419,39],[482,4,420,4],[482,11,420,11],[482,17,420,15],[483,6,421,8,"element"],[483,13,421,15],[483,14,421,16,"style"],[483,19,421,21],[483,20,421,22,"cssText"],[483,27,421,29],[483,30,421,32,"prevStyle"],[483,39,421,41],[484,4,422,4],[484,5,422,5],[485,2,423,0],[486,2,424,0],[487,0,425,0],[488,0,426,0],[489,2,426,4],[489,11,426,13,"chain"],[489,16,426,18,"chain"],[489,17,426,19],[489,20,426,22,"fns"],[489,23,426,25],[489,25,426,27],[490,4,427,4],[490,11,427,11],[490,12,427,12],[490,15,427,15,"args"],[490,19,427,19],[490,24,427,22],[491,6,428,8],[491,11,428,13],[491,17,428,19,"fn"],[491,19,428,21],[491,23,428,25,"fns"],[491,26,428,28],[491,28,428,29],[492,8,429,12],[492,12,429,16],[492,19,429,23,"fn"],[492,21,429,25],[492,26,429,30],[492,36,429,40],[492,38,429,42],[493,10,430,16],[494,10,431,16,"fn"],[494,12,431,18],[494,13,431,19],[494,16,431,22,"args"],[494,20,431,26],[494,21,431,27],[495,8,432,12],[496,6,433,8],[497,4,434,4],[497,5,434,5],[498,2,435,0],[499,2,437,0],[499,8,437,6,"TRANSITIONS"],[499,19,437,17],[499,22,437,20],[500,4,438,4,"DURATION"],[500,12,438,12],[500,14,438,14],[500,17,438,17],[501,4,439,4,"EASE"],[501,8,439,8],[501,10,439,10],[501,11,440,8],[501,15,440,12],[501,17,441,8],[501,21,441,12],[501,23,442,8],[501,24,442,9],[501,26,443,8],[501,27,443,9],[502,2,445,0],[502,3,445,1],[503,2,446,0],[503,8,446,6,"VELOCITY_THRESHOLD"],[503,26,446,24],[503,29,446,27],[503,32,446,30],[504,2,447,0],[504,8,447,6,"CLOSE_THRESHOLD"],[504,23,447,21],[504,26,447,24],[504,30,447,28],[505,2,448,0],[505,8,448,6,"SCROLL_LOCK_TIMEOUT"],[505,27,448,25],[505,30,448,28],[505,33,448,31],[506,2,449,0],[506,8,449,6,"BORDER_RADIUS"],[506,21,449,19],[506,24,449,22],[506,25,449,23],[507,2,450,0],[507,8,450,6,"NESTED_DISPLACEMENT"],[507,27,450,25],[507,30,450,28],[507,32,450,30],[508,2,451,0],[508,8,451,6,"WINDOW_TOP_OFFSET"],[508,25,451,23],[508,28,451,26],[508,30,451,28],[509,2,452,0],[509,8,452,6,"DRAG_CLASS"],[509,18,452,16],[509,21,452,19],[509,36,452,34],[511,2,454,0],[512,2,455,0],[512,11,455,9,"useCallbackRef"],[512,25,455,23,"useCallbackRef"],[512,26,455,24,"callback"],[512,34,455,32],[512,36,455,34],[513,4,456,4],[513,10,456,10,"callbackRef"],[513,21,456,21],[513,24,456,24,"React__default"],[513,38,456,38],[513,39,456,38,"default"],[513,46,456,38],[513,47,456,39,"useRef"],[513,53,456,45],[513,54,456,46,"callback"],[513,62,456,54],[513,63,456,55],[514,4,457,4,"React__default"],[514,18,457,18],[514,19,457,18,"default"],[514,26,457,18],[514,27,457,19,"useEffect"],[514,36,457,28],[514,37,457,29],[514,43,457,33],[515,6,458,8,"callbackRef"],[515,17,458,19],[515,18,458,20,"current"],[515,25,458,27],[515,28,458,30,"callback"],[515,36,458,38],[516,4,459,4],[516,5,459,5],[516,6,459,6],[517,4,460,4],[518,4,461,4],[518,11,461,11,"React__default"],[518,25,461,25],[518,26,461,25,"default"],[518,33,461,25],[518,34,461,26,"useMemo"],[518,41,461,33],[518,42,461,34],[518,48,461,38],[518,49,461,39],[518,52,461,42,"args"],[518,56,461,46],[518,61,461,49,"callbackRef"],[518,72,461,60],[518,73,461,61,"current"],[518,80,461,68],[518,84,461,72],[518,88,461,76],[518,91,461,79],[518,96,461,84],[518,97,461,85],[518,100,461,88,"callbackRef"],[518,111,461,99],[518,112,461,100,"current"],[518,119,461,107],[518,120,461,108,"call"],[518,124,461,112],[518,125,461,113,"callbackRef"],[518,136,461,124],[518,138,461,126],[518,141,461,129,"args"],[518,145,461,133],[518,146,461,134],[518,148,461,136],[518,150,461,138],[518,151,461,139],[519,2,462,0],[520,2,463,0],[520,11,463,9,"useUncontrolledState"],[520,31,463,29,"useUncontrolledState"],[520,32,463,30],[521,4,463,32,"defaultProp"],[521,15,463,43],[522,4,463,45,"onChange"],[523,2,463,54],[523,3,463,55],[523,5,463,57],[524,4,464,4],[524,10,464,10,"uncontrolledState"],[524,27,464,27],[524,30,464,30,"React__default"],[524,44,464,44],[524,45,464,44,"default"],[524,52,464,44],[524,53,464,45,"useState"],[524,61,464,53],[524,62,464,54,"defaultProp"],[524,73,464,65],[524,74,464,66],[525,4,465,4],[525,10,465,10],[525,11,465,11,"value"],[525,16,465,16],[525,17,465,17],[525,20,465,20,"uncontrolledState"],[525,37,465,37],[526,4,466,4],[526,10,466,10,"prevValueRef"],[526,22,466,22],[526,25,466,25,"React__default"],[526,39,466,39],[526,40,466,39,"default"],[526,47,466,39],[526,48,466,40,"useRef"],[526,54,466,46],[526,55,466,47,"value"],[526,60,466,52],[526,61,466,53],[527,4,467,4],[527,10,467,10,"handleChange"],[527,22,467,22],[527,25,467,25,"useCallbackRef"],[527,39,467,39],[527,40,467,40,"onChange"],[527,48,467,48],[527,49,467,49],[528,4,468,4,"React__default"],[528,18,468,18],[528,19,468,18,"default"],[528,26,468,18],[528,27,468,19,"useEffect"],[528,36,468,28],[528,37,468,29],[528,43,468,33],[529,6,469,8],[529,10,469,12,"prevValueRef"],[529,22,469,24],[529,23,469,25,"current"],[529,30,469,32],[529,35,469,37,"value"],[529,40,469,42],[529,42,469,44],[530,8,470,12,"handleChange"],[530,20,470,24],[530,21,470,25,"value"],[530,26,470,30],[530,27,470,31],[531,8,471,12,"prevValueRef"],[531,20,471,24],[531,21,471,25,"current"],[531,28,471,32],[531,31,471,35,"value"],[531,36,471,40],[532,6,472,8],[533,4,473,4],[533,5,473,5],[533,7,473,7],[533,8,474,8,"value"],[533,13,474,13],[533,15,475,8,"prevValueRef"],[533,27,475,20],[533,29,476,8,"handleChange"],[533,41,476,20],[533,42,477,5],[533,43,477,6],[534,4,478,4],[534,11,478,11,"uncontrolledState"],[534,28,478,28],[535,2,479,0],[536,2,480,0],[536,11,480,9,"useControllableState"],[536,31,480,29,"useControllableState"],[536,32,480,30],[537,4,480,32,"prop"],[537,8,480,36],[538,4,480,38,"defaultProp"],[538,15,480,49],[539,4,480,51,"onChange"],[539,12,480,59],[539,15,480,62,"onChange"],[539,16,480,62],[539,21,480,66],[539,22,480,67],[540,2,480,69],[540,3,480,70],[540,5,480,72],[541,4,481,4],[541,10,481,10],[541,11,481,11,"uncontrolledProp"],[541,27,481,27],[541,29,481,29,"setUncontrolledProp"],[541,48,481,48],[541,49,481,49],[541,52,481,52,"useUncontrolledState"],[541,72,481,72],[541,73,481,73],[542,6,482,8,"defaultProp"],[542,17,482,19],[543,6,483,8,"onChange"],[544,4,484,4],[544,5,484,5],[544,6,484,6],[545,4,485,4],[545,10,485,10,"isControlled"],[545,22,485,22],[545,25,485,25,"prop"],[545,29,485,29],[545,34,485,34,"undefined"],[545,43,485,43],[546,4,486,4],[546,10,486,10,"value"],[546,15,486,15],[546,18,486,18,"isControlled"],[546,30,486,30],[546,33,486,33,"prop"],[546,37,486,37],[546,40,486,40,"uncontrolledProp"],[546,56,486,56],[547,4,487,4],[547,10,487,10,"handleChange"],[547,22,487,22],[547,25,487,25,"useCallbackRef"],[547,39,487,39],[547,40,487,40,"onChange"],[547,48,487,48],[547,49,487,49],[548,4,488,4],[548,10,488,10,"setValue"],[548,18,488,18],[548,21,488,21,"React__default"],[548,35,488,35],[548,36,488,35,"default"],[548,43,488,35],[548,44,488,36,"useCallback"],[548,55,488,47],[548,56,488,49,"nextValue"],[548,65,488,58],[548,69,488,61],[549,6,489,8],[549,10,489,12,"isControlled"],[549,22,489,24],[549,24,489,26],[550,8,490,12],[550,14,490,18,"setter"],[550,20,490,24],[550,23,490,27,"nextValue"],[550,32,490,36],[551,8,491,12],[551,14,491,18,"value"],[551,19,491,23],[551,22,491,26],[551,29,491,33,"nextValue"],[551,38,491,42],[551,43,491,47],[551,53,491,57],[551,56,491,60,"setter"],[551,62,491,66],[551,63,491,67,"prop"],[551,67,491,71],[551,68,491,72],[551,71,491,75,"nextValue"],[551,80,491,84],[552,8,492,12],[552,12,492,16,"value"],[552,17,492,21],[552,22,492,26,"prop"],[552,26,492,30],[552,28,492,32,"handleChange"],[552,40,492,44],[552,41,492,45,"value"],[552,46,492,50],[552,47,492,51],[553,6,493,8],[553,7,493,9],[553,13,493,15],[554,8,494,12,"setUncontrolledProp"],[554,27,494,31],[554,28,494,32,"nextValue"],[554,37,494,41],[554,38,494,42],[555,6,495,8],[556,4,496,4],[556,5,496,5],[556,7,496,7],[556,8,497,8,"isControlled"],[556,20,497,20],[556,22,498,8,"prop"],[556,26,498,12],[556,28,499,8,"setUncontrolledProp"],[556,47,499,27],[556,49,500,8,"handleChange"],[556,61,500,20],[556,62,501,5],[556,63,501,6],[557,4,502,4],[557,11,502,11],[557,12,503,8,"value"],[557,17,503,13],[557,19,504,8,"setValue"],[557,27,504,16],[557,28,505,5],[558,2,506,0],[559,2,508,0],[559,11,508,9,"useSnapPoints"],[559,24,508,22,"useSnapPoints"],[559,25,508,23],[560,4,508,25,"activeSnapPointProp"],[560,23,508,44],[561,4,508,46,"setActiveSnapPointProp"],[561,26,508,68],[562,4,508,70,"snapPoints"],[562,14,508,80],[563,4,508,82,"drawerRef"],[563,13,508,91],[564,4,508,93,"overlayRef"],[564,14,508,103],[565,4,508,105,"fadeFromIndex"],[565,17,508,118],[566,4,508,120,"onSnapPointChange"],[566,21,508,137],[567,4,508,139,"direction"],[567,13,508,148],[567,16,508,151],[567,24,508,159],[568,4,508,161,"container"],[568,13,508,170],[569,4,508,172,"snapToSequentialPoint"],[570,2,508,194],[570,3,508,195],[570,5,508,197],[571,4,509,4],[571,10,509,10],[571,11,509,11,"activeSnapPoint"],[571,26,509,26],[571,28,509,28,"setActiveSnapPoint"],[571,46,509,46],[571,47,509,47],[571,50,509,50,"useControllableState"],[571,70,509,70],[571,71,509,71],[572,6,510,8,"prop"],[572,10,510,12],[572,12,510,14,"activeSnapPointProp"],[572,31,510,33],[573,6,511,8,"defaultProp"],[573,17,511,19],[573,19,511,21,"snapPoints"],[573,29,511,31],[573,33,511,35],[573,37,511,39],[573,40,511,42],[573,45,511,47],[573,46,511,48],[573,49,511,51,"snapPoints"],[573,59,511,61],[573,60,511,62],[573,61,511,63],[573,62,511,64],[574,6,512,8,"onChange"],[574,14,512,16],[574,16,512,18,"setActiveSnapPointProp"],[575,4,513,4],[575,5,513,5],[575,6,513,6],[576,4,514,4],[576,10,514,10],[576,11,514,11,"windowDimensions"],[576,27,514,27],[576,29,514,29,"setWindowDimensions"],[576,48,514,48],[576,49,514,49],[576,52,514,52,"React__default"],[576,66,514,66],[576,67,514,66,"default"],[576,74,514,66],[576,75,514,67,"useState"],[576,83,514,75],[576,84,514,76],[576,91,514,83,"window"],[576,97,514,89],[576,102,514,94],[576,113,514,105],[576,116,514,108],[577,6,515,8,"innerWidth"],[577,16,515,18],[577,18,515,20,"window"],[577,24,515,26],[577,25,515,27,"innerWidth"],[577,35,515,37],[578,6,516,8,"innerHeight"],[578,17,516,19],[578,19,516,21,"window"],[578,25,516,27],[578,26,516,28,"innerHeight"],[579,4,517,4],[579,5,517,5],[579,8,517,8,"undefined"],[579,17,517,17],[579,18,517,18],[580,4,518,4,"React__default"],[580,18,518,18],[580,19,518,18,"default"],[580,26,518,18],[580,27,518,19,"useEffect"],[580,36,518,28],[580,37,518,29],[580,43,518,33],[581,6,519,8],[581,15,519,17,"onResize"],[581,23,519,25,"onResize"],[581,24,519,25],[581,26,519,28],[582,8,520,12,"setWindowDimensions"],[582,27,520,31],[582,28,520,32],[583,10,521,16,"innerWidth"],[583,20,521,26],[583,22,521,28,"window"],[583,28,521,34],[583,29,521,35,"innerWidth"],[583,39,521,45],[584,10,522,16,"innerHeight"],[584,21,522,27],[584,23,522,29,"window"],[584,29,522,35],[584,30,522,36,"innerHeight"],[585,8,523,12],[585,9,523,13],[585,10,523,14],[586,6,524,8],[587,6,525,8,"window"],[587,12,525,14],[587,13,525,15,"addEventListener"],[587,29,525,31],[587,30,525,32],[587,38,525,40],[587,40,525,42,"onResize"],[587,48,525,50],[587,49,525,51],[588,6,526,8],[588,13,526,15],[588,19,526,19,"window"],[588,25,526,25],[588,26,526,26,"removeEventListener"],[588,45,526,45],[588,46,526,46],[588,54,526,54],[588,56,526,56,"onResize"],[588,64,526,64],[588,65,526,65],[589,4,527,4],[589,5,527,5],[589,7,527,7],[589,9,527,9],[589,10,527,10],[590,4,528,4],[590,10,528,10,"isLastSnapPoint"],[590,25,528,25],[590,28,528,28,"React__default"],[590,42,528,42],[590,43,528,42,"default"],[590,50,528,42],[590,51,528,43,"useMemo"],[590,58,528,50],[590,59,528,51],[590,65,528,55,"activeSnapPoint"],[590,80,528,70],[590,86,528,76,"snapPoints"],[590,96,528,86],[590,100,528,90],[590,104,528,94],[590,107,528,97],[590,112,528,102],[590,113,528,103],[590,116,528,106,"snapPoints"],[590,126,528,116],[590,127,528,117,"snapPoints"],[590,137,528,127],[590,138,528,128,"length"],[590,144,528,134],[590,147,528,137],[590,148,528,138],[590,149,528,139],[590,150,528,140],[590,154,528,144],[590,158,528,148],[590,160,528,150],[590,161,529,8,"snapPoints"],[590,171,529,18],[590,173,530,8,"activeSnapPoint"],[590,188,530,23],[590,189,531,5],[590,190,531,6],[591,4,532,4],[591,10,532,10,"activeSnapPointIndex"],[591,30,532,30],[591,33,532,33,"React__default"],[591,47,532,47],[591,48,532,47,"default"],[591,55,532,47],[591,56,532,48,"useMemo"],[591,63,532,55],[591,64,532,56],[591,70,532,60],[592,6,533,8],[592,10,533,12,"_snapPoints_findIndex"],[592,31,533,33],[593,6,534,8],[593,13,534,15],[593,14,534,16,"_snapPoints_findIndex"],[593,35,534,37],[593,38,534,40,"snapPoints"],[593,48,534,50],[593,52,534,54],[593,56,534,58],[593,59,534,61],[593,64,534,66],[593,65,534,67],[593,68,534,70,"snapPoints"],[593,78,534,80],[593,79,534,81,"findIndex"],[593,88,534,90],[593,89,534,92,"snapPoint"],[593,98,534,101],[593,102,534,104,"snapPoint"],[593,111,534,113],[593,116,534,118,"activeSnapPoint"],[593,131,534,133],[593,132,534,134],[593,137,534,139],[593,141,534,143],[593,144,534,146,"_snapPoints_findIndex"],[593,165,534,167],[593,168,534,170],[593,172,534,174],[594,4,535,4],[594,5,535,5],[594,7,535,7],[594,8,536,8,"snapPoints"],[594,18,536,18],[594,20,537,8,"activeSnapPoint"],[594,35,537,23],[594,36,538,5],[594,37,538,6],[595,4,539,4],[595,10,539,10,"shouldFade"],[595,20,539,20],[595,23,539,23,"snapPoints"],[595,33,539,33],[595,37,539,37,"snapPoints"],[595,47,539,47],[595,48,539,48,"length"],[595,54,539,54],[595,57,539,57],[595,58,539,58],[595,63,539,63,"fadeFromIndex"],[595,76,539,76],[595,80,539,80,"fadeFromIndex"],[595,93,539,93],[595,98,539,98],[595,99,539,99],[595,100,539,100],[595,104,539,104],[595,105,539,105,"Number"],[595,111,539,111],[595,112,539,112,"isNaN"],[595,117,539,117],[595,118,539,118,"fadeFromIndex"],[595,131,539,131],[595,132,539,132],[595,136,539,136,"snapPoints"],[595,146,539,146],[595,147,539,147,"fadeFromIndex"],[595,160,539,160],[595,161,539,161],[595,166,539,166,"activeSnapPoint"],[595,181,539,181],[595,185,539,185],[595,186,539,186,"snapPoints"],[595,196,539,196],[596,4,540,4],[596,10,540,10,"snapPointsOffset"],[596,26,540,26],[596,29,540,29,"React__default"],[596,43,540,43],[596,44,540,43,"default"],[596,51,540,43],[596,52,540,44,"useMemo"],[596,59,540,51],[596,60,540,52],[596,66,540,56],[597,6,541,8],[597,12,541,14,"containerSize"],[597,25,541,27],[597,28,541,30,"container"],[597,37,541,39],[597,40,541,42],[598,8,542,12,"width"],[598,13,542,17],[598,15,542,19,"container"],[598,24,542,28],[598,25,542,29,"getBoundingClientRect"],[598,46,542,50],[598,47,542,51],[598,48,542,52],[598,49,542,53,"width"],[598,54,542,58],[599,8,543,12,"height"],[599,14,543,18],[599,16,543,20,"container"],[599,25,543,29],[599,26,543,30,"getBoundingClientRect"],[599,47,543,51],[599,48,543,52],[599,49,543,53],[599,50,543,54,"height"],[600,6,544,8],[600,7,544,9],[600,10,544,12],[600,17,544,19,"window"],[600,23,544,25],[600,28,544,30],[600,39,544,41],[600,42,544,44],[601,8,545,12,"width"],[601,13,545,17],[601,15,545,19,"window"],[601,21,545,25],[601,22,545,26,"innerWidth"],[601,32,545,36],[602,8,546,12,"height"],[602,14,546,18],[602,16,546,20,"window"],[602,22,546,26],[602,23,546,27,"innerHeight"],[603,6,547,8],[603,7,547,9],[603,10,547,12],[604,8,548,12,"width"],[604,13,548,17],[604,15,548,19],[604,16,548,20],[605,8,549,12,"height"],[605,14,549,18],[605,16,549,20],[606,6,550,8],[606,7,550,9],[607,6,551,8],[607,10,551,12,"_snapPoints_map"],[607,25,551,27],[608,6,552,8],[608,13,552,15],[608,14,552,16,"_snapPoints_map"],[608,29,552,31],[608,32,552,34,"snapPoints"],[608,42,552,44],[608,46,552,48],[608,50,552,52],[608,53,552,55],[608,58,552,60],[608,59,552,61],[608,62,552,64,"snapPoints"],[608,72,552,74],[608,73,552,75,"map"],[608,76,552,78],[608,77,552,80,"snapPoint"],[608,86,552,89],[608,90,552,92],[609,8,553,12],[609,14,553,18,"isPx"],[609,18,553,22],[609,21,553,25],[609,28,553,32,"snapPoint"],[609,37,553,41],[609,42,553,46],[609,50,553,54],[610,8,554,12],[610,12,554,16,"snapPointAsNumber"],[610,29,554,33],[610,32,554,36],[610,33,554,37],[611,8,555,12],[611,12,555,16,"isPx"],[611,16,555,20],[611,18,555,22],[612,10,556,16,"snapPointAsNumber"],[612,27,556,33],[612,30,556,36,"parseInt"],[612,38,556,44],[612,39,556,45,"snapPoint"],[612,48,556,54],[612,50,556,56],[612,52,556,58],[612,53,556,59],[613,8,557,12],[614,8,558,12],[614,12,558,16,"isVertical"],[614,22,558,26],[614,23,558,27,"direction"],[614,32,558,36],[614,33,558,37],[614,35,558,39],[615,10,559,16],[615,16,559,22,"height"],[615,22,559,28],[615,25,559,31,"isPx"],[615,29,559,35],[615,32,559,38,"snapPointAsNumber"],[615,49,559,55],[615,52,559,58,"windowDimensions"],[615,68,559,74],[615,71,559,77,"snapPoint"],[615,80,559,86],[615,83,559,89,"containerSize"],[615,96,559,102],[615,97,559,103,"height"],[615,103,559,109],[615,106,559,112],[615,107,559,113],[616,10,560,16],[616,14,560,20,"windowDimensions"],[616,30,560,36],[616,32,560,38],[617,12,561,20],[617,19,561,27,"direction"],[617,28,561,36],[617,33,561,41],[617,41,561,49],[617,44,561,52,"containerSize"],[617,57,561,65],[617,58,561,66,"height"],[617,64,561,72],[617,67,561,75,"height"],[617,73,561,81],[617,76,561,84],[617,77,561,85,"containerSize"],[617,90,561,98],[617,91,561,99,"height"],[617,97,561,105],[617,100,561,108,"height"],[617,106,561,114],[618,10,562,16],[619,10,563,16],[619,17,563,23,"height"],[619,23,563,29],[620,8,564,12],[621,8,565,12],[621,14,565,18,"width"],[621,19,565,23],[621,22,565,26,"isPx"],[621,26,565,30],[621,29,565,33,"snapPointAsNumber"],[621,46,565,50],[621,49,565,53,"windowDimensions"],[621,65,565,69],[621,68,565,72,"snapPoint"],[621,77,565,81],[621,80,565,84,"containerSize"],[621,93,565,97],[621,94,565,98,"width"],[621,99,565,103],[621,102,565,106],[621,103,565,107],[622,8,566,12],[622,12,566,16,"windowDimensions"],[622,28,566,32],[622,30,566,34],[623,10,567,16],[623,17,567,23,"direction"],[623,26,567,32],[623,31,567,37],[623,38,567,44],[623,41,567,47,"containerSize"],[623,54,567,60],[623,55,567,61,"width"],[623,60,567,66],[623,63,567,69,"width"],[623,68,567,74],[623,71,567,77],[623,72,567,78,"containerSize"],[623,85,567,91],[623,86,567,92,"width"],[623,91,567,97],[623,94,567,100,"width"],[623,99,567,105],[624,8,568,12],[625,8,569,12],[625,15,569,19,"width"],[625,20,569,24],[626,6,570,8],[626,7,570,9],[626,8,570,10],[626,13,570,15],[626,17,570,19],[626,20,570,22,"_snapPoints_map"],[626,35,570,37],[626,38,570,40],[626,40,570,42],[627,4,571,4],[627,5,571,5],[627,7,571,7],[627,8,572,8,"snapPoints"],[627,18,572,18],[627,20,573,8,"windowDimensions"],[627,36,573,24],[627,38,574,8,"container"],[627,47,574,17],[627,48,575,5],[627,49,575,6],[628,4,576,4],[628,10,576,10,"activeSnapPointOffset"],[628,31,576,31],[628,34,576,34,"React__default"],[628,48,576,48],[628,49,576,48,"default"],[628,56,576,48],[628,57,576,49,"useMemo"],[628,64,576,56],[628,65,576,57],[628,71,576,61,"activeSnapPointIndex"],[628,91,576,81],[628,96,576,86],[628,100,576,90],[628,103,576,93,"snapPointsOffset"],[628,119,576,109],[628,123,576,113],[628,127,576,117],[628,130,576,120],[628,135,576,125],[628,136,576,126],[628,139,576,129,"snapPointsOffset"],[628,155,576,145],[628,156,576,146,"activeSnapPointIndex"],[628,176,576,166],[628,177,576,167],[628,180,576,170],[628,184,576,174],[628,186,576,176],[628,187,577,8,"snapPointsOffset"],[628,203,577,24],[628,205,578,8,"activeSnapPointIndex"],[628,225,578,28],[628,226,579,5],[628,227,579,6],[629,4,580,4],[629,10,580,10,"snapToPoint"],[629,21,580,21],[629,24,580,24,"React__default"],[629,38,580,38],[629,39,580,38,"default"],[629,46,580,38],[629,47,580,39,"useCallback"],[629,58,580,50],[629,59,580,52,"dimension"],[629,68,580,61],[629,72,580,64],[630,6,581,8],[630,10,581,12,"_snapPointsOffset_findIndex"],[630,37,581,39],[631,6,582,8],[631,12,582,14,"newSnapPointIndex"],[631,29,582,31],[631,32,582,34],[631,33,582,35,"_snapPointsOffset_findIndex"],[631,60,582,62],[631,63,582,65,"snapPointsOffset"],[631,79,582,81],[631,83,582,85],[631,87,582,89],[631,90,582,92],[631,95,582,97],[631,96,582,98],[631,99,582,101,"snapPointsOffset"],[631,115,582,117],[631,116,582,118,"findIndex"],[631,125,582,127],[631,126,582,129,"snapPointDim"],[631,138,582,141],[631,142,582,144,"snapPointDim"],[631,154,582,156],[631,159,582,161,"dimension"],[631,168,582,170],[631,169,582,171],[631,174,582,176],[631,178,582,180],[631,181,582,183,"_snapPointsOffset_findIndex"],[631,208,582,210],[631,211,582,213],[631,215,582,217],[632,6,583,8,"onSnapPointChange"],[632,23,583,25],[632,24,583,26,"newSnapPointIndex"],[632,41,583,43],[632,42,583,44],[633,6,584,8,"set"],[633,9,584,11],[633,10,584,12,"drawerRef"],[633,19,584,21],[633,20,584,22,"current"],[633,27,584,29],[633,29,584,31],[634,8,585,12,"transition"],[634,18,585,22],[634,20,585,24],[634,33,585,37,"TRANSITIONS"],[634,44,585,48],[634,45,585,49,"DURATION"],[634,53,585,57],[634,71,585,75,"TRANSITIONS"],[634,82,585,86],[634,83,585,87,"EASE"],[634,87,585,91],[634,88,585,92,"join"],[634,92,585,96],[634,93,585,97],[634,96,585,100],[634,97,585,101],[634,100,585,104],[635,8,586,12,"transform"],[635,17,586,21],[635,19,586,23,"isVertical"],[635,29,586,33],[635,30,586,34,"direction"],[635,39,586,43],[635,40,586,44],[635,43,586,47],[635,61,586,65,"dimension"],[635,70,586,74],[635,78,586,82],[635,81,586,85],[635,96,586,100,"dimension"],[635,105,586,109],[636,6,587,8],[636,7,587,9],[636,8,587,10],[637,6,588,8],[637,10,588,12,"snapPointsOffset"],[637,26,588,28],[637,30,588,32,"newSnapPointIndex"],[637,47,588,49],[637,52,588,54,"snapPointsOffset"],[637,68,588,70],[637,69,588,71,"length"],[637,75,588,77],[637,78,588,80],[637,79,588,81],[637,83,588,85,"fadeFromIndex"],[637,96,588,98],[637,101,588,103,"undefined"],[637,110,588,112],[637,114,588,116,"newSnapPointIndex"],[637,131,588,133],[637,136,588,138,"fadeFromIndex"],[637,149,588,151],[637,153,588,155,"newSnapPointIndex"],[637,170,588,172],[637,173,588,175,"fadeFromIndex"],[637,186,588,188],[637,188,588,190],[638,8,589,12,"set"],[638,11,589,15],[638,12,589,16,"overlayRef"],[638,22,589,26],[638,23,589,27,"current"],[638,30,589,34],[638,32,589,36],[639,10,590,16,"transition"],[639,20,590,26],[639,22,590,28],[639,33,590,39,"TRANSITIONS"],[639,44,590,50],[639,45,590,51,"DURATION"],[639,53,590,59],[639,71,590,77,"TRANSITIONS"],[639,82,590,88],[639,83,590,89,"EASE"],[639,87,590,93],[639,88,590,94,"join"],[639,92,590,98],[639,93,590,99],[639,96,590,102],[639,97,590,103],[639,100,590,106],[640,10,591,16,"opacity"],[640,17,591,23],[640,19,591,25],[641,8,592,12],[641,9,592,13],[641,10,592,14],[642,6,593,8],[642,7,593,9],[642,13,593,15],[643,8,594,12,"set"],[643,11,594,15],[643,12,594,16,"overlayRef"],[643,22,594,26],[643,23,594,27,"current"],[643,30,594,34],[643,32,594,36],[644,10,595,16,"transition"],[644,20,595,26],[644,22,595,28],[644,33,595,39,"TRANSITIONS"],[644,44,595,50],[644,45,595,51,"DURATION"],[644,53,595,59],[644,71,595,77,"TRANSITIONS"],[644,82,595,88],[644,83,595,89,"EASE"],[644,87,595,93],[644,88,595,94,"join"],[644,92,595,98],[644,93,595,99],[644,96,595,102],[644,97,595,103],[644,100,595,106],[645,10,596,16,"opacity"],[645,17,596,23],[645,19,596,25],[646,8,597,12],[646,9,597,13],[646,10,597,14],[647,6,598,8],[648,6,599,8,"setActiveSnapPoint"],[648,24,599,26],[648,25,599,27,"snapPoints"],[648,35,599,37],[648,39,599,41],[648,43,599,45],[648,46,599,48],[648,51,599,53],[648,52,599,54],[648,55,599,57,"snapPoints"],[648,65,599,67],[648,66,599,68,"Math"],[648,70,599,72],[648,71,599,73,"max"],[648,74,599,76],[648,75,599,77,"newSnapPointIndex"],[648,92,599,94],[648,94,599,96],[648,95,599,97],[648,96,599,98],[648,97,599,99],[648,98,599,100],[649,4,600,4],[649,5,600,5],[649,7,600,7],[649,8,601,8,"drawerRef"],[649,17,601,17],[649,18,601,18,"current"],[649,25,601,25],[649,27,602,8,"snapPoints"],[649,37,602,18],[649,39,603,8,"snapPointsOffset"],[649,55,603,24],[649,57,604,8,"fadeFromIndex"],[649,70,604,21],[649,72,605,8,"overlayRef"],[649,82,605,18],[649,84,606,8,"setActiveSnapPoint"],[649,102,606,26],[649,103,607,5],[649,104,607,6],[650,4,608,4,"React__default"],[650,18,608,18],[650,19,608,18,"default"],[650,26,608,18],[650,27,608,19,"useEffect"],[650,36,608,28],[650,37,608,29],[650,43,608,33],[651,6,609,8],[651,10,609,12,"activeSnapPoint"],[651,25,609,27],[651,29,609,31,"activeSnapPointProp"],[651,48,609,50],[651,50,609,52],[652,8,610,12],[652,12,610,16,"_snapPoints_findIndex"],[652,33,610,37],[653,8,611,12],[653,14,611,18,"newIndex"],[653,22,611,26],[653,25,611,29],[653,26,611,30,"_snapPoints_findIndex"],[653,47,611,51],[653,50,611,54,"snapPoints"],[653,60,611,64],[653,64,611,68],[653,68,611,72],[653,71,611,75],[653,76,611,80],[653,77,611,81],[653,80,611,84,"snapPoints"],[653,90,611,94],[653,91,611,95,"findIndex"],[653,100,611,104],[653,101,611,106,"snapPoint"],[653,110,611,115],[653,114,611,118,"snapPoint"],[653,123,611,127],[653,128,611,132,"activeSnapPointProp"],[653,147,611,151],[653,151,611,155,"snapPoint"],[653,160,611,164],[653,165,611,169,"activeSnapPoint"],[653,180,611,184],[653,181,611,185],[653,186,611,190],[653,190,611,194],[653,193,611,197,"_snapPoints_findIndex"],[653,214,611,218],[653,217,611,221],[653,218,611,222],[653,219,611,223],[654,8,612,12],[654,12,612,16,"snapPointsOffset"],[654,28,612,32],[654,32,612,36,"newIndex"],[654,40,612,44],[654,45,612,49],[654,46,612,50],[654,47,612,51],[654,51,612,55],[654,58,612,62,"snapPointsOffset"],[654,74,612,78],[654,75,612,79,"newIndex"],[654,83,612,87],[654,84,612,88],[654,89,612,93],[654,97,612,101],[654,99,612,103],[655,10,613,16,"snapToPoint"],[655,21,613,27],[655,22,613,28,"snapPointsOffset"],[655,38,613,44],[655,39,613,45,"newIndex"],[655,47,613,53],[655,48,613,54],[655,49,613,55],[656,8,614,12],[657,6,615,8],[658,4,616,4],[658,5,616,5],[658,7,616,7],[658,8,617,8,"activeSnapPoint"],[658,23,617,23],[658,25,618,8,"activeSnapPointProp"],[658,44,618,27],[658,46,619,8,"snapPoints"],[658,56,619,18],[658,58,620,8,"snapPointsOffset"],[658,74,620,24],[658,76,621,8,"snapToPoint"],[658,87,621,19],[658,88,622,5],[658,89,622,6],[659,4,623,4],[659,13,623,13,"onRelease"],[659,22,623,22,"onRelease"],[659,23,623,23],[660,6,623,25,"draggedDistance"],[660,21,623,40],[661,6,623,42,"closeDrawer"],[661,17,623,53],[662,6,623,55,"velocity"],[662,14,623,63],[663,6,623,65,"dismissible"],[664,4,623,77],[664,5,623,78],[664,7,623,80],[665,6,624,8],[665,10,624,12,"fadeFromIndex"],[665,23,624,25],[665,28,624,30,"undefined"],[665,37,624,39],[665,39,624,41],[666,6,625,8],[666,12,625,14,"currentPosition"],[666,27,625,29],[666,30,625,32,"direction"],[666,39,625,41],[666,44,625,46],[666,52,625,54],[666,56,625,58,"direction"],[666,65,625,67],[666,70,625,72],[666,77,625,79],[666,80,625,82],[666,81,625,83,"activeSnapPointOffset"],[666,102,625,104],[666,106,625,108],[666,110,625,112],[666,113,625,115,"activeSnapPointOffset"],[666,134,625,136],[666,137,625,139],[666,138,625,140],[666,142,625,144,"draggedDistance"],[666,157,625,159],[666,160,625,162],[666,161,625,163,"activeSnapPointOffset"],[666,182,625,184],[666,186,625,188],[666,190,625,192],[666,193,625,195,"activeSnapPointOffset"],[666,214,625,216],[666,217,625,219],[666,218,625,220],[666,222,625,224,"draggedDistance"],[666,237,625,239],[667,6,626,8],[667,12,626,14,"isOverlaySnapPoint"],[667,30,626,32],[667,33,626,35,"activeSnapPointIndex"],[667,53,626,55],[667,58,626,60,"fadeFromIndex"],[667,71,626,73],[667,74,626,76],[667,75,626,77],[668,6,627,8],[668,12,627,14,"isFirst"],[668,19,627,21],[668,22,627,24,"activeSnapPointIndex"],[668,42,627,44],[668,47,627,49],[668,48,627,50],[669,6,628,8],[669,12,628,14,"hasDraggedUp"],[669,24,628,26],[669,27,628,29,"draggedDistance"],[669,42,628,44],[669,45,628,47],[669,46,628,48],[670,6,629,8],[670,10,629,12,"isOverlaySnapPoint"],[670,28,629,30],[670,30,629,32],[671,8,630,12,"set"],[671,11,630,15],[671,12,630,16,"overlayRef"],[671,22,630,26],[671,23,630,27,"current"],[671,30,630,34],[671,32,630,36],[672,10,631,16,"transition"],[672,20,631,26],[672,22,631,28],[672,33,631,39,"TRANSITIONS"],[672,44,631,50],[672,45,631,51,"DURATION"],[672,53,631,59],[672,71,631,77,"TRANSITIONS"],[672,82,631,88],[672,83,631,89,"EASE"],[672,87,631,93],[672,88,631,94,"join"],[672,92,631,98],[672,93,631,99],[672,96,631,102],[672,97,631,103],[673,8,632,12],[673,9,632,13],[673,10,632,14],[674,6,633,8],[675,6,634,8],[675,10,634,12],[675,11,634,13,"snapToSequentialPoint"],[675,32,634,34],[675,36,634,38,"velocity"],[675,44,634,46],[675,47,634,49],[675,48,634,50],[675,52,634,54],[675,53,634,55,"hasDraggedUp"],[675,65,634,67],[675,67,634,69],[676,8,635,12],[676,12,635,16,"dismissible"],[676,23,635,27],[676,25,635,29,"closeDrawer"],[676,36,635,40],[676,37,635,41],[676,38,635,42],[676,39,635,43],[676,44,636,17,"snapToPoint"],[676,55,636,28],[676,56,636,29,"snapPointsOffset"],[676,72,636,45],[676,73,636,46],[676,74,636,47],[676,75,636,48],[676,76,636,49],[676,77,636,50],[676,78,636,51],[677,8,637,12],[678,6,638,8],[679,6,639,8],[679,10,639,12],[679,11,639,13,"snapToSequentialPoint"],[679,32,639,34],[679,36,639,38,"velocity"],[679,44,639,46],[679,47,639,49],[679,48,639,50],[679,52,639,54,"hasDraggedUp"],[679,64,639,66],[679,68,639,70,"snapPointsOffset"],[679,84,639,86],[679,88,639,90,"snapPoints"],[679,98,639,100],[679,100,639,102],[680,8,640,12,"snapToPoint"],[680,19,640,23],[680,20,640,24,"snapPointsOffset"],[680,36,640,40],[680,37,640,41,"snapPoints"],[680,47,640,51],[680,48,640,52,"length"],[680,54,640,58],[680,57,640,61],[680,58,640,62],[680,59,640,63],[680,60,640,64],[681,8,641,12],[682,6,642,8],[683,6,643,8],[684,6,644,8],[684,12,644,14,"closestSnapPoint"],[684,28,644,30],[684,31,644,33,"snapPointsOffset"],[684,47,644,49],[684,51,644,53],[684,55,644,57],[684,58,644,60],[684,63,644,65],[684,64,644,66],[684,67,644,69,"snapPointsOffset"],[684,83,644,85],[684,84,644,86,"reduce"],[684,90,644,92],[684,91,644,93],[684,92,644,94,"prev"],[684,96,644,98],[684,98,644,100,"curr"],[684,102,644,104],[684,107,644,107],[685,8,645,12],[685,12,645,16],[685,19,645,23,"prev"],[685,23,645,27],[685,28,645,32],[685,36,645,40],[685,40,645,44],[685,47,645,51,"curr"],[685,51,645,55],[685,56,645,60],[685,64,645,68],[685,66,645,70],[685,73,645,77,"prev"],[685,77,645,81],[686,8,646,12],[686,15,646,19,"Math"],[686,19,646,23],[686,20,646,24,"abs"],[686,23,646,27],[686,24,646,28,"curr"],[686,28,646,32],[686,31,646,35,"currentPosition"],[686,46,646,50],[686,47,646,51],[686,50,646,54,"Math"],[686,54,646,58],[686,55,646,59,"abs"],[686,58,646,62],[686,59,646,63,"prev"],[686,63,646,67],[686,66,646,70,"currentPosition"],[686,81,646,85],[686,82,646,86],[686,85,646,89,"curr"],[686,89,646,93],[686,92,646,96,"prev"],[686,96,646,100],[687,6,647,8],[687,7,647,9],[687,8,647,10],[688,6,648,8],[688,12,648,14,"dim"],[688,15,648,17],[688,18,648,20,"isVertical"],[688,28,648,30],[688,29,648,31,"direction"],[688,38,648,40],[688,39,648,41],[688,42,648,44,"window"],[688,48,648,50],[688,49,648,51,"innerHeight"],[688,60,648,62],[688,63,648,65,"window"],[688,69,648,71],[688,70,648,72,"innerWidth"],[688,80,648,82],[689,6,649,8],[689,10,649,12,"velocity"],[689,18,649,20],[689,21,649,23,"VELOCITY_THRESHOLD"],[689,39,649,41],[689,43,649,45,"Math"],[689,47,649,49],[689,48,649,50,"abs"],[689,51,649,53],[689,52,649,54,"draggedDistance"],[689,67,649,69],[689,68,649,70],[689,71,649,73,"dim"],[689,74,649,76],[689,77,649,79],[689,80,649,82],[689,82,649,84],[690,8,650,12],[690,14,650,18,"dragDirection"],[690,27,650,31],[690,30,650,34,"hasDraggedUp"],[690,42,650,46],[690,45,650,49],[690,46,650,50],[690,49,650,53],[690,50,650,54],[690,51,650,55],[690,52,650,56],[690,53,650,57],[691,8,651,12],[692,8,652,12],[692,12,652,16,"dragDirection"],[692,25,652,29],[692,28,652,32],[692,29,652,33],[692,33,652,37,"isLastSnapPoint"],[692,48,652,52],[692,52,652,56,"snapPoints"],[692,62,652,66],[692,64,652,68],[693,10,653,16,"snapToPoint"],[693,21,653,27],[693,22,653,28,"snapPointsOffset"],[693,38,653,44],[693,39,653,45,"snapPoints"],[693,49,653,55],[693,50,653,56,"length"],[693,56,653,62],[693,59,653,65],[693,60,653,66],[693,61,653,67],[693,62,653,68],[694,10,654,16],[695,8,655,12],[696,8,656,12],[696,12,656,16,"isFirst"],[696,19,656,23],[696,23,656,27,"dragDirection"],[696,36,656,40],[696,39,656,43],[696,40,656,44],[696,44,656,48,"dismissible"],[696,55,656,59],[696,57,656,61],[697,10,657,16,"closeDrawer"],[697,21,657,27],[697,22,657,28],[697,23,657,29],[698,8,658,12],[699,8,659,12],[699,12,659,16,"activeSnapPointIndex"],[699,32,659,36],[699,37,659,41],[699,41,659,45],[699,43,659,47],[700,8,660,12,"snapToPoint"],[700,19,660,23],[700,20,660,24,"snapPointsOffset"],[700,36,660,40],[700,37,660,41,"activeSnapPointIndex"],[700,57,660,61],[700,60,660,64,"dragDirection"],[700,73,660,77],[700,74,660,78],[700,75,660,79],[701,8,661,12],[702,6,662,8],[703,6,663,8,"snapToPoint"],[703,17,663,19],[703,18,663,20,"closestSnapPoint"],[703,34,663,36],[703,35,663,37],[704,4,664,4],[705,4,665,4],[705,13,665,13,"onDrag"],[705,19,665,19,"onDrag"],[705,20,665,20],[706,6,665,22,"draggedDistance"],[707,4,665,38],[707,5,665,39],[707,7,665,41],[708,6,666,8],[708,10,666,12,"activeSnapPointOffset"],[708,31,666,33],[708,36,666,38],[708,40,666,42],[708,42,666,44],[709,6,667,8],[709,12,667,14,"newValue"],[709,20,667,22],[709,23,667,25,"direction"],[709,32,667,34],[709,37,667,39],[709,45,667,47],[709,49,667,51,"direction"],[709,58,667,60],[709,63,667,65],[709,70,667,72],[709,73,667,75,"activeSnapPointOffset"],[709,94,667,96],[709,97,667,99,"draggedDistance"],[709,112,667,114],[709,115,667,117,"activeSnapPointOffset"],[709,136,667,138],[709,139,667,141,"draggedDistance"],[709,154,667,156],[710,6,668,8],[711,6,669,8],[711,10,669,12],[711,11,669,13,"direction"],[711,20,669,22],[711,25,669,27],[711,33,669,35],[711,37,669,39,"direction"],[711,46,669,48],[711,51,669,53],[711,58,669,60],[711,63,669,65,"newValue"],[711,71,669,73],[711,74,669,76,"snapPointsOffset"],[711,90,669,92],[711,91,669,93,"snapPointsOffset"],[711,107,669,109],[711,108,669,110,"length"],[711,114,669,116],[711,117,669,119],[711,118,669,120],[711,119,669,121],[711,121,669,123],[712,8,670,12],[713,6,671,8],[714,6,672,8],[714,10,672,12],[714,11,672,13,"direction"],[714,20,672,22],[714,25,672,27],[714,30,672,32],[714,34,672,36,"direction"],[714,43,672,45],[714,48,672,50],[714,54,672,56],[714,59,672,61,"newValue"],[714,67,672,69],[714,70,672,72,"snapPointsOffset"],[714,86,672,88],[714,87,672,89,"snapPointsOffset"],[714,103,672,105],[714,104,672,106,"length"],[714,110,672,112],[714,113,672,115],[714,114,672,116],[714,115,672,117],[714,117,672,119],[715,8,673,12],[716,6,674,8],[717,6,675,8,"set"],[717,9,675,11],[717,10,675,12,"drawerRef"],[717,19,675,21],[717,20,675,22,"current"],[717,27,675,29],[717,29,675,31],[718,8,676,12,"transform"],[718,17,676,21],[718,19,676,23,"isVertical"],[718,29,676,33],[718,30,676,34,"direction"],[718,39,676,43],[718,40,676,44],[718,43,676,47],[718,61,676,65,"newValue"],[718,69,676,73],[718,77,676,81],[718,80,676,84],[718,95,676,99,"newValue"],[718,103,676,107],[719,6,677,8],[719,7,677,9],[719,8,677,10],[720,4,678,4],[721,4,679,4],[721,13,679,13,"getPercentageDragged"],[721,33,679,33,"getPercentageDragged"],[721,34,679,34,"absDraggedDistance"],[721,52,679,52],[721,54,679,54,"isDraggingDown"],[721,68,679,68],[721,70,679,70],[722,6,680,8],[722,10,680,12],[722,11,680,13,"snapPoints"],[722,21,680,23],[722,25,680,27],[722,32,680,34,"activeSnapPointIndex"],[722,52,680,54],[722,57,680,59],[722,65,680,67],[722,69,680,71],[722,70,680,72,"snapPointsOffset"],[722,86,680,88],[722,90,680,92,"fadeFromIndex"],[722,103,680,105],[722,108,680,110,"undefined"],[722,117,680,119],[722,119,680,121],[722,126,680,128],[722,130,680,132],[723,6,681,8],[724,6,682,8],[724,12,682,14,"isOverlaySnapPoint"],[724,30,682,32],[724,33,682,35,"activeSnapPointIndex"],[724,53,682,55],[724,58,682,60,"fadeFromIndex"],[724,71,682,73],[724,74,682,76],[724,75,682,77],[725,6,683,8],[725,12,683,14,"isOverlaySnapPointOrHigher"],[725,38,683,40],[725,41,683,43,"activeSnapPointIndex"],[725,61,683,63],[725,65,683,67,"fadeFromIndex"],[725,78,683,80],[726,6,684,8],[726,10,684,12,"isOverlaySnapPointOrHigher"],[726,36,684,38],[726,40,684,42,"isDraggingDown"],[726,54,684,56],[726,56,684,58],[727,8,685,12],[727,15,685,19],[727,16,685,20],[728,6,686,8],[729,6,687,8],[730,6,688,8],[730,10,688,12,"isOverlaySnapPoint"],[730,28,688,30],[730,32,688,34],[730,33,688,35,"isDraggingDown"],[730,47,688,49],[730,49,688,51],[730,56,688,58],[730,57,688,59],[731,6,689,8],[731,10,689,12],[731,11,689,13,"shouldFade"],[731,21,689,23],[731,25,689,27],[731,26,689,28,"isOverlaySnapPoint"],[731,44,689,46],[731,46,689,48],[731,53,689,55],[731,57,689,59],[732,6,690,8],[733,6,691,8],[733,12,691,14,"targetSnapPointIndex"],[733,32,691,34],[733,35,691,37,"isOverlaySnapPoint"],[733,53,691,55],[733,56,691,58,"activeSnapPointIndex"],[733,76,691,78],[733,79,691,81],[733,80,691,82],[733,83,691,85,"activeSnapPointIndex"],[733,103,691,105],[733,106,691,108],[733,107,691,109],[734,6,692,8],[735,6,693,8],[735,12,693,14,"snapPointDistance"],[735,29,693,31],[735,32,693,34,"isOverlaySnapPoint"],[735,50,693,52],[735,53,693,55,"snapPointsOffset"],[735,69,693,71],[735,70,693,72,"targetSnapPointIndex"],[735,90,693,92],[735,91,693,93],[735,94,693,96,"snapPointsOffset"],[735,110,693,112],[735,111,693,113,"targetSnapPointIndex"],[735,131,693,133],[735,134,693,136],[735,135,693,137],[735,136,693,138],[735,139,693,141,"snapPointsOffset"],[735,155,693,157],[735,156,693,158,"targetSnapPointIndex"],[735,176,693,178],[735,179,693,181],[735,180,693,182],[735,181,693,183],[735,184,693,186,"snapPointsOffset"],[735,200,693,202],[735,201,693,203,"targetSnapPointIndex"],[735,221,693,223],[735,222,693,224],[736,6,694,8],[736,12,694,14,"percentageDragged"],[736,29,694,31],[736,32,694,34,"absDraggedDistance"],[736,50,694,52],[736,53,694,55,"Math"],[736,57,694,59],[736,58,694,60,"abs"],[736,61,694,63],[736,62,694,64,"snapPointDistance"],[736,79,694,81],[736,80,694,82],[737,6,695,8],[737,10,695,12,"isOverlaySnapPoint"],[737,28,695,30],[737,30,695,32],[738,8,696,12],[738,15,696,19],[738,16,696,20],[738,19,696,23,"percentageDragged"],[738,36,696,40],[739,6,697,8],[739,7,697,9],[739,13,697,15],[740,8,698,12],[740,15,698,19,"percentageDragged"],[740,32,698,36],[741,6,699,8],[742,4,700,4],[743,4,701,4],[743,11,701,11],[744,6,702,8,"isLastSnapPoint"],[744,21,702,23],[745,6,703,8,"activeSnapPoint"],[745,21,703,23],[746,6,704,8,"shouldFade"],[746,16,704,18],[747,6,705,8,"getPercentageDragged"],[747,26,705,28],[748,6,706,8,"setActiveSnapPoint"],[748,24,706,26],[749,6,707,8,"activeSnapPointIndex"],[749,26,707,28],[750,6,708,8,"onRelease"],[750,15,708,17],[751,6,709,8,"onDrag"],[751,12,709,14],[752,6,710,8,"snapPointsOffset"],[753,4,711,4],[753,5,711,5],[754,2,712,0],[755,2,714,0],[755,8,714,6,"noop"],[755,12,714,10],[755,15,714,13,"noop"],[755,16,714,13],[755,21,714,17],[755,27,714,21],[755,28,714,22],[755,29,714,23],[756,2,715,0],[756,11,715,9,"useScaleBackground"],[756,29,715,27,"useScaleBackground"],[756,30,715,27],[756,32,715,30],[757,4,716,4],[757,10,716,10],[758,6,716,12,"direction"],[758,15,716,21],[759,6,716,23,"isOpen"],[759,12,716,29],[760,6,716,31,"shouldScaleBackground"],[760,27,716,52],[761,6,716,54,"setBackgroundColorOnScale"],[761,31,716,79],[762,6,716,81,"noBodyStyles"],[763,4,716,94],[763,5,716,95],[763,8,716,98,"useDrawerContext"],[763,24,716,114],[763,25,716,115],[763,26,716,116],[764,4,717,4],[764,10,717,10,"timeoutIdRef"],[764,22,717,22],[764,25,717,25,"React__default"],[764,39,717,39],[764,40,717,39,"default"],[764,47,717,39],[764,48,717,40,"useRef"],[764,54,717,46],[764,55,717,47],[764,59,717,51],[764,60,717,52],[765,4,718,4],[765,10,718,10,"initialBackgroundColor"],[765,32,718,32],[765,35,718,35],[765,39,718,35,"useMemo"],[765,45,718,42],[765,46,718,42,"useMemo"],[765,53,718,42],[765,55,718,43],[765,61,718,47,"document"],[765,69,718,55],[765,70,718,56,"body"],[765,74,718,60],[765,75,718,61,"style"],[765,80,718,66],[765,81,718,67,"backgroundColor"],[765,96,718,82],[765,98,718,84],[765,100,718,86],[765,101,718,87],[766,4,719,4],[766,13,719,13,"getScale"],[766,21,719,21,"getScale"],[766,22,719,21],[766,24,719,24],[767,6,720,8],[767,13,720,15],[767,14,720,16,"window"],[767,20,720,22],[767,21,720,23,"innerWidth"],[767,31,720,33],[767,34,720,36,"WINDOW_TOP_OFFSET"],[767,51,720,53],[767,55,720,57,"window"],[767,61,720,63],[767,62,720,64,"innerWidth"],[767,72,720,74],[768,4,721,4],[769,4,722,4,"React__default"],[769,18,722,18],[769,19,722,18,"default"],[769,26,722,18],[769,27,722,19,"useEffect"],[769,36,722,28],[769,37,722,29],[769,43,722,33],[770,6,723,8],[770,10,723,12,"isOpen"],[770,16,723,18],[770,20,723,22,"shouldScaleBackground"],[770,41,723,43],[770,43,723,45],[771,8,724,12],[771,12,724,16,"timeoutIdRef"],[771,24,724,28],[771,25,724,29,"current"],[771,32,724,36],[771,34,724,38,"clearTimeout"],[771,46,724,50],[771,47,724,51,"timeoutIdRef"],[771,59,724,63],[771,60,724,64,"current"],[771,67,724,71],[771,68,724,72],[772,8,725,12],[772,14,725,18,"wrapper"],[772,21,725,25],[772,24,725,28,"document"],[772,32,725,36],[772,33,725,37,"querySelector"],[772,46,725,50],[772,47,725,51],[772,75,725,79],[772,76,725,80],[772,80,725,84,"document"],[772,88,725,92],[772,89,725,93,"querySelector"],[772,102,725,106],[772,103,725,107],[772,126,725,130],[772,127,725,131],[773,8,726,12],[773,12,726,16],[773,13,726,17,"wrapper"],[773,20,726,24],[773,22,726,26],[774,8,727,12,"chain"],[774,13,727,17],[774,14,727,18,"setBackgroundColorOnScale"],[774,39,727,43],[774,43,727,47],[774,44,727,48,"noBodyStyles"],[774,56,727,60],[774,59,727,63,"assignStyle"],[774,70,727,74],[774,71,727,75,"document"],[774,79,727,83],[774,80,727,84,"body"],[774,84,727,88],[774,86,727,90],[775,10,728,16,"background"],[775,20,728,26],[775,22,728,28],[776,8,729,12],[776,9,729,13],[776,10,729,14],[776,13,729,17,"noop"],[776,17,729,21],[776,19,729,23,"assignStyle"],[776,30,729,34],[776,31,729,35,"wrapper"],[776,38,729,42],[776,40,729,44],[777,10,730,16,"transformOrigin"],[777,25,730,31],[777,27,730,33,"isVertical"],[777,37,730,43],[777,38,730,44,"direction"],[777,47,730,53],[777,48,730,54],[777,51,730,57],[777,56,730,62],[777,59,730,65],[777,65,730,71],[778,10,731,16,"transitionProperty"],[778,28,731,34],[778,30,731,36],[778,56,731,62],[779,10,732,16,"transitionDuration"],[779,28,732,34],[779,30,732,36],[779,33,732,39,"TRANSITIONS"],[779,44,732,50],[779,45,732,51,"DURATION"],[779,53,732,59],[779,56,732,62],[780,10,733,16,"transitionTimingFunction"],[780,34,733,40],[780,36,733,42],[780,52,733,58,"TRANSITIONS"],[780,63,733,69],[780,64,733,70,"EASE"],[780,68,733,74],[780,69,733,75,"join"],[780,73,733,79],[780,74,733,80],[780,77,733,83],[780,78,733,84],[781,8,734,12],[781,9,734,13],[781,10,734,14],[781,11,734,15],[782,8,735,12],[782,14,735,18,"wrapperStylesCleanup"],[782,34,735,38],[782,37,735,41,"assignStyle"],[782,48,735,52],[782,49,735,53,"wrapper"],[782,56,735,60],[782,58,735,62],[783,10,736,16,"borderRadius"],[783,22,736,28],[783,24,736,30],[783,27,736,33,"BORDER_RADIUS"],[783,40,736,46],[783,44,736,50],[784,10,737,16,"overflow"],[784,18,737,24],[784,20,737,26],[784,28,737,34],[785,10,738,16],[785,14,738,19,"isVertical"],[785,24,738,29],[785,25,738,30,"direction"],[785,34,738,39],[785,35,738,40],[785,38,738,43],[786,12,739,20,"transform"],[786,21,739,29],[786,23,739,31],[786,32,739,40,"getScale"],[786,40,739,48],[786,41,739,49],[786,42,739,50],[787,10,740,16],[787,11,740,17],[787,14,740,20],[788,12,741,20,"transform"],[788,21,741,29],[788,23,741,31],[788,32,741,40,"getScale"],[788,40,741,48],[788,41,741,49],[788,42,741,50],[789,10,742,16],[789,11,742,17],[790,8,743,12],[790,9,743,13],[790,10,743,14],[791,8,744,12],[791,15,744,19],[791,21,744,23],[792,10,745,16,"wrapperStylesCleanup"],[792,30,745,36],[792,31,745,37],[792,32,745,38],[793,10,746,16,"timeoutIdRef"],[793,22,746,28],[793,23,746,29,"current"],[793,30,746,36],[793,33,746,39,"window"],[793,39,746,45],[793,40,746,46,"setTimeout"],[793,50,746,56],[793,51,746,57],[793,57,746,61],[794,12,747,20],[794,16,747,24,"initialBackgroundColor"],[794,38,747,46],[794,40,747,48],[795,14,748,24,"document"],[795,22,748,32],[795,23,748,33,"body"],[795,27,748,37],[795,28,748,38,"style"],[795,33,748,43],[795,34,748,44,"background"],[795,44,748,54],[795,47,748,57,"initialBackgroundColor"],[795,69,748,79],[796,12,749,20],[796,13,749,21],[796,19,749,27],[797,14,750,24,"document"],[797,22,750,32],[797,23,750,33,"body"],[797,27,750,37],[797,28,750,38,"style"],[797,33,750,43],[797,34,750,44,"removeProperty"],[797,48,750,58],[797,49,750,59],[797,61,750,71],[797,62,750,72],[798,12,751,20],[799,10,752,16],[799,11,752,17],[799,13,752,19,"TRANSITIONS"],[799,24,752,30],[799,25,752,31,"DURATION"],[799,33,752,39],[799,36,752,42],[799,40,752,46],[799,41,752,47],[800,8,753,12],[800,9,753,13],[801,6,754,8],[802,4,755,4],[802,5,755,5],[802,7,755,7],[802,8,756,8,"isOpen"],[802,14,756,14],[802,16,757,8,"shouldScaleBackground"],[802,37,757,29],[802,39,758,8,"initialBackgroundColor"],[802,61,758,30],[802,62,759,5],[802,63,759,6],[803,2,760,0],[804,2,762,0],[804,6,762,4,"previousBodyPosition"],[804,26,762,24],[804,29,762,27],[804,33,762,31],[805,2,763,0],[806,0,764,0],[807,0,765,0],[808,0,766,0],[809,0,767,0],[810,0,768,0],[811,0,769,0],[812,0,770,0],[813,2,770,4],[813,11,770,13,"usePositionFixed"],[813,27,770,29,"usePositionFixed"],[813,28,770,30],[814,4,770,32,"isOpen"],[814,10,770,38],[815,4,770,40,"modal"],[815,9,770,45],[816,4,770,47,"nested"],[816,10,770,53],[817,4,770,55,"hasBeenOpened"],[817,17,770,68],[818,4,770,70,"preventScrollRestoration"],[818,28,770,94],[819,4,770,96,"noBodyStyles"],[820,2,770,109],[820,3,770,110],[820,5,770,112],[821,4,771,4],[821,10,771,10],[821,11,771,11,"activeUrl"],[821,20,771,20],[821,22,771,22,"setActiveUrl"],[821,34,771,34],[821,35,771,35],[821,38,771,38,"React__default"],[821,52,771,52],[821,53,771,52,"default"],[821,60,771,52],[821,61,771,53,"useState"],[821,69,771,61],[821,70,771,62],[821,76,771,66],[821,83,771,73,"window"],[821,89,771,79],[821,94,771,84],[821,105,771,95],[821,108,771,98,"window"],[821,114,771,104],[821,115,771,105,"location"],[821,123,771,113],[821,124,771,114,"href"],[821,128,771,118],[821,131,771,121],[821,133,771,123],[821,134,771,124],[822,4,772,4],[822,10,772,10,"scrollPos"],[822,19,772,19],[822,22,772,22,"React__default"],[822,36,772,36],[822,37,772,36,"default"],[822,44,772,36],[822,45,772,37,"useRef"],[822,51,772,43],[822,52,772,44],[822,53,772,45],[822,54,772,46],[823,4,773,4],[823,10,773,10,"setPositionFixed"],[823,26,773,26],[823,29,773,29,"React__default"],[823,43,773,43],[823,44,773,43,"default"],[823,51,773,43],[823,52,773,44,"useCallback"],[823,63,773,55],[823,64,773,56],[823,70,773,60],[824,6,774,8],[825,6,775,8],[825,10,775,12],[825,11,775,13,"isSafari"],[825,19,775,21],[825,20,775,22],[825,21,775,23],[825,23,775,25],[826,6,776,8],[827,6,777,8],[827,10,777,12,"previousBodyPosition"],[827,30,777,32],[827,35,777,37],[827,39,777,41],[827,43,777,45,"isOpen"],[827,49,777,51],[827,53,777,55],[827,54,777,56,"noBodyStyles"],[827,66,777,68],[827,68,777,70],[828,8,778,12,"previousBodyPosition"],[828,28,778,32],[828,31,778,35],[829,10,779,16,"position"],[829,18,779,24],[829,20,779,26,"document"],[829,28,779,34],[829,29,779,35,"body"],[829,33,779,39],[829,34,779,40,"style"],[829,39,779,45],[829,40,779,46,"position"],[829,48,779,54],[830,10,780,16,"top"],[830,13,780,19],[830,15,780,21,"document"],[830,23,780,29],[830,24,780,30,"body"],[830,28,780,34],[830,29,780,35,"style"],[830,34,780,40],[830,35,780,41,"top"],[830,38,780,44],[831,10,781,16,"left"],[831,14,781,20],[831,16,781,22,"document"],[831,24,781,30],[831,25,781,31,"body"],[831,29,781,35],[831,30,781,36,"style"],[831,35,781,41],[831,36,781,42,"left"],[831,40,781,46],[832,10,782,16,"height"],[832,16,782,22],[832,18,782,24,"document"],[832,26,782,32],[832,27,782,33,"body"],[832,31,782,37],[832,32,782,38,"style"],[832,37,782,43],[832,38,782,44,"height"],[832,44,782,50],[833,10,783,16,"right"],[833,15,783,21],[833,17,783,23],[834,8,784,12],[834,9,784,13],[835,8,785,12],[836,8,786,12],[836,14,786,18],[837,10,786,20,"scrollX"],[837,17,786,27],[838,10,786,29,"innerHeight"],[839,8,786,41],[839,9,786,42],[839,12,786,45,"window"],[839,18,786,51],[840,8,787,12,"document"],[840,16,787,20],[840,17,787,21,"body"],[840,21,787,25],[840,22,787,26,"style"],[840,27,787,31],[840,28,787,32,"setProperty"],[840,39,787,43],[840,40,787,44],[840,50,787,54],[840,52,787,56],[840,59,787,63],[840,61,787,65],[840,72,787,76],[840,73,787,77],[841,8,788,12,"Object"],[841,14,788,18],[841,15,788,19,"assign"],[841,21,788,25],[841,22,788,26,"document"],[841,30,788,34],[841,31,788,35,"body"],[841,35,788,39],[841,36,788,40,"style"],[841,41,788,45],[841,43,788,47],[842,10,789,16,"top"],[842,13,789,19],[842,15,789,21],[842,18,789,24],[842,19,789,25,"scrollPos"],[842,28,789,34],[842,29,789,35,"current"],[842,36,789,42],[842,40,789,46],[843,10,790,16,"left"],[843,14,790,20],[843,16,790,22],[843,19,790,25],[843,20,790,26,"scrollX"],[843,27,790,33],[843,31,790,37],[844,10,791,16,"right"],[844,15,791,21],[844,17,791,23],[844,22,791,28],[845,10,792,16,"height"],[845,16,792,22],[845,18,792,24],[846,8,793,12],[846,9,793,13],[846,10,793,14],[847,8,794,12,"window"],[847,14,794,18],[847,15,794,19,"setTimeout"],[847,25,794,29],[847,26,794,30],[847,32,794,34,"window"],[847,38,794,40],[847,39,794,41,"requestAnimationFrame"],[847,60,794,62],[847,61,794,63],[847,67,794,67],[848,10,795,20],[849,10,796,20],[849,16,796,26,"bottomBarHeight"],[849,31,796,41],[849,34,796,44,"innerHeight"],[849,45,796,55],[849,48,796,58,"window"],[849,54,796,64],[849,55,796,65,"innerHeight"],[849,66,796,76],[850,10,797,20],[850,14,797,24,"bottomBarHeight"],[850,29,797,39],[850,33,797,43,"scrollPos"],[850,42,797,52],[850,43,797,53,"current"],[850,50,797,60],[850,54,797,64,"innerHeight"],[850,65,797,75],[850,67,797,77],[851,12,798,24],[852,12,799,24,"document"],[852,20,799,32],[852,21,799,33,"body"],[852,25,799,37],[852,26,799,38,"style"],[852,31,799,43],[852,32,799,44,"top"],[852,35,799,47],[852,38,799,50],[852,41,799,53],[852,43,799,55,"scrollPos"],[852,52,799,64],[852,53,799,65,"current"],[852,60,799,72],[852,63,799,75,"bottomBarHeight"],[852,78,799,90],[852,79,799,91],[852,83,799,95],[853,10,800,20],[854,8,801,16],[854,9,801,17],[854,10,801,18],[854,12,801,20],[854,15,801,23],[854,16,801,24],[855,6,802,8],[856,4,803,4],[856,5,803,5],[856,7,803,7],[856,8,804,8,"isOpen"],[856,14,804,14],[856,15,805,5],[856,16,805,6],[857,4,806,4],[857,10,806,10,"restorePositionSetting"],[857,32,806,32],[857,35,806,35,"React__default"],[857,49,806,49],[857,50,806,49,"default"],[857,57,806,49],[857,58,806,50,"useCallback"],[857,69,806,61],[857,70,806,62],[857,76,806,66],[858,6,807,8],[859,6,808,8],[859,10,808,12],[859,11,808,13,"isSafari"],[859,19,808,21],[859,20,808,22],[859,21,808,23],[859,23,808,25],[860,6,809,8],[860,10,809,12,"previousBodyPosition"],[860,30,809,32],[860,35,809,37],[860,39,809,41],[860,43,809,45],[860,44,809,46,"noBodyStyles"],[860,56,809,58],[860,58,809,60],[861,8,810,12],[862,8,811,12],[862,14,811,18,"y"],[862,15,811,19],[862,18,811,22],[862,19,811,23,"parseInt"],[862,27,811,31],[862,28,811,32,"document"],[862,36,811,40],[862,37,811,41,"body"],[862,41,811,45],[862,42,811,46,"style"],[862,47,811,51],[862,48,811,52,"top"],[862,51,811,55],[862,53,811,57],[862,55,811,59],[862,56,811,60],[863,8,812,12],[863,14,812,18,"x"],[863,15,812,19],[863,18,812,22],[863,19,812,23,"parseInt"],[863,27,812,31],[863,28,812,32,"document"],[863,36,812,40],[863,37,812,41,"body"],[863,41,812,45],[863,42,812,46,"style"],[863,47,812,51],[863,48,812,52,"left"],[863,52,812,56],[863,54,812,58],[863,56,812,60],[863,57,812,61],[864,8,813,12],[865,8,814,12,"Object"],[865,14,814,18],[865,15,814,19,"assign"],[865,21,814,25],[865,22,814,26,"document"],[865,30,814,34],[865,31,814,35,"body"],[865,35,814,39],[865,36,814,40,"style"],[865,41,814,45],[865,43,814,47,"previousBodyPosition"],[865,63,814,67],[865,64,814,68],[866,8,815,12,"window"],[866,14,815,18],[866,15,815,19,"requestAnimationFrame"],[866,36,815,40],[866,37,815,41],[866,43,815,45],[867,10,816,16],[867,14,816,20,"preventScrollRestoration"],[867,38,816,44],[867,42,816,48,"activeUrl"],[867,51,816,57],[867,56,816,62,"window"],[867,62,816,68],[867,63,816,69,"location"],[867,71,816,77],[867,72,816,78,"href"],[867,76,816,82],[867,78,816,84],[868,12,817,20,"setActiveUrl"],[868,24,817,32],[868,25,817,33,"window"],[868,31,817,39],[868,32,817,40,"location"],[868,40,817,48],[868,41,817,49,"href"],[868,45,817,53],[868,46,817,54],[869,12,818,20],[870,10,819,16],[871,10,820,16,"window"],[871,16,820,22],[871,17,820,23,"scrollTo"],[871,25,820,31],[871,26,820,32,"x"],[871,27,820,33],[871,29,820,35,"y"],[871,30,820,36],[871,31,820,37],[872,8,821,12],[872,9,821,13],[872,10,821,14],[873,8,822,12,"previousBodyPosition"],[873,28,822,32],[873,31,822,35],[873,35,822,39],[874,6,823,8],[875,4,824,4],[875,5,824,5],[875,7,824,7],[875,8,825,8,"activeUrl"],[875,17,825,17],[875,18,826,5],[875,19,826,6],[876,4,827,4,"React__default"],[876,18,827,18],[876,19,827,18,"default"],[876,26,827,18],[876,27,827,19,"useEffect"],[876,36,827,28],[876,37,827,29],[876,43,827,33],[877,6,828,8],[877,15,828,17,"onScroll"],[877,23,828,25,"onScroll"],[877,24,828,25],[877,26,828,28],[878,8,829,12,"scrollPos"],[878,17,829,21],[878,18,829,22,"current"],[878,25,829,29],[878,28,829,32,"window"],[878,34,829,38],[878,35,829,39,"scrollY"],[878,42,829,46],[879,6,830,8],[880,6,831,8,"onScroll"],[880,14,831,16],[880,15,831,17],[880,16,831,18],[881,6,832,8,"window"],[881,12,832,14],[881,13,832,15,"addEventListener"],[881,29,832,31],[881,30,832,32],[881,38,832,40],[881,40,832,42,"onScroll"],[881,48,832,50],[881,49,832,51],[882,6,833,8],[882,13,833,15],[882,19,833,19],[883,8,834,12,"window"],[883,14,834,18],[883,15,834,19,"removeEventListener"],[883,34,834,38],[883,35,834,39],[883,43,834,47],[883,45,834,49,"onScroll"],[883,53,834,57],[883,54,834,58],[884,6,835,8],[884,7,835,9],[885,4,836,4],[885,5,836,5],[885,7,836,7],[885,9,836,9],[885,10,836,10],[886,4,837,4,"React__default"],[886,18,837,18],[886,19,837,18,"default"],[886,26,837,18],[886,27,837,19,"useEffect"],[886,36,837,28],[886,37,837,29],[886,43,837,33],[887,6,838,8],[887,10,838,12],[887,11,838,13,"modal"],[887,16,838,18],[887,18,838,20],[888,6,839,8],[888,13,839,15],[888,19,839,19],[889,8,840,12],[889,12,840,16],[889,19,840,23,"document"],[889,27,840,31],[889,32,840,36],[889,43,840,47],[889,45,840,49],[890,8,841,12],[891,8,842,12],[891,14,842,18,"hasDrawerOpened"],[891,29,842,33],[891,32,842,36],[891,33,842,37],[891,34,842,38,"document"],[891,42,842,46],[891,43,842,47,"querySelector"],[891,56,842,60],[891,57,842,61],[891,77,842,81],[891,78,842,82],[892,8,843,12],[892,12,843,16,"hasDrawerOpened"],[892,27,843,31],[892,29,843,33],[893,8,844,12,"restorePositionSetting"],[893,30,844,34],[893,31,844,35],[893,32,844,36],[894,6,845,8],[894,7,845,9],[895,4,846,4],[895,5,846,5],[895,7,846,7],[895,8,847,8,"modal"],[895,13,847,13],[895,15,848,8,"restorePositionSetting"],[895,37,848,30],[895,38,849,5],[895,39,849,6],[896,4,850,4,"React__default"],[896,18,850,18],[896,19,850,18,"default"],[896,26,850,18],[896,27,850,19,"useEffect"],[896,36,850,28],[896,37,850,29],[896,43,850,33],[897,6,851,8],[897,10,851,12,"nested"],[897,16,851,18],[897,20,851,22],[897,21,851,23,"hasBeenOpened"],[897,34,851,36],[897,36,851,38],[898,6,852,8],[899,6,853,8],[899,10,853,12,"isOpen"],[899,16,853,18],[899,18,853,20],[900,8,854,12],[901,8,855,12],[901,14,855,18,"isStandalone"],[901,26,855,30],[901,29,855,33,"window"],[901,35,855,39],[901,36,855,40,"matchMedia"],[901,46,855,50],[901,47,855,51],[901,75,855,79],[901,76,855,80],[901,77,855,81,"matches"],[901,84,855,88],[902,8,856,12],[902,9,856,13,"isStandalone"],[902,21,856,25],[902,25,856,29,"setPositionFixed"],[902,41,856,45],[902,42,856,46],[902,43,856,47],[903,8,857,12],[903,12,857,16],[903,13,857,17,"modal"],[903,18,857,22],[903,20,857,24],[904,10,858,16,"window"],[904,16,858,22],[904,17,858,23,"setTimeout"],[904,27,858,33],[904,28,858,34],[904,34,858,38],[905,12,859,20,"restorePositionSetting"],[905,34,859,42],[905,35,859,43],[905,36,859,44],[906,10,860,16],[906,11,860,17],[906,13,860,19],[906,16,860,22],[906,17,860,23],[907,8,861,12],[908,6,862,8],[908,7,862,9],[908,13,862,15],[909,8,863,12,"restorePositionSetting"],[909,30,863,34],[909,31,863,35],[909,32,863,36],[910,6,864,8],[911,4,865,4],[911,5,865,5],[911,7,865,7],[911,8,866,8,"isOpen"],[911,14,866,14],[911,16,867,8,"hasBeenOpened"],[911,29,867,21],[911,31,868,8,"activeUrl"],[911,40,868,17],[911,42,869,8,"modal"],[911,47,869,13],[911,49,870,8,"nested"],[911,55,870,14],[911,57,871,8,"setPositionFixed"],[911,73,871,24],[911,75,872,8,"restorePositionSetting"],[911,97,872,30],[911,98,873,5],[911,99,873,6],[912,4,874,4],[912,11,874,11],[913,6,875,8,"restorePositionSetting"],[914,4,876,4],[914,5,876,5],[915,2,877,0],[916,2,879,0],[916,11,879,9,"Root"],[916,15,879,13,"Root"],[916,16,879,14],[917,4,879,16,"open"],[917,8,879,20],[917,10,879,22,"openProp"],[917,18,879,30],[918,4,879,32,"onOpenChange"],[918,16,879,44],[919,4,879,46,"children"],[919,12,879,54],[920,4,879,56,"onDrag"],[920,10,879,62],[920,12,879,64,"onDragProp"],[920,22,879,74],[921,4,879,76,"onRelease"],[921,13,879,85],[921,15,879,87,"onReleaseProp"],[921,28,879,100],[922,4,879,102,"snapPoints"],[922,14,879,112],[923,4,879,114,"shouldScaleBackground"],[923,25,879,135],[923,28,879,138],[923,33,879,143],[924,4,879,145,"setBackgroundColorOnScale"],[924,29,879,170],[924,32,879,173],[924,36,879,177],[925,4,879,179,"closeThreshold"],[925,18,879,193],[925,21,879,196,"CLOSE_THRESHOLD"],[925,36,879,211],[926,4,879,213,"scrollLockTimeout"],[926,21,879,230],[926,24,879,233,"SCROLL_LOCK_TIMEOUT"],[926,43,879,252],[927,4,879,254,"dismissible"],[927,15,879,265],[927,18,879,268],[927,22,879,272],[928,4,879,274,"handleOnly"],[928,14,879,284],[928,17,879,287],[928,22,879,292],[929,4,879,294,"fadeFromIndex"],[929,17,879,307],[929,20,879,310,"snapPoints"],[929,30,879,320],[929,34,879,324,"snapPoints"],[929,44,879,334],[929,45,879,335,"length"],[929,51,879,341],[929,54,879,344],[929,55,879,345],[930,4,879,347,"activeSnapPoint"],[930,19,879,362],[930,21,879,364,"activeSnapPointProp"],[930,40,879,383],[931,4,879,385,"setActiveSnapPoint"],[931,22,879,403],[931,24,879,405,"setActiveSnapPointProp"],[931,46,879,427],[932,4,879,429,"fixed"],[932,9,879,434],[933,4,879,436,"modal"],[933,9,879,441],[933,12,879,444],[933,16,879,448],[934,4,879,450,"onClose"],[934,11,879,457],[935,4,879,459,"nested"],[935,10,879,465],[936,4,879,467,"noBodyStyles"],[936,16,879,479],[936,19,879,482],[936,24,879,487],[937,4,879,489,"direction"],[937,13,879,498],[937,16,879,501],[937,24,879,509],[938,4,879,511,"defaultOpen"],[938,15,879,522],[938,18,879,525],[938,23,879,530],[939,4,879,532,"disablePreventScroll"],[939,24,879,552],[939,27,879,555],[939,31,879,559],[940,4,879,561,"snapToSequentialPoint"],[940,25,879,582],[940,28,879,585],[940,33,879,590],[941,4,879,592,"preventScrollRestoration"],[941,28,879,616],[941,31,879,619],[941,36,879,624],[942,4,879,626,"repositionInputs"],[942,20,879,642],[942,23,879,645],[942,27,879,649],[943,4,879,651,"onAnimationEnd"],[943,18,879,665],[944,4,879,667,"container"],[944,13,879,676],[945,4,879,678,"autoFocus"],[945,13,879,687],[945,16,879,690],[946,2,879,696],[946,3,879,697],[946,5,879,699],[947,4,880,4],[947,8,880,8,"_drawerRef_current"],[947,26,880,26],[947,28,880,28,"_drawerRef_current1"],[947,47,880,47],[948,4,881,4],[948,10,881,10],[948,11,881,11,"isOpen"],[948,17,881,17],[948,20,881,20],[948,25,881,25],[948,27,881,27,"setIsOpen"],[948,36,881,36],[948,37,881,37],[948,40,881,40,"useControllableState"],[948,60,881,60],[948,61,881,61],[949,6,882,8,"defaultProp"],[949,17,882,19],[949,19,882,21,"defaultOpen"],[949,30,882,32],[950,6,883,8,"prop"],[950,10,883,12],[950,12,883,14,"openProp"],[950,20,883,22],[951,6,884,8,"onChange"],[951,14,884,16],[951,16,884,19,"o"],[951,17,884,20],[951,21,884,23],[952,8,885,12,"onOpenChange"],[952,20,885,24],[952,24,885,28],[952,28,885,32],[952,31,885,35],[952,36,885,40],[952,37,885,41],[952,40,885,44,"onOpenChange"],[952,52,885,56],[952,53,885,57,"o"],[952,54,885,58],[952,55,885,59],[953,8,886,12],[953,12,886,16],[953,13,886,17,"o"],[953,14,886,18],[953,18,886,22],[953,19,886,23,"nested"],[953,25,886,29],[953,27,886,31],[954,10,887,16,"restorePositionSetting"],[954,32,887,38],[954,33,887,39],[954,34,887,40],[955,8,888,12],[956,8,889,12,"setTimeout"],[956,18,889,22],[956,19,889,23],[956,25,889,27],[957,10,890,16,"onAnimationEnd"],[957,24,890,30],[957,28,890,34],[957,32,890,38],[957,35,890,41],[957,40,890,46],[957,41,890,47],[957,44,890,50,"onAnimationEnd"],[957,58,890,64],[957,59,890,65,"o"],[957,60,890,66],[957,61,890,67],[958,8,891,12],[958,9,891,13],[958,11,891,15,"TRANSITIONS"],[958,22,891,26],[958,23,891,27,"DURATION"],[958,31,891,35],[958,34,891,38],[958,38,891,42],[958,39,891,43],[959,8,892,12],[959,12,892,16,"o"],[959,13,892,17],[959,17,892,21],[959,18,892,22,"modal"],[959,23,892,27],[959,25,892,29],[960,10,893,16],[960,14,893,20],[960,21,893,27,"window"],[960,27,893,33],[960,32,893,38],[960,43,893,49],[960,45,893,51],[961,12,894,20,"window"],[961,18,894,26],[961,19,894,27,"requestAnimationFrame"],[961,40,894,48],[961,41,894,49],[961,47,894,53],[962,14,895,24,"document"],[962,22,895,32],[962,23,895,33,"body"],[962,27,895,37],[962,28,895,38,"style"],[962,33,895,43],[962,34,895,44,"pointerEvents"],[962,47,895,57],[962,50,895,60],[962,56,895,66],[963,12,896,20],[963,13,896,21],[963,14,896,22],[964,10,897,16],[965,8,898,12],[966,8,899,12],[966,12,899,16],[966,13,899,17,"o"],[966,14,899,18],[966,16,899,20],[967,10,900,16],[968,10,901,16,"document"],[968,18,901,24],[968,19,901,25,"body"],[968,23,901,29],[968,24,901,30,"style"],[968,29,901,35],[968,30,901,36,"pointerEvents"],[968,43,901,49],[968,46,901,52],[968,52,901,58],[969,8,902,12],[970,6,903,8],[971,4,904,4],[971,5,904,5],[971,6,904,6],[972,4,905,4],[972,10,905,10],[972,11,905,11,"hasBeenOpened"],[972,24,905,24],[972,26,905,26,"setHasBeenOpened"],[972,42,905,42],[972,43,905,43],[972,46,905,46,"React__default"],[972,60,905,60],[972,61,905,60,"default"],[972,68,905,60],[972,69,905,61,"useState"],[972,77,905,69],[972,78,905,70],[972,83,905,75],[972,84,905,76],[973,4,906,4],[973,10,906,10],[973,11,906,11,"isDragging"],[973,21,906,21],[973,23,906,23,"setIsDragging"],[973,36,906,36],[973,37,906,37],[973,40,906,40,"React__default"],[973,54,906,54],[973,55,906,54,"default"],[973,62,906,54],[973,63,906,55,"useState"],[973,71,906,63],[973,72,906,64],[973,77,906,69],[973,78,906,70],[974,4,907,4],[974,10,907,10],[974,11,907,11,"justReleased"],[974,23,907,23],[974,25,907,25,"setJustReleased"],[974,40,907,40],[974,41,907,41],[974,44,907,44,"React__default"],[974,58,907,58],[974,59,907,58,"default"],[974,66,907,58],[974,67,907,59,"useState"],[974,75,907,67],[974,76,907,68],[974,81,907,73],[974,82,907,74],[975,4,908,4],[975,10,908,10,"overlayRef"],[975,20,908,20],[975,23,908,23,"React__default"],[975,37,908,37],[975,38,908,37,"default"],[975,45,908,37],[975,46,908,38,"useRef"],[975,52,908,44],[975,53,908,45],[975,57,908,49],[975,58,908,50],[976,4,909,4],[976,10,909,10,"openTime"],[976,18,909,18],[976,21,909,21,"React__default"],[976,35,909,35],[976,36,909,35,"default"],[976,43,909,35],[976,44,909,36,"useRef"],[976,50,909,42],[976,51,909,43],[976,55,909,47],[976,56,909,48],[977,4,910,4],[977,10,910,10,"dragStartTime"],[977,23,910,23],[977,26,910,26,"React__default"],[977,40,910,40],[977,41,910,40,"default"],[977,48,910,40],[977,49,910,41,"useRef"],[977,55,910,47],[977,56,910,48],[977,60,910,52],[977,61,910,53],[978,4,911,4],[978,10,911,10,"dragEndTime"],[978,21,911,21],[978,24,911,24,"React__default"],[978,38,911,38],[978,39,911,38,"default"],[978,46,911,38],[978,47,911,39,"useRef"],[978,53,911,45],[978,54,911,46],[978,58,911,50],[978,59,911,51],[979,4,912,4],[979,10,912,10,"lastTimeDragPrevented"],[979,31,912,31],[979,34,912,34,"React__default"],[979,48,912,48],[979,49,912,48,"default"],[979,56,912,48],[979,57,912,49,"useRef"],[979,63,912,55],[979,64,912,56],[979,68,912,60],[979,69,912,61],[980,4,913,4],[980,10,913,10,"isAllowedToDrag"],[980,25,913,25],[980,28,913,28,"React__default"],[980,42,913,42],[980,43,913,42,"default"],[980,50,913,42],[980,51,913,43,"useRef"],[980,57,913,49],[980,58,913,50],[980,63,913,55],[980,64,913,56],[981,4,914,4],[981,10,914,10,"nestedOpenChangeTimer"],[981,31,914,31],[981,34,914,34,"React__default"],[981,48,914,48],[981,49,914,48,"default"],[981,56,914,48],[981,57,914,49,"useRef"],[981,63,914,55],[981,64,914,56],[981,68,914,60],[981,69,914,61],[982,4,915,4],[982,10,915,10,"pointerStart"],[982,22,915,22],[982,25,915,25,"React__default"],[982,39,915,39],[982,40,915,39,"default"],[982,47,915,39],[982,48,915,40,"useRef"],[982,54,915,46],[982,55,915,47],[982,56,915,48],[982,57,915,49],[983,4,916,4],[983,10,916,10,"keyboardIsOpen"],[983,24,916,24],[983,27,916,27,"React__default"],[983,41,916,41],[983,42,916,41,"default"],[983,49,916,41],[983,50,916,42,"useRef"],[983,56,916,48],[983,57,916,49],[983,62,916,54],[983,63,916,55],[984,4,917,4],[984,10,917,10,"shouldAnimate"],[984,23,917,23],[984,26,917,26,"React__default"],[984,40,917,40],[984,41,917,40,"default"],[984,48,917,40],[984,49,917,41,"useRef"],[984,55,917,47],[984,56,917,48],[984,57,917,49,"defaultOpen"],[984,68,917,60],[984,69,917,61],[985,4,918,4],[985,10,918,10,"previousDiffFromInitial"],[985,33,918,33],[985,36,918,36,"React__default"],[985,50,918,50],[985,51,918,50,"default"],[985,58,918,50],[985,59,918,51,"useRef"],[985,65,918,57],[985,66,918,58],[985,67,918,59],[985,68,918,60],[986,4,919,4],[986,10,919,10,"drawerRef"],[986,19,919,19],[986,22,919,22,"React__default"],[986,36,919,36],[986,37,919,36,"default"],[986,44,919,36],[986,45,919,37,"useRef"],[986,51,919,43],[986,52,919,44],[986,56,919,48],[986,57,919,49],[987,4,920,4],[987,10,920,10,"drawerHeightRef"],[987,25,920,25],[987,28,920,28,"React__default"],[987,42,920,42],[987,43,920,42,"default"],[987,50,920,42],[987,51,920,43,"useRef"],[987,57,920,49],[987,58,920,50],[987,59,920,51],[987,60,920,52,"_drawerRef_current"],[987,78,920,70],[987,81,920,73,"drawerRef"],[987,90,920,82],[987,91,920,83,"current"],[987,98,920,90],[987,103,920,95],[987,107,920,99],[987,110,920,102],[987,115,920,107],[987,116,920,108],[987,119,920,111,"_drawerRef_current"],[987,137,920,129],[987,138,920,130,"getBoundingClientRect"],[987,159,920,151],[987,160,920,152],[987,161,920,153],[987,162,920,154,"height"],[987,168,920,160],[987,173,920,165],[987,174,920,166],[987,175,920,167],[988,4,921,4],[988,10,921,10,"drawerWidthRef"],[988,24,921,24],[988,27,921,27,"React__default"],[988,41,921,41],[988,42,921,41,"default"],[988,49,921,41],[988,50,921,42,"useRef"],[988,56,921,48],[988,57,921,49],[988,58,921,50],[988,59,921,51,"_drawerRef_current1"],[988,78,921,70],[988,81,921,73,"drawerRef"],[988,90,921,82],[988,91,921,83,"current"],[988,98,921,90],[988,103,921,95],[988,107,921,99],[988,110,921,102],[988,115,921,107],[988,116,921,108],[988,119,921,111,"_drawerRef_current1"],[988,138,921,130],[988,139,921,131,"getBoundingClientRect"],[988,160,921,152],[988,161,921,153],[988,162,921,154],[988,163,921,155,"width"],[988,168,921,160],[988,173,921,165],[988,174,921,166],[988,175,921,167],[989,4,922,4],[989,10,922,10,"initialDrawerHeight"],[989,29,922,29],[989,32,922,32,"React__default"],[989,46,922,46],[989,47,922,46,"default"],[989,54,922,46],[989,55,922,47,"useRef"],[989,61,922,53],[989,62,922,54],[989,63,922,55],[989,64,922,56],[990,4,923,4],[990,10,923,10,"onSnapPointChange"],[990,27,923,27],[990,30,923,30,"React__default"],[990,44,923,44],[990,45,923,44,"default"],[990,52,923,44],[990,53,923,45,"useCallback"],[990,64,923,56],[990,65,923,58,"activeSnapPointIndex"],[990,85,923,78],[990,89,923,81],[991,6,924,8],[992,6,925,8],[992,10,925,12,"snapPoints"],[992,20,925,22],[992,24,925,26,"activeSnapPointIndex"],[992,44,925,46],[992,49,925,51,"snapPointsOffset"],[992,65,925,67],[992,66,925,68,"length"],[992,72,925,74],[992,75,925,77],[992,76,925,78],[992,78,925,80,"openTime"],[992,86,925,88],[992,87,925,89,"current"],[992,94,925,96],[992,97,925,99],[992,101,925,103,"Date"],[992,105,925,107],[992,106,925,108],[992,107,925,109],[993,4,926,4],[993,5,926,5],[993,7,926,7],[993,9,926,9],[993,10,926,10],[994,4,927,4],[994,10,927,10],[995,6,927,12,"activeSnapPoint"],[995,21,927,27],[996,6,927,29,"activeSnapPointIndex"],[996,26,927,49],[997,6,927,51,"setActiveSnapPoint"],[997,24,927,69],[998,6,927,71,"onRelease"],[998,15,927,80],[998,17,927,82,"onReleaseSnapPoints"],[998,36,927,101],[999,6,927,103,"snapPointsOffset"],[999,22,927,119],[1000,6,927,121,"onDrag"],[1000,12,927,127],[1000,14,927,129,"onDragSnapPoints"],[1000,30,927,145],[1001,6,927,147,"shouldFade"],[1001,16,927,157],[1002,6,927,159,"getPercentageDragged"],[1002,26,927,179],[1002,28,927,181,"getSnapPointsPercentageDragged"],[1003,4,927,212],[1003,5,927,213],[1003,8,927,216,"useSnapPoints"],[1003,21,927,229],[1003,22,927,230],[1004,6,928,8,"snapPoints"],[1004,16,928,18],[1005,6,929,8,"activeSnapPointProp"],[1005,25,929,27],[1006,6,930,8,"setActiveSnapPointProp"],[1006,28,930,30],[1007,6,931,8,"drawerRef"],[1007,15,931,17],[1008,6,932,8,"fadeFromIndex"],[1008,19,932,21],[1009,6,933,8,"overlayRef"],[1009,16,933,18],[1010,6,934,8,"onSnapPointChange"],[1010,23,934,25],[1011,6,935,8,"direction"],[1011,15,935,17],[1012,6,936,8,"container"],[1012,15,936,17],[1013,6,937,8,"snapToSequentialPoint"],[1014,4,938,4],[1014,5,938,5],[1014,6,938,6],[1015,4,939,4,"usePreventScroll"],[1015,20,939,20],[1015,21,939,21],[1016,6,940,8,"isDisabled"],[1016,16,940,18],[1016,18,940,20],[1016,19,940,21,"isOpen"],[1016,25,940,27],[1016,29,940,31,"isDragging"],[1016,39,940,41],[1016,43,940,45],[1016,44,940,46,"modal"],[1016,49,940,51],[1016,53,940,55,"justReleased"],[1016,65,940,67],[1016,69,940,71],[1016,70,940,72,"hasBeenOpened"],[1016,83,940,85],[1016,87,940,89],[1016,88,940,90,"repositionInputs"],[1016,104,940,106],[1016,108,940,110],[1016,109,940,111,"disablePreventScroll"],[1017,4,941,4],[1017,5,941,5],[1017,6,941,6],[1018,4,942,4],[1018,10,942,10],[1019,6,942,12,"restorePositionSetting"],[1020,4,942,35],[1020,5,942,36],[1020,8,942,39,"usePositionFixed"],[1020,24,942,55],[1020,25,942,56],[1021,6,943,8,"isOpen"],[1021,12,943,14],[1022,6,944,8,"modal"],[1022,11,944,13],[1023,6,945,8,"nested"],[1023,12,945,14],[1023,14,945,16,"nested"],[1023,20,945,22],[1023,24,945,26],[1023,28,945,30],[1023,31,945,33,"nested"],[1023,37,945,39],[1023,40,945,42],[1023,45,945,47],[1024,6,946,8,"hasBeenOpened"],[1024,19,946,21],[1025,6,947,8,"preventScrollRestoration"],[1025,30,947,32],[1026,6,948,8,"noBodyStyles"],[1027,4,949,4],[1027,5,949,5],[1027,6,949,6],[1028,4,950,4],[1028,13,950,13,"getScale"],[1028,21,950,21,"getScale"],[1028,22,950,21],[1028,24,950,24],[1029,6,951,8],[1029,13,951,15],[1029,14,951,16,"window"],[1029,20,951,22],[1029,21,951,23,"innerWidth"],[1029,31,951,33],[1029,34,951,36,"WINDOW_TOP_OFFSET"],[1029,51,951,53],[1029,55,951,57,"window"],[1029,61,951,63],[1029,62,951,64,"innerWidth"],[1029,72,951,74],[1030,4,952,4],[1031,4,953,4],[1031,13,953,13,"onPress"],[1031,20,953,20,"onPress"],[1031,21,953,21,"event"],[1031,26,953,26],[1031,28,953,28],[1032,6,954,8],[1032,10,954,12,"_drawerRef_current"],[1032,28,954,30],[1032,30,954,32,"_drawerRef_current1"],[1032,49,954,51],[1033,6,955,8],[1033,10,955,12],[1033,11,955,13,"dismissible"],[1033,22,955,24],[1033,26,955,28],[1033,27,955,29,"snapPoints"],[1033,37,955,39],[1033,39,955,41],[1034,6,956,8],[1034,10,956,12,"drawerRef"],[1034,19,956,21],[1034,20,956,22,"current"],[1034,27,956,29],[1034,31,956,33],[1034,32,956,34,"drawerRef"],[1034,41,956,43],[1034,42,956,44,"current"],[1034,49,956,51],[1034,50,956,52,"contains"],[1034,58,956,60],[1034,59,956,61,"event"],[1034,64,956,66],[1034,65,956,67,"target"],[1034,71,956,73],[1034,72,956,74],[1034,74,956,76],[1035,6,957,8,"drawerHeightRef"],[1035,21,957,23],[1035,22,957,24,"current"],[1035,29,957,31],[1035,32,957,34],[1035,33,957,35],[1035,34,957,36,"_drawerRef_current"],[1035,52,957,54],[1035,55,957,57,"drawerRef"],[1035,64,957,66],[1035,65,957,67,"current"],[1035,72,957,74],[1035,77,957,79],[1035,81,957,83],[1035,84,957,86],[1035,89,957,91],[1035,90,957,92],[1035,93,957,95,"_drawerRef_current"],[1035,111,957,113],[1035,112,957,114,"getBoundingClientRect"],[1035,133,957,135],[1035,134,957,136],[1035,135,957,137],[1035,136,957,138,"height"],[1035,142,957,144],[1035,147,957,149],[1035,148,957,150],[1036,6,958,8,"drawerWidthRef"],[1036,20,958,22],[1036,21,958,23,"current"],[1036,28,958,30],[1036,31,958,33],[1036,32,958,34],[1036,33,958,35,"_drawerRef_current1"],[1036,52,958,54],[1036,55,958,57,"drawerRef"],[1036,64,958,66],[1036,65,958,67,"current"],[1036,72,958,74],[1036,77,958,79],[1036,81,958,83],[1036,84,958,86],[1036,89,958,91],[1036,90,958,92],[1036,93,958,95,"_drawerRef_current1"],[1036,112,958,114],[1036,113,958,115,"getBoundingClientRect"],[1036,134,958,136],[1036,135,958,137],[1036,136,958,138],[1036,137,958,139,"width"],[1036,142,958,144],[1036,147,958,149],[1036,148,958,150],[1037,6,959,8,"setIsDragging"],[1037,19,959,21],[1037,20,959,22],[1037,24,959,26],[1037,25,959,27],[1038,6,960,8,"dragStartTime"],[1038,19,960,21],[1038,20,960,22,"current"],[1038,27,960,29],[1038,30,960,32],[1038,34,960,36,"Date"],[1038,38,960,40],[1038,39,960,41],[1038,40,960,42],[1039,6,961,8],[1040,6,962,8],[1040,10,962,12,"isIOS"],[1040,15,962,17],[1040,16,962,18],[1040,17,962,19],[1040,19,962,21],[1041,8,963,12,"window"],[1041,14,963,18],[1041,15,963,19,"addEventListener"],[1041,31,963,35],[1041,32,963,36],[1041,42,963,46],[1041,44,963,48],[1041,50,963,52,"isAllowedToDrag"],[1041,65,963,67],[1041,66,963,68,"current"],[1041,73,963,75],[1041,76,963,78],[1041,81,963,83],[1041,83,963,85],[1042,10,964,16,"once"],[1042,14,964,20],[1042,16,964,22],[1043,8,965,12],[1043,9,965,13],[1043,10,965,14],[1044,6,966,8],[1045,6,967,8],[1046,6,968,8,"event"],[1046,11,968,13],[1046,12,968,14,"target"],[1046,18,968,20],[1046,19,968,21,"setPointerCapture"],[1046,36,968,38],[1046,37,968,39,"event"],[1046,42,968,44],[1046,43,968,45,"pointerId"],[1046,52,968,54],[1046,53,968,55],[1047,6,969,8,"pointerStart"],[1047,18,969,20],[1047,19,969,21,"current"],[1047,26,969,28],[1047,29,969,31,"isVertical"],[1047,39,969,41],[1047,40,969,42,"direction"],[1047,49,969,51],[1047,50,969,52],[1047,53,969,55,"event"],[1047,58,969,60],[1047,59,969,61,"pageY"],[1047,64,969,66],[1047,67,969,69,"event"],[1047,72,969,74],[1047,73,969,75,"pageX"],[1047,78,969,80],[1048,4,970,4],[1049,4,971,4],[1049,13,971,13,"shouldDrag"],[1049,23,971,23,"shouldDrag"],[1049,24,971,24,"el"],[1049,26,971,26],[1049,28,971,28,"isDraggingInDirection"],[1049,49,971,49],[1049,51,971,51],[1050,6,972,8],[1050,10,972,12,"_window_getSelection"],[1050,30,972,32],[1051,6,973,8],[1051,10,973,12,"element"],[1051,17,973,19],[1051,20,973,22,"el"],[1051,22,973,24],[1052,6,974,8],[1052,12,974,14,"highlightedText"],[1052,27,974,29],[1052,30,974,32],[1052,31,974,33,"_window_getSelection"],[1052,51,974,53],[1052,54,974,56,"window"],[1052,60,974,62],[1052,61,974,63,"getSelection"],[1052,73,974,75],[1052,74,974,76],[1052,75,974,77],[1052,80,974,82],[1052,84,974,86],[1052,87,974,89],[1052,92,974,94],[1052,93,974,95],[1052,96,974,98,"_window_getSelection"],[1052,116,974,118],[1052,117,974,119,"toString"],[1052,125,974,127],[1052,126,974,128],[1052,127,974,129],[1053,6,975,8],[1053,12,975,14,"swipeAmount"],[1053,23,975,25],[1053,26,975,28,"drawerRef"],[1053,35,975,37],[1053,36,975,38,"current"],[1053,43,975,45],[1053,46,975,48,"getTranslate"],[1053,58,975,60],[1053,59,975,61,"drawerRef"],[1053,68,975,70],[1053,69,975,71,"current"],[1053,76,975,78],[1053,78,975,80,"direction"],[1053,87,975,89],[1053,88,975,90],[1053,91,975,93],[1053,95,975,97],[1054,6,976,8],[1054,12,976,14,"date"],[1054,16,976,18],[1054,19,976,21],[1054,23,976,25,"Date"],[1054,27,976,29],[1054,28,976,30],[1054,29,976,31],[1055,6,977,8],[1056,6,978,8],[1056,10,978,12,"element"],[1056,17,978,19],[1056,18,978,20,"tagName"],[1056,25,978,27],[1056,30,978,32],[1056,38,978,40],[1056,40,978,42],[1057,8,979,12],[1057,15,979,19],[1057,20,979,24],[1058,6,980,8],[1059,6,981,8],[1059,10,981,12,"element"],[1059,17,981,19],[1059,18,981,20,"hasAttribute"],[1059,30,981,32],[1059,31,981,33],[1059,50,981,52],[1059,51,981,53],[1059,55,981,57,"element"],[1059,62,981,64],[1059,63,981,65,"closest"],[1059,70,981,72],[1059,71,981,73],[1059,92,981,94],[1059,93,981,95],[1059,95,981,97],[1060,8,982,12],[1060,15,982,19],[1060,20,982,24],[1061,6,983,8],[1062,6,984,8],[1062,10,984,12,"direction"],[1062,19,984,21],[1062,24,984,26],[1062,31,984,33],[1062,35,984,37,"direction"],[1062,44,984,46],[1062,49,984,51],[1062,55,984,57],[1062,57,984,59],[1063,8,985,12],[1063,15,985,19],[1063,19,985,23],[1064,6,986,8],[1065,6,987,8],[1066,6,988,8],[1066,10,988,12,"openTime"],[1066,18,988,20],[1066,19,988,21,"current"],[1066,26,988,28],[1066,30,988,32,"date"],[1066,34,988,36],[1066,35,988,37,"getTime"],[1066,42,988,44],[1066,43,988,45],[1066,44,988,46],[1066,47,988,49,"openTime"],[1066,55,988,57],[1066,56,988,58,"current"],[1066,63,988,65],[1066,64,988,66,"getTime"],[1066,71,988,73],[1066,72,988,74],[1066,73,988,75],[1066,76,988,78],[1066,79,988,81],[1066,81,988,83],[1067,8,989,12],[1067,15,989,19],[1067,20,989,24],[1068,6,990,8],[1069,6,991,8],[1069,10,991,12,"swipeAmount"],[1069,21,991,23],[1069,26,991,28],[1069,30,991,32],[1069,32,991,34],[1070,8,992,12],[1070,12,992,16,"direction"],[1070,21,992,25],[1070,26,992,30],[1070,34,992,38],[1070,37,992,41,"swipeAmount"],[1070,48,992,52],[1070,51,992,55],[1070,52,992,56],[1070,55,992,59,"swipeAmount"],[1070,66,992,70],[1070,69,992,73],[1070,70,992,74],[1070,72,992,76],[1071,10,993,16],[1071,17,993,23],[1071,21,993,27],[1072,8,994,12],[1073,6,995,8],[1074,6,996,8],[1075,6,997,8],[1075,10,997,12,"highlightedText"],[1075,25,997,27],[1075,29,997,31,"highlightedText"],[1075,44,997,46],[1075,45,997,47,"length"],[1075,51,997,53],[1075,54,997,56],[1075,55,997,57],[1075,57,997,59],[1076,8,998,12],[1076,15,998,19],[1076,20,998,24],[1077,6,999,8],[1078,6,1000,8],[1079,6,1001,8],[1079,10,1001,12,"lastTimeDragPrevented"],[1079,31,1001,33],[1079,32,1001,34,"current"],[1079,39,1001,41],[1079,43,1001,45,"date"],[1079,47,1001,49],[1079,48,1001,50,"getTime"],[1079,55,1001,57],[1079,56,1001,58],[1079,57,1001,59],[1079,60,1001,62,"lastTimeDragPrevented"],[1079,81,1001,83],[1079,82,1001,84,"current"],[1079,89,1001,91],[1079,90,1001,92,"getTime"],[1079,97,1001,99],[1079,98,1001,100],[1079,99,1001,101],[1079,102,1001,104,"scrollLockTimeout"],[1079,119,1001,121],[1079,123,1001,125,"swipeAmount"],[1079,134,1001,136],[1079,139,1001,141],[1079,140,1001,142],[1079,142,1001,144],[1080,8,1002,12,"lastTimeDragPrevented"],[1080,29,1002,33],[1080,30,1002,34,"current"],[1080,37,1002,41],[1080,40,1002,44,"date"],[1080,44,1002,48],[1081,8,1003,12],[1081,15,1003,19],[1081,20,1003,24],[1082,6,1004,8],[1083,6,1005,8],[1083,10,1005,12,"isDraggingInDirection"],[1083,31,1005,33],[1083,33,1005,35],[1084,8,1006,12,"lastTimeDragPrevented"],[1084,29,1006,33],[1084,30,1006,34,"current"],[1084,37,1006,41],[1084,40,1006,44,"date"],[1084,44,1006,48],[1085,8,1007,12],[1086,8,1008,12],[1086,15,1008,19],[1086,20,1008,24],[1087,6,1009,8],[1088,6,1010,8],[1089,6,1011,8],[1089,13,1011,14,"element"],[1089,20,1011,21],[1089,22,1011,22],[1090,8,1012,12],[1091,8,1013,12],[1091,12,1013,16,"element"],[1091,19,1013,23],[1091,20,1013,24,"scrollHeight"],[1091,32,1013,36],[1091,35,1013,39,"element"],[1091,42,1013,46],[1091,43,1013,47,"clientHeight"],[1091,55,1013,59],[1091,57,1013,61],[1092,10,1014,16],[1092,14,1014,20,"element"],[1092,21,1014,27],[1092,22,1014,28,"scrollTop"],[1092,31,1014,37],[1092,36,1014,42],[1092,37,1014,43],[1092,39,1014,45],[1093,12,1015,20,"lastTimeDragPrevented"],[1093,33,1015,41],[1093,34,1015,42,"current"],[1093,41,1015,49],[1093,44,1015,52],[1093,48,1015,56,"Date"],[1093,52,1015,60],[1093,53,1015,61],[1093,54,1015,62],[1094,12,1016,20],[1095,12,1017,20],[1095,19,1017,27],[1095,24,1017,32],[1096,10,1018,16],[1097,10,1019,16],[1097,14,1019,20,"element"],[1097,21,1019,27],[1097,22,1019,28,"getAttribute"],[1097,34,1019,40],[1097,35,1019,41],[1097,41,1019,47],[1097,42,1019,48],[1097,47,1019,53],[1097,55,1019,61],[1097,57,1019,63],[1098,12,1020,20],[1098,19,1020,27],[1098,23,1020,31],[1099,10,1021,16],[1100,8,1022,12],[1101,8,1023,12],[1102,8,1024,12,"element"],[1102,15,1024,19],[1102,18,1024,22,"element"],[1102,25,1024,29],[1102,26,1024,30,"parentNode"],[1102,36,1024,40],[1103,6,1025,8],[1104,6,1026,8],[1105,6,1027,8],[1105,13,1027,15],[1105,17,1027,19],[1106,4,1028,4],[1107,4,1029,4],[1107,13,1029,13,"onDrag"],[1107,19,1029,19,"onDrag"],[1107,20,1029,20,"event"],[1107,25,1029,25],[1107,27,1029,27],[1108,6,1030,8],[1108,10,1030,12],[1108,11,1030,13,"drawerRef"],[1108,20,1030,22],[1108,21,1030,23,"current"],[1108,28,1030,30],[1108,30,1030,32],[1109,8,1031,12],[1110,6,1032,8],[1111,6,1033,8],[1112,6,1034,8],[1112,10,1034,12,"isDragging"],[1112,20,1034,22],[1112,22,1034,24],[1113,8,1035,12],[1113,14,1035,18,"directionMultiplier"],[1113,33,1035,37],[1113,36,1035,40,"direction"],[1113,45,1035,49],[1113,50,1035,54],[1113,58,1035,62],[1113,62,1035,66,"direction"],[1113,71,1035,75],[1113,76,1035,80],[1113,83,1035,87],[1113,86,1035,90],[1113,87,1035,91],[1113,90,1035,94],[1113,91,1035,95],[1113,92,1035,96],[1114,8,1036,12],[1114,14,1036,18,"draggedDistance"],[1114,29,1036,33],[1114,32,1036,36],[1114,33,1036,37,"pointerStart"],[1114,45,1036,49],[1114,46,1036,50,"current"],[1114,53,1036,57],[1114,57,1036,61,"isVertical"],[1114,67,1036,71],[1114,68,1036,72,"direction"],[1114,77,1036,81],[1114,78,1036,82],[1114,81,1036,85,"event"],[1114,86,1036,90],[1114,87,1036,91,"pageY"],[1114,92,1036,96],[1114,95,1036,99,"event"],[1114,100,1036,104],[1114,101,1036,105,"pageX"],[1114,106,1036,110],[1114,107,1036,111],[1114,111,1036,115,"directionMultiplier"],[1114,130,1036,134],[1115,8,1037,12],[1115,14,1037,18,"isDraggingInDirection"],[1115,35,1037,39],[1115,38,1037,42,"draggedDistance"],[1115,53,1037,57],[1115,56,1037,60],[1115,57,1037,61],[1116,8,1038,12],[1117,8,1039,12],[1117,14,1039,18,"noCloseSnapPointsPreCondition"],[1117,43,1039,47],[1117,46,1039,50,"snapPoints"],[1117,56,1039,60],[1117,60,1039,64],[1117,61,1039,65,"dismissible"],[1117,72,1039,76],[1117,76,1039,80],[1117,77,1039,81,"isDraggingInDirection"],[1117,98,1039,102],[1118,8,1040,12],[1119,8,1041,12],[1119,12,1041,16,"noCloseSnapPointsPreCondition"],[1119,41,1041,45],[1119,45,1041,49,"activeSnapPointIndex"],[1119,65,1041,69],[1119,70,1041,74],[1119,71,1041,75],[1119,73,1041,77],[1120,8,1042,12],[1121,8,1043,12],[1121,14,1043,18,"absDraggedDistance"],[1121,32,1043,36],[1121,35,1043,39,"Math"],[1121,39,1043,43],[1121,40,1043,44,"abs"],[1121,43,1043,47],[1121,44,1043,48,"draggedDistance"],[1121,59,1043,63],[1121,60,1043,64],[1122,8,1044,12],[1122,14,1044,18,"wrapper"],[1122,21,1044,25],[1122,24,1044,28,"document"],[1122,32,1044,36],[1122,33,1044,37,"querySelector"],[1122,46,1044,50],[1122,47,1044,51],[1122,75,1044,79],[1122,76,1044,80],[1123,8,1045,12],[1123,14,1045,18,"drawerDimension"],[1123,29,1045,33],[1123,32,1045,36,"direction"],[1123,41,1045,45],[1123,46,1045,50],[1123,54,1045,58],[1123,58,1045,62,"direction"],[1123,67,1045,71],[1123,72,1045,76],[1123,77,1045,81],[1123,80,1045,84,"drawerHeightRef"],[1123,95,1045,99],[1123,96,1045,100,"current"],[1123,103,1045,107],[1123,106,1045,110,"drawerWidthRef"],[1123,120,1045,124],[1123,121,1045,125,"current"],[1123,128,1045,132],[1124,8,1046,12],[1125,8,1047,12],[1125,12,1047,16,"percentageDragged"],[1125,29,1047,33],[1125,32,1047,36,"absDraggedDistance"],[1125,50,1047,54],[1125,53,1047,57,"drawerDimension"],[1125,68,1047,72],[1126,8,1048,12],[1126,14,1048,18,"snapPointPercentageDragged"],[1126,40,1048,44],[1126,43,1048,47,"getSnapPointsPercentageDragged"],[1126,73,1048,77],[1126,74,1048,78,"absDraggedDistance"],[1126,92,1048,96],[1126,94,1048,98,"isDraggingInDirection"],[1126,115,1048,119],[1126,116,1048,120],[1127,8,1049,12],[1127,12,1049,16,"snapPointPercentageDragged"],[1127,38,1049,42],[1127,43,1049,47],[1127,47,1049,51],[1127,49,1049,53],[1128,10,1050,16,"percentageDragged"],[1128,27,1050,33],[1128,30,1050,36,"snapPointPercentageDragged"],[1128,56,1050,62],[1129,8,1051,12],[1130,8,1052,12],[1131,8,1053,12],[1131,12,1053,16,"noCloseSnapPointsPreCondition"],[1131,41,1053,45],[1131,45,1053,49,"percentageDragged"],[1131,62,1053,66],[1131,66,1053,70],[1131,67,1053,71],[1131,69,1053,73],[1132,10,1054,16],[1133,8,1055,12],[1134,8,1056,12],[1134,12,1056,16],[1134,13,1056,17,"isAllowedToDrag"],[1134,28,1056,32],[1134,29,1056,33,"current"],[1134,36,1056,40],[1134,40,1056,44],[1134,41,1056,45,"shouldDrag"],[1134,51,1056,55],[1134,52,1056,56,"event"],[1134,57,1056,61],[1134,58,1056,62,"target"],[1134,64,1056,68],[1134,66,1056,70,"isDraggingInDirection"],[1134,87,1056,91],[1134,88,1056,92],[1134,90,1056,94],[1135,8,1057,12,"drawerRef"],[1135,17,1057,21],[1135,18,1057,22,"current"],[1135,25,1057,29],[1135,26,1057,30,"classList"],[1135,35,1057,39],[1135,36,1057,40,"add"],[1135,39,1057,43],[1135,40,1057,44,"DRAG_CLASS"],[1135,50,1057,54],[1135,51,1057,55],[1136,8,1058,12],[1137,8,1059,12,"isAllowedToDrag"],[1137,23,1059,27],[1137,24,1059,28,"current"],[1137,31,1059,35],[1137,34,1059,38],[1137,38,1059,42],[1138,8,1060,12,"set"],[1138,11,1060,15],[1138,12,1060,16,"drawerRef"],[1138,21,1060,25],[1138,22,1060,26,"current"],[1138,29,1060,33],[1138,31,1060,35],[1139,10,1061,16,"transition"],[1139,20,1061,26],[1139,22,1061,28],[1140,8,1062,12],[1140,9,1062,13],[1140,10,1062,14],[1141,8,1063,12,"set"],[1141,11,1063,15],[1141,12,1063,16,"overlayRef"],[1141,22,1063,26],[1141,23,1063,27,"current"],[1141,30,1063,34],[1141,32,1063,36],[1142,10,1064,16,"transition"],[1142,20,1064,26],[1142,22,1064,28],[1143,8,1065,12],[1143,9,1065,13],[1143,10,1065,14],[1144,8,1066,12],[1144,12,1066,16,"snapPoints"],[1144,22,1066,26],[1144,24,1066,28],[1145,10,1067,16,"onDragSnapPoints"],[1145,26,1067,32],[1145,27,1067,33],[1146,12,1068,20,"draggedDistance"],[1147,10,1069,16],[1147,11,1069,17],[1147,12,1069,18],[1148,8,1070,12],[1149,8,1071,12],[1150,8,1072,12],[1150,12,1072,16,"isDraggingInDirection"],[1150,33,1072,37],[1150,37,1072,41],[1150,38,1072,42,"snapPoints"],[1150,48,1072,52],[1150,50,1072,54],[1151,10,1073,16],[1151,16,1073,22,"dampenedDraggedDistance"],[1151,39,1073,45],[1151,42,1073,48,"dampenValue"],[1151,53,1073,59],[1151,54,1073,60,"draggedDistance"],[1151,69,1073,75],[1151,70,1073,76],[1152,10,1074,16],[1152,16,1074,22,"translateValue"],[1152,30,1074,36],[1152,33,1074,39,"Math"],[1152,37,1074,43],[1152,38,1074,44,"min"],[1152,41,1074,47],[1152,42,1074,48,"dampenedDraggedDistance"],[1152,65,1074,71],[1152,68,1074,74],[1152,69,1074,75],[1152,70,1074,76],[1152,72,1074,78],[1152,73,1074,79],[1152,74,1074,80],[1152,77,1074,83,"directionMultiplier"],[1152,96,1074,102],[1153,10,1075,16,"set"],[1153,13,1075,19],[1153,14,1075,20,"drawerRef"],[1153,23,1075,29],[1153,24,1075,30,"current"],[1153,31,1075,37],[1153,33,1075,39],[1154,12,1076,20,"transform"],[1154,21,1076,29],[1154,23,1076,31,"isVertical"],[1154,33,1076,41],[1154,34,1076,42,"direction"],[1154,43,1076,51],[1154,44,1076,52],[1154,47,1076,55],[1154,65,1076,73,"translateValue"],[1154,79,1076,87],[1154,87,1076,95],[1154,90,1076,98],[1154,105,1076,113,"translateValue"],[1154,119,1076,127],[1155,10,1077,16],[1155,11,1077,17],[1155,12,1077,18],[1156,10,1078,16],[1157,8,1079,12],[1158,8,1080,12],[1158,14,1080,18,"opacityValue"],[1158,26,1080,30],[1158,29,1080,33],[1158,30,1080,34],[1158,33,1080,37,"percentageDragged"],[1158,50,1080,54],[1159,8,1081,12],[1159,12,1081,16,"shouldFade"],[1159,22,1081,26],[1159,26,1081,30,"fadeFromIndex"],[1159,39,1081,43],[1159,43,1081,47,"activeSnapPointIndex"],[1159,63,1081,67],[1159,68,1081,72,"fadeFromIndex"],[1159,81,1081,85],[1159,84,1081,88],[1159,85,1081,89],[1159,87,1081,91],[1160,10,1082,16,"onDragProp"],[1160,20,1082,26],[1160,24,1082,30],[1160,28,1082,34],[1160,31,1082,37],[1160,36,1082,42],[1160,37,1082,43],[1160,40,1082,46,"onDragProp"],[1160,50,1082,56],[1160,51,1082,57,"event"],[1160,56,1082,62],[1160,58,1082,64,"percentageDragged"],[1160,75,1082,81],[1160,76,1082,82],[1161,10,1083,16,"set"],[1161,13,1083,19],[1161,14,1083,20,"overlayRef"],[1161,24,1083,30],[1161,25,1083,31,"current"],[1161,32,1083,38],[1161,34,1083,40],[1162,12,1084,20,"opacity"],[1162,19,1084,27],[1162,21,1084,29],[1162,24,1084,32,"opacityValue"],[1162,36,1084,44],[1162,38,1084,46],[1163,12,1085,20,"transition"],[1163,22,1085,30],[1163,24,1085,32],[1164,10,1086,16],[1164,11,1086,17],[1164,13,1086,19],[1164,17,1086,23],[1164,18,1086,24],[1165,8,1087,12],[1166,8,1088,12],[1166,12,1088,16,"wrapper"],[1166,19,1088,23],[1166,23,1088,27,"overlayRef"],[1166,33,1088,37],[1166,34,1088,38,"current"],[1166,41,1088,45],[1166,45,1088,49,"shouldScaleBackground"],[1166,66,1088,70],[1166,68,1088,72],[1167,10,1089,16],[1168,10,1090,16],[1168,16,1090,22,"scaleValue"],[1168,26,1090,32],[1168,29,1090,35,"Math"],[1168,33,1090,39],[1168,34,1090,40,"min"],[1168,37,1090,43],[1168,38,1090,44,"getScale"],[1168,46,1090,52],[1168,47,1090,53],[1168,48,1090,54],[1168,51,1090,57,"percentageDragged"],[1168,68,1090,74],[1168,72,1090,78],[1168,73,1090,79],[1168,76,1090,82,"getScale"],[1168,84,1090,90],[1168,85,1090,91],[1168,86,1090,92],[1168,87,1090,93],[1168,89,1090,95],[1168,90,1090,96],[1168,91,1090,97],[1169,10,1091,16],[1169,16,1091,22,"borderRadiusValue"],[1169,33,1091,39],[1169,36,1091,42],[1169,37,1091,43],[1169,40,1091,46,"percentageDragged"],[1169,57,1091,63],[1169,60,1091,66],[1169,61,1091,67],[1170,10,1092,16],[1170,16,1092,22,"translateValue"],[1170,30,1092,36],[1170,33,1092,39,"Math"],[1170,37,1092,43],[1170,38,1092,44,"max"],[1170,41,1092,47],[1170,42,1092,48],[1170,43,1092,49],[1170,45,1092,51],[1170,47,1092,53],[1170,50,1092,56,"percentageDragged"],[1170,67,1092,73],[1170,70,1092,76],[1170,72,1092,78],[1170,73,1092,79],[1171,10,1093,16,"set"],[1171,13,1093,19],[1171,14,1093,20,"wrapper"],[1171,21,1093,27],[1171,23,1093,29],[1172,12,1094,20,"borderRadius"],[1172,24,1094,32],[1172,26,1094,34],[1172,29,1094,37,"borderRadiusValue"],[1172,46,1094,54],[1172,50,1094,58],[1173,12,1095,20,"transform"],[1173,21,1095,29],[1173,23,1095,31,"isVertical"],[1173,33,1095,41],[1173,34,1095,42,"direction"],[1173,43,1095,51],[1173,44,1095,52],[1173,47,1095,55],[1173,56,1095,64,"scaleValue"],[1173,66,1095,74],[1173,86,1095,94,"translateValue"],[1173,100,1095,108],[1173,108,1095,116],[1173,111,1095,119],[1173,120,1095,128,"scaleValue"],[1173,130,1095,138],[1173,147,1095,155,"translateValue"],[1173,161,1095,169],[1173,172,1095,180],[1174,12,1096,20,"transition"],[1174,22,1096,30],[1174,24,1096,32],[1175,10,1097,16],[1175,11,1097,17],[1175,13,1097,19],[1175,17,1097,23],[1175,18,1097,24],[1176,8,1098,12],[1177,8,1099,12],[1177,12,1099,16],[1177,13,1099,17,"snapPoints"],[1177,23,1099,27],[1177,25,1099,29],[1178,10,1100,16],[1178,16,1100,22,"translateValue"],[1178,30,1100,36],[1178,33,1100,39,"absDraggedDistance"],[1178,51,1100,57],[1178,54,1100,60,"directionMultiplier"],[1178,73,1100,79],[1179,10,1101,16,"set"],[1179,13,1101,19],[1179,14,1101,20,"drawerRef"],[1179,23,1101,29],[1179,24,1101,30,"current"],[1179,31,1101,37],[1179,33,1101,39],[1180,12,1102,20,"transform"],[1180,21,1102,29],[1180,23,1102,31,"isVertical"],[1180,33,1102,41],[1180,34,1102,42,"direction"],[1180,43,1102,51],[1180,44,1102,52],[1180,47,1102,55],[1180,65,1102,73,"translateValue"],[1180,79,1102,87],[1180,87,1102,95],[1180,90,1102,98],[1180,105,1102,113,"translateValue"],[1180,119,1102,127],[1181,10,1103,16],[1181,11,1103,17],[1181,12,1103,18],[1182,8,1104,12],[1183,6,1105,8],[1184,4,1106,4],[1185,4,1107,4,"React__default"],[1185,18,1107,18],[1185,19,1107,18,"default"],[1185,26,1107,18],[1185,27,1107,19,"useEffect"],[1185,36,1107,28],[1185,37,1107,29],[1185,43,1107,33],[1186,6,1108,8,"window"],[1186,12,1108,14],[1186,13,1108,15,"requestAnimationFrame"],[1186,34,1108,36],[1186,35,1108,37],[1186,41,1108,41],[1187,8,1109,12,"shouldAnimate"],[1187,21,1109,25],[1187,22,1109,26,"current"],[1187,29,1109,33],[1187,32,1109,36],[1187,36,1109,40],[1188,6,1110,8],[1188,7,1110,9],[1188,8,1110,10],[1189,4,1111,4],[1189,5,1111,5],[1189,7,1111,7],[1189,9,1111,9],[1189,10,1111,10],[1190,4,1112,4,"React__default"],[1190,18,1112,18],[1190,19,1112,18,"default"],[1190,26,1112,18],[1190,27,1112,19,"useEffect"],[1190,36,1112,28],[1190,37,1112,29],[1190,43,1112,33],[1191,6,1113,8],[1191,10,1113,12,"_window_visualViewport"],[1191,32,1113,34],[1192,6,1114,8],[1192,15,1114,17,"onVisualViewportChange"],[1192,37,1114,39,"onVisualViewportChange"],[1192,38,1114,39],[1192,40,1114,42],[1193,8,1115,12],[1193,12,1115,16],[1193,13,1115,17,"drawerRef"],[1193,22,1115,26],[1193,23,1115,27,"current"],[1193,30,1115,34],[1193,34,1115,38],[1193,35,1115,39,"repositionInputs"],[1193,51,1115,55],[1193,53,1115,57],[1194,8,1116,12],[1194,14,1116,18,"focusedElement"],[1194,28,1116,32],[1194,31,1116,35,"document"],[1194,39,1116,43],[1194,40,1116,44,"activeElement"],[1194,53,1116,57],[1195,8,1117,12],[1195,12,1117,16,"isInput"],[1195,19,1117,23],[1195,20,1117,24,"focusedElement"],[1195,34,1117,38],[1195,35,1117,39],[1195,39,1117,43,"keyboardIsOpen"],[1195,53,1117,57],[1195,54,1117,58,"current"],[1195,61,1117,65],[1195,63,1117,67],[1196,10,1118,16],[1196,14,1118,20,"_window_visualViewport"],[1196,36,1118,42],[1197,10,1119,16],[1197,16,1119,22,"visualViewportHeight"],[1197,36,1119,42],[1197,39,1119,45],[1197,40,1119,46],[1197,41,1119,47,"_window_visualViewport"],[1197,63,1119,69],[1197,66,1119,72,"window"],[1197,72,1119,78],[1197,73,1119,79,"visualViewport"],[1197,87,1119,93],[1197,92,1119,98],[1197,96,1119,102],[1197,99,1119,105],[1197,104,1119,110],[1197,105,1119,111],[1197,108,1119,114,"_window_visualViewport"],[1197,130,1119,136],[1197,131,1119,137,"height"],[1197,137,1119,143],[1197,142,1119,148],[1197,143,1119,149],[1198,10,1120,16],[1198,16,1120,22,"totalHeight"],[1198,27,1120,33],[1198,30,1120,36,"window"],[1198,36,1120,42],[1198,37,1120,43,"innerHeight"],[1198,48,1120,54],[1199,10,1121,16],[1200,10,1122,16],[1200,14,1122,20,"diffFromInitial"],[1200,29,1122,35],[1200,32,1122,38,"totalHeight"],[1200,43,1122,49],[1200,46,1122,52,"visualViewportHeight"],[1200,66,1122,72],[1201,10,1123,16],[1201,16,1123,22,"drawerHeight"],[1201,28,1123,34],[1201,31,1123,37,"drawerRef"],[1201,40,1123,46],[1201,41,1123,47,"current"],[1201,48,1123,54],[1201,49,1123,55,"getBoundingClientRect"],[1201,70,1123,76],[1201,71,1123,77],[1201,72,1123,78],[1201,73,1123,79,"height"],[1201,79,1123,85],[1201,83,1123,89],[1201,84,1123,90],[1202,10,1124,16],[1203,10,1125,16],[1203,16,1125,22,"isTallEnough"],[1203,28,1125,34],[1203,31,1125,37,"drawerHeight"],[1203,43,1125,49],[1203,46,1125,52,"totalHeight"],[1203,57,1125,63],[1203,60,1125,66],[1203,63,1125,69],[1204,10,1126,16],[1204,14,1126,20],[1204,15,1126,21,"initialDrawerHeight"],[1204,34,1126,40],[1204,35,1126,41,"current"],[1204,42,1126,48],[1204,44,1126,50],[1205,12,1127,20,"initialDrawerHeight"],[1205,31,1127,39],[1205,32,1127,40,"current"],[1205,39,1127,47],[1205,42,1127,50,"drawerHeight"],[1205,54,1127,62],[1206,10,1128,16],[1207,10,1129,16],[1207,16,1129,22,"offsetFromTop"],[1207,29,1129,35],[1207,32,1129,38,"drawerRef"],[1207,41,1129,47],[1207,42,1129,48,"current"],[1207,49,1129,55],[1207,50,1129,56,"getBoundingClientRect"],[1207,71,1129,77],[1207,72,1129,78],[1207,73,1129,79],[1207,74,1129,80,"top"],[1207,77,1129,83],[1208,10,1130,16],[1209,10,1131,16],[1209,14,1131,20,"Math"],[1209,18,1131,24],[1209,19,1131,25,"abs"],[1209,22,1131,28],[1209,23,1131,29,"previousDiffFromInitial"],[1209,46,1131,52],[1209,47,1131,53,"current"],[1209,54,1131,60],[1209,57,1131,63,"diffFromInitial"],[1209,72,1131,78],[1209,73,1131,79],[1209,76,1131,82],[1209,78,1131,84],[1209,80,1131,86],[1210,12,1132,20,"keyboardIsOpen"],[1210,26,1132,34],[1210,27,1132,35,"current"],[1210,34,1132,42],[1210,37,1132,45],[1210,38,1132,46,"keyboardIsOpen"],[1210,52,1132,60],[1210,53,1132,61,"current"],[1210,60,1132,68],[1211,10,1133,16],[1212,10,1134,16],[1212,14,1134,20,"snapPoints"],[1212,24,1134,30],[1212,28,1134,34,"snapPoints"],[1212,38,1134,44],[1212,39,1134,45,"length"],[1212,45,1134,51],[1212,48,1134,54],[1212,49,1134,55],[1212,53,1134,59,"snapPointsOffset"],[1212,69,1134,75],[1212,73,1134,79,"activeSnapPointIndex"],[1212,93,1134,99],[1212,95,1134,101],[1213,12,1135,20],[1213,18,1135,26,"activeSnapPointHeight"],[1213,39,1135,47],[1213,42,1135,50,"snapPointsOffset"],[1213,58,1135,66],[1213,59,1135,67,"activeSnapPointIndex"],[1213,79,1135,87],[1213,80,1135,88],[1213,84,1135,92],[1213,85,1135,93],[1214,12,1136,20,"diffFromInitial"],[1214,27,1136,35],[1214,31,1136,39,"activeSnapPointHeight"],[1214,52,1136,60],[1215,10,1137,16],[1216,10,1138,16,"previousDiffFromInitial"],[1216,33,1138,39],[1216,34,1138,40,"current"],[1216,41,1138,47],[1216,44,1138,50,"diffFromInitial"],[1216,59,1138,65],[1217,10,1139,16],[1218,10,1140,16],[1218,14,1140,20,"drawerHeight"],[1218,26,1140,32],[1218,29,1140,35,"visualViewportHeight"],[1218,49,1140,55],[1218,53,1140,59,"keyboardIsOpen"],[1218,67,1140,73],[1218,68,1140,74,"current"],[1218,75,1140,81],[1218,77,1140,83],[1219,12,1141,20],[1219,18,1141,26,"height"],[1219,24,1141,32],[1219,27,1141,35,"drawerRef"],[1219,36,1141,44],[1219,37,1141,45,"current"],[1219,44,1141,52],[1219,45,1141,53,"getBoundingClientRect"],[1219,66,1141,74],[1219,67,1141,75],[1219,68,1141,76],[1219,69,1141,77,"height"],[1219,75,1141,83],[1220,12,1142,20],[1220,16,1142,24,"newDrawerHeight"],[1220,31,1142,39],[1220,34,1142,42,"height"],[1220,40,1142,48],[1221,12,1143,20],[1221,16,1143,24,"height"],[1221,22,1143,30],[1221,25,1143,33,"visualViewportHeight"],[1221,45,1143,53],[1221,47,1143,55],[1222,14,1144,24,"newDrawerHeight"],[1222,29,1144,39],[1222,32,1144,42,"visualViewportHeight"],[1222,52,1144,62],[1222,56,1144,66,"isTallEnough"],[1222,68,1144,78],[1222,71,1144,81,"offsetFromTop"],[1222,84,1144,94],[1222,87,1144,97,"WINDOW_TOP_OFFSET"],[1222,104,1144,114],[1222,105,1144,115],[1223,12,1145,20],[1224,12,1146,20],[1225,12,1147,20],[1225,16,1147,24,"fixed"],[1225,21,1147,29],[1225,23,1147,31],[1226,14,1148,24,"drawerRef"],[1226,23,1148,33],[1226,24,1148,34,"current"],[1226,31,1148,41],[1226,32,1148,42,"style"],[1226,37,1148,47],[1226,38,1148,48,"height"],[1226,44,1148,54],[1226,47,1148,57],[1226,50,1148,60,"height"],[1226,56,1148,66],[1226,59,1148,69,"Math"],[1226,63,1148,73],[1226,64,1148,74,"max"],[1226,67,1148,77],[1226,68,1148,78,"diffFromInitial"],[1226,83,1148,93],[1226,85,1148,95],[1226,86,1148,96],[1226,87,1148,97],[1226,91,1148,101],[1227,12,1149,20],[1227,13,1149,21],[1227,19,1149,27],[1228,14,1150,24,"drawerRef"],[1228,23,1150,33],[1228,24,1150,34,"current"],[1228,31,1150,41],[1228,32,1150,42,"style"],[1228,37,1150,47],[1228,38,1150,48,"height"],[1228,44,1150,54],[1228,47,1150,57],[1228,50,1150,60,"Math"],[1228,54,1150,64],[1228,55,1150,65,"max"],[1228,58,1150,68],[1228,59,1150,69,"newDrawerHeight"],[1228,74,1150,84],[1228,76,1150,86,"visualViewportHeight"],[1228,96,1150,106],[1228,99,1150,109,"offsetFromTop"],[1228,112,1150,122],[1228,113,1150,123],[1228,117,1150,127],[1229,12,1151,20],[1230,10,1152,16],[1230,11,1152,17],[1230,17,1152,23],[1230,21,1152,27],[1230,22,1152,28,"isMobileFirefox"],[1230,37,1152,43],[1230,38,1152,44],[1230,39,1152,45],[1230,41,1152,47],[1231,12,1153,20,"drawerRef"],[1231,21,1153,29],[1231,22,1153,30,"current"],[1231,29,1153,37],[1231,30,1153,38,"style"],[1231,35,1153,43],[1231,36,1153,44,"height"],[1231,42,1153,50],[1231,45,1153,53],[1231,48,1153,56,"initialDrawerHeight"],[1231,67,1153,75],[1231,68,1153,76,"current"],[1231,75,1153,83],[1231,79,1153,87],[1232,10,1154,16],[1233,10,1155,16],[1233,14,1155,20,"snapPoints"],[1233,24,1155,30],[1233,28,1155,34,"snapPoints"],[1233,38,1155,44],[1233,39,1155,45,"length"],[1233,45,1155,51],[1233,48,1155,54],[1233,49,1155,55],[1233,53,1155,59],[1233,54,1155,60,"keyboardIsOpen"],[1233,68,1155,74],[1233,69,1155,75,"current"],[1233,76,1155,82],[1233,78,1155,84],[1234,12,1156,20,"drawerRef"],[1234,21,1156,29],[1234,22,1156,30,"current"],[1234,29,1156,37],[1234,30,1156,38,"style"],[1234,35,1156,43],[1234,36,1156,44,"bottom"],[1234,42,1156,50],[1234,45,1156,53],[1234,50,1156,58],[1235,10,1157,16],[1235,11,1157,17],[1235,17,1157,23],[1236,12,1158,20],[1237,12,1159,20,"drawerRef"],[1237,21,1159,29],[1237,22,1159,30,"current"],[1237,29,1159,37],[1237,30,1159,38,"style"],[1237,35,1159,43],[1237,36,1159,44,"bottom"],[1237,42,1159,50],[1237,45,1159,53],[1237,48,1159,56,"Math"],[1237,52,1159,60],[1237,53,1159,61,"max"],[1237,56,1159,64],[1237,57,1159,65,"diffFromInitial"],[1237,72,1159,80],[1237,74,1159,82],[1237,75,1159,83],[1237,76,1159,84],[1237,80,1159,88],[1238,10,1160,16],[1239,8,1161,12],[1240,6,1162,8],[1241,6,1163,8],[1241,7,1163,9,"_window_visualViewport"],[1241,29,1163,31],[1241,32,1163,34,"window"],[1241,38,1163,40],[1241,39,1163,41,"visualViewport"],[1241,53,1163,55],[1241,58,1163,60],[1241,62,1163,64],[1241,65,1163,67],[1241,70,1163,72],[1241,71,1163,73],[1241,74,1163,76,"_window_visualViewport"],[1241,96,1163,98],[1241,97,1163,99,"addEventListener"],[1241,113,1163,115],[1241,114,1163,116],[1241,122,1163,124],[1241,124,1163,126,"onVisualViewportChange"],[1241,146,1163,148],[1241,147,1163,149],[1242,6,1164,8],[1242,13,1164,15],[1242,19,1164,19],[1243,8,1165,12],[1243,12,1165,16,"_window_visualViewport"],[1243,34,1165,38],[1244,8,1166,12],[1244,15,1166,19],[1244,16,1166,20,"_window_visualViewport"],[1244,38,1166,42],[1244,41,1166,45,"window"],[1244,47,1166,51],[1244,48,1166,52,"visualViewport"],[1244,62,1166,66],[1244,67,1166,71],[1244,71,1166,75],[1244,74,1166,78],[1244,79,1166,83],[1244,80,1166,84],[1244,83,1166,87,"_window_visualViewport"],[1244,105,1166,109],[1244,106,1166,110,"removeEventListener"],[1244,125,1166,129],[1244,126,1166,130],[1244,134,1166,138],[1244,136,1166,140,"onVisualViewportChange"],[1244,158,1166,162],[1244,159,1166,163],[1245,6,1167,8],[1245,7,1167,9],[1246,4,1168,4],[1246,5,1168,5],[1246,7,1168,7],[1246,8,1169,8,"activeSnapPointIndex"],[1246,28,1169,28],[1246,30,1170,8,"snapPoints"],[1246,40,1170,18],[1246,42,1171,8,"snapPointsOffset"],[1246,58,1171,24],[1246,59,1172,5],[1246,60,1172,6],[1247,4,1173,4],[1247,13,1173,13,"closeDrawer"],[1247,24,1173,24,"closeDrawer"],[1247,25,1173,25,"fromWithin"],[1247,35,1173,35],[1247,37,1173,37],[1248,6,1174,8,"cancelDrag"],[1248,16,1174,18],[1248,17,1174,19],[1248,18,1174,20],[1249,6,1175,8,"onClose"],[1249,13,1175,15],[1249,17,1175,19],[1249,21,1175,23],[1249,24,1175,26],[1249,29,1175,31],[1249,30,1175,32],[1249,33,1175,35,"onClose"],[1249,40,1175,42],[1249,41,1175,43],[1249,42,1175,44],[1250,6,1176,8],[1250,10,1176,12],[1250,11,1176,13,"fromWithin"],[1250,21,1176,23],[1250,23,1176,25],[1251,8,1177,12,"setIsOpen"],[1251,17,1177,21],[1251,18,1177,22],[1251,23,1177,27],[1251,24,1177,28],[1252,6,1178,8],[1253,6,1179,8,"setTimeout"],[1253,16,1179,18],[1253,17,1179,19],[1253,23,1179,23],[1254,8,1180,12],[1254,12,1180,16,"snapPoints"],[1254,22,1180,26],[1254,24,1180,28],[1255,10,1181,16,"setActiveSnapPoint"],[1255,28,1181,34],[1255,29,1181,35,"snapPoints"],[1255,39,1181,45],[1255,40,1181,46],[1255,41,1181,47],[1255,42,1181,48],[1255,43,1181,49],[1256,8,1182,12],[1257,6,1183,8],[1257,7,1183,9],[1257,9,1183,11,"TRANSITIONS"],[1257,20,1183,22],[1257,21,1183,23,"DURATION"],[1257,29,1183,31],[1257,32,1183,34],[1257,36,1183,38],[1257,37,1183,39],[1257,38,1183,40],[1257,39,1183,41],[1258,4,1184,4],[1259,4,1185,4],[1259,13,1185,13,"resetDrawer"],[1259,24,1185,24,"resetDrawer"],[1259,25,1185,24],[1259,27,1185,27],[1260,6,1186,8],[1260,10,1186,12],[1260,11,1186,13,"drawerRef"],[1260,20,1186,22],[1260,21,1186,23,"current"],[1260,28,1186,30],[1260,30,1186,32],[1261,6,1187,8],[1261,12,1187,14,"wrapper"],[1261,19,1187,21],[1261,22,1187,24,"document"],[1261,30,1187,32],[1261,31,1187,33,"querySelector"],[1261,44,1187,46],[1261,45,1187,47],[1261,73,1187,75],[1261,74,1187,76],[1262,6,1188,8],[1262,12,1188,14,"currentSwipeAmount"],[1262,30,1188,32],[1262,33,1188,35,"getTranslate"],[1262,45,1188,47],[1262,46,1188,48,"drawerRef"],[1262,55,1188,57],[1262,56,1188,58,"current"],[1262,63,1188,65],[1262,65,1188,67,"direction"],[1262,74,1188,76],[1262,75,1188,77],[1263,6,1189,8,"set"],[1263,9,1189,11],[1263,10,1189,12,"drawerRef"],[1263,19,1189,21],[1263,20,1189,22,"current"],[1263,27,1189,29],[1263,29,1189,31],[1264,8,1190,12,"transform"],[1264,17,1190,21],[1264,19,1190,23],[1264,41,1190,45],[1265,8,1191,12,"transition"],[1265,18,1191,22],[1265,20,1191,24],[1265,33,1191,37,"TRANSITIONS"],[1265,44,1191,48],[1265,45,1191,49,"DURATION"],[1265,53,1191,57],[1265,71,1191,75,"TRANSITIONS"],[1265,82,1191,86],[1265,83,1191,87,"EASE"],[1265,87,1191,91],[1265,88,1191,92,"join"],[1265,92,1191,96],[1265,93,1191,97],[1265,96,1191,100],[1265,97,1191,101],[1266,6,1192,8],[1266,7,1192,9],[1266,8,1192,10],[1267,6,1193,8,"set"],[1267,9,1193,11],[1267,10,1193,12,"overlayRef"],[1267,20,1193,22],[1267,21,1193,23,"current"],[1267,28,1193,30],[1267,30,1193,32],[1268,8,1194,12,"transition"],[1268,18,1194,22],[1268,20,1194,24],[1268,31,1194,35,"TRANSITIONS"],[1268,42,1194,46],[1268,43,1194,47,"DURATION"],[1268,51,1194,55],[1268,69,1194,73,"TRANSITIONS"],[1268,80,1194,84],[1268,81,1194,85,"EASE"],[1268,85,1194,89],[1268,86,1194,90,"join"],[1268,90,1194,94],[1268,91,1194,95],[1268,94,1194,98],[1268,95,1194,99],[1268,98,1194,102],[1269,8,1195,12,"opacity"],[1269,15,1195,19],[1269,17,1195,21],[1270,6,1196,8],[1270,7,1196,9],[1270,8,1196,10],[1271,6,1197,8],[1272,6,1198,8],[1272,10,1198,12,"shouldScaleBackground"],[1272,31,1198,33],[1272,35,1198,37,"currentSwipeAmount"],[1272,53,1198,55],[1272,57,1198,59,"currentSwipeAmount"],[1272,75,1198,77],[1272,78,1198,80],[1272,79,1198,81],[1272,83,1198,85,"isOpen"],[1272,89,1198,91],[1272,91,1198,93],[1273,8,1199,12,"set"],[1273,11,1199,15],[1273,12,1199,16,"wrapper"],[1273,19,1199,23],[1273,21,1199,25],[1274,10,1200,16,"borderRadius"],[1274,22,1200,28],[1274,24,1200,30],[1274,27,1200,33,"BORDER_RADIUS"],[1274,40,1200,46],[1274,44,1200,50],[1275,10,1201,16,"overflow"],[1275,18,1201,24],[1275,20,1201,26],[1275,28,1201,34],[1276,10,1202,16],[1276,14,1202,19,"isVertical"],[1276,24,1202,29],[1276,25,1202,30,"direction"],[1276,34,1202,39],[1276,35,1202,40],[1276,38,1202,43],[1277,12,1203,20,"transform"],[1277,21,1203,29],[1277,23,1203,31],[1277,32,1203,40,"getScale"],[1277,40,1203,48],[1277,41,1203,49],[1277,42,1203,50],[1277,102,1203,110],[1278,12,1204,20,"transformOrigin"],[1278,27,1204,35],[1278,29,1204,37],[1279,10,1205,16],[1279,11,1205,17],[1279,14,1205,20],[1280,12,1206,20,"transform"],[1280,21,1206,29],[1280,23,1206,31],[1280,32,1206,40,"getScale"],[1280,40,1206,48],[1280,41,1206,49],[1280,42,1206,50],[1280,102,1206,110],[1281,12,1207,20,"transformOrigin"],[1281,27,1207,35],[1281,29,1207,37],[1282,10,1208,16],[1282,11,1208,17],[1283,10,1209,16,"transitionProperty"],[1283,28,1209,34],[1283,30,1209,36],[1283,56,1209,62],[1284,10,1210,16,"transitionDuration"],[1284,28,1210,34],[1284,30,1210,36],[1284,33,1210,39,"TRANSITIONS"],[1284,44,1210,50],[1284,45,1210,51,"DURATION"],[1284,53,1210,59],[1284,56,1210,62],[1285,10,1211,16,"transitionTimingFunction"],[1285,34,1211,40],[1285,36,1211,42],[1285,52,1211,58,"TRANSITIONS"],[1285,63,1211,69],[1285,64,1211,70,"EASE"],[1285,68,1211,74],[1285,69,1211,75,"join"],[1285,73,1211,79],[1285,74,1211,80],[1285,77,1211,83],[1285,78,1211,84],[1286,8,1212,12],[1286,9,1212,13],[1286,11,1212,15],[1286,15,1212,19],[1286,16,1212,20],[1287,6,1213,8],[1288,4,1214,4],[1289,4,1215,4],[1289,13,1215,13,"cancelDrag"],[1289,23,1215,23,"cancelDrag"],[1289,24,1215,23],[1289,26,1215,26],[1290,6,1216,8],[1290,10,1216,12],[1290,11,1216,13,"isDragging"],[1290,21,1216,23],[1290,25,1216,27],[1290,26,1216,28,"drawerRef"],[1290,35,1216,37],[1290,36,1216,38,"current"],[1290,43,1216,45],[1290,45,1216,47],[1291,6,1217,8,"drawerRef"],[1291,15,1217,17],[1291,16,1217,18,"current"],[1291,23,1217,25],[1291,24,1217,26,"classList"],[1291,33,1217,35],[1291,34,1217,36,"remove"],[1291,40,1217,42],[1291,41,1217,43,"DRAG_CLASS"],[1291,51,1217,53],[1291,52,1217,54],[1292,6,1218,8,"isAllowedToDrag"],[1292,21,1218,23],[1292,22,1218,24,"current"],[1292,29,1218,31],[1292,32,1218,34],[1292,37,1218,39],[1293,6,1219,8,"setIsDragging"],[1293,19,1219,21],[1293,20,1219,22],[1293,25,1219,27],[1293,26,1219,28],[1294,6,1220,8,"dragEndTime"],[1294,17,1220,19],[1294,18,1220,20,"current"],[1294,25,1220,27],[1294,28,1220,30],[1294,32,1220,34,"Date"],[1294,36,1220,38],[1294,37,1220,39],[1294,38,1220,40],[1295,4,1221,4],[1296,4,1222,4],[1296,13,1222,13,"onRelease"],[1296,22,1222,22,"onRelease"],[1296,23,1222,23,"event"],[1296,28,1222,28],[1296,30,1222,30],[1297,6,1223,8],[1297,10,1223,12],[1297,11,1223,13,"isDragging"],[1297,21,1223,23],[1297,25,1223,27],[1297,26,1223,28,"drawerRef"],[1297,35,1223,37],[1297,36,1223,38,"current"],[1297,43,1223,45],[1297,45,1223,47],[1298,6,1224,8,"drawerRef"],[1298,15,1224,17],[1298,16,1224,18,"current"],[1298,23,1224,25],[1298,24,1224,26,"classList"],[1298,33,1224,35],[1298,34,1224,36,"remove"],[1298,40,1224,42],[1298,41,1224,43,"DRAG_CLASS"],[1298,51,1224,53],[1298,52,1224,54],[1299,6,1225,8,"isAllowedToDrag"],[1299,21,1225,23],[1299,22,1225,24,"current"],[1299,29,1225,31],[1299,32,1225,34],[1299,37,1225,39],[1300,6,1226,8,"setIsDragging"],[1300,19,1226,21],[1300,20,1226,22],[1300,25,1226,27],[1300,26,1226,28],[1301,6,1227,8,"dragEndTime"],[1301,17,1227,19],[1301,18,1227,20,"current"],[1301,25,1227,27],[1301,28,1227,30],[1301,32,1227,34,"Date"],[1301,36,1227,38],[1301,37,1227,39],[1301,38,1227,40],[1302,6,1228,8],[1302,12,1228,14,"swipeAmount"],[1302,23,1228,25],[1302,26,1228,28,"getTranslate"],[1302,38,1228,40],[1302,39,1228,41,"drawerRef"],[1302,48,1228,50],[1302,49,1228,51,"current"],[1302,56,1228,58],[1302,58,1228,60,"direction"],[1302,67,1228,69],[1302,68,1228,70],[1303,6,1229,8],[1303,10,1229,12],[1303,11,1229,13,"event"],[1303,16,1229,18],[1303,20,1229,22],[1303,21,1229,23,"shouldDrag"],[1303,31,1229,33],[1303,32,1229,34,"event"],[1303,37,1229,39],[1303,38,1229,40,"target"],[1303,44,1229,46],[1303,46,1229,48],[1303,51,1229,53],[1303,52,1229,54],[1303,56,1229,58],[1303,57,1229,59,"swipeAmount"],[1303,68,1229,70],[1303,72,1229,74,"Number"],[1303,78,1229,80],[1303,79,1229,81,"isNaN"],[1303,84,1229,86],[1303,85,1229,87,"swipeAmount"],[1303,96,1229,98],[1303,97,1229,99],[1303,99,1229,101],[1304,6,1230,8],[1304,10,1230,12,"dragStartTime"],[1304,23,1230,25],[1304,24,1230,26,"current"],[1304,31,1230,33],[1304,36,1230,38],[1304,40,1230,42],[1304,42,1230,44],[1305,6,1231,8],[1305,12,1231,14,"timeTaken"],[1305,21,1231,23],[1305,24,1231,26,"dragEndTime"],[1305,35,1231,37],[1305,36,1231,38,"current"],[1305,43,1231,45],[1305,44,1231,46,"getTime"],[1305,51,1231,53],[1305,52,1231,54],[1305,53,1231,55],[1305,56,1231,58,"dragStartTime"],[1305,69,1231,71],[1305,70,1231,72,"current"],[1305,77,1231,79],[1305,78,1231,80,"getTime"],[1305,85,1231,87],[1305,86,1231,88],[1305,87,1231,89],[1306,6,1232,8],[1306,12,1232,14,"distMoved"],[1306,21,1232,23],[1306,24,1232,26,"pointerStart"],[1306,36,1232,38],[1306,37,1232,39,"current"],[1306,44,1232,46],[1306,48,1232,50,"isVertical"],[1306,58,1232,60],[1306,59,1232,61,"direction"],[1306,68,1232,70],[1306,69,1232,71],[1306,72,1232,74,"event"],[1306,77,1232,79],[1306,78,1232,80,"pageY"],[1306,83,1232,85],[1306,86,1232,88,"event"],[1306,91,1232,93],[1306,92,1232,94,"pageX"],[1306,97,1232,99],[1306,98,1232,100],[1307,6,1233,8],[1307,12,1233,14,"velocity"],[1307,20,1233,22],[1307,23,1233,25,"Math"],[1307,27,1233,29],[1307,28,1233,30,"abs"],[1307,31,1233,33],[1307,32,1233,34,"distMoved"],[1307,41,1233,43],[1307,42,1233,44],[1307,45,1233,47,"timeTaken"],[1307,54,1233,56],[1308,6,1234,8],[1308,10,1234,12,"velocity"],[1308,18,1234,20],[1308,21,1234,23],[1308,25,1234,27],[1308,27,1234,29],[1309,8,1235,12],[1310,8,1236,12,"setJustReleased"],[1310,23,1236,27],[1310,24,1236,28],[1310,28,1236,32],[1310,29,1236,33],[1311,8,1237,12,"setTimeout"],[1311,18,1237,22],[1311,19,1237,23],[1311,25,1237,27],[1312,10,1238,16,"setJustReleased"],[1312,25,1238,31],[1312,26,1238,32],[1312,31,1238,37],[1312,32,1238,38],[1313,8,1239,12],[1313,9,1239,13],[1313,11,1239,15],[1313,14,1239,18],[1313,15,1239,19],[1314,6,1240,8],[1315,6,1241,8],[1315,10,1241,12,"snapPoints"],[1315,20,1241,22],[1315,22,1241,24],[1316,8,1242,12],[1316,14,1242,18,"directionMultiplier"],[1316,33,1242,37],[1316,36,1242,40,"direction"],[1316,45,1242,49],[1316,50,1242,54],[1316,58,1242,62],[1316,62,1242,66,"direction"],[1316,71,1242,75],[1316,76,1242,80],[1316,83,1242,87],[1316,86,1242,90],[1316,87,1242,91],[1316,90,1242,94],[1316,91,1242,95],[1316,92,1242,96],[1317,8,1243,12,"onReleaseSnapPoints"],[1317,27,1243,31],[1317,28,1243,32],[1318,10,1244,16,"draggedDistance"],[1318,25,1244,31],[1318,27,1244,33,"distMoved"],[1318,36,1244,42],[1318,39,1244,45,"directionMultiplier"],[1318,58,1244,64],[1319,10,1245,16,"closeDrawer"],[1319,21,1245,27],[1320,10,1246,16,"velocity"],[1320,18,1246,24],[1321,10,1247,16,"dismissible"],[1322,8,1248,12],[1322,9,1248,13],[1322,10,1248,14],[1323,8,1249,12,"onReleaseProp"],[1323,21,1249,25],[1323,25,1249,29],[1323,29,1249,33],[1323,32,1249,36],[1323,37,1249,41],[1323,38,1249,42],[1323,41,1249,45,"onReleaseProp"],[1323,54,1249,58],[1323,55,1249,59,"event"],[1323,60,1249,64],[1323,62,1249,66],[1323,66,1249,70],[1323,67,1249,71],[1324,8,1250,12],[1325,6,1251,8],[1326,6,1252,8],[1327,6,1253,8],[1327,10,1253,12,"direction"],[1327,19,1253,21],[1327,24,1253,26],[1327,32,1253,34],[1327,36,1253,38,"direction"],[1327,45,1253,47],[1327,50,1253,52],[1327,57,1253,59],[1327,60,1253,62,"distMoved"],[1327,69,1253,71],[1327,72,1253,74],[1327,73,1253,75],[1327,76,1253,78,"distMoved"],[1327,85,1253,87],[1327,88,1253,90],[1327,89,1253,91],[1327,91,1253,93],[1328,8,1254,12,"resetDrawer"],[1328,19,1254,23],[1328,20,1254,24],[1328,21,1254,25],[1329,8,1255,12,"onReleaseProp"],[1329,21,1255,25],[1329,25,1255,29],[1329,29,1255,33],[1329,32,1255,36],[1329,37,1255,41],[1329,38,1255,42],[1329,41,1255,45,"onReleaseProp"],[1329,54,1255,58],[1329,55,1255,59,"event"],[1329,60,1255,64],[1329,62,1255,66],[1329,66,1255,70],[1329,67,1255,71],[1330,8,1256,12],[1331,6,1257,8],[1332,6,1258,8],[1332,10,1258,12,"velocity"],[1332,18,1258,20],[1332,21,1258,23,"VELOCITY_THRESHOLD"],[1332,39,1258,41],[1332,41,1258,43],[1333,8,1259,12,"closeDrawer"],[1333,19,1259,23],[1333,20,1259,24],[1333,21,1259,25],[1334,8,1260,12,"onReleaseProp"],[1334,21,1260,25],[1334,25,1260,29],[1334,29,1260,33],[1334,32,1260,36],[1334,37,1260,41],[1334,38,1260,42],[1334,41,1260,45,"onReleaseProp"],[1334,54,1260,58],[1334,55,1260,59,"event"],[1334,60,1260,64],[1334,62,1260,66],[1334,67,1260,71],[1334,68,1260,72],[1335,8,1261,12],[1336,6,1262,8],[1337,6,1263,8],[1337,10,1263,12,"_drawerRef_current_getBoundingClientRect_height"],[1337,57,1263,59],[1338,6,1264,8],[1338,12,1264,14,"visibleDrawerHeight"],[1338,31,1264,33],[1338,34,1264,36,"Math"],[1338,38,1264,40],[1338,39,1264,41,"min"],[1338,42,1264,44],[1338,43,1264,45],[1338,44,1264,46,"_drawerRef_current_getBoundingClientRect_height"],[1338,91,1264,93],[1338,94,1264,96,"drawerRef"],[1338,103,1264,105],[1338,104,1264,106,"current"],[1338,111,1264,113],[1338,112,1264,114,"getBoundingClientRect"],[1338,133,1264,135],[1338,134,1264,136],[1338,135,1264,137],[1338,136,1264,138,"height"],[1338,142,1264,144],[1338,147,1264,149],[1338,151,1264,153],[1338,154,1264,156,"_drawerRef_current_getBoundingClientRect_height"],[1338,201,1264,203],[1338,204,1264,206],[1338,205,1264,207],[1338,207,1264,209,"window"],[1338,213,1264,215],[1338,214,1264,216,"innerHeight"],[1338,225,1264,227],[1338,226,1264,228],[1339,6,1265,8],[1339,10,1265,12,"_drawerRef_current_getBoundingClientRect_width"],[1339,56,1265,58],[1340,6,1266,8],[1340,12,1266,14,"visibleDrawerWidth"],[1340,30,1266,32],[1340,33,1266,35,"Math"],[1340,37,1266,39],[1340,38,1266,40,"min"],[1340,41,1266,43],[1340,42,1266,44],[1340,43,1266,45,"_drawerRef_current_getBoundingClientRect_width"],[1340,89,1266,91],[1340,92,1266,94,"drawerRef"],[1340,101,1266,103],[1340,102,1266,104,"current"],[1340,109,1266,111],[1340,110,1266,112,"getBoundingClientRect"],[1340,131,1266,133],[1340,132,1266,134],[1340,133,1266,135],[1340,134,1266,136,"width"],[1340,139,1266,141],[1340,144,1266,146],[1340,148,1266,150],[1340,151,1266,153,"_drawerRef_current_getBoundingClientRect_width"],[1340,197,1266,199],[1340,200,1266,202],[1340,201,1266,203],[1340,203,1266,205,"window"],[1340,209,1266,211],[1340,210,1266,212,"innerWidth"],[1340,220,1266,222],[1340,221,1266,223],[1341,6,1267,8],[1341,12,1267,14,"isHorizontalSwipe"],[1341,29,1267,31],[1341,32,1267,34,"direction"],[1341,41,1267,43],[1341,46,1267,48],[1341,52,1267,54],[1341,56,1267,58,"direction"],[1341,65,1267,67],[1341,70,1267,72],[1341,77,1267,79],[1342,6,1268,8],[1342,10,1268,12,"Math"],[1342,14,1268,16],[1342,15,1268,17,"abs"],[1342,18,1268,20],[1342,19,1268,21,"swipeAmount"],[1342,30,1268,32],[1342,31,1268,33],[1342,35,1268,37],[1342,36,1268,38,"isHorizontalSwipe"],[1342,53,1268,55],[1342,56,1268,58,"visibleDrawerWidth"],[1342,74,1268,76],[1342,77,1268,79,"visibleDrawerHeight"],[1342,96,1268,98],[1342,100,1268,102,"closeThreshold"],[1342,114,1268,116],[1342,116,1268,118],[1343,8,1269,12,"closeDrawer"],[1343,19,1269,23],[1343,20,1269,24],[1343,21,1269,25],[1344,8,1270,12,"onReleaseProp"],[1344,21,1270,25],[1344,25,1270,29],[1344,29,1270,33],[1344,32,1270,36],[1344,37,1270,41],[1344,38,1270,42],[1344,41,1270,45,"onReleaseProp"],[1344,54,1270,58],[1344,55,1270,59,"event"],[1344,60,1270,64],[1344,62,1270,66],[1344,67,1270,71],[1344,68,1270,72],[1345,8,1271,12],[1346,6,1272,8],[1347,6,1273,8,"onReleaseProp"],[1347,19,1273,21],[1347,23,1273,25],[1347,27,1273,29],[1347,30,1273,32],[1347,35,1273,37],[1347,36,1273,38],[1347,39,1273,41,"onReleaseProp"],[1347,52,1273,54],[1347,53,1273,55,"event"],[1347,58,1273,60],[1347,60,1273,62],[1347,64,1273,66],[1347,65,1273,67],[1348,6,1274,8,"resetDrawer"],[1348,17,1274,19],[1348,18,1274,20],[1348,19,1274,21],[1349,4,1275,4],[1350,4,1276,4,"React__default"],[1350,18,1276,18],[1350,19,1276,18,"default"],[1350,26,1276,18],[1350,27,1276,19,"useEffect"],[1350,36,1276,28],[1350,37,1276,29],[1350,43,1276,33],[1351,6,1277,8],[1352,6,1278,8],[1352,10,1278,12,"isOpen"],[1352,16,1278,18],[1352,18,1278,20],[1353,8,1279,12,"set"],[1353,11,1279,15],[1353,12,1279,16,"document"],[1353,20,1279,24],[1353,21,1279,25,"documentElement"],[1353,36,1279,40],[1353,38,1279,42],[1354,10,1280,16,"scrollBehavior"],[1354,24,1280,30],[1354,26,1280,32],[1355,8,1281,12],[1355,9,1281,13],[1355,10,1281,14],[1356,8,1282,12,"openTime"],[1356,16,1282,20],[1356,17,1282,21,"current"],[1356,24,1282,28],[1356,27,1282,31],[1356,31,1282,35,"Date"],[1356,35,1282,39],[1356,36,1282,40],[1356,37,1282,41],[1357,6,1283,8],[1358,6,1284,8],[1358,13,1284,15],[1358,19,1284,19],[1359,8,1285,12,"reset"],[1359,13,1285,17],[1359,14,1285,18,"document"],[1359,22,1285,26],[1359,23,1285,27,"documentElement"],[1359,38,1285,42],[1359,40,1285,44],[1359,56,1285,60],[1359,57,1285,61],[1360,6,1286,8],[1360,7,1286,9],[1361,4,1287,4],[1361,5,1287,5],[1361,7,1287,7],[1361,8,1288,8,"isOpen"],[1361,14,1288,14],[1361,15,1289,5],[1361,16,1289,6],[1362,4,1290,4],[1362,13,1290,13,"onNestedOpenChange"],[1362,31,1290,31,"onNestedOpenChange"],[1362,32,1290,32,"o"],[1362,33,1290,33],[1362,35,1290,35],[1363,6,1291,8],[1363,12,1291,14,"scale"],[1363,17,1291,19],[1363,20,1291,22,"o"],[1363,21,1291,23],[1363,24,1291,26],[1363,25,1291,27,"window"],[1363,31,1291,33],[1363,32,1291,34,"innerWidth"],[1363,42,1291,44],[1363,45,1291,47,"NESTED_DISPLACEMENT"],[1363,64,1291,66],[1363,68,1291,70,"window"],[1363,74,1291,76],[1363,75,1291,77,"innerWidth"],[1363,85,1291,87],[1363,88,1291,90],[1363,89,1291,91],[1364,6,1292,8],[1364,12,1292,14,"initialTranslate"],[1364,28,1292,30],[1364,31,1292,33,"o"],[1364,32,1292,34],[1364,35,1292,37],[1364,36,1292,38,"NESTED_DISPLACEMENT"],[1364,55,1292,57],[1364,58,1292,60],[1364,59,1292,61],[1365,6,1293,8],[1365,10,1293,12,"nestedOpenChangeTimer"],[1365,31,1293,33],[1365,32,1293,34,"current"],[1365,39,1293,41],[1365,41,1293,43],[1366,8,1294,12,"window"],[1366,14,1294,18],[1366,15,1294,19,"clearTimeout"],[1366,27,1294,31],[1366,28,1294,32,"nestedOpenChangeTimer"],[1366,49,1294,53],[1366,50,1294,54,"current"],[1366,57,1294,61],[1366,58,1294,62],[1367,6,1295,8],[1368,6,1296,8,"set"],[1368,9,1296,11],[1368,10,1296,12,"drawerRef"],[1368,19,1296,21],[1368,20,1296,22,"current"],[1368,27,1296,29],[1368,29,1296,31],[1369,8,1297,12,"transition"],[1369,18,1297,22],[1369,20,1297,24],[1369,33,1297,37,"TRANSITIONS"],[1369,44,1297,48],[1369,45,1297,49,"DURATION"],[1369,53,1297,57],[1369,71,1297,75,"TRANSITIONS"],[1369,82,1297,86],[1369,83,1297,87,"EASE"],[1369,87,1297,91],[1369,88,1297,92,"join"],[1369,92,1297,96],[1369,93,1297,97],[1369,96,1297,100],[1369,97,1297,101],[1369,100,1297,104],[1370,8,1298,12,"transform"],[1370,17,1298,21],[1370,19,1298,23,"isVertical"],[1370,29,1298,33],[1370,30,1298,34,"direction"],[1370,39,1298,43],[1370,40,1298,44],[1370,43,1298,47],[1370,52,1298,56,"scale"],[1370,57,1298,61],[1370,77,1298,81,"initialTranslate"],[1370,93,1298,97],[1370,101,1298,105],[1370,104,1298,108],[1370,113,1298,117,"scale"],[1370,118,1298,122],[1370,135,1298,139,"initialTranslate"],[1370,151,1298,155],[1371,6,1299,8],[1371,7,1299,9],[1371,8,1299,10],[1372,6,1300,8],[1372,10,1300,12],[1372,11,1300,13,"o"],[1372,12,1300,14],[1372,16,1300,18,"drawerRef"],[1372,25,1300,27],[1372,26,1300,28,"current"],[1372,33,1300,35],[1372,35,1300,37],[1373,8,1301,12,"nestedOpenChangeTimer"],[1373,29,1301,33],[1373,30,1301,34,"current"],[1373,37,1301,41],[1373,40,1301,44,"setTimeout"],[1373,50,1301,54],[1373,51,1301,55],[1373,57,1301,59],[1374,10,1302,16],[1374,16,1302,22,"translateValue"],[1374,30,1302,36],[1374,33,1302,39,"getTranslate"],[1374,45,1302,51],[1374,46,1302,52,"drawerRef"],[1374,55,1302,61],[1374,56,1302,62,"current"],[1374,63,1302,69],[1374,65,1302,71,"direction"],[1374,74,1302,80],[1374,75,1302,81],[1375,10,1303,16,"set"],[1375,13,1303,19],[1375,14,1303,20,"drawerRef"],[1375,23,1303,29],[1375,24,1303,30,"current"],[1375,31,1303,37],[1375,33,1303,39],[1376,12,1304,20,"transition"],[1376,22,1304,30],[1376,24,1304,32],[1376,30,1304,38],[1377,12,1305,20,"transform"],[1377,21,1305,29],[1377,23,1305,31,"isVertical"],[1377,33,1305,41],[1377,34,1305,42,"direction"],[1377,43,1305,51],[1377,44,1305,52],[1377,47,1305,55],[1377,65,1305,73,"translateValue"],[1377,79,1305,87],[1377,87,1305,95],[1377,90,1305,98],[1377,105,1305,113,"translateValue"],[1377,119,1305,127],[1378,10,1306,16],[1378,11,1306,17],[1378,12,1306,18],[1379,8,1307,12],[1379,9,1307,13],[1379,11,1307,15],[1379,14,1307,18],[1379,15,1307,19],[1380,6,1308,8],[1381,4,1309,4],[1382,4,1310,4],[1382,13,1310,13,"onNestedDrag"],[1382,25,1310,25,"onNestedDrag"],[1382,26,1310,26,"_event"],[1382,32,1310,32],[1382,34,1310,34,"percentageDragged"],[1382,51,1310,51],[1382,53,1310,53],[1383,6,1311,8],[1383,10,1311,12,"percentageDragged"],[1383,27,1311,29],[1383,30,1311,32],[1383,31,1311,33],[1383,33,1311,35],[1384,6,1312,8],[1384,12,1312,14,"initialScale"],[1384,24,1312,26],[1384,27,1312,29],[1384,28,1312,30,"window"],[1384,34,1312,36],[1384,35,1312,37,"innerWidth"],[1384,45,1312,47],[1384,48,1312,50,"NESTED_DISPLACEMENT"],[1384,67,1312,69],[1384,71,1312,73,"window"],[1384,77,1312,79],[1384,78,1312,80,"innerWidth"],[1384,88,1312,90],[1385,6,1313,8],[1385,12,1313,14,"newScale"],[1385,20,1313,22],[1385,23,1313,25,"initialScale"],[1385,35,1313,37],[1385,38,1313,40,"percentageDragged"],[1385,55,1313,57],[1385,59,1313,61],[1385,60,1313,62],[1385,63,1313,65,"initialScale"],[1385,75,1313,77],[1385,76,1313,78],[1386,6,1314,8],[1386,12,1314,14,"newTranslate"],[1386,24,1314,26],[1386,27,1314,29],[1386,28,1314,30,"NESTED_DISPLACEMENT"],[1386,47,1314,49],[1386,50,1314,52,"percentageDragged"],[1386,67,1314,69],[1386,70,1314,72,"NESTED_DISPLACEMENT"],[1386,89,1314,91],[1387,6,1315,8,"set"],[1387,9,1315,11],[1387,10,1315,12,"drawerRef"],[1387,19,1315,21],[1387,20,1315,22,"current"],[1387,27,1315,29],[1387,29,1315,31],[1388,8,1316,12,"transform"],[1388,17,1316,21],[1388,19,1316,23,"isVertical"],[1388,29,1316,33],[1388,30,1316,34,"direction"],[1388,39,1316,43],[1388,40,1316,44],[1388,43,1316,47],[1388,52,1316,56,"newScale"],[1388,60,1316,64],[1388,80,1316,84,"newTranslate"],[1388,92,1316,96],[1388,100,1316,104],[1388,103,1316,107],[1388,112,1316,116,"newScale"],[1388,120,1316,124],[1388,137,1316,141,"newTranslate"],[1388,149,1316,153],[1388,160,1316,164],[1389,8,1317,12,"transition"],[1389,18,1317,22],[1389,20,1317,24],[1390,6,1318,8],[1390,7,1318,9],[1390,8,1318,10],[1391,4,1319,4],[1392,4,1320,4],[1392,13,1320,13,"onNestedRelease"],[1392,28,1320,28,"onNestedRelease"],[1392,29,1320,29,"_event"],[1392,35,1320,35],[1392,37,1320,37,"o"],[1392,38,1320,38],[1392,40,1320,40],[1393,6,1321,8],[1393,12,1321,14,"dim"],[1393,15,1321,17],[1393,18,1321,20,"isVertical"],[1393,28,1321,30],[1393,29,1321,31,"direction"],[1393,38,1321,40],[1393,39,1321,41],[1393,42,1321,44,"window"],[1393,48,1321,50],[1393,49,1321,51,"innerHeight"],[1393,60,1321,62],[1393,63,1321,65,"window"],[1393,69,1321,71],[1393,70,1321,72,"innerWidth"],[1393,80,1321,82],[1394,6,1322,8],[1394,12,1322,14,"scale"],[1394,17,1322,19],[1394,20,1322,22,"o"],[1394,21,1322,23],[1394,24,1322,26],[1394,25,1322,27,"dim"],[1394,28,1322,30],[1394,31,1322,33,"NESTED_DISPLACEMENT"],[1394,50,1322,52],[1394,54,1322,56,"dim"],[1394,57,1322,59],[1394,60,1322,62],[1394,61,1322,63],[1395,6,1323,8],[1395,12,1323,14,"translate"],[1395,21,1323,23],[1395,24,1323,26,"o"],[1395,25,1323,27],[1395,28,1323,30],[1395,29,1323,31,"NESTED_DISPLACEMENT"],[1395,48,1323,50],[1395,51,1323,53],[1395,52,1323,54],[1396,6,1324,8],[1396,10,1324,12,"o"],[1396,11,1324,13],[1396,13,1324,15],[1397,8,1325,12,"set"],[1397,11,1325,15],[1397,12,1325,16,"drawerRef"],[1397,21,1325,25],[1397,22,1325,26,"current"],[1397,29,1325,33],[1397,31,1325,35],[1398,10,1326,16,"transition"],[1398,20,1326,26],[1398,22,1326,28],[1398,35,1326,41,"TRANSITIONS"],[1398,46,1326,52],[1398,47,1326,53,"DURATION"],[1398,55,1326,61],[1398,73,1326,79,"TRANSITIONS"],[1398,84,1326,90],[1398,85,1326,91,"EASE"],[1398,89,1326,95],[1398,90,1326,96,"join"],[1398,94,1326,100],[1398,95,1326,101],[1398,98,1326,104],[1398,99,1326,105],[1398,102,1326,108],[1399,10,1327,16,"transform"],[1399,19,1327,25],[1399,21,1327,27,"isVertical"],[1399,31,1327,37],[1399,32,1327,38,"direction"],[1399,41,1327,47],[1399,42,1327,48],[1399,45,1327,51],[1399,54,1327,60,"scale"],[1399,59,1327,65],[1399,79,1327,85,"translate"],[1399,88,1327,94],[1399,96,1327,102],[1399,99,1327,105],[1399,108,1327,114,"scale"],[1399,113,1327,119],[1399,130,1327,136,"translate"],[1399,139,1327,145],[1400,8,1328,12],[1400,9,1328,13],[1400,10,1328,14],[1401,6,1329,8],[1402,4,1330,4],[1403,4,1331,4,"React__default"],[1403,18,1331,18],[1403,19,1331,18,"default"],[1403,26,1331,18],[1403,27,1331,19,"useEffect"],[1403,36,1331,28],[1403,37,1331,29],[1403,43,1331,33],[1404,6,1332,8],[1404,10,1332,12],[1404,11,1332,13,"modal"],[1404,16,1332,18],[1404,18,1332,20],[1405,8,1333,12],[1406,8,1334,12,"window"],[1406,14,1334,18],[1406,15,1334,19,"requestAnimationFrame"],[1406,36,1334,40],[1406,37,1334,41],[1406,43,1334,45],[1407,10,1335,16,"document"],[1407,18,1335,24],[1407,19,1335,25,"body"],[1407,23,1335,29],[1407,24,1335,30,"style"],[1407,29,1335,35],[1407,30,1335,36,"pointerEvents"],[1407,43,1335,49],[1407,46,1335,52],[1407,52,1335,58],[1408,8,1336,12],[1408,9,1336,13],[1408,10,1336,14],[1409,6,1337,8],[1410,4,1338,4],[1410,5,1338,5],[1410,7,1338,7],[1410,8,1339,8,"modal"],[1410,13,1339,13],[1410,14,1340,5],[1410,15,1340,6],[1411,4,1341,4],[1411,11,1341,11],[1411,24,1341,25,"React__default"],[1411,38,1341,39],[1411,39,1341,39,"default"],[1411,46,1341,39],[1411,47,1341,40,"createElement"],[1411,60,1341,53],[1411,61,1341,54,"DialogPrimitive"],[1411,76,1341,69],[1411,77,1341,70,"Root"],[1411,81,1341,74],[1411,83,1341,76],[1412,6,1342,8,"defaultOpen"],[1412,17,1342,19],[1412,19,1342,21,"defaultOpen"],[1412,30,1342,32],[1413,6,1343,8,"onOpenChange"],[1413,18,1343,20],[1413,20,1343,23,"open"],[1413,24,1343,27],[1413,28,1343,30],[1414,8,1344,12],[1414,12,1344,16],[1414,13,1344,17,"dismissible"],[1414,24,1344,28],[1414,28,1344,32],[1414,29,1344,33,"open"],[1414,33,1344,37],[1414,35,1344,39],[1415,8,1345,12],[1415,12,1345,16,"open"],[1415,16,1345,20],[1415,18,1345,22],[1416,10,1346,16,"setHasBeenOpened"],[1416,26,1346,32],[1416,27,1346,33],[1416,31,1346,37],[1416,32,1346,38],[1417,8,1347,12],[1417,9,1347,13],[1417,15,1347,19],[1418,10,1348,16,"closeDrawer"],[1418,21,1348,27],[1418,22,1348,28],[1418,26,1348,32],[1418,27,1348,33],[1419,8,1349,12],[1420,8,1350,12,"setIsOpen"],[1420,17,1350,21],[1420,18,1350,22,"open"],[1420,22,1350,26],[1420,23,1350,27],[1421,6,1351,8],[1421,7,1351,9],[1422,6,1352,8,"open"],[1422,10,1352,12],[1422,12,1352,14,"isOpen"],[1423,4,1353,4],[1423,5,1353,5],[1423,7,1353,7],[1423,20,1353,21,"React__default"],[1423,34,1353,35],[1423,35,1353,35,"default"],[1423,42,1353,35],[1423,43,1353,36,"createElement"],[1423,56,1353,49],[1423,57,1353,50,"DrawerContext"],[1423,70,1353,63],[1423,71,1353,64,"Provider"],[1423,79,1353,72],[1423,81,1353,74],[1424,6,1354,8,"value"],[1424,11,1354,13],[1424,13,1354,15],[1425,8,1355,12,"activeSnapPoint"],[1425,23,1355,27],[1426,8,1356,12,"snapPoints"],[1426,18,1356,22],[1427,8,1357,12,"setActiveSnapPoint"],[1427,26,1357,30],[1428,8,1358,12,"drawerRef"],[1428,17,1358,21],[1429,8,1359,12,"overlayRef"],[1429,18,1359,22],[1430,8,1360,12,"onOpenChange"],[1430,20,1360,24],[1431,8,1361,12,"onPress"],[1431,15,1361,19],[1432,8,1362,12,"onRelease"],[1432,17,1362,21],[1433,8,1363,12,"onDrag"],[1433,14,1363,18],[1434,8,1364,12,"dismissible"],[1434,19,1364,23],[1435,8,1365,12,"shouldAnimate"],[1435,21,1365,25],[1436,8,1366,12,"handleOnly"],[1436,18,1366,22],[1437,8,1367,12,"isOpen"],[1437,14,1367,18],[1438,8,1368,12,"isDragging"],[1438,18,1368,22],[1439,8,1369,12,"shouldFade"],[1439,18,1369,22],[1440,8,1370,12,"closeDrawer"],[1440,19,1370,23],[1441,8,1371,12,"onNestedDrag"],[1441,20,1371,24],[1442,8,1372,12,"onNestedOpenChange"],[1442,26,1372,30],[1443,8,1373,12,"onNestedRelease"],[1443,23,1373,27],[1444,8,1374,12,"keyboardIsOpen"],[1444,22,1374,26],[1445,8,1375,12,"modal"],[1445,13,1375,17],[1446,8,1376,12,"snapPointsOffset"],[1446,24,1376,28],[1447,8,1377,12,"activeSnapPointIndex"],[1447,28,1377,32],[1448,8,1378,12,"direction"],[1448,17,1378,21],[1449,8,1379,12,"shouldScaleBackground"],[1449,29,1379,33],[1450,8,1380,12,"setBackgroundColorOnScale"],[1450,33,1380,37],[1451,8,1381,12,"noBodyStyles"],[1451,20,1381,24],[1452,8,1382,12,"container"],[1452,17,1382,21],[1453,8,1383,12,"autoFocus"],[1454,6,1384,8],[1455,4,1385,4],[1455,5,1385,5],[1455,7,1385,7,"children"],[1455,15,1385,15],[1455,16,1385,16],[1455,17,1385,17],[1456,2,1386,0],[1457,2,1387,0],[1457,8,1387,6,"Overlay"],[1457,15,1387,13],[1457,18,1387,16],[1457,31,1387,30,"React__default"],[1457,45,1387,44],[1457,46,1387,44,"default"],[1457,53,1387,44],[1457,54,1387,45,"forwardRef"],[1457,64,1387,55],[1457,65,1387,56],[1457,75,1387,65],[1458,4,1387,67],[1458,7,1387,70,"rest"],[1459,2,1387,75],[1459,3,1387,76],[1459,5,1387,78,"ref"],[1459,8,1387,81],[1459,10,1387,83],[1460,4,1388,4],[1460,10,1388,10],[1461,6,1388,12,"overlayRef"],[1461,16,1388,22],[1462,6,1388,24,"snapPoints"],[1462,16,1388,34],[1463,6,1388,36,"onRelease"],[1463,15,1388,45],[1464,6,1388,47,"shouldFade"],[1464,16,1388,57],[1465,6,1388,59,"isOpen"],[1465,12,1388,65],[1466,6,1388,67,"modal"],[1466,11,1388,72],[1467,6,1388,74,"shouldAnimate"],[1468,4,1388,88],[1468,5,1388,89],[1468,8,1388,92,"useDrawerContext"],[1468,24,1388,108],[1468,25,1388,109],[1468,26,1388,110],[1469,4,1389,4],[1469,10,1389,10,"composedRef"],[1469,21,1389,21],[1469,24,1389,24,"useComposedRefs"],[1469,39,1389,39],[1469,40,1389,40,"ref"],[1469,43,1389,43],[1469,45,1389,45,"overlayRef"],[1469,55,1389,55],[1469,56,1389,56],[1470,4,1390,4],[1470,10,1390,10,"hasSnapPoints"],[1470,23,1390,23],[1470,26,1390,26,"snapPoints"],[1470,36,1390,36],[1470,40,1390,40,"snapPoints"],[1470,50,1390,50],[1470,51,1390,51,"length"],[1470,57,1390,57],[1470,60,1390,60],[1470,61,1390,61],[1471,4,1391,4],[1472,4,1392,4],[1472,8,1392,8],[1472,9,1392,9,"modal"],[1472,14,1392,14],[1472,16,1392,16],[1473,6,1393,8],[1473,13,1393,15],[1473,17,1393,19],[1474,4,1394,4],[1475,4,1395,4],[1475,10,1395,10,"onMouseUp"],[1475,19,1395,19],[1475,22,1395,22,"React__default"],[1475,36,1395,36],[1475,37,1395,36,"default"],[1475,44,1395,36],[1475,45,1395,37,"useCallback"],[1475,56,1395,48],[1475,57,1395,50,"event"],[1475,62,1395,55],[1475,66,1395,58,"onRelease"],[1475,75,1395,67],[1475,76,1395,68,"event"],[1475,81,1395,73],[1475,82,1395,74],[1475,84,1395,76],[1475,85,1396,8,"onRelease"],[1475,94,1396,17],[1475,95,1397,5],[1475,96,1397,6],[1476,4,1398,4],[1476,11,1398,11],[1476,24,1398,25,"React__default"],[1476,38,1398,39],[1476,39,1398,39,"default"],[1476,46,1398,39],[1476,47,1398,40,"createElement"],[1476,60,1398,53],[1476,61,1398,54,"DialogPrimitive"],[1476,76,1398,69],[1476,77,1398,70,"Overlay"],[1476,84,1398,77],[1476,86,1398,79],[1477,6,1399,8,"onMouseUp"],[1477,15,1399,17],[1477,17,1399,19,"onMouseUp"],[1477,26,1399,28],[1478,6,1400,8,"ref"],[1478,9,1400,11],[1478,11,1400,13,"composedRef"],[1478,22,1400,24],[1479,6,1401,8],[1479,25,1401,27],[1479,27,1401,29],[1479,29,1401,31],[1480,6,1402,8],[1480,29,1402,31],[1480,31,1402,33,"isOpen"],[1480,37,1402,39],[1480,41,1402,43,"hasSnapPoints"],[1480,54,1402,56],[1480,57,1402,59],[1480,63,1402,65],[1480,66,1402,68],[1480,73,1402,75],[1481,6,1403,8],[1481,37,1403,39],[1481,39,1403,41,"isOpen"],[1481,45,1403,47],[1481,49,1403,51,"shouldFade"],[1481,59,1403,61],[1481,62,1403,64],[1481,68,1403,70],[1481,71,1403,73],[1481,78,1403,80],[1482,6,1404,8],[1482,25,1404,27],[1482,27,1404,29],[1482,28,1404,30,"shouldAnimate"],[1482,41,1404,43],[1482,45,1404,47],[1482,49,1404,51],[1482,52,1404,54],[1482,57,1404,59],[1482,58,1404,60],[1482,61,1404,63,"shouldAnimate"],[1482,74,1404,76],[1482,75,1404,77,"current"],[1482,82,1404,84],[1482,86,1404,88],[1482,92,1404,94],[1482,95,1404,97],[1482,102,1404,104],[1483,6,1405,8],[1483,9,1405,11,"rest"],[1484,4,1406,4],[1484,5,1406,5],[1484,6,1406,6],[1485,2,1407,0],[1485,3,1407,1],[1485,4,1407,2],[1486,2,1408,0,"Overlay"],[1486,9,1408,7],[1486,10,1408,8,"displayName"],[1486,21,1408,19],[1486,24,1408,22],[1486,40,1408,38],[1487,2,1409,0],[1487,8,1409,6,"Content"],[1487,15,1409,13],[1487,18,1409,16],[1487,31,1409,30,"React__default"],[1487,45,1409,44],[1487,46,1409,44,"default"],[1487,53,1409,44],[1487,54,1409,45,"forwardRef"],[1487,64,1409,55],[1487,65,1409,56],[1487,75,1409,65],[1488,4,1409,67,"onPointerDownOutside"],[1488,24,1409,87],[1489,4,1409,89,"style"],[1489,9,1409,94],[1490,4,1409,96,"onOpenAutoFocus"],[1490,19,1409,111],[1491,4,1409,113],[1491,7,1409,116,"rest"],[1492,2,1409,121],[1492,3,1409,122],[1492,5,1409,124,"ref"],[1492,8,1409,127],[1492,10,1409,129],[1493,4,1410,4],[1493,10,1410,10],[1494,6,1410,12,"drawerRef"],[1494,15,1410,21],[1495,6,1410,23,"onPress"],[1495,13,1410,30],[1496,6,1410,32,"onRelease"],[1496,15,1410,41],[1497,6,1410,43,"onDrag"],[1497,12,1410,49],[1498,6,1410,51,"keyboardIsOpen"],[1498,20,1410,65],[1499,6,1410,67,"snapPointsOffset"],[1499,22,1410,83],[1500,6,1410,85,"activeSnapPointIndex"],[1500,26,1410,105],[1501,6,1410,107,"modal"],[1501,11,1410,112],[1502,6,1410,114,"isOpen"],[1502,12,1410,120],[1503,6,1410,122,"direction"],[1503,15,1410,131],[1504,6,1410,133,"snapPoints"],[1504,16,1410,143],[1505,6,1410,145,"container"],[1505,15,1410,154],[1506,6,1410,156,"handleOnly"],[1506,16,1410,166],[1507,6,1410,168,"shouldAnimate"],[1507,19,1410,181],[1508,6,1410,183,"autoFocus"],[1509,4,1410,193],[1509,5,1410,194],[1509,8,1410,197,"useDrawerContext"],[1509,24,1410,213],[1509,25,1410,214],[1509,26,1410,215],[1510,4,1411,4],[1511,4,1412,4],[1511,10,1412,10],[1511,11,1412,11,"delayedSnapPoints"],[1511,28,1412,28],[1511,30,1412,30,"setDelayedSnapPoints"],[1511,50,1412,50],[1511,51,1412,51],[1511,54,1412,54,"React__default"],[1511,68,1412,68],[1511,69,1412,68,"default"],[1511,76,1412,68],[1511,77,1412,69,"useState"],[1511,85,1412,77],[1511,86,1412,78],[1511,91,1412,83],[1511,92,1412,84],[1512,4,1413,4],[1512,10,1413,10,"composedRef"],[1512,21,1413,21],[1512,24,1413,24,"useComposedRefs"],[1512,39,1413,39],[1512,40,1413,40,"ref"],[1512,43,1413,43],[1512,45,1413,45,"drawerRef"],[1512,54,1413,54],[1512,55,1413,55],[1513,4,1414,4],[1513,10,1414,10,"pointerStartRef"],[1513,25,1414,25],[1513,28,1414,28,"React__default"],[1513,42,1414,42],[1513,43,1414,42,"default"],[1513,50,1414,42],[1513,51,1414,43,"useRef"],[1513,57,1414,49],[1513,58,1414,50],[1513,62,1414,54],[1513,63,1414,55],[1514,4,1415,4],[1514,10,1415,10,"lastKnownPointerEventRef"],[1514,34,1415,34],[1514,37,1415,37,"React__default"],[1514,51,1415,51],[1514,52,1415,51,"default"],[1514,59,1415,51],[1514,60,1415,52,"useRef"],[1514,66,1415,58],[1514,67,1415,59],[1514,71,1415,63],[1514,72,1415,64],[1515,4,1416,4],[1515,10,1416,10,"wasBeyondThePointRef"],[1515,30,1416,30],[1515,33,1416,33,"React__default"],[1515,47,1416,47],[1515,48,1416,47,"default"],[1515,55,1416,47],[1515,56,1416,48,"useRef"],[1515,62,1416,54],[1515,63,1416,55],[1515,68,1416,60],[1515,69,1416,61],[1516,4,1417,4],[1516,10,1417,10,"hasSnapPoints"],[1516,23,1417,23],[1516,26,1417,26,"snapPoints"],[1516,36,1417,36],[1516,40,1417,40,"snapPoints"],[1516,50,1417,50],[1516,51,1417,51,"length"],[1516,57,1417,57],[1516,60,1417,60],[1516,61,1417,61],[1517,4,1418,4,"useScaleBackground"],[1517,22,1418,22],[1517,23,1418,23],[1517,24,1418,24],[1518,4,1419,4],[1518,10,1419,10,"isDeltaInDirection"],[1518,28,1419,28],[1518,31,1419,31,"isDeltaInDirection"],[1518,32,1419,32,"delta"],[1518,37,1419,37],[1518,39,1419,39,"direction"],[1518,48,1419,48],[1518,50,1419,50,"threshold"],[1518,59,1419,59],[1518,62,1419,62],[1518,63,1419,63],[1518,68,1419,66],[1519,6,1420,8],[1519,10,1420,12,"wasBeyondThePointRef"],[1519,30,1420,32],[1519,31,1420,33,"current"],[1519,38,1420,40],[1519,40,1420,42],[1519,47,1420,49],[1519,51,1420,53],[1520,6,1421,8],[1520,12,1421,14,"deltaY"],[1520,18,1421,20],[1520,21,1421,23,"Math"],[1520,25,1421,27],[1520,26,1421,28,"abs"],[1520,29,1421,31],[1520,30,1421,32,"delta"],[1520,35,1421,37],[1520,36,1421,38,"y"],[1520,37,1421,39],[1520,38,1421,40],[1521,6,1422,8],[1521,12,1422,14,"deltaX"],[1521,18,1422,20],[1521,21,1422,23,"Math"],[1521,25,1422,27],[1521,26,1422,28,"abs"],[1521,29,1422,31],[1521,30,1422,32,"delta"],[1521,35,1422,37],[1521,36,1422,38,"x"],[1521,37,1422,39],[1521,38,1422,40],[1522,6,1423,8],[1522,12,1423,14,"isDeltaX"],[1522,20,1423,22],[1522,23,1423,25,"deltaX"],[1522,29,1423,31],[1522,32,1423,34,"deltaY"],[1522,38,1423,40],[1523,6,1424,8],[1523,12,1424,14,"dFactor"],[1523,19,1424,21],[1523,22,1424,24],[1523,23,1425,12],[1523,31,1425,20],[1523,33,1426,12],[1523,40,1426,19],[1523,41,1427,9],[1523,42,1427,10,"includes"],[1523,50,1427,18],[1523,51,1427,19,"direction"],[1523,60,1427,28],[1523,61,1427,29],[1523,64,1427,32],[1523,65,1427,33],[1523,68,1427,36],[1523,69,1427,37],[1523,70,1427,38],[1524,6,1428,8],[1524,10,1428,12,"direction"],[1524,19,1428,21],[1524,24,1428,26],[1524,30,1428,32],[1524,34,1428,36,"direction"],[1524,43,1428,45],[1524,48,1428,50],[1524,55,1428,57],[1524,57,1428,59],[1525,8,1429,12],[1525,14,1429,18,"isReverseDirection"],[1525,32,1429,36],[1525,35,1429,39,"delta"],[1525,40,1429,44],[1525,41,1429,45,"x"],[1525,42,1429,46],[1525,45,1429,49,"dFactor"],[1525,52,1429,56],[1525,55,1429,59],[1525,56,1429,60],[1526,8,1430,12],[1526,12,1430,16],[1526,13,1430,17,"isReverseDirection"],[1526,31,1430,35],[1526,35,1430,39,"deltaX"],[1526,41,1430,45],[1526,45,1430,49],[1526,46,1430,50],[1526,50,1430,54,"deltaX"],[1526,56,1430,60],[1526,60,1430,64,"threshold"],[1526,69,1430,73],[1526,71,1430,75],[1527,10,1431,16],[1527,17,1431,23,"isDeltaX"],[1527,25,1431,31],[1528,8,1432,12],[1529,6,1433,8],[1529,7,1433,9],[1529,13,1433,15],[1530,8,1434,12],[1530,14,1434,18,"isReverseDirection"],[1530,32,1434,36],[1530,35,1434,39,"delta"],[1530,40,1434,44],[1530,41,1434,45,"y"],[1530,42,1434,46],[1530,45,1434,49,"dFactor"],[1530,52,1434,56],[1530,55,1434,59],[1530,56,1434,60],[1531,8,1435,12],[1531,12,1435,16],[1531,13,1435,17,"isReverseDirection"],[1531,31,1435,35],[1531,35,1435,39,"deltaY"],[1531,41,1435,45],[1531,45,1435,49],[1531,46,1435,50],[1531,50,1435,54,"deltaY"],[1531,56,1435,60],[1531,60,1435,64,"threshold"],[1531,69,1435,73],[1531,71,1435,75],[1532,10,1436,16],[1532,17,1436,23],[1532,18,1436,24,"isDeltaX"],[1532,26,1436,32],[1533,8,1437,12],[1534,6,1438,8],[1535,6,1439,8,"wasBeyondThePointRef"],[1535,26,1439,28],[1535,27,1439,29,"current"],[1535,34,1439,36],[1535,37,1439,39],[1535,41,1439,43],[1536,6,1440,8],[1536,13,1440,15],[1536,17,1440,19],[1537,4,1441,4],[1537,5,1441,5],[1538,4,1442,4,"React__default"],[1538,18,1442,18],[1538,19,1442,18,"default"],[1538,26,1442,18],[1538,27,1442,19,"useEffect"],[1538,36,1442,28],[1538,37,1442,29],[1538,43,1442,33],[1539,6,1443,8],[1539,10,1443,12,"hasSnapPoints"],[1539,23,1443,25],[1539,25,1443,27],[1540,8,1444,12,"window"],[1540,14,1444,18],[1540,15,1444,19,"requestAnimationFrame"],[1540,36,1444,40],[1540,37,1444,41],[1540,43,1444,45],[1541,10,1445,16,"setDelayedSnapPoints"],[1541,30,1445,36],[1541,31,1445,37],[1541,35,1445,41],[1541,36,1445,42],[1542,8,1446,12],[1542,9,1446,13],[1542,10,1446,14],[1543,6,1447,8],[1544,4,1448,4],[1544,5,1448,5],[1544,7,1448,7],[1544,9,1448,9],[1544,10,1448,10],[1545,4,1449,4],[1545,13,1449,13,"handleOnPointerUp"],[1545,30,1449,30,"handleOnPointerUp"],[1545,31,1449,31,"event"],[1545,36,1449,36],[1545,38,1449,38],[1546,6,1450,8,"pointerStartRef"],[1546,21,1450,23],[1546,22,1450,24,"current"],[1546,29,1450,31],[1546,32,1450,34],[1546,36,1450,38],[1547,6,1451,8,"wasBeyondThePointRef"],[1547,26,1451,28],[1547,27,1451,29,"current"],[1547,34,1451,36],[1547,37,1451,39],[1547,42,1451,44],[1548,6,1452,8,"onRelease"],[1548,15,1452,17],[1548,16,1452,18,"event"],[1548,21,1452,23],[1548,22,1452,24],[1549,4,1453,4],[1550,4,1454,4],[1550,11,1454,11],[1550,24,1454,25,"React__default"],[1550,38,1454,39],[1550,39,1454,39,"default"],[1550,46,1454,39],[1550,47,1454,40,"createElement"],[1550,60,1454,53],[1550,61,1454,54,"DialogPrimitive"],[1550,76,1454,69],[1550,77,1454,70,"Content"],[1550,84,1454,77],[1550,86,1454,79],[1551,6,1455,8],[1551,34,1455,36],[1551,36,1455,38,"direction"],[1551,45,1455,47],[1552,6,1456,8],[1552,24,1456,26],[1552,26,1456,28],[1552,28,1456,30],[1553,6,1457,8],[1553,37,1457,39],[1553,39,1457,41,"delayedSnapPoints"],[1553,56,1457,58],[1553,59,1457,61],[1553,65,1457,67],[1553,68,1457,70],[1553,75,1457,77],[1554,6,1458,8],[1554,29,1458,31],[1554,31,1458,33,"isOpen"],[1554,37,1458,39],[1554,41,1458,43,"hasSnapPoints"],[1554,54,1458,56],[1554,57,1458,59],[1554,63,1458,65],[1554,66,1458,68],[1554,73,1458,75],[1555,6,1459,8],[1555,34,1459,36],[1555,36,1459,38,"container"],[1555,45,1459,47],[1555,48,1459,50],[1555,54,1459,56],[1555,57,1459,59],[1555,64,1459,66],[1556,6,1460,8],[1556,25,1460,27],[1556,27,1460,29],[1556,28,1460,30,"shouldAnimate"],[1556,41,1460,43],[1556,45,1460,47],[1556,49,1460,51],[1556,52,1460,54],[1556,57,1460,59],[1556,58,1460,60],[1556,61,1460,63,"shouldAnimate"],[1556,74,1460,76],[1556,75,1460,77,"current"],[1556,82,1460,84],[1556,86,1460,88],[1556,92,1460,94],[1556,95,1460,97],[1556,102,1460,104],[1557,6,1461,8],[1557,9,1461,11,"rest"],[1557,13,1461,15],[1558,6,1462,8,"ref"],[1558,9,1462,11],[1558,11,1462,13,"composedRef"],[1558,22,1462,24],[1559,6,1463,8,"style"],[1559,11,1463,13],[1559,13,1463,15,"snapPointsOffset"],[1559,29,1463,31],[1559,33,1463,35,"snapPointsOffset"],[1559,49,1463,51],[1559,50,1463,52,"length"],[1559,56,1463,58],[1559,59,1463,61],[1559,60,1463,62],[1559,63,1463,65],[1560,8,1464,12],[1560,29,1464,33],[1560,31,1464,35],[1560,34,1464,38,"snapPointsOffset"],[1560,50,1464,54],[1560,51,1464,55,"activeSnapPointIndex"],[1560,71,1464,75],[1560,75,1464,79],[1560,79,1464,83],[1560,82,1464,86,"activeSnapPointIndex"],[1560,102,1464,106],[1560,105,1464,109],[1560,106,1464,110],[1560,107,1464,111],[1560,111,1464,115],[1561,8,1465,12],[1561,11,1465,15,"style"],[1562,6,1466,8],[1562,7,1466,9],[1562,10,1466,12,"style"],[1562,15,1466,17],[1563,6,1467,8,"onPointerDown"],[1563,19,1467,21],[1563,21,1467,24,"event"],[1563,26,1467,29],[1563,30,1467,32],[1564,8,1468,12],[1564,12,1468,16,"handleOnly"],[1564,22,1468,26],[1564,24,1468,28],[1565,8,1469,12,"rest"],[1565,12,1469,16],[1565,13,1469,17,"onPointerDown"],[1565,26,1469,30],[1565,30,1469,34],[1565,34,1469,38],[1565,37,1469,41],[1565,42,1469,46],[1565,43,1469,47],[1565,46,1469,50,"rest"],[1565,50,1469,54],[1565,51,1469,55,"onPointerDown"],[1565,64,1469,68],[1565,65,1469,69,"call"],[1565,69,1469,73],[1565,70,1469,74,"rest"],[1565,74,1469,78],[1565,76,1469,80,"event"],[1565,81,1469,85],[1565,82,1469,86],[1566,8,1470,12,"pointerStartRef"],[1566,23,1470,27],[1566,24,1470,28,"current"],[1566,31,1470,35],[1566,34,1470,38],[1567,10,1471,16,"x"],[1567,11,1471,17],[1567,13,1471,19,"event"],[1567,18,1471,24],[1567,19,1471,25,"pageX"],[1567,24,1471,30],[1568,10,1472,16,"y"],[1568,11,1472,17],[1568,13,1472,19,"event"],[1568,18,1472,24],[1568,19,1472,25,"pageY"],[1569,8,1473,12],[1569,9,1473,13],[1570,8,1474,12,"onPress"],[1570,15,1474,19],[1570,16,1474,20,"event"],[1570,21,1474,25],[1570,22,1474,26],[1571,6,1475,8],[1571,7,1475,9],[1572,6,1476,8,"onOpenAutoFocus"],[1572,21,1476,23],[1572,23,1476,26,"e"],[1572,24,1476,27],[1572,28,1476,30],[1573,8,1477,12,"onOpenAutoFocus"],[1573,23,1477,27],[1573,27,1477,31],[1573,31,1477,35],[1573,34,1477,38],[1573,39,1477,43],[1573,40,1477,44],[1573,43,1477,47,"onOpenAutoFocus"],[1573,58,1477,62],[1573,59,1477,63,"e"],[1573,60,1477,64],[1573,61,1477,65],[1574,8,1478,12],[1574,12,1478,16],[1574,13,1478,17,"autoFocus"],[1574,22,1478,26],[1574,24,1478,28],[1575,10,1479,16,"e"],[1575,11,1479,17],[1575,12,1479,18,"preventDefault"],[1575,26,1479,32],[1575,27,1479,33],[1575,28,1479,34],[1576,8,1480,12],[1577,6,1481,8],[1577,7,1481,9],[1578,6,1482,8,"onPointerDownOutside"],[1578,26,1482,28],[1578,28,1482,31,"e"],[1578,29,1482,32],[1578,33,1482,35],[1579,8,1483,12,"onPointerDownOutside"],[1579,28,1483,32],[1579,32,1483,36],[1579,36,1483,40],[1579,39,1483,43],[1579,44,1483,48],[1579,45,1483,49],[1579,48,1483,52,"onPointerDownOutside"],[1579,68,1483,72],[1579,69,1483,73,"e"],[1579,70,1483,74],[1579,71,1483,75],[1580,8,1484,12],[1580,12,1484,16],[1580,13,1484,17,"modal"],[1580,18,1484,22],[1580,22,1484,26,"e"],[1580,23,1484,27],[1580,24,1484,28,"defaultPrevented"],[1580,40,1484,44],[1580,42,1484,46],[1581,10,1485,16,"e"],[1581,11,1485,17],[1581,12,1485,18,"preventDefault"],[1581,26,1485,32],[1581,27,1485,33],[1581,28,1485,34],[1582,10,1486,16],[1583,8,1487,12],[1584,8,1488,12],[1584,12,1488,16,"keyboardIsOpen"],[1584,26,1488,30],[1584,27,1488,31,"current"],[1584,34,1488,38],[1584,36,1488,40],[1585,10,1489,16,"keyboardIsOpen"],[1585,24,1489,30],[1585,25,1489,31,"current"],[1585,32,1489,38],[1585,35,1489,41],[1585,40,1489,46],[1586,8,1490,12],[1587,6,1491,8],[1587,7,1491,9],[1588,6,1492,8,"onFocusOutside"],[1588,20,1492,22],[1588,22,1492,25,"e"],[1588,23,1492,26],[1588,27,1492,29],[1589,8,1493,12],[1589,12,1493,16],[1589,13,1493,17,"modal"],[1589,18,1493,22],[1589,20,1493,24],[1590,10,1494,16,"e"],[1590,11,1494,17],[1590,12,1494,18,"preventDefault"],[1590,26,1494,32],[1590,27,1494,33],[1590,28,1494,34],[1591,10,1495,16],[1592,8,1496,12],[1593,6,1497,8],[1593,7,1497,9],[1594,6,1498,8,"onPointerMove"],[1594,19,1498,21],[1594,21,1498,24,"event"],[1594,26,1498,29],[1594,30,1498,32],[1595,8,1499,12,"lastKnownPointerEventRef"],[1595,32,1499,36],[1595,33,1499,37,"current"],[1595,40,1499,44],[1595,43,1499,47,"event"],[1595,48,1499,52],[1596,8,1500,12],[1596,12,1500,16,"handleOnly"],[1596,22,1500,26],[1596,24,1500,28],[1597,8,1501,12,"rest"],[1597,12,1501,16],[1597,13,1501,17,"onPointerMove"],[1597,26,1501,30],[1597,30,1501,34],[1597,34,1501,38],[1597,37,1501,41],[1597,42,1501,46],[1597,43,1501,47],[1597,46,1501,50,"rest"],[1597,50,1501,54],[1597,51,1501,55,"onPointerMove"],[1597,64,1501,68],[1597,65,1501,69,"call"],[1597,69,1501,73],[1597,70,1501,74,"rest"],[1597,74,1501,78],[1597,76,1501,80,"event"],[1597,81,1501,85],[1597,82,1501,86],[1598,8,1502,12],[1598,12,1502,16],[1598,13,1502,17,"pointerStartRef"],[1598,28,1502,32],[1598,29,1502,33,"current"],[1598,36,1502,40],[1598,38,1502,42],[1599,8,1503,12],[1599,14,1503,18,"yPosition"],[1599,23,1503,27],[1599,26,1503,30,"event"],[1599,31,1503,35],[1599,32,1503,36,"pageY"],[1599,37,1503,41],[1599,40,1503,44,"pointerStartRef"],[1599,55,1503,59],[1599,56,1503,60,"current"],[1599,63,1503,67],[1599,64,1503,68,"y"],[1599,65,1503,69],[1600,8,1504,12],[1600,14,1504,18,"xPosition"],[1600,23,1504,27],[1600,26,1504,30,"event"],[1600,31,1504,35],[1600,32,1504,36,"pageX"],[1600,37,1504,41],[1600,40,1504,44,"pointerStartRef"],[1600,55,1504,59],[1600,56,1504,60,"current"],[1600,63,1504,67],[1600,64,1504,68,"x"],[1600,65,1504,69],[1601,8,1505,12],[1601,14,1505,18,"swipeStartThreshold"],[1601,33,1505,37],[1601,36,1505,40,"event"],[1601,41,1505,45],[1601,42,1505,46,"pointerType"],[1601,53,1505,57],[1601,58,1505,62],[1601,65,1505,69],[1601,68,1505,72],[1601,70,1505,74],[1601,73,1505,77],[1601,74,1505,78],[1602,8,1506,12],[1602,14,1506,18,"delta"],[1602,19,1506,23],[1602,22,1506,26],[1603,10,1507,16,"x"],[1603,11,1507,17],[1603,13,1507,19,"xPosition"],[1603,22,1507,28],[1604,10,1508,16,"y"],[1604,11,1508,17],[1604,13,1508,19,"yPosition"],[1605,8,1509,12],[1605,9,1509,13],[1606,8,1510,12],[1606,14,1510,18,"isAllowedToSwipe"],[1606,30,1510,34],[1606,33,1510,37,"isDeltaInDirection"],[1606,51,1510,55],[1606,52,1510,56,"delta"],[1606,57,1510,61],[1606,59,1510,63,"direction"],[1606,68,1510,72],[1606,70,1510,74,"swipeStartThreshold"],[1606,89,1510,93],[1606,90,1510,94],[1607,8,1511,12],[1607,12,1511,16,"isAllowedToSwipe"],[1607,28,1511,32],[1607,30,1511,34,"onDrag"],[1607,36,1511,40],[1607,37,1511,41,"event"],[1607,42,1511,46],[1607,43,1511,47],[1607,44,1511,48],[1607,49,1512,17],[1607,53,1512,21,"Math"],[1607,57,1512,25],[1607,58,1512,26,"abs"],[1607,61,1512,29],[1607,62,1512,30,"xPosition"],[1607,71,1512,39],[1607,72,1512,40],[1607,75,1512,43,"swipeStartThreshold"],[1607,94,1512,62],[1607,98,1512,66,"Math"],[1607,102,1512,70],[1607,103,1512,71,"abs"],[1607,106,1512,74],[1607,107,1512,75,"yPosition"],[1607,116,1512,84],[1607,117,1512,85],[1607,120,1512,88,"swipeStartThreshold"],[1607,139,1512,107],[1607,141,1512,109],[1608,10,1513,16,"pointerStartRef"],[1608,25,1513,31],[1608,26,1513,32,"current"],[1608,33,1513,39],[1608,36,1513,42],[1608,40,1513,46],[1609,8,1514,12],[1610,6,1515,8],[1610,7,1515,9],[1611,6,1516,8,"onPointerUp"],[1611,17,1516,19],[1611,19,1516,22,"event"],[1611,24,1516,27],[1611,28,1516,30],[1612,8,1517,12,"rest"],[1612,12,1517,16],[1612,13,1517,17,"onPointerUp"],[1612,24,1517,28],[1612,28,1517,32],[1612,32,1517,36],[1612,35,1517,39],[1612,40,1517,44],[1612,41,1517,45],[1612,44,1517,48,"rest"],[1612,48,1517,52],[1612,49,1517,53,"onPointerUp"],[1612,60,1517,64],[1612,61,1517,65,"call"],[1612,65,1517,69],[1612,66,1517,70,"rest"],[1612,70,1517,74],[1612,72,1517,76,"event"],[1612,77,1517,81],[1612,78,1517,82],[1613,8,1518,12,"pointerStartRef"],[1613,23,1518,27],[1613,24,1518,28,"current"],[1613,31,1518,35],[1613,34,1518,38],[1613,38,1518,42],[1614,8,1519,12,"wasBeyondThePointRef"],[1614,28,1519,32],[1614,29,1519,33,"current"],[1614,36,1519,40],[1614,39,1519,43],[1614,44,1519,48],[1615,8,1520,12,"onRelease"],[1615,17,1520,21],[1615,18,1520,22,"event"],[1615,23,1520,27],[1615,24,1520,28],[1616,6,1521,8],[1616,7,1521,9],[1617,6,1522,8,"onPointerOut"],[1617,18,1522,20],[1617,20,1522,23,"event"],[1617,25,1522,28],[1617,29,1522,31],[1618,8,1523,12,"rest"],[1618,12,1523,16],[1618,13,1523,17,"onPointerOut"],[1618,25,1523,29],[1618,29,1523,33],[1618,33,1523,37],[1618,36,1523,40],[1618,41,1523,45],[1618,42,1523,46],[1618,45,1523,49,"rest"],[1618,49,1523,53],[1618,50,1523,54,"onPointerOut"],[1618,62,1523,66],[1618,63,1523,67,"call"],[1618,67,1523,71],[1618,68,1523,72,"rest"],[1618,72,1523,76],[1618,74,1523,78,"event"],[1618,79,1523,83],[1618,80,1523,84],[1619,8,1524,12,"handleOnPointerUp"],[1619,25,1524,29],[1619,26,1524,30,"lastKnownPointerEventRef"],[1619,50,1524,54],[1619,51,1524,55,"current"],[1619,58,1524,62],[1619,59,1524,63],[1620,6,1525,8],[1620,7,1525,9],[1621,6,1526,8,"onContextMenu"],[1621,19,1526,21],[1621,21,1526,24,"event"],[1621,26,1526,29],[1621,30,1526,32],[1622,8,1527,12,"rest"],[1622,12,1527,16],[1622,13,1527,17,"onContextMenu"],[1622,26,1527,30],[1622,30,1527,34],[1622,34,1527,38],[1622,37,1527,41],[1622,42,1527,46],[1622,43,1527,47],[1622,46,1527,50,"rest"],[1622,50,1527,54],[1622,51,1527,55,"onContextMenu"],[1622,64,1527,68],[1622,65,1527,69,"call"],[1622,69,1527,73],[1622,70,1527,74,"rest"],[1622,74,1527,78],[1622,76,1527,80,"event"],[1622,81,1527,85],[1622,82,1527,86],[1623,8,1528,12],[1623,12,1528,16,"lastKnownPointerEventRef"],[1623,36,1528,40],[1623,37,1528,41,"current"],[1623,44,1528,48],[1623,46,1528,50],[1624,10,1529,16,"handleOnPointerUp"],[1624,27,1529,33],[1624,28,1529,34,"lastKnownPointerEventRef"],[1624,52,1529,58],[1624,53,1529,59,"current"],[1624,60,1529,66],[1624,61,1529,67],[1625,8,1530,12],[1626,6,1531,8],[1627,4,1532,4],[1627,5,1532,5],[1627,6,1532,6],[1628,2,1533,0],[1628,3,1533,1],[1628,4,1533,2],[1629,2,1534,0,"Content"],[1629,9,1534,7],[1629,10,1534,8,"displayName"],[1629,21,1534,19],[1629,24,1534,22],[1629,40,1534,38],[1630,2,1535,0],[1630,8,1535,6,"LONG_HANDLE_PRESS_TIMEOUT"],[1630,33,1535,31],[1630,36,1535,34],[1630,39,1535,37],[1631,2,1536,0],[1631,8,1536,6,"DOUBLE_TAP_TIMEOUT"],[1631,26,1536,24],[1631,29,1536,27],[1631,32,1536,30],[1632,2,1537,0],[1632,8,1537,6,"Handle"],[1632,14,1537,12],[1632,17,1537,15],[1632,30,1537,29,"React__default"],[1632,44,1537,43],[1632,45,1537,43,"default"],[1632,52,1537,43],[1632,53,1537,44,"forwardRef"],[1632,63,1537,54],[1632,64,1537,55],[1632,74,1537,64],[1633,4,1537,66,"preventCycle"],[1633,16,1537,78],[1633,19,1537,81],[1633,24,1537,86],[1634,4,1537,88,"children"],[1634,12,1537,96],[1635,4,1537,98],[1635,7,1537,101,"rest"],[1636,2,1537,106],[1636,3,1537,107],[1636,5,1537,109,"ref"],[1636,8,1537,112],[1636,10,1537,114],[1637,4,1538,4],[1637,10,1538,10],[1638,6,1538,12,"closeDrawer"],[1638,17,1538,23],[1639,6,1538,25,"isDragging"],[1639,16,1538,35],[1640,6,1538,37,"snapPoints"],[1640,16,1538,47],[1641,6,1538,49,"activeSnapPoint"],[1641,21,1538,64],[1642,6,1538,66,"setActiveSnapPoint"],[1642,24,1538,84],[1643,6,1538,86,"dismissible"],[1643,17,1538,97],[1644,6,1538,99,"handleOnly"],[1644,16,1538,109],[1645,6,1538,111,"isOpen"],[1645,12,1538,117],[1646,6,1538,119,"onPress"],[1646,13,1538,126],[1647,6,1538,128,"onDrag"],[1648,4,1538,135],[1648,5,1538,136],[1648,8,1538,139,"useDrawerContext"],[1648,24,1538,155],[1648,25,1538,156],[1648,26,1538,157],[1649,4,1539,4],[1649,10,1539,10,"closeTimeoutIdRef"],[1649,27,1539,27],[1649,30,1539,30,"React__default"],[1649,44,1539,44],[1649,45,1539,44,"default"],[1649,52,1539,44],[1649,53,1539,45,"useRef"],[1649,59,1539,51],[1649,60,1539,52],[1649,64,1539,56],[1649,65,1539,57],[1650,4,1540,4],[1650,10,1540,10,"shouldCancelInteractionRef"],[1650,36,1540,36],[1650,39,1540,39,"React__default"],[1650,53,1540,53],[1650,54,1540,53,"default"],[1650,61,1540,53],[1650,62,1540,54,"useRef"],[1650,68,1540,60],[1650,69,1540,61],[1650,74,1540,66],[1650,75,1540,67],[1651,4,1541,4],[1651,13,1541,13,"handleStartCycle"],[1651,29,1541,29,"handleStartCycle"],[1651,30,1541,29],[1651,32,1541,32],[1652,6,1542,8],[1653,6,1543,8],[1653,10,1543,12,"shouldCancelInteractionRef"],[1653,36,1543,38],[1653,37,1543,39,"current"],[1653,44,1543,46],[1653,46,1543,48],[1654,8,1544,12,"handleCancelInteraction"],[1654,31,1544,35],[1654,32,1544,36],[1654,33,1544,37],[1655,8,1545,12],[1656,6,1546,8],[1657,6,1547,8,"window"],[1657,12,1547,14],[1657,13,1547,15,"setTimeout"],[1657,23,1547,25],[1657,24,1547,26],[1657,30,1547,30],[1658,8,1548,12,"handleCycleSnapPoints"],[1658,29,1548,33],[1658,30,1548,34],[1658,31,1548,35],[1659,6,1549,8],[1659,7,1549,9],[1659,9,1549,11,"DOUBLE_TAP_TIMEOUT"],[1659,27,1549,29],[1659,28,1549,30],[1660,4,1550,4],[1661,4,1551,4],[1661,13,1551,13,"handleCycleSnapPoints"],[1661,34,1551,34,"handleCycleSnapPoints"],[1661,35,1551,34],[1661,37,1551,37],[1662,6,1552,8],[1663,6,1553,8],[1663,10,1553,12,"isDragging"],[1663,20,1553,22],[1663,24,1553,26,"preventCycle"],[1663,36,1553,38],[1663,40,1553,42,"shouldCancelInteractionRef"],[1663,66,1553,68],[1663,67,1553,69,"current"],[1663,74,1553,76],[1663,76,1553,78],[1664,8,1554,12,"handleCancelInteraction"],[1664,31,1554,35],[1664,32,1554,36],[1664,33,1554,37],[1665,8,1555,12],[1666,6,1556,8],[1667,6,1557,8],[1668,6,1558,8,"handleCancelInteraction"],[1668,29,1558,31],[1668,30,1558,32],[1668,31,1558,33],[1669,6,1559,8],[1669,10,1559,12],[1669,11,1559,13,"snapPoints"],[1669,21,1559,23],[1669,25,1559,27,"snapPoints"],[1669,35,1559,37],[1669,36,1559,38,"length"],[1669,42,1559,44],[1669,47,1559,49],[1669,48,1559,50],[1669,50,1559,52],[1670,8,1560,12],[1670,12,1560,16],[1670,13,1560,17,"dismissible"],[1670,24,1560,28],[1670,26,1560,30],[1671,10,1561,16,"closeDrawer"],[1671,21,1561,27],[1671,22,1561,28],[1671,23,1561,29],[1672,8,1562,12],[1673,8,1563,12],[1674,6,1564,8],[1675,6,1565,8],[1675,12,1565,14,"isLastSnapPoint"],[1675,27,1565,29],[1675,30,1565,32,"activeSnapPoint"],[1675,45,1565,47],[1675,50,1565,52,"snapPoints"],[1675,60,1565,62],[1675,61,1565,63,"snapPoints"],[1675,71,1565,73],[1675,72,1565,74,"length"],[1675,78,1565,80],[1675,81,1565,83],[1675,82,1565,84],[1675,83,1565,85],[1676,6,1566,8],[1676,10,1566,12,"isLastSnapPoint"],[1676,25,1566,27],[1676,29,1566,31,"dismissible"],[1676,40,1566,42],[1676,42,1566,44],[1677,8,1567,12,"closeDrawer"],[1677,19,1567,23],[1677,20,1567,24],[1677,21,1567,25],[1678,8,1568,12],[1679,6,1569,8],[1680,6,1570,8],[1680,12,1570,14,"currentSnapIndex"],[1680,28,1570,30],[1680,31,1570,33,"snapPoints"],[1680,41,1570,43],[1680,42,1570,44,"findIndex"],[1680,51,1570,53],[1680,52,1570,55,"point"],[1680,57,1570,60],[1680,61,1570,63,"point"],[1680,66,1570,68],[1680,71,1570,73,"activeSnapPoint"],[1680,86,1570,88],[1680,87,1570,89],[1681,6,1571,8],[1681,10,1571,12,"currentSnapIndex"],[1681,26,1571,28],[1681,31,1571,33],[1681,32,1571,34],[1681,33,1571,35],[1681,35,1571,37],[1681,42,1571,44],[1681,43,1571,45],[1682,6,1572,8],[1682,12,1572,14,"nextSnapPoint"],[1682,25,1572,27],[1682,28,1572,30,"snapPoints"],[1682,38,1572,40],[1682,39,1572,41,"currentSnapIndex"],[1682,55,1572,57],[1682,58,1572,60],[1682,59,1572,61],[1682,60,1572,62],[1683,6,1573,8,"setActiveSnapPoint"],[1683,24,1573,26],[1683,25,1573,27,"nextSnapPoint"],[1683,38,1573,40],[1683,39,1573,41],[1684,4,1574,4],[1685,4,1575,4],[1685,13,1575,13,"handleStartInteraction"],[1685,35,1575,35,"handleStartInteraction"],[1685,36,1575,35],[1685,38,1575,38],[1686,6,1576,8,"closeTimeoutIdRef"],[1686,23,1576,25],[1686,24,1576,26,"current"],[1686,31,1576,33],[1686,34,1576,36,"window"],[1686,40,1576,42],[1686,41,1576,43,"setTimeout"],[1686,51,1576,53],[1686,52,1576,54],[1686,58,1576,58],[1687,8,1577,12],[1688,8,1578,12,"shouldCancelInteractionRef"],[1688,34,1578,38],[1688,35,1578,39,"current"],[1688,42,1578,46],[1688,45,1578,49],[1688,49,1578,53],[1689,6,1579,8],[1689,7,1579,9],[1689,9,1579,11,"LONG_HANDLE_PRESS_TIMEOUT"],[1689,34,1579,36],[1689,35,1579,37],[1690,4,1580,4],[1691,4,1581,4],[1691,13,1581,13,"handleCancelInteraction"],[1691,36,1581,36,"handleCancelInteraction"],[1691,37,1581,36],[1691,39,1581,39],[1692,6,1582,8],[1692,10,1582,12,"closeTimeoutIdRef"],[1692,27,1582,29],[1692,28,1582,30,"current"],[1692,35,1582,37],[1692,37,1582,39],[1693,8,1583,12,"window"],[1693,14,1583,18],[1693,15,1583,19,"clearTimeout"],[1693,27,1583,31],[1693,28,1583,32,"closeTimeoutIdRef"],[1693,45,1583,49],[1693,46,1583,50,"current"],[1693,53,1583,57],[1693,54,1583,58],[1694,6,1584,8],[1695,6,1585,8,"shouldCancelInteractionRef"],[1695,32,1585,34],[1695,33,1585,35,"current"],[1695,40,1585,42],[1695,43,1585,45],[1695,48,1585,50],[1696,4,1586,4],[1697,4,1587,4],[1697,11,1587,11],[1697,24,1587,25,"React__default"],[1697,38,1587,39],[1697,39,1587,39,"default"],[1697,46,1587,39],[1697,47,1587,40,"createElement"],[1697,60,1587,53],[1697,61,1587,54],[1697,66,1587,59],[1697,68,1587,61],[1698,6,1588,8,"onClick"],[1698,13,1588,15],[1698,15,1588,17,"handleStartCycle"],[1698,31,1588,33],[1699,6,1589,8,"onPointerCancel"],[1699,21,1589,23],[1699,23,1589,25,"handleCancelInteraction"],[1699,46,1589,48],[1700,6,1590,8,"onPointerDown"],[1700,19,1590,21],[1700,21,1590,24,"e"],[1700,22,1590,25],[1700,26,1590,28],[1701,8,1591,12],[1701,12,1591,16,"handleOnly"],[1701,22,1591,26],[1701,24,1591,28,"onPress"],[1701,31,1591,35],[1701,32,1591,36,"e"],[1701,33,1591,37],[1701,34,1591,38],[1702,8,1592,12,"handleStartInteraction"],[1702,30,1592,34],[1702,31,1592,35],[1702,32,1592,36],[1703,6,1593,8],[1703,7,1593,9],[1704,6,1594,8,"onPointerMove"],[1704,19,1594,21],[1704,21,1594,24,"e"],[1704,22,1594,25],[1704,26,1594,28],[1705,8,1595,12],[1705,12,1595,16,"handleOnly"],[1705,22,1595,26],[1705,24,1595,28,"onDrag"],[1705,30,1595,34],[1705,31,1595,35,"e"],[1705,32,1595,36],[1705,33,1595,37],[1706,6,1596,8],[1706,7,1596,9],[1707,6,1597,8],[1708,6,1598,8,"ref"],[1708,9,1598,11],[1708,11,1598,13,"ref"],[1708,14,1598,16],[1709,6,1599,8],[1709,32,1599,34],[1709,34,1599,36,"isOpen"],[1709,40,1599,42],[1709,43,1599,45],[1709,49,1599,51],[1709,52,1599,54],[1709,59,1599,61],[1710,6,1600,8],[1710,24,1600,26],[1710,26,1600,28],[1710,28,1600,30],[1711,6,1601,8],[1711,19,1601,21],[1711,21,1601,23],[1711,27,1601,29],[1712,6,1602,8],[1712,9,1602,11,"rest"],[1713,4,1603,4],[1713,5,1603,5],[1713,7,1603,7],[1713,20,1603,21,"React__default"],[1713,34,1603,35],[1713,35,1603,35,"default"],[1713,42,1603,35],[1713,43,1603,36,"createElement"],[1713,56,1603,49],[1713,57,1603,50],[1713,63,1603,56],[1713,65,1603,58],[1714,6,1604,8],[1714,32,1604,34],[1714,34,1604,36],[1714,36,1604,38],[1715,6,1605,8],[1715,19,1605,21],[1715,21,1605,23],[1716,4,1606,4],[1716,5,1606,5],[1716,7,1606,7,"children"],[1716,15,1606,15],[1716,16,1606,16],[1716,17,1606,17],[1717,2,1607,0],[1717,3,1607,1],[1717,4,1607,2],[1718,2,1608,0,"Handle"],[1718,8,1608,6],[1718,9,1608,7,"displayName"],[1718,20,1608,18],[1718,23,1608,21],[1718,38,1608,36],[1719,2,1609,0],[1719,11,1609,9,"NestedRoot"],[1719,21,1609,19,"NestedRoot"],[1719,22,1609,20],[1720,4,1609,22,"onDrag"],[1720,10,1609,28],[1721,4,1609,30,"onOpenChange"],[1721,16,1609,42],[1722,4,1609,44,"open"],[1722,8,1609,48],[1722,10,1609,50,"nestedIsOpen"],[1722,22,1609,62],[1723,4,1609,64],[1723,7,1609,67,"rest"],[1724,2,1609,72],[1724,3,1609,73],[1724,5,1609,75],[1725,4,1610,4],[1725,10,1610,10],[1726,6,1610,12,"onNestedDrag"],[1726,18,1610,24],[1727,6,1610,26,"onNestedOpenChange"],[1727,24,1610,44],[1728,6,1610,46,"onNestedRelease"],[1729,4,1610,62],[1729,5,1610,63],[1729,8,1610,66,"useDrawerContext"],[1729,24,1610,82],[1729,25,1610,83],[1729,26,1610,84],[1730,4,1611,4],[1730,8,1611,8],[1730,9,1611,9,"onNestedDrag"],[1730,21,1611,21],[1730,23,1611,23],[1731,6,1612,8],[1731,12,1612,14],[1731,16,1612,18,"Error"],[1731,21,1612,23],[1731,22,1612,24],[1731,74,1612,76],[1731,75,1612,77],[1732,4,1613,4],[1733,4,1614,4],[1733,11,1614,11],[1733,24,1614,25,"React__default"],[1733,38,1614,39],[1733,39,1614,39,"default"],[1733,46,1614,39],[1733,47,1614,40,"createElement"],[1733,60,1614,53],[1733,61,1614,54,"Root"],[1733,65,1614,58],[1733,67,1614,60],[1734,6,1615,8,"nested"],[1734,12,1615,14],[1734,14,1615,16],[1734,18,1615,20],[1735,6,1616,8,"open"],[1735,10,1616,12],[1735,12,1616,14,"nestedIsOpen"],[1735,24,1616,26],[1736,6,1617,8,"onClose"],[1736,13,1617,15],[1736,15,1617,17,"onClose"],[1736,16,1617,17],[1736,21,1617,21],[1737,8,1618,12,"onNestedOpenChange"],[1737,26,1618,30],[1737,27,1618,31],[1737,32,1618,36],[1737,33,1618,37],[1738,6,1619,8],[1738,7,1619,9],[1739,6,1620,8,"onDrag"],[1739,12,1620,14],[1739,14,1620,16,"onDrag"],[1739,15,1620,17,"e"],[1739,16,1620,18],[1739,18,1620,20,"p"],[1739,19,1620,21],[1739,24,1620,24],[1740,8,1621,12,"onNestedDrag"],[1740,20,1621,24],[1740,21,1621,25,"e"],[1740,22,1621,26],[1740,24,1621,28,"p"],[1740,25,1621,29],[1740,26,1621,30],[1741,8,1622,12,"onDrag"],[1741,14,1622,18],[1741,18,1622,22],[1741,22,1622,26],[1741,25,1622,29],[1741,30,1622,34],[1741,31,1622,35],[1741,34,1622,38,"onDrag"],[1741,40,1622,44],[1741,41,1622,45,"e"],[1741,42,1622,46],[1741,44,1622,48,"p"],[1741,45,1622,49],[1741,46,1622,50],[1742,6,1623,8],[1742,7,1623,9],[1743,6,1624,8,"onOpenChange"],[1743,18,1624,20],[1743,20,1624,23,"o"],[1743,21,1624,24],[1743,25,1624,27],[1744,8,1625,12],[1744,12,1625,16,"o"],[1744,13,1625,17],[1744,15,1625,19],[1745,10,1626,16,"onNestedOpenChange"],[1745,28,1626,34],[1745,29,1626,35,"o"],[1745,30,1626,36],[1745,31,1626,37],[1746,8,1627,12],[1747,8,1628,12,"onOpenChange"],[1747,20,1628,24],[1747,24,1628,28],[1747,28,1628,32],[1747,31,1628,35],[1747,36,1628,40],[1747,37,1628,41],[1747,40,1628,44,"onOpenChange"],[1747,52,1628,56],[1747,53,1628,57,"o"],[1747,54,1628,58],[1747,55,1628,59],[1748,6,1629,8],[1748,7,1629,9],[1749,6,1630,8,"onRelease"],[1749,15,1630,17],[1749,17,1630,19,"onNestedRelease"],[1749,32,1630,34],[1750,6,1631,8],[1750,9,1631,11,"rest"],[1751,4,1632,4],[1751,5,1632,5],[1751,6,1632,6],[1752,2,1633,0],[1753,2,1634,0],[1753,11,1634,9,"Portal"],[1753,17,1634,15,"Portal"],[1753,18,1634,16,"props"],[1753,23,1634,21],[1753,25,1634,23],[1754,4,1635,4],[1754,10,1635,10,"context"],[1754,17,1635,17],[1754,20,1635,20,"useDrawerContext"],[1754,36,1635,36],[1754,37,1635,37],[1754,38,1635,38],[1755,4,1636,4],[1755,10,1636,10],[1756,6,1636,12,"container"],[1756,15,1636,21],[1756,18,1636,24,"context"],[1756,25,1636,31],[1756,26,1636,32,"container"],[1756,35,1636,41],[1757,6,1636,43],[1757,9,1636,46,"portalProps"],[1758,4,1636,58],[1758,5,1636,59],[1758,8,1636,62,"props"],[1758,13,1636,67],[1759,4,1637,4],[1759,11,1637,11],[1759,24,1637,25,"React__default"],[1759,38,1637,39],[1759,39,1637,39,"default"],[1759,46,1637,39],[1759,47,1637,40,"createElement"],[1759,60,1637,53],[1759,61,1637,54,"DialogPrimitive"],[1759,76,1637,69],[1759,77,1637,70,"Portal"],[1759,83,1637,76],[1759,85,1637,78],[1760,6,1638,8,"container"],[1760,15,1638,17],[1760,17,1638,19,"container"],[1760,26,1638,28],[1761,6,1639,8],[1761,9,1639,11,"portalProps"],[1762,4,1640,4],[1762,5,1640,5],[1762,6,1640,6],[1763,2,1641,0],[1764,2,1642,0],[1764,8,1642,6,"Drawer"],[1764,14,1642,12],[1764,17,1642,15],[1765,4,1643,4,"Root"],[1765,8,1643,8],[1766,4,1644,4,"NestedRoot"],[1766,14,1644,14],[1767,4,1645,4,"Content"],[1767,11,1645,11],[1768,4,1646,4,"Overlay"],[1768,11,1646,11],[1769,4,1647,4,"Trigger"],[1769,11,1647,11],[1769,13,1647,13,"DialogPrimitive"],[1769,28,1647,28],[1769,29,1647,29,"Trigger"],[1769,36,1647,36],[1770,4,1648,4,"Portal"],[1770,10,1648,10],[1771,4,1649,4,"Handle"],[1771,10,1649,10],[1772,4,1650,4,"Close"],[1772,9,1650,9],[1772,11,1650,11,"DialogPrimitive"],[1772,26,1650,26],[1772,27,1650,27,"Close"],[1772,32,1650,32],[1773,4,1651,4,"Title"],[1773,9,1651,9],[1773,11,1651,11,"DialogPrimitive"],[1773,26,1651,26],[1773,27,1651,27,"Title"],[1773,32,1651,32],[1774,4,1652,4,"Description"],[1774,15,1652,15],[1774,17,1652,17,"DialogPrimitive"],[1774,32,1652,32],[1774,33,1652,33,"Description"],[1775,2,1653,0],[1775,3,1653,1],[1776,0,1653,2],[1776,3]],"functionMap":{"names":["<global>","__insertCSS","React__default.createContext$argument_0.onPress","React__default.createContext$argument_0.onRelease","React__default.createContext$argument_0.onDrag","React__default.createContext$argument_0.onNestedDrag","React__default.createContext$argument_0.onNestedOpenChange","React__default.createContext$argument_0.onNestedRelease","React__default.createContext$argument_0.onOpenChange","React__default.createContext$argument_0.setActiveSnapPoint","React__default.createContext$argument_0.closeDrawer","useDrawerContext","isMobileFirefox","isMac","isIPhone","isSafari","isIPad","isIOS","testPlatform","chain$1","<anonymous>","isScrollable","getScrollParent","usePreventScroll","useIsomorphicLayoutEffect$argument_0","preventScrollMobileSafari","onTouchStart","onTouchMove","onTouchEnd","requestAnimationFrame$argument_0","onFocus","visualViewport.addEventListener$argument_1","onWindowScroll","setStyle","addEvent","scrollIntoView","isInput","setRef","composeRefs","refs.forEach$argument_0","useComposedRefs","set","Object.entries.forEach$argument_0","reset","isVertical","getTranslate","dampenValue","assignStyle","chain","useCallbackRef","React__default.useEffect$argument_0","React__default.useMemo$argument_0","useUncontrolledState","useControllableState","React__default.useCallback$argument_0","useSnapPoints","onResize","snapPoints.findIndex$argument_0","snapPoints.map$argument_0","snapPointsOffset.findIndex$argument_0","onRelease","snapPointsOffset.reduce$argument_0","onDrag","getPercentageDragged","noop","useScaleBackground","useMemo$argument_0","getScale","window.setTimeout$argument_0","usePositionFixed","React__default.useState$argument_0","window.requestAnimationFrame$argument_0","onScroll","Root","useControllableState$argument_0.onChange","setTimeout$argument_0","onPress","window.addEventListener$argument_1","shouldDrag","onVisualViewportChange","closeDrawer","resetDrawer","cancelDrag","onNestedOpenChange","onNestedDrag","onNestedRelease","React__default.createElement$argument_1.onOpenChange","React__default.forwardRef$argument_0","isDeltaInDirection","handleOnPointerUp","React__default.createElement$argument_1.onPointerDown","React__default.createElement$argument_1.onOpenAutoFocus","React__default.createElement$argument_1.onPointerDownOutside","React__default.createElement$argument_1.onFocusOutside","React__default.createElement$argument_1.onPointerMove","React__default.createElement$argument_1.onPointerUp","React__default.createElement$argument_1.onPointerOut","React__default.createElement$argument_1.onContextMenu","handleStartCycle","handleCycleSnapPoints","handleStartInteraction","handleCancelInteraction","NestedRoot","React__default.createElement$argument_1.onClose","React__default.createElement$argument_1.onDrag","Portal"],"mappings":"AAA;ACC;CDO;aEa,MF;eGC,MH;YIC,MJ;kBKC,ML;wBMC,MN;qBOC,MP;kBQc,MR;wBSC,MT;iBUC,MV;yBWW;CXM;AYI;CZK;AaC;CbE;AcC;CdE;AeC;CfE;AgBC;ChBG;AiBC;CjBE;AkBC;ClBE;AmBK;WCC;KDM;CnBC;AqBG;CrBG;AsBC;CtBQ;IuBoB;8BCE;eJU;SIK;KDC;CvBG;AyB2B;uBCG;KDO;sBEC;KFoB;qBGC;kCCU;aDE;KHE;kBKC;kCDQ;kEEc,0BF;aCK;KLE;yBOC;KPI;WLmB;KKK;CzBC;AiCE;WbM;KaG;CjCC;AkCE;WdG;KcG;ClCC;AmCC;CnCkB;AoCC;CpCE;IqCM;CrCM;IsCI;WlBC,qBmB,wBnB,CkB;CtCC;IwCI;CxCG;AyCG;mCCG;KDO;CzCG;A2CC;C3CS;mB4CC;C5CW;A6CC;C7Ce;A8CC;C9CE;A+CC;yB3BC,M2B;W3BG;K2BE;C/CC;IgDG;W5BC;K4BO;ChDC;AiDoB;6BCE;KDE;kCEE,I/B,gG6B;CjDC;AoDC;6BFK;KEK;CpDM;AqDC,8DjC,MiC;gDCQ;KDQ;CrDU;AuDE;6BLU;QMC;SNK;e9BE,kD8B;KKC;mDJC,iGI;wDJI;2FME,0CN;KIC;oDJK;+EOY;SPkB;KIC;yDJK,qHI;mDDI;gIKE,0CL;KCkB;6BLQ;yGOG,+EP;KKK;IKO;6FCqB;SDG;KLiB;IOC;KPa;IQC;KRqB;CvDY;agEE,I5C,MpB;AiEC;2CCG,uCD;IEC;KFE;6BfC;mB9BsB;yDgDE;iBhDM;a8BC;KeE;CjEK;IqEU;8DCC,6DD;wDfE;8BcqB,iCG;iBHO,Cd;KeE;8DfG;yCiBS;ajBM;KeG;6BnBG;QsBC;StBE;e9BG;S8BE;KmBC;6BnBC;e9BE;S8BM;KmBC;6BnBI;kCkBQ;iBlBE;KmBK;CrEY;AyEE;kBCK;uBCK;aDE;iDHG;qBGE;SDO;yDnBoB;KmBG;INwB;KME;IGC;gDCU,mCD;KHO;IKC;KLyD;IXC;KW6E;6BvBC;qCqBC;SrBE;KuBC;6BvBC;Q6BE;S7BgD;e9BE;S8BG;KuBC;IOK;mBLM;SKI;KPC;IQC;KR6B;ISC;KTM;IbC;uBee;afE;KaoC;6BvBC;e9BQ;S8BE;KuBC;IUG;uDRW;aQM;KVE;IWC;KXS;IYC;KZU;6BvBC;yCqBG;arBE;KuBE;sBaK;SbQ;CzEmC;wDuFC;iDjCQ,yBiC;CvFY;wDuFE;+BCU;KDsB;6BrCC;yCqBE;arBE;KqCE;IEC;KFI;uBGc;SHQ;yBIC;SJK;8BKC;SLS;wBMC;SNK;uBOC;SPiB;qBQC;SRK;sBSC;STG;uBUC;SVK;CvFE;uDuFI;IWI;0B9BM;S8BE;KXC;IYC;sD1CmB,kC0C;KZI;IaC;sDhCC;SgCG;KbC;IcC;KdK;uBGI;SHG;uBOC;SPE;CvFW;AsGE;iBCQ;SDE;gBEC;SFG;sBhBC;SgBK;CtGI;AyGC;CzGO"},"hasCjsExports":false},"type":"js/module"}]}