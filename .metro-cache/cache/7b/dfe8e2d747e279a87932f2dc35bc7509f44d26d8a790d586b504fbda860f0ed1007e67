{"dependencies":[{"name":"../internal/lrucache","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":217,"column":12,"index":6066},"end":{"line":217,"column":43,"index":6097}}],"key":"bJqU7zuKh2cnngx/VJflEUNQ4+g=","exportNames":["*"],"imports":1}},{"name":"../internal/parse-options","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":220,"column":21,"index":6144},"end":{"line":220,"column":57,"index":6180}}],"key":"m8nCrMiqXou1ytII/Ex1QKQthGk=","exportNames":["*"],"imports":1}},{"name":"./comparator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":221,"column":19,"index":6200},"end":{"line":221,"column":42,"index":6223}}],"key":"4r6YqNSdj1o6KMmhoqjIFIUqQmg=","exportNames":["*"],"imports":1}},{"name":"../internal/debug","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":222,"column":14,"index":6238},"end":{"line":222,"column":42,"index":6266}}],"key":"nMor496VJyerNzwid3cdupj9/ww=","exportNames":["*"],"imports":1}},{"name":"./semver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":223,"column":15,"index":6282},"end":{"line":223,"column":34,"index":6301}}],"key":"oTtX8ioZBweGT9g7U2RT0bwzOf8=","exportNames":["*"],"imports":1}},{"name":"../internal/re","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":230,"column":4,"index":6398},"end":{"line":230,"column":29,"index":6423}}],"key":"P6ANvKO12H/9KIqgrR+w8ctGRr8=","exportNames":["*"],"imports":1}},{"name":"../internal/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":231,"column":48,"index":6472},"end":{"line":231,"column":80,"index":6504}}],"key":"WS9a4mVe2aewhmQWdWjoBAP1if8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const SPACE_CHARACTERS = /\\s+/g;\n\n  // hoisted class for cyclic dependency\n  class Range {\n    constructor(range, options) {\n      options = parseOptions(options);\n      if (range instanceof Range) {\n        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n          return range;\n        } else {\n          return new Range(range.raw, options);\n        }\n      }\n      if (range instanceof Comparator) {\n        // just put it in the set and return\n        this.raw = range.value;\n        this.set = [[range]];\n        this.formatted = undefined;\n        return this;\n      }\n      this.options = options;\n      this.loose = !!options.loose;\n      this.includePrerelease = !!options.includePrerelease;\n\n      // First reduce all whitespace as much as possible so we do not have to rely\n      // on potentially slow regexes like \\s*. This is then stored and used for\n      // future error messages as well.\n      this.raw = range.trim().replace(SPACE_CHARACTERS, ' ');\n\n      // First, split on ||\n      this.set = this.raw.split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length);\n      if (!this.set.length) {\n        throw new TypeError(`Invalid SemVer Range: ${this.raw}`);\n      }\n\n      // if we have any that are not the null set, throw out null sets.\n      if (this.set.length > 1) {\n        // keep the first one, in case they're all null sets\n        const first = this.set[0];\n        this.set = this.set.filter(c => !isNullSet(c[0]));\n        if (this.set.length === 0) {\n          this.set = [first];\n        } else if (this.set.length > 1) {\n          // if we have any that are *, then the range is just *\n          for (const c of this.set) {\n            if (c.length === 1 && isAny(c[0])) {\n              this.set = [c];\n              break;\n            }\n          }\n        }\n      }\n      this.formatted = undefined;\n    }\n    get range() {\n      if (this.formatted === undefined) {\n        this.formatted = '';\n        for (let i = 0; i < this.set.length; i++) {\n          if (i > 0) {\n            this.formatted += '||';\n          }\n          const comps = this.set[i];\n          for (let k = 0; k < comps.length; k++) {\n            if (k > 0) {\n              this.formatted += ' ';\n            }\n            this.formatted += comps[k].toString().trim();\n          }\n        }\n      }\n      return this.formatted;\n    }\n    format() {\n      return this.range;\n    }\n    toString() {\n      return this.range;\n    }\n    parseRange(range) {\n      // memoize range parsing for performance.\n      // this is a very hot path, and fully deterministic.\n      const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);\n      const memoKey = memoOpts + ':' + range;\n      const cached = cache.get(memoKey);\n      if (cached) {\n        return cached;\n      }\n      const loose = this.options.loose;\n      // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n      const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n      range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n      debug('hyphen replace', range);\n\n      // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n      range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n      debug('comparator trim', range);\n\n      // `~ 1.2.3` => `~1.2.3`\n      range = range.replace(re[t.TILDETRIM], tildeTrimReplace);\n      debug('tilde trim', range);\n\n      // `^ 1.2.3` => `^1.2.3`\n      range = range.replace(re[t.CARETTRIM], caretTrimReplace);\n      debug('caret trim', range);\n\n      // At this point, the range is completely trimmed and\n      // ready to be split into comparators.\n\n      let rangeList = range.split(' ').map(comp => parseComparator(comp, this.options)).join(' ').split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options));\n      if (loose) {\n        // in loose mode, throw out any that are not valid comparators\n        rangeList = rangeList.filter(comp => {\n          debug('loose invalid filter', comp, this.options);\n          return !!comp.match(re[t.COMPARATORLOOSE]);\n        });\n      }\n      debug('range list', rangeList);\n\n      // if any comparators are the null set, then replace with JUST null set\n      // if more than one comparator, remove any * comparators\n      // also, don't include the same comparator more than once\n      const rangeMap = new Map();\n      const comparators = rangeList.map(comp => new Comparator(comp, this.options));\n      for (const comp of comparators) {\n        if (isNullSet(comp)) {\n          return [comp];\n        }\n        rangeMap.set(comp.value, comp);\n      }\n      if (rangeMap.size > 1 && rangeMap.has('')) {\n        rangeMap.delete('');\n      }\n      const result = [...rangeMap.values()];\n      cache.set(memoKey, result);\n      return result;\n    }\n    intersects(range, options) {\n      if (!(range instanceof Range)) {\n        throw new TypeError('a Range is required');\n      }\n      return this.set.some(thisComparators => {\n        return isSatisfiable(thisComparators, options) && range.set.some(rangeComparators => {\n          return isSatisfiable(rangeComparators, options) && thisComparators.every(thisComparator => {\n            return rangeComparators.every(rangeComparator => {\n              return thisComparator.intersects(rangeComparator, options);\n            });\n          });\n        });\n      });\n    }\n\n    // if ANY of the sets match ALL of its comparators, then pass\n    test(version) {\n      if (!version) {\n        return false;\n      }\n      if (typeof version === 'string') {\n        try {\n          version = new SemVer(version, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n      for (let i = 0; i < this.set.length; i++) {\n        if (testSet(this.set[i], version, this.options)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  module.exports = Range;\n  const LRU = require(_dependencyMap[0], \"../internal/lrucache\");\n  const cache = new LRU();\n  const parseOptions = require(_dependencyMap[1], \"../internal/parse-options\");\n  const Comparator = require(_dependencyMap[2], \"./comparator\");\n  const debug = require(_dependencyMap[3], \"../internal/debug\");\n  const SemVer = require(_dependencyMap[4], \"./semver\");\n  const {\n    safeRe: re,\n    t,\n    comparatorTrimReplace,\n    tildeTrimReplace,\n    caretTrimReplace\n  } = require(_dependencyMap[5], \"../internal/re\");\n  const {\n    FLAG_INCLUDE_PRERELEASE,\n    FLAG_LOOSE\n  } = require(_dependencyMap[6], \"../internal/constants\");\n  const isNullSet = c => c.value === '<0.0.0-0';\n  const isAny = c => c.value === '';\n\n  // take a set of comparators and determine whether there\n  // exists a version which can satisfy it\n  const isSatisfiable = (comparators, options) => {\n    let result = true;\n    const remainingComparators = comparators.slice();\n    let testComparator = remainingComparators.pop();\n    while (result && remainingComparators.length) {\n      result = remainingComparators.every(otherComparator => {\n        return testComparator.intersects(otherComparator, options);\n      });\n      testComparator = remainingComparators.pop();\n    }\n    return result;\n  };\n\n  // comprised of xranges, tildes, stars, and gtlt's at this point.\n  // already replaced the hyphen ranges\n  // turn into a set of JUST comparators.\n  const parseComparator = (comp, options) => {\n    debug('comp', comp, options);\n    comp = replaceCarets(comp, options);\n    debug('caret', comp);\n    comp = replaceTildes(comp, options);\n    debug('tildes', comp);\n    comp = replaceXRanges(comp, options);\n    debug('xrange', comp);\n    comp = replaceStars(comp, options);\n    debug('stars', comp);\n    return comp;\n  };\n  const isX = id => !id || id.toLowerCase() === 'x' || id === '*';\n\n  // ~, ~> --> * (any, kinda silly)\n  // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n  // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n  // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n  // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n  // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n  // ~0.0.1 --> >=0.0.1 <0.1.0-0\n  const replaceTildes = (comp, options) => {\n    return comp.trim().split(/\\s+/).map(c => replaceTilde(c, options)).join(' ');\n  };\n  const replaceTilde = (comp, options) => {\n    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n    return comp.replace(r, (_, M, m, p, pr) => {\n      debug('tilde', comp, _, M, m, p, pr);\n      let ret;\n      if (isX(M)) {\n        ret = '';\n      } else if (isX(m)) {\n        ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n      } else if (isX(p)) {\n        // ~1.2 == >=1.2.0 <1.3.0-0\n        ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n      } else if (pr) {\n        debug('replaceTilde pr', pr);\n        ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n      } else {\n        // ~1.2.3 == >=1.2.3 <1.3.0-0\n        ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n      }\n      debug('tilde return', ret);\n      return ret;\n    });\n  };\n\n  // ^ --> * (any, kinda silly)\n  // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n  // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n  // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n  // ^1.2.3 --> >=1.2.3 <2.0.0-0\n  // ^1.2.0 --> >=1.2.0 <2.0.0-0\n  // ^0.0.1 --> >=0.0.1 <0.0.2-0\n  // ^0.1.0 --> >=0.1.0 <0.2.0-0\n  const replaceCarets = (comp, options) => {\n    return comp.trim().split(/\\s+/).map(c => replaceCaret(c, options)).join(' ');\n  };\n  const replaceCaret = (comp, options) => {\n    debug('caret', comp, options);\n    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n    const z = options.includePrerelease ? '-0' : '';\n    return comp.replace(r, (_, M, m, p, pr) => {\n      debug('caret', comp, _, M, m, p, pr);\n      let ret;\n      if (isX(M)) {\n        ret = '';\n      } else if (isX(m)) {\n        ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n      } else if (isX(p)) {\n        if (M === '0') {\n          ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n        } else {\n          ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n        }\n      } else if (pr) {\n        debug('replaceCaret pr', pr);\n        if (M === '0') {\n          if (m === '0') {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n          } else {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n          }\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n        }\n      } else {\n        debug('no pr');\n        if (M === '0') {\n          if (m === '0') {\n            ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n          } else {\n            ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n          }\n        } else {\n          ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n        }\n      }\n      debug('caret return', ret);\n      return ret;\n    });\n  };\n  const replaceXRanges = (comp, options) => {\n    debug('replaceXRanges', comp, options);\n    return comp.split(/\\s+/).map(c => replaceXRange(c, options)).join(' ');\n  };\n  const replaceXRange = (comp, options) => {\n    comp = comp.trim();\n    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n    return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n      debug('xRange', comp, ret, gtlt, M, m, p, pr);\n      const xM = isX(M);\n      const xm = xM || isX(m);\n      const xp = xm || isX(p);\n      const anyX = xp;\n      if (gtlt === '=' && anyX) {\n        gtlt = '';\n      }\n\n      // if we're including prereleases in the match, then we need\n      // to fix this to -0, the lowest possible prerelease value\n      pr = options.includePrerelease ? '-0' : '';\n      if (xM) {\n        if (gtlt === '>' || gtlt === '<') {\n          // nothing is allowed\n          ret = '<0.0.0-0';\n        } else {\n          // nothing is forbidden\n          ret = '*';\n        }\n      } else if (gtlt && anyX) {\n        // we know patch is an x, because we have any x at all.\n        // replace X with 0\n        if (xm) {\n          m = 0;\n        }\n        p = 0;\n        if (gtlt === '>') {\n          // >1 => >=2.0.0\n          // >1.2 => >=1.3.0\n          gtlt = '>=';\n          if (xm) {\n            M = +M + 1;\n            m = 0;\n            p = 0;\n          } else {\n            m = +m + 1;\n            p = 0;\n          }\n        } else if (gtlt === '<=') {\n          // <=0.7.x is actually <0.8.0, since any 0.7.x should\n          // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n          gtlt = '<';\n          if (xm) {\n            M = +M + 1;\n          } else {\n            m = +m + 1;\n          }\n        }\n        if (gtlt === '<') {\n          pr = '-0';\n        }\n        ret = `${gtlt + M}.${m}.${p}${pr}`;\n      } else if (xm) {\n        ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n      } else if (xp) {\n        ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n      }\n      debug('xRange return', ret);\n      return ret;\n    });\n  };\n\n  // Because * is AND-ed with everything else in the comparator,\n  // and '' means \"any version\", just remove the *s entirely.\n  const replaceStars = (comp, options) => {\n    debug('replaceStars', comp, options);\n    // Looseness is ignored here.  star is always as loose as it gets!\n    return comp.trim().replace(re[t.STAR], '');\n  };\n  const replaceGTE0 = (comp, options) => {\n    debug('replaceGTE0', comp, options);\n    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '');\n  };\n\n  // This function is passed to string.replace(re[t.HYPHENRANGE])\n  // M, m, patch, prerelease, build\n  // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n  // 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n  // 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n  // TODO build?\n  const hyphenReplace = incPr => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {\n    if (isX(fM)) {\n      from = '';\n    } else if (isX(fm)) {\n      from = `>=${fM}.0.0${incPr ? '-0' : ''}`;\n    } else if (isX(fp)) {\n      from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`;\n    } else if (fpr) {\n      from = `>=${from}`;\n    } else {\n      from = `>=${from}${incPr ? '-0' : ''}`;\n    }\n    if (isX(tM)) {\n      to = '';\n    } else if (isX(tm)) {\n      to = `<${+tM + 1}.0.0-0`;\n    } else if (isX(tp)) {\n      to = `<${tM}.${+tm + 1}.0-0`;\n    } else if (tpr) {\n      to = `<=${tM}.${tm}.${tp}-${tpr}`;\n    } else if (incPr) {\n      to = `<${tM}.${tm}.${+tp + 1}-0`;\n    } else {\n      to = `<=${to}`;\n    }\n    return `${from} ${to}`.trim();\n  };\n  const testSet = (set, version, options) => {\n    for (let i = 0; i < set.length; i++) {\n      if (!set[i].test(version)) {\n        return false;\n      }\n    }\n    if (version.prerelease.length && !options.includePrerelease) {\n      // Find the set of versions that are allowed to have prereleases\n      // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n      // That should allow `1.2.3-pr.2` to pass.\n      // However, `1.2.4-alpha.notready` should NOT be allowed,\n      // even though it's within the range set by the comparators.\n      for (let i = 0; i < set.length; i++) {\n        debug(set[i].semver);\n        if (set[i].semver === Comparator.ANY) {\n          continue;\n        }\n        if (set[i].semver.prerelease.length > 0) {\n          const allowed = set[i].semver;\n          if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n            return true;\n          }\n        }\n      }\n\n      // Version has a -pre, but it's not one of the ones we like.\n      return false;\n    }\n    return true;\n  };\n});","lineCount":471,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6,"SPACE_CHARACTERS"],[4,24,3,22],[4,27,3,25],[4,33,3,31],[6,2,5,0],[7,2,6,0],[7,8,6,6,"Range"],[7,13,6,11],[7,14,6,12],[8,4,7,2,"constructor"],[8,15,7,13,"constructor"],[8,16,7,15,"range"],[8,21,7,20],[8,23,7,22,"options"],[8,30,7,29],[8,32,7,31],[9,6,8,4,"options"],[9,13,8,11],[9,16,8,14,"parseOptions"],[9,28,8,26],[9,29,8,27,"options"],[9,36,8,34],[9,37,8,35],[10,6,10,4],[10,10,10,8,"range"],[10,15,10,13],[10,27,10,25,"Range"],[10,32,10,30],[10,34,10,32],[11,8,11,6],[11,12,12,8,"range"],[11,17,12,13],[11,18,12,14,"loose"],[11,23,12,19],[11,28,12,24],[11,29,12,25],[11,30,12,26,"options"],[11,37,12,33],[11,38,12,34,"loose"],[11,43,12,39],[11,47,13,8,"range"],[11,52,13,13],[11,53,13,14,"includePrerelease"],[11,70,13,31],[11,75,13,36],[11,76,13,37],[11,77,13,38,"options"],[11,84,13,45],[11,85,13,46,"includePrerelease"],[11,102,13,63],[11,104,14,8],[12,10,15,8],[12,17,15,15,"range"],[12,22,15,20],[13,8,16,6],[13,9,16,7],[13,15,16,13],[14,10,17,8],[14,17,17,15],[14,21,17,19,"Range"],[14,26,17,24],[14,27,17,25,"range"],[14,32,17,30],[14,33,17,31,"raw"],[14,36,17,34],[14,38,17,36,"options"],[14,45,17,43],[14,46,17,44],[15,8,18,6],[16,6,19,4],[17,6,21,4],[17,10,21,8,"range"],[17,15,21,13],[17,27,21,25,"Comparator"],[17,37,21,35],[17,39,21,37],[18,8,22,6],[19,8,23,6],[19,12,23,10],[19,13,23,11,"raw"],[19,16,23,14],[19,19,23,17,"range"],[19,24,23,22],[19,25,23,23,"value"],[19,30,23,28],[20,8,24,6],[20,12,24,10],[20,13,24,11,"set"],[20,16,24,14],[20,19,24,17],[20,20,24,18],[20,21,24,19,"range"],[20,26,24,24],[20,27,24,25],[20,28,24,26],[21,8,25,6],[21,12,25,10],[21,13,25,11,"formatted"],[21,22,25,20],[21,25,25,23,"undefined"],[21,34,25,32],[22,8,26,6],[22,15,26,13],[22,19,26,17],[23,6,27,4],[24,6,29,4],[24,10,29,8],[24,11,29,9,"options"],[24,18,29,16],[24,21,29,19,"options"],[24,28,29,26],[25,6,30,4],[25,10,30,8],[25,11,30,9,"loose"],[25,16,30,14],[25,19,30,17],[25,20,30,18],[25,21,30,19,"options"],[25,28,30,26],[25,29,30,27,"loose"],[25,34,30,32],[26,6,31,4],[26,10,31,8],[26,11,31,9,"includePrerelease"],[26,28,31,26],[26,31,31,29],[26,32,31,30],[26,33,31,31,"options"],[26,40,31,38],[26,41,31,39,"includePrerelease"],[26,58,31,56],[28,6,33,4],[29,6,34,4],[30,6,35,4],[31,6,36,4],[31,10,36,8],[31,11,36,9,"raw"],[31,14,36,12],[31,17,36,15,"range"],[31,22,36,20],[31,23,36,21,"trim"],[31,27,36,25],[31,28,36,26],[31,29,36,27],[31,30,36,28,"replace"],[31,37,36,35],[31,38,36,36,"SPACE_CHARACTERS"],[31,54,36,52],[31,56,36,54],[31,59,36,57],[31,60,36,58],[33,6,38,4],[34,6,39,4],[34,10,39,8],[34,11,39,9,"set"],[34,14,39,12],[34,17,39,15],[34,21,39,19],[34,22,39,20,"raw"],[34,25,39,23],[34,26,40,7,"split"],[34,31,40,12],[34,32,40,13],[34,36,40,17],[35,6,41,6],[36,6,41,6],[36,7,42,7,"map"],[36,10,42,10],[36,11,42,11,"r"],[36,12,42,12],[36,16,42,16],[36,20,42,20],[36,21,42,21,"parseRange"],[36,31,42,31],[36,32,42,32,"r"],[36,33,42,33],[36,34,42,34,"trim"],[36,38,42,38],[36,39,42,39],[36,40,42,40],[36,41,42,41],[37,6,43,6],[38,6,44,6],[39,6,45,6],[40,6,45,6],[40,7,46,7,"filter"],[40,13,46,13],[40,14,46,14,"c"],[40,15,46,15],[40,19,46,19,"c"],[40,20,46,20],[40,21,46,21,"length"],[40,27,46,27],[40,28,46,28],[41,6,48,4],[41,10,48,8],[41,11,48,9],[41,15,48,13],[41,16,48,14,"set"],[41,19,48,17],[41,20,48,18,"length"],[41,26,48,24],[41,28,48,26],[42,8,49,6],[42,14,49,12],[42,18,49,16,"TypeError"],[42,27,49,25],[42,28,49,26],[42,53,49,51],[42,57,49,55],[42,58,49,56,"raw"],[42,61,49,59],[42,63,49,61],[42,64,49,62],[43,6,50,4],[45,6,52,4],[46,6,53,4],[46,10,53,8],[46,14,53,12],[46,15,53,13,"set"],[46,18,53,16],[46,19,53,17,"length"],[46,25,53,23],[46,28,53,26],[46,29,53,27],[46,31,53,29],[47,8,54,6],[48,8,55,6],[48,14,55,12,"first"],[48,19,55,17],[48,22,55,20],[48,26,55,24],[48,27,55,25,"set"],[48,30,55,28],[48,31,55,29],[48,32,55,30],[48,33,55,31],[49,8,56,6],[49,12,56,10],[49,13,56,11,"set"],[49,16,56,14],[49,19,56,17],[49,23,56,21],[49,24,56,22,"set"],[49,27,56,25],[49,28,56,26,"filter"],[49,34,56,32],[49,35,56,33,"c"],[49,36,56,34],[49,40,56,38],[49,41,56,39,"isNullSet"],[49,50,56,48],[49,51,56,49,"c"],[49,52,56,50],[49,53,56,51],[49,54,56,52],[49,55,56,53],[49,56,56,54],[49,57,56,55],[50,8,57,6],[50,12,57,10],[50,16,57,14],[50,17,57,15,"set"],[50,20,57,18],[50,21,57,19,"length"],[50,27,57,25],[50,32,57,30],[50,33,57,31],[50,35,57,33],[51,10,58,8],[51,14,58,12],[51,15,58,13,"set"],[51,18,58,16],[51,21,58,19],[51,22,58,20,"first"],[51,27,58,25],[51,28,58,26],[52,8,59,6],[52,9,59,7],[52,15,59,13],[52,19,59,17],[52,23,59,21],[52,24,59,22,"set"],[52,27,59,25],[52,28,59,26,"length"],[52,34,59,32],[52,37,59,35],[52,38,59,36],[52,40,59,38],[53,10,60,8],[54,10,61,8],[54,15,61,13],[54,21,61,19,"c"],[54,22,61,20],[54,26,61,24],[54,30,61,28],[54,31,61,29,"set"],[54,34,61,32],[54,36,61,34],[55,12,62,10],[55,16,62,14,"c"],[55,17,62,15],[55,18,62,16,"length"],[55,24,62,22],[55,29,62,27],[55,30,62,28],[55,34,62,32,"isAny"],[55,39,62,37],[55,40,62,38,"c"],[55,41,62,39],[55,42,62,40],[55,43,62,41],[55,44,62,42],[55,45,62,43],[55,47,62,45],[56,14,63,12],[56,18,63,16],[56,19,63,17,"set"],[56,22,63,20],[56,25,63,23],[56,26,63,24,"c"],[56,27,63,25],[56,28,63,26],[57,14,64,12],[58,12,65,10],[59,10,66,8],[60,8,67,6],[61,6,68,4],[62,6,70,4],[62,10,70,8],[62,11,70,9,"formatted"],[62,20,70,18],[62,23,70,21,"undefined"],[62,32,70,30],[63,4,71,2],[64,4,73,2],[64,8,73,6,"range"],[64,13,73,11,"range"],[64,14,73,11],[64,16,73,15],[65,6,74,4],[65,10,74,8],[65,14,74,12],[65,15,74,13,"formatted"],[65,24,74,22],[65,29,74,27,"undefined"],[65,38,74,36],[65,40,74,38],[66,8,75,6],[66,12,75,10],[66,13,75,11,"formatted"],[66,22,75,20],[66,25,75,23],[66,27,75,25],[67,8,76,6],[67,13,76,11],[67,17,76,15,"i"],[67,18,76,16],[67,21,76,19],[67,22,76,20],[67,24,76,22,"i"],[67,25,76,23],[67,28,76,26],[67,32,76,30],[67,33,76,31,"set"],[67,36,76,34],[67,37,76,35,"length"],[67,43,76,41],[67,45,76,43,"i"],[67,46,76,44],[67,48,76,46],[67,50,76,48],[68,10,77,8],[68,14,77,12,"i"],[68,15,77,13],[68,18,77,16],[68,19,77,17],[68,21,77,19],[69,12,78,10],[69,16,78,14],[69,17,78,15,"formatted"],[69,26,78,24],[69,30,78,28],[69,34,78,32],[70,10,79,8],[71,10,80,8],[71,16,80,14,"comps"],[71,21,80,19],[71,24,80,22],[71,28,80,26],[71,29,80,27,"set"],[71,32,80,30],[71,33,80,31,"i"],[71,34,80,32],[71,35,80,33],[72,10,81,8],[72,15,81,13],[72,19,81,17,"k"],[72,20,81,18],[72,23,81,21],[72,24,81,22],[72,26,81,24,"k"],[72,27,81,25],[72,30,81,28,"comps"],[72,35,81,33],[72,36,81,34,"length"],[72,42,81,40],[72,44,81,42,"k"],[72,45,81,43],[72,47,81,45],[72,49,81,47],[73,12,82,10],[73,16,82,14,"k"],[73,17,82,15],[73,20,82,18],[73,21,82,19],[73,23,82,21],[74,14,83,12],[74,18,83,16],[74,19,83,17,"formatted"],[74,28,83,26],[74,32,83,30],[74,35,83,33],[75,12,84,10],[76,12,85,10],[76,16,85,14],[76,17,85,15,"formatted"],[76,26,85,24],[76,30,85,28,"comps"],[76,35,85,33],[76,36,85,34,"k"],[76,37,85,35],[76,38,85,36],[76,39,85,37,"toString"],[76,47,85,45],[76,48,85,46],[76,49,85,47],[76,50,85,48,"trim"],[76,54,85,52],[76,55,85,53],[76,56,85,54],[77,10,86,8],[78,8,87,6],[79,6,88,4],[80,6,89,4],[80,13,89,11],[80,17,89,15],[80,18,89,16,"formatted"],[80,27,89,25],[81,4,90,2],[82,4,92,2,"format"],[82,10,92,8,"format"],[82,11,92,8],[82,13,92,12],[83,6,93,4],[83,13,93,11],[83,17,93,15],[83,18,93,16,"range"],[83,23,93,21],[84,4,94,2],[85,4,96,2,"toString"],[85,12,96,10,"toString"],[85,13,96,10],[85,15,96,14],[86,6,97,4],[86,13,97,11],[86,17,97,15],[86,18,97,16,"range"],[86,23,97,21],[87,4,98,2],[88,4,100,2,"parseRange"],[88,14,100,12,"parseRange"],[88,15,100,14,"range"],[88,20,100,19],[88,22,100,21],[89,6,101,4],[90,6,102,4],[91,6,103,4],[91,12,103,10,"memoOpts"],[91,20,103,18],[91,23,104,6],[91,24,104,7],[91,28,104,11],[91,29,104,12,"options"],[91,36,104,19],[91,37,104,20,"includePrerelease"],[91,54,104,37],[91,58,104,41,"FLAG_INCLUDE_PRERELEASE"],[91,81,104,64],[91,86,105,7],[91,90,105,11],[91,91,105,12,"options"],[91,98,105,19],[91,99,105,20,"loose"],[91,104,105,25],[91,108,105,29,"FLAG_LOOSE"],[91,118,105,39],[91,119,105,40],[92,6,106,4],[92,12,106,10,"memoKey"],[92,19,106,17],[92,22,106,20,"memoOpts"],[92,30,106,28],[92,33,106,31],[92,36,106,34],[92,39,106,37,"range"],[92,44,106,42],[93,6,107,4],[93,12,107,10,"cached"],[93,18,107,16],[93,21,107,19,"cache"],[93,26,107,24],[93,27,107,25,"get"],[93,30,107,28],[93,31,107,29,"memoKey"],[93,38,107,36],[93,39,107,37],[94,6,108,4],[94,10,108,8,"cached"],[94,16,108,14],[94,18,108,16],[95,8,109,6],[95,15,109,13,"cached"],[95,21,109,19],[96,6,110,4],[97,6,112,4],[97,12,112,10,"loose"],[97,17,112,15],[97,20,112,18],[97,24,112,22],[97,25,112,23,"options"],[97,32,112,30],[97,33,112,31,"loose"],[97,38,112,36],[98,6,113,4],[99,6,114,4],[99,12,114,10,"hr"],[99,14,114,12],[99,17,114,15,"loose"],[99,22,114,20],[99,25,114,23,"re"],[99,27,114,25],[99,28,114,26,"t"],[99,29,114,27],[99,30,114,28,"HYPHENRANGELOOSE"],[99,46,114,44],[99,47,114,45],[99,50,114,48,"re"],[99,52,114,50],[99,53,114,51,"t"],[99,54,114,52],[99,55,114,53,"HYPHENRANGE"],[99,66,114,64],[99,67,114,65],[100,6,115,4,"range"],[100,11,115,9],[100,14,115,12,"range"],[100,19,115,17],[100,20,115,18,"replace"],[100,27,115,25],[100,28,115,26,"hr"],[100,30,115,28],[100,32,115,30,"hyphenReplace"],[100,45,115,43],[100,46,115,44],[100,50,115,48],[100,51,115,49,"options"],[100,58,115,56],[100,59,115,57,"includePrerelease"],[100,76,115,74],[100,77,115,75],[100,78,115,76],[101,6,116,4,"debug"],[101,11,116,9],[101,12,116,10],[101,28,116,26],[101,30,116,28,"range"],[101,35,116,33],[101,36,116,34],[103,6,118,4],[104,6,119,4,"range"],[104,11,119,9],[104,14,119,12,"range"],[104,19,119,17],[104,20,119,18,"replace"],[104,27,119,25],[104,28,119,26,"re"],[104,30,119,28],[104,31,119,29,"t"],[104,32,119,30],[104,33,119,31,"COMPARATORTRIM"],[104,47,119,45],[104,48,119,46],[104,50,119,48,"comparatorTrimReplace"],[104,71,119,69],[104,72,119,70],[105,6,120,4,"debug"],[105,11,120,9],[105,12,120,10],[105,29,120,27],[105,31,120,29,"range"],[105,36,120,34],[105,37,120,35],[107,6,122,4],[108,6,123,4,"range"],[108,11,123,9],[108,14,123,12,"range"],[108,19,123,17],[108,20,123,18,"replace"],[108,27,123,25],[108,28,123,26,"re"],[108,30,123,28],[108,31,123,29,"t"],[108,32,123,30],[108,33,123,31,"TILDETRIM"],[108,42,123,40],[108,43,123,41],[108,45,123,43,"tildeTrimReplace"],[108,61,123,59],[108,62,123,60],[109,6,124,4,"debug"],[109,11,124,9],[109,12,124,10],[109,24,124,22],[109,26,124,24,"range"],[109,31,124,29],[109,32,124,30],[111,6,126,4],[112,6,127,4,"range"],[112,11,127,9],[112,14,127,12,"range"],[112,19,127,17],[112,20,127,18,"replace"],[112,27,127,25],[112,28,127,26,"re"],[112,30,127,28],[112,31,127,29,"t"],[112,32,127,30],[112,33,127,31,"CARETTRIM"],[112,42,127,40],[112,43,127,41],[112,45,127,43,"caretTrimReplace"],[112,61,127,59],[112,62,127,60],[113,6,128,4,"debug"],[113,11,128,9],[113,12,128,10],[113,24,128,22],[113,26,128,24,"range"],[113,31,128,29],[113,32,128,30],[115,6,130,4],[116,6,131,4],[118,6,133,4],[118,10,133,8,"rangeList"],[118,19,133,17],[118,22,133,20,"range"],[118,27,133,25],[118,28,134,7,"split"],[118,33,134,12],[118,34,134,13],[118,37,134,16],[118,38,134,17],[118,39,135,7,"map"],[118,42,135,10],[118,43,135,11,"comp"],[118,47,135,15],[118,51,135,19,"parseComparator"],[118,66,135,34],[118,67,135,35,"comp"],[118,71,135,39],[118,73,135,41],[118,77,135,45],[118,78,135,46,"options"],[118,85,135,53],[118,86,135,54],[118,87,135,55],[118,88,136,7,"join"],[118,92,136,11],[118,93,136,12],[118,96,136,15],[118,97,136,16],[118,98,137,7,"split"],[118,103,137,12],[118,104,137,13],[118,109,137,18],[119,6,138,6],[120,6,138,6],[120,7,139,7,"map"],[120,10,139,10],[120,11,139,11,"comp"],[120,15,139,15],[120,19,139,19,"replaceGTE0"],[120,30,139,30],[120,31,139,31,"comp"],[120,35,139,35],[120,37,139,37],[120,41,139,41],[120,42,139,42,"options"],[120,49,139,49],[120,50,139,50],[120,51,139,51],[121,6,141,4],[121,10,141,8,"loose"],[121,15,141,13],[121,17,141,15],[122,8,142,6],[123,8,143,6,"rangeList"],[123,17,143,15],[123,20,143,18,"rangeList"],[123,29,143,27],[123,30,143,28,"filter"],[123,36,143,34],[123,37,143,35,"comp"],[123,41,143,39],[123,45,143,43],[124,10,144,8,"debug"],[124,15,144,13],[124,16,144,14],[124,38,144,36],[124,40,144,38,"comp"],[124,44,144,42],[124,46,144,44],[124,50,144,48],[124,51,144,49,"options"],[124,58,144,56],[124,59,144,57],[125,10,145,8],[125,17,145,15],[125,18,145,16],[125,19,145,17,"comp"],[125,23,145,21],[125,24,145,22,"match"],[125,29,145,27],[125,30,145,28,"re"],[125,32,145,30],[125,33,145,31,"t"],[125,34,145,32],[125,35,145,33,"COMPARATORLOOSE"],[125,50,145,48],[125,51,145,49],[125,52,145,50],[126,8,146,6],[126,9,146,7],[126,10,146,8],[127,6,147,4],[128,6,148,4,"debug"],[128,11,148,9],[128,12,148,10],[128,24,148,22],[128,26,148,24,"rangeList"],[128,35,148,33],[128,36,148,34],[130,6,150,4],[131,6,151,4],[132,6,152,4],[133,6,153,4],[133,12,153,10,"rangeMap"],[133,20,153,18],[133,23,153,21],[133,27,153,25,"Map"],[133,30,153,28],[133,31,153,29],[133,32,153,30],[134,6,154,4],[134,12,154,10,"comparators"],[134,23,154,21],[134,26,154,24,"rangeList"],[134,35,154,33],[134,36,154,34,"map"],[134,39,154,37],[134,40,154,38,"comp"],[134,44,154,42],[134,48,154,46],[134,52,154,50,"Comparator"],[134,62,154,60],[134,63,154,61,"comp"],[134,67,154,65],[134,69,154,67],[134,73,154,71],[134,74,154,72,"options"],[134,81,154,79],[134,82,154,80],[134,83,154,81],[135,6,155,4],[135,11,155,9],[135,17,155,15,"comp"],[135,21,155,19],[135,25,155,23,"comparators"],[135,36,155,34],[135,38,155,36],[136,8,156,6],[136,12,156,10,"isNullSet"],[136,21,156,19],[136,22,156,20,"comp"],[136,26,156,24],[136,27,156,25],[136,29,156,27],[137,10,157,8],[137,17,157,15],[137,18,157,16,"comp"],[137,22,157,20],[137,23,157,21],[138,8,158,6],[139,8,159,6,"rangeMap"],[139,16,159,14],[139,17,159,15,"set"],[139,20,159,18],[139,21,159,19,"comp"],[139,25,159,23],[139,26,159,24,"value"],[139,31,159,29],[139,33,159,31,"comp"],[139,37,159,35],[139,38,159,36],[140,6,160,4],[141,6,161,4],[141,10,161,8,"rangeMap"],[141,18,161,16],[141,19,161,17,"size"],[141,23,161,21],[141,26,161,24],[141,27,161,25],[141,31,161,29,"rangeMap"],[141,39,161,37],[141,40,161,38,"has"],[141,43,161,41],[141,44,161,42],[141,46,161,44],[141,47,161,45],[141,49,161,47],[142,8,162,6,"rangeMap"],[142,16,162,14],[142,17,162,15,"delete"],[142,23,162,21],[142,24,162,22],[142,26,162,24],[142,27,162,25],[143,6,163,4],[144,6,165,4],[144,12,165,10,"result"],[144,18,165,16],[144,21,165,19],[144,22,165,20],[144,25,165,23,"rangeMap"],[144,33,165,31],[144,34,165,32,"values"],[144,40,165,38],[144,41,165,39],[144,42,165,40],[144,43,165,41],[145,6,166,4,"cache"],[145,11,166,9],[145,12,166,10,"set"],[145,15,166,13],[145,16,166,14,"memoKey"],[145,23,166,21],[145,25,166,23,"result"],[145,31,166,29],[145,32,166,30],[146,6,167,4],[146,13,167,11,"result"],[146,19,167,17],[147,4,168,2],[148,4,170,2,"intersects"],[148,14,170,12,"intersects"],[148,15,170,14,"range"],[148,20,170,19],[148,22,170,21,"options"],[148,29,170,28],[148,31,170,30],[149,6,171,4],[149,10,171,8],[149,12,171,10,"range"],[149,17,171,15],[149,29,171,27,"Range"],[149,34,171,32],[149,35,171,33],[149,37,171,35],[150,8,172,6],[150,14,172,12],[150,18,172,16,"TypeError"],[150,27,172,25],[150,28,172,26],[150,49,172,47],[150,50,172,48],[151,6,173,4],[152,6,175,4],[152,13,175,11],[152,17,175,15],[152,18,175,16,"set"],[152,21,175,19],[152,22,175,20,"some"],[152,26,175,24],[152,27,175,26,"thisComparators"],[152,42,175,41],[152,46,175,46],[153,8,176,6],[153,15,177,8,"isSatisfiable"],[153,28,177,21],[153,29,177,22,"thisComparators"],[153,44,177,37],[153,46,177,39,"options"],[153,53,177,46],[153,54,177,47],[153,58,178,8,"range"],[153,63,178,13],[153,64,178,14,"set"],[153,67,178,17],[153,68,178,18,"some"],[153,72,178,22],[153,73,178,24,"rangeComparators"],[153,89,178,40],[153,93,178,45],[154,10,179,10],[154,17,180,12,"isSatisfiable"],[154,30,180,25],[154,31,180,26,"rangeComparators"],[154,47,180,42],[154,49,180,44,"options"],[154,56,180,51],[154,57,180,52],[154,61,181,12,"thisComparators"],[154,76,181,27],[154,77,181,28,"every"],[154,82,181,33],[154,83,181,35,"thisComparator"],[154,97,181,49],[154,101,181,54],[155,12,182,14],[155,19,182,21,"rangeComparators"],[155,35,182,37],[155,36,182,38,"every"],[155,41,182,43],[155,42,182,45,"rangeComparator"],[155,57,182,60],[155,61,182,65],[156,14,183,16],[156,21,183,23,"thisComparator"],[156,35,183,37],[156,36,183,38,"intersects"],[156,46,183,48],[156,47,183,49,"rangeComparator"],[156,62,183,64],[156,64,183,66,"options"],[156,71,183,73],[156,72,183,74],[157,12,184,14],[157,13,184,15],[157,14,184,16],[158,10,185,12],[158,11,185,13],[158,12,185,14],[159,8,187,8],[159,9,187,9],[159,10,187,10],[160,6,189,4],[160,7,189,5],[160,8,189,6],[161,4,190,2],[163,4,192,2],[164,4,193,2,"test"],[164,8,193,6,"test"],[164,9,193,8,"version"],[164,16,193,15],[164,18,193,17],[165,6,194,4],[165,10,194,8],[165,11,194,9,"version"],[165,18,194,16],[165,20,194,18],[166,8,195,6],[166,15,195,13],[166,20,195,18],[167,6,196,4],[168,6,198,4],[168,10,198,8],[168,17,198,15,"version"],[168,24,198,22],[168,29,198,27],[168,37,198,35],[168,39,198,37],[169,8,199,6],[169,12,199,10],[170,10,200,8,"version"],[170,17,200,15],[170,20,200,18],[170,24,200,22,"SemVer"],[170,30,200,28],[170,31,200,29,"version"],[170,38,200,36],[170,40,200,38],[170,44,200,42],[170,45,200,43,"options"],[170,52,200,50],[170,53,200,51],[171,8,201,6],[171,9,201,7],[171,10,201,8],[171,17,201,15,"er"],[171,19,201,17],[171,21,201,19],[172,10,202,8],[172,17,202,15],[172,22,202,20],[173,8,203,6],[174,6,204,4],[175,6,206,4],[175,11,206,9],[175,15,206,13,"i"],[175,16,206,14],[175,19,206,17],[175,20,206,18],[175,22,206,20,"i"],[175,23,206,21],[175,26,206,24],[175,30,206,28],[175,31,206,29,"set"],[175,34,206,32],[175,35,206,33,"length"],[175,41,206,39],[175,43,206,41,"i"],[175,44,206,42],[175,46,206,44],[175,48,206,46],[176,8,207,6],[176,12,207,10,"testSet"],[176,19,207,17],[176,20,207,18],[176,24,207,22],[176,25,207,23,"set"],[176,28,207,26],[176,29,207,27,"i"],[176,30,207,28],[176,31,207,29],[176,33,207,31,"version"],[176,40,207,38],[176,42,207,40],[176,46,207,44],[176,47,207,45,"options"],[176,54,207,52],[176,55,207,53],[176,57,207,55],[177,10,208,8],[177,17,208,15],[177,21,208,19],[178,8,209,6],[179,6,210,4],[180,6,211,4],[180,13,211,11],[180,18,211,16],[181,4,212,2],[182,2,213,0],[183,2,215,0,"module"],[183,8,215,6],[183,9,215,7,"exports"],[183,16,215,14],[183,19,215,17,"Range"],[183,24,215,22],[184,2,217,0],[184,8,217,6,"LRU"],[184,11,217,9],[184,14,217,12,"require"],[184,21,217,19],[184,22,217,19,"_dependencyMap"],[184,36,217,19],[184,63,217,42],[184,64,217,43],[185,2,218,0],[185,8,218,6,"cache"],[185,13,218,11],[185,16,218,14],[185,20,218,18,"LRU"],[185,23,218,21],[185,24,218,22],[185,25,218,23],[186,2,220,0],[186,8,220,6,"parseOptions"],[186,20,220,18],[186,23,220,21,"require"],[186,30,220,28],[186,31,220,28,"_dependencyMap"],[186,45,220,28],[186,77,220,56],[186,78,220,57],[187,2,221,0],[187,8,221,6,"Comparator"],[187,18,221,16],[187,21,221,19,"require"],[187,28,221,26],[187,29,221,26,"_dependencyMap"],[187,43,221,26],[187,62,221,41],[187,63,221,42],[188,2,222,0],[188,8,222,6,"debug"],[188,13,222,11],[188,16,222,14,"require"],[188,23,222,21],[188,24,222,21,"_dependencyMap"],[188,38,222,21],[188,62,222,41],[188,63,222,42],[189,2,223,0],[189,8,223,6,"SemVer"],[189,14,223,12],[189,17,223,15,"require"],[189,24,223,22],[189,25,223,22,"_dependencyMap"],[189,39,223,22],[189,54,223,33],[189,55,223,34],[190,2,224,0],[190,8,224,6],[191,4,225,2,"safeRe"],[191,10,225,8],[191,12,225,10,"re"],[191,14,225,12],[192,4,226,2,"t"],[192,5,226,3],[193,4,227,2,"comparatorTrimReplace"],[193,25,227,23],[194,4,228,2,"tildeTrimReplace"],[194,20,228,18],[195,4,229,2,"caretTrimReplace"],[196,2,230,0],[196,3,230,1],[196,6,230,4,"require"],[196,13,230,11],[196,14,230,11,"_dependencyMap"],[196,28,230,11],[196,49,230,28],[196,50,230,29],[197,2,231,0],[197,8,231,6],[198,4,231,8,"FLAG_INCLUDE_PRERELEASE"],[198,27,231,31],[199,4,231,33,"FLAG_LOOSE"],[200,2,231,44],[200,3,231,45],[200,6,231,48,"require"],[200,13,231,55],[200,14,231,55,"_dependencyMap"],[200,28,231,55],[200,56,231,79],[200,57,231,80],[201,2,233,0],[201,8,233,6,"isNullSet"],[201,17,233,15],[201,20,233,18,"c"],[201,21,233,19],[201,25,233,23,"c"],[201,26,233,24],[201,27,233,25,"value"],[201,32,233,30],[201,37,233,35],[201,47,233,45],[202,2,234,0],[202,8,234,6,"isAny"],[202,13,234,11],[202,16,234,14,"c"],[202,17,234,15],[202,21,234,19,"c"],[202,22,234,20],[202,23,234,21,"value"],[202,28,234,26],[202,33,234,31],[202,35,234,33],[204,2,236,0],[205,2,237,0],[206,2,238,0],[206,8,238,6,"isSatisfiable"],[206,21,238,19],[206,24,238,22,"isSatisfiable"],[206,25,238,23,"comparators"],[206,36,238,34],[206,38,238,36,"options"],[206,45,238,43],[206,50,238,48],[207,4,239,2],[207,8,239,6,"result"],[207,14,239,12],[207,17,239,15],[207,21,239,19],[208,4,240,2],[208,10,240,8,"remainingComparators"],[208,30,240,28],[208,33,240,31,"comparators"],[208,44,240,42],[208,45,240,43,"slice"],[208,50,240,48],[208,51,240,49],[208,52,240,50],[209,4,241,2],[209,8,241,6,"testComparator"],[209,22,241,20],[209,25,241,23,"remainingComparators"],[209,45,241,43],[209,46,241,44,"pop"],[209,49,241,47],[209,50,241,48],[209,51,241,49],[210,4,243,2],[210,11,243,9,"result"],[210,17,243,15],[210,21,243,19,"remainingComparators"],[210,41,243,39],[210,42,243,40,"length"],[210,48,243,46],[210,50,243,48],[211,6,244,4,"result"],[211,12,244,10],[211,15,244,13,"remainingComparators"],[211,35,244,33],[211,36,244,34,"every"],[211,41,244,39],[211,42,244,41,"otherComparator"],[211,57,244,56],[211,61,244,61],[212,8,245,6],[212,15,245,13,"testComparator"],[212,29,245,27],[212,30,245,28,"intersects"],[212,40,245,38],[212,41,245,39,"otherComparator"],[212,56,245,54],[212,58,245,56,"options"],[212,65,245,63],[212,66,245,64],[213,6,246,4],[213,7,246,5],[213,8,246,6],[214,6,248,4,"testComparator"],[214,20,248,18],[214,23,248,21,"remainingComparators"],[214,43,248,41],[214,44,248,42,"pop"],[214,47,248,45],[214,48,248,46],[214,49,248,47],[215,4,249,2],[216,4,251,2],[216,11,251,9,"result"],[216,17,251,15],[217,2,252,0],[217,3,252,1],[219,2,254,0],[220,2,255,0],[221,2,256,0],[222,2,257,0],[222,8,257,6,"parseComparator"],[222,23,257,21],[222,26,257,24,"parseComparator"],[222,27,257,25,"comp"],[222,31,257,29],[222,33,257,31,"options"],[222,40,257,38],[222,45,257,43],[223,4,258,2,"debug"],[223,9,258,7],[223,10,258,8],[223,16,258,14],[223,18,258,16,"comp"],[223,22,258,20],[223,24,258,22,"options"],[223,31,258,29],[223,32,258,30],[224,4,259,2,"comp"],[224,8,259,6],[224,11,259,9,"replaceCarets"],[224,24,259,22],[224,25,259,23,"comp"],[224,29,259,27],[224,31,259,29,"options"],[224,38,259,36],[224,39,259,37],[225,4,260,2,"debug"],[225,9,260,7],[225,10,260,8],[225,17,260,15],[225,19,260,17,"comp"],[225,23,260,21],[225,24,260,22],[226,4,261,2,"comp"],[226,8,261,6],[226,11,261,9,"replaceTildes"],[226,24,261,22],[226,25,261,23,"comp"],[226,29,261,27],[226,31,261,29,"options"],[226,38,261,36],[226,39,261,37],[227,4,262,2,"debug"],[227,9,262,7],[227,10,262,8],[227,18,262,16],[227,20,262,18,"comp"],[227,24,262,22],[227,25,262,23],[228,4,263,2,"comp"],[228,8,263,6],[228,11,263,9,"replaceXRanges"],[228,25,263,23],[228,26,263,24,"comp"],[228,30,263,28],[228,32,263,30,"options"],[228,39,263,37],[228,40,263,38],[229,4,264,2,"debug"],[229,9,264,7],[229,10,264,8],[229,18,264,16],[229,20,264,18,"comp"],[229,24,264,22],[229,25,264,23],[230,4,265,2,"comp"],[230,8,265,6],[230,11,265,9,"replaceStars"],[230,23,265,21],[230,24,265,22,"comp"],[230,28,265,26],[230,30,265,28,"options"],[230,37,265,35],[230,38,265,36],[231,4,266,2,"debug"],[231,9,266,7],[231,10,266,8],[231,17,266,15],[231,19,266,17,"comp"],[231,23,266,21],[231,24,266,22],[232,4,267,2],[232,11,267,9,"comp"],[232,15,267,13],[233,2,268,0],[233,3,268,1],[234,2,270,0],[234,8,270,6,"isX"],[234,11,270,9],[234,14,270,12,"id"],[234,16,270,14],[234,20,270,18],[234,21,270,19,"id"],[234,23,270,21],[234,27,270,25,"id"],[234,29,270,27],[234,30,270,28,"toLowerCase"],[234,41,270,39],[234,42,270,40],[234,43,270,41],[234,48,270,46],[234,51,270,49],[234,55,270,53,"id"],[234,57,270,55],[234,62,270,60],[234,65,270,63],[236,2,272,0],[237,2,273,0],[238,2,274,0],[239,2,275,0],[240,2,276,0],[241,2,277,0],[242,2,278,0],[243,2,279,0],[243,8,279,6,"replaceTildes"],[243,21,279,19],[243,24,279,22,"replaceTildes"],[243,25,279,23,"comp"],[243,29,279,27],[243,31,279,29,"options"],[243,38,279,36],[243,43,279,41],[244,4,280,2],[244,11,280,9,"comp"],[244,15,280,13],[244,16,281,5,"trim"],[244,20,281,9],[244,21,281,10],[244,22,281,11],[244,23,282,5,"split"],[244,28,282,10],[244,29,282,11],[244,34,282,16],[244,35,282,17],[244,36,283,5,"map"],[244,39,283,8],[244,40,283,10,"c"],[244,41,283,11],[244,45,283,16,"replaceTilde"],[244,57,283,28],[244,58,283,29,"c"],[244,59,283,30],[244,61,283,32,"options"],[244,68,283,39],[244,69,283,40],[244,70,283,41],[244,71,284,5,"join"],[244,75,284,9],[244,76,284,10],[244,79,284,13],[244,80,284,14],[245,2,285,0],[245,3,285,1],[246,2,287,0],[246,8,287,6,"replaceTilde"],[246,20,287,18],[246,23,287,21,"replaceTilde"],[246,24,287,22,"comp"],[246,28,287,26],[246,30,287,28,"options"],[246,37,287,35],[246,42,287,40],[247,4,288,2],[247,10,288,8,"r"],[247,11,288,9],[247,14,288,12,"options"],[247,21,288,19],[247,22,288,20,"loose"],[247,27,288,25],[247,30,288,28,"re"],[247,32,288,30],[247,33,288,31,"t"],[247,34,288,32],[247,35,288,33,"TILDELOOSE"],[247,45,288,43],[247,46,288,44],[247,49,288,47,"re"],[247,51,288,49],[247,52,288,50,"t"],[247,53,288,51],[247,54,288,52,"TILDE"],[247,59,288,57],[247,60,288,58],[248,4,289,2],[248,11,289,9,"comp"],[248,15,289,13],[248,16,289,14,"replace"],[248,23,289,21],[248,24,289,22,"r"],[248,25,289,23],[248,27,289,25],[248,28,289,26,"_"],[248,29,289,27],[248,31,289,29,"M"],[248,32,289,30],[248,34,289,32,"m"],[248,35,289,33],[248,37,289,35,"p"],[248,38,289,36],[248,40,289,38,"pr"],[248,42,289,40],[248,47,289,45],[249,6,290,4,"debug"],[249,11,290,9],[249,12,290,10],[249,19,290,17],[249,21,290,19,"comp"],[249,25,290,23],[249,27,290,25,"_"],[249,28,290,26],[249,30,290,28,"M"],[249,31,290,29],[249,33,290,31,"m"],[249,34,290,32],[249,36,290,34,"p"],[249,37,290,35],[249,39,290,37,"pr"],[249,41,290,39],[249,42,290,40],[250,6,291,4],[250,10,291,8,"ret"],[250,13,291,11],[251,6,293,4],[251,10,293,8,"isX"],[251,13,293,11],[251,14,293,12,"M"],[251,15,293,13],[251,16,293,14],[251,18,293,16],[252,8,294,6,"ret"],[252,11,294,9],[252,14,294,12],[252,16,294,14],[253,6,295,4],[253,7,295,5],[253,13,295,11],[253,17,295,15,"isX"],[253,20,295,18],[253,21,295,19,"m"],[253,22,295,20],[253,23,295,21],[253,25,295,23],[254,8,296,6,"ret"],[254,11,296,9],[254,14,296,12],[254,19,296,17,"M"],[254,20,296,18],[254,29,296,27],[254,30,296,28,"M"],[254,31,296,29],[254,34,296,32],[254,35,296,33],[254,43,296,41],[255,6,297,4],[255,7,297,5],[255,13,297,11],[255,17,297,15,"isX"],[255,20,297,18],[255,21,297,19,"p"],[255,22,297,20],[255,23,297,21],[255,25,297,23],[256,8,298,6],[257,8,299,6,"ret"],[257,11,299,9],[257,14,299,12],[257,19,299,17,"M"],[257,20,299,18],[257,24,299,22,"m"],[257,25,299,23],[257,32,299,30,"M"],[257,33,299,31],[257,37,299,35],[257,38,299,36,"m"],[257,39,299,37],[257,42,299,40],[257,43,299,41],[257,49,299,47],[258,6,300,4],[258,7,300,5],[258,13,300,11],[258,17,300,15,"pr"],[258,19,300,17],[258,21,300,19],[259,8,301,6,"debug"],[259,13,301,11],[259,14,301,12],[259,31,301,29],[259,33,301,31,"pr"],[259,35,301,33],[259,36,301,34],[260,8,302,6,"ret"],[260,11,302,9],[260,14,302,12],[260,19,302,17,"M"],[260,20,302,18],[260,24,302,22,"m"],[260,25,302,23],[260,29,302,27,"p"],[260,30,302,28],[260,34,302,32,"pr"],[260,36,302,34],[260,41,303,11,"M"],[260,42,303,12],[260,46,303,16],[260,47,303,17,"m"],[260,48,303,18],[260,51,303,21],[260,52,303,22],[260,58,303,28],[261,6,304,4],[261,7,304,5],[261,13,304,11],[262,8,305,6],[263,8,306,6,"ret"],[263,11,306,9],[263,14,306,12],[263,19,306,17,"M"],[263,20,306,18],[263,24,306,22,"m"],[263,25,306,23],[263,29,306,27,"p"],[263,30,306,28],[263,35,307,11,"M"],[263,36,307,12],[263,40,307,16],[263,41,307,17,"m"],[263,42,307,18],[263,45,307,21],[263,46,307,22],[263,52,307,28],[264,6,308,4],[265,6,310,4,"debug"],[265,11,310,9],[265,12,310,10],[265,26,310,24],[265,28,310,26,"ret"],[265,31,310,29],[265,32,310,30],[266,6,311,4],[266,13,311,11,"ret"],[266,16,311,14],[267,4,312,2],[267,5,312,3],[267,6,312,4],[268,2,313,0],[268,3,313,1],[270,2,315,0],[271,2,316,0],[272,2,317,0],[273,2,318,0],[274,2,319,0],[275,2,320,0],[276,2,321,0],[277,2,322,0],[278,2,323,0],[278,8,323,6,"replaceCarets"],[278,21,323,19],[278,24,323,22,"replaceCarets"],[278,25,323,23,"comp"],[278,29,323,27],[278,31,323,29,"options"],[278,38,323,36],[278,43,323,41],[279,4,324,2],[279,11,324,9,"comp"],[279,15,324,13],[279,16,325,5,"trim"],[279,20,325,9],[279,21,325,10],[279,22,325,11],[279,23,326,5,"split"],[279,28,326,10],[279,29,326,11],[279,34,326,16],[279,35,326,17],[279,36,327,5,"map"],[279,39,327,8],[279,40,327,10,"c"],[279,41,327,11],[279,45,327,16,"replaceCaret"],[279,57,327,28],[279,58,327,29,"c"],[279,59,327,30],[279,61,327,32,"options"],[279,68,327,39],[279,69,327,40],[279,70,327,41],[279,71,328,5,"join"],[279,75,328,9],[279,76,328,10],[279,79,328,13],[279,80,328,14],[280,2,329,0],[280,3,329,1],[281,2,331,0],[281,8,331,6,"replaceCaret"],[281,20,331,18],[281,23,331,21,"replaceCaret"],[281,24,331,22,"comp"],[281,28,331,26],[281,30,331,28,"options"],[281,37,331,35],[281,42,331,40],[282,4,332,2,"debug"],[282,9,332,7],[282,10,332,8],[282,17,332,15],[282,19,332,17,"comp"],[282,23,332,21],[282,25,332,23,"options"],[282,32,332,30],[282,33,332,31],[283,4,333,2],[283,10,333,8,"r"],[283,11,333,9],[283,14,333,12,"options"],[283,21,333,19],[283,22,333,20,"loose"],[283,27,333,25],[283,30,333,28,"re"],[283,32,333,30],[283,33,333,31,"t"],[283,34,333,32],[283,35,333,33,"CARETLOOSE"],[283,45,333,43],[283,46,333,44],[283,49,333,47,"re"],[283,51,333,49],[283,52,333,50,"t"],[283,53,333,51],[283,54,333,52,"CARET"],[283,59,333,57],[283,60,333,58],[284,4,334,2],[284,10,334,8,"z"],[284,11,334,9],[284,14,334,12,"options"],[284,21,334,19],[284,22,334,20,"includePrerelease"],[284,39,334,37],[284,42,334,40],[284,46,334,44],[284,49,334,47],[284,51,334,49],[285,4,335,2],[285,11,335,9,"comp"],[285,15,335,13],[285,16,335,14,"replace"],[285,23,335,21],[285,24,335,22,"r"],[285,25,335,23],[285,27,335,25],[285,28,335,26,"_"],[285,29,335,27],[285,31,335,29,"M"],[285,32,335,30],[285,34,335,32,"m"],[285,35,335,33],[285,37,335,35,"p"],[285,38,335,36],[285,40,335,38,"pr"],[285,42,335,40],[285,47,335,45],[286,6,336,4,"debug"],[286,11,336,9],[286,12,336,10],[286,19,336,17],[286,21,336,19,"comp"],[286,25,336,23],[286,27,336,25,"_"],[286,28,336,26],[286,30,336,28,"M"],[286,31,336,29],[286,33,336,31,"m"],[286,34,336,32],[286,36,336,34,"p"],[286,37,336,35],[286,39,336,37,"pr"],[286,41,336,39],[286,42,336,40],[287,6,337,4],[287,10,337,8,"ret"],[287,13,337,11],[288,6,339,4],[288,10,339,8,"isX"],[288,13,339,11],[288,14,339,12,"M"],[288,15,339,13],[288,16,339,14],[288,18,339,16],[289,8,340,6,"ret"],[289,11,340,9],[289,14,340,12],[289,16,340,14],[290,6,341,4],[290,7,341,5],[290,13,341,11],[290,17,341,15,"isX"],[290,20,341,18],[290,21,341,19,"m"],[290,22,341,20],[290,23,341,21],[290,25,341,23],[291,8,342,6,"ret"],[291,11,342,9],[291,14,342,12],[291,19,342,17,"M"],[291,20,342,18],[291,27,342,25,"z"],[291,28,342,26],[291,33,342,31],[291,34,342,32,"M"],[291,35,342,33],[291,38,342,36],[291,39,342,37],[291,47,342,45],[292,6,343,4],[292,7,343,5],[292,13,343,11],[292,17,343,15,"isX"],[292,20,343,18],[292,21,343,19,"p"],[292,22,343,20],[292,23,343,21],[292,25,343,23],[293,8,344,6],[293,12,344,10,"M"],[293,13,344,11],[293,18,344,16],[293,21,344,19],[293,23,344,21],[294,10,345,8,"ret"],[294,13,345,11],[294,16,345,14],[294,21,345,19,"M"],[294,22,345,20],[294,26,345,24,"m"],[294,27,345,25],[294,32,345,30,"z"],[294,33,345,31],[294,38,345,36,"M"],[294,39,345,37],[294,43,345,41],[294,44,345,42,"m"],[294,45,345,43],[294,48,345,46],[294,49,345,47],[294,55,345,53],[295,8,346,6],[295,9,346,7],[295,15,346,13],[296,10,347,8,"ret"],[296,13,347,11],[296,16,347,14],[296,21,347,19,"M"],[296,22,347,20],[296,26,347,24,"m"],[296,27,347,25],[296,32,347,30,"z"],[296,33,347,31],[296,38,347,36],[296,39,347,37,"M"],[296,40,347,38],[296,43,347,41],[296,44,347,42],[296,52,347,50],[297,8,348,6],[298,6,349,4],[298,7,349,5],[298,13,349,11],[298,17,349,15,"pr"],[298,19,349,17],[298,21,349,19],[299,8,350,6,"debug"],[299,13,350,11],[299,14,350,12],[299,31,350,29],[299,33,350,31,"pr"],[299,35,350,33],[299,36,350,34],[300,8,351,6],[300,12,351,10,"M"],[300,13,351,11],[300,18,351,16],[300,21,351,19],[300,23,351,21],[301,10,352,8],[301,14,352,12,"m"],[301,15,352,13],[301,20,352,18],[301,23,352,21],[301,25,352,23],[302,12,353,10,"ret"],[302,15,353,13],[302,18,353,16],[302,23,353,21,"M"],[302,24,353,22],[302,28,353,26,"m"],[302,29,353,27],[302,33,353,31,"p"],[302,34,353,32],[302,38,353,36,"pr"],[302,40,353,38],[302,45,354,15,"M"],[302,46,354,16],[302,50,354,20,"m"],[302,51,354,21],[302,55,354,25],[302,56,354,26,"p"],[302,57,354,27],[302,60,354,30],[302,61,354,31],[302,65,354,35],[303,10,355,8],[303,11,355,9],[303,17,355,15],[304,12,356,10,"ret"],[304,15,356,13],[304,18,356,16],[304,23,356,21,"M"],[304,24,356,22],[304,28,356,26,"m"],[304,29,356,27],[304,33,356,31,"p"],[304,34,356,32],[304,38,356,36,"pr"],[304,40,356,38],[304,45,357,15,"M"],[304,46,357,16],[304,50,357,20],[304,51,357,21,"m"],[304,52,357,22],[304,55,357,25],[304,56,357,26],[304,62,357,32],[305,10,358,8],[306,8,359,6],[306,9,359,7],[306,15,359,13],[307,10,360,8,"ret"],[307,13,360,11],[307,16,360,14],[307,21,360,19,"M"],[307,22,360,20],[307,26,360,24,"m"],[307,27,360,25],[307,31,360,29,"p"],[307,32,360,30],[307,36,360,34,"pr"],[307,38,360,36],[307,43,361,13],[307,44,361,14,"M"],[307,45,361,15],[307,48,361,18],[307,49,361,19],[307,57,361,27],[308,8,362,6],[309,6,363,4],[309,7,363,5],[309,13,363,11],[310,8,364,6,"debug"],[310,13,364,11],[310,14,364,12],[310,21,364,19],[310,22,364,20],[311,8,365,6],[311,12,365,10,"M"],[311,13,365,11],[311,18,365,16],[311,21,365,19],[311,23,365,21],[312,10,366,8],[312,14,366,12,"m"],[312,15,366,13],[312,20,366,18],[312,23,366,21],[312,25,366,23],[313,12,367,10,"ret"],[313,15,367,13],[313,18,367,16],[313,23,367,21,"M"],[313,24,367,22],[313,28,367,26,"m"],[313,29,367,27],[313,33,367,31,"p"],[313,34,367,32],[313,37,368,13,"z"],[313,38,368,14],[313,43,368,19,"M"],[313,44,368,20],[313,48,368,24,"m"],[313,49,368,25],[313,53,368,29],[313,54,368,30,"p"],[313,55,368,31],[313,58,368,34],[313,59,368,35],[313,63,368,39],[314,10,369,8],[314,11,369,9],[314,17,369,15],[315,12,370,10,"ret"],[315,15,370,13],[315,18,370,16],[315,23,370,21,"M"],[315,24,370,22],[315,28,370,26,"m"],[315,29,370,27],[315,33,370,31,"p"],[315,34,370,32],[315,37,371,13,"z"],[315,38,371,14],[315,43,371,19,"M"],[315,44,371,20],[315,48,371,24],[315,49,371,25,"m"],[315,50,371,26],[315,53,371,29],[315,54,371,30],[315,60,371,36],[316,10,372,8],[317,8,373,6],[317,9,373,7],[317,15,373,13],[318,10,374,8,"ret"],[318,13,374,11],[318,16,374,14],[318,21,374,19,"M"],[318,22,374,20],[318,26,374,24,"m"],[318,27,374,25],[318,31,374,29,"p"],[318,32,374,30],[318,37,375,13],[318,38,375,14,"M"],[318,39,375,15],[318,42,375,18],[318,43,375,19],[318,51,375,27],[319,8,376,6],[320,6,377,4],[321,6,379,4,"debug"],[321,11,379,9],[321,12,379,10],[321,26,379,24],[321,28,379,26,"ret"],[321,31,379,29],[321,32,379,30],[322,6,380,4],[322,13,380,11,"ret"],[322,16,380,14],[323,4,381,2],[323,5,381,3],[323,6,381,4],[324,2,382,0],[324,3,382,1],[325,2,384,0],[325,8,384,6,"replaceXRanges"],[325,22,384,20],[325,25,384,23,"replaceXRanges"],[325,26,384,24,"comp"],[325,30,384,28],[325,32,384,30,"options"],[325,39,384,37],[325,44,384,42],[326,4,385,2,"debug"],[326,9,385,7],[326,10,385,8],[326,26,385,24],[326,28,385,26,"comp"],[326,32,385,30],[326,34,385,32,"options"],[326,41,385,39],[326,42,385,40],[327,4,386,2],[327,11,386,9,"comp"],[327,15,386,13],[327,16,387,5,"split"],[327,21,387,10],[327,22,387,11],[327,27,387,16],[327,28,387,17],[327,29,388,5,"map"],[327,32,388,8],[327,33,388,10,"c"],[327,34,388,11],[327,38,388,16,"replaceXRange"],[327,51,388,29],[327,52,388,30,"c"],[327,53,388,31],[327,55,388,33,"options"],[327,62,388,40],[327,63,388,41],[327,64,388,42],[327,65,389,5,"join"],[327,69,389,9],[327,70,389,10],[327,73,389,13],[327,74,389,14],[328,2,390,0],[328,3,390,1],[329,2,392,0],[329,8,392,6,"replaceXRange"],[329,21,392,19],[329,24,392,22,"replaceXRange"],[329,25,392,23,"comp"],[329,29,392,27],[329,31,392,29,"options"],[329,38,392,36],[329,43,392,41],[330,4,393,2,"comp"],[330,8,393,6],[330,11,393,9,"comp"],[330,15,393,13],[330,16,393,14,"trim"],[330,20,393,18],[330,21,393,19],[330,22,393,20],[331,4,394,2],[331,10,394,8,"r"],[331,11,394,9],[331,14,394,12,"options"],[331,21,394,19],[331,22,394,20,"loose"],[331,27,394,25],[331,30,394,28,"re"],[331,32,394,30],[331,33,394,31,"t"],[331,34,394,32],[331,35,394,33,"XRANGELOOSE"],[331,46,394,44],[331,47,394,45],[331,50,394,48,"re"],[331,52,394,50],[331,53,394,51,"t"],[331,54,394,52],[331,55,394,53,"XRANGE"],[331,61,394,59],[331,62,394,60],[332,4,395,2],[332,11,395,9,"comp"],[332,15,395,13],[332,16,395,14,"replace"],[332,23,395,21],[332,24,395,22,"r"],[332,25,395,23],[332,27,395,25],[332,28,395,26,"ret"],[332,31,395,29],[332,33,395,31,"gtlt"],[332,37,395,35],[332,39,395,37,"M"],[332,40,395,38],[332,42,395,40,"m"],[332,43,395,41],[332,45,395,43,"p"],[332,46,395,44],[332,48,395,46,"pr"],[332,50,395,48],[332,55,395,53],[333,6,396,4,"debug"],[333,11,396,9],[333,12,396,10],[333,20,396,18],[333,22,396,20,"comp"],[333,26,396,24],[333,28,396,26,"ret"],[333,31,396,29],[333,33,396,31,"gtlt"],[333,37,396,35],[333,39,396,37,"M"],[333,40,396,38],[333,42,396,40,"m"],[333,43,396,41],[333,45,396,43,"p"],[333,46,396,44],[333,48,396,46,"pr"],[333,50,396,48],[333,51,396,49],[334,6,397,4],[334,12,397,10,"xM"],[334,14,397,12],[334,17,397,15,"isX"],[334,20,397,18],[334,21,397,19,"M"],[334,22,397,20],[334,23,397,21],[335,6,398,4],[335,12,398,10,"xm"],[335,14,398,12],[335,17,398,15,"xM"],[335,19,398,17],[335,23,398,21,"isX"],[335,26,398,24],[335,27,398,25,"m"],[335,28,398,26],[335,29,398,27],[336,6,399,4],[336,12,399,10,"xp"],[336,14,399,12],[336,17,399,15,"xm"],[336,19,399,17],[336,23,399,21,"isX"],[336,26,399,24],[336,27,399,25,"p"],[336,28,399,26],[336,29,399,27],[337,6,400,4],[337,12,400,10,"anyX"],[337,16,400,14],[337,19,400,17,"xp"],[337,21,400,19],[338,6,402,4],[338,10,402,8,"gtlt"],[338,14,402,12],[338,19,402,17],[338,22,402,20],[338,26,402,24,"anyX"],[338,30,402,28],[338,32,402,30],[339,8,403,6,"gtlt"],[339,12,403,10],[339,15,403,13],[339,17,403,15],[340,6,404,4],[342,6,406,4],[343,6,407,4],[344,6,408,4,"pr"],[344,8,408,6],[344,11,408,9,"options"],[344,18,408,16],[344,19,408,17,"includePrerelease"],[344,36,408,34],[344,39,408,37],[344,43,408,41],[344,46,408,44],[344,48,408,46],[345,6,410,4],[345,10,410,8,"xM"],[345,12,410,10],[345,14,410,12],[346,8,411,6],[346,12,411,10,"gtlt"],[346,16,411,14],[346,21,411,19],[346,24,411,22],[346,28,411,26,"gtlt"],[346,32,411,30],[346,37,411,35],[346,40,411,38],[346,42,411,40],[347,10,412,8],[348,10,413,8,"ret"],[348,13,413,11],[348,16,413,14],[348,26,413,24],[349,8,414,6],[349,9,414,7],[349,15,414,13],[350,10,415,8],[351,10,416,8,"ret"],[351,13,416,11],[351,16,416,14],[351,19,416,17],[352,8,417,6],[353,6,418,4],[353,7,418,5],[353,13,418,11],[353,17,418,15,"gtlt"],[353,21,418,19],[353,25,418,23,"anyX"],[353,29,418,27],[353,31,418,29],[354,8,419,6],[355,8,420,6],[356,8,421,6],[356,12,421,10,"xm"],[356,14,421,12],[356,16,421,14],[357,10,422,8,"m"],[357,11,422,9],[357,14,422,12],[357,15,422,13],[358,8,423,6],[359,8,424,6,"p"],[359,9,424,7],[359,12,424,10],[359,13,424,11],[360,8,426,6],[360,12,426,10,"gtlt"],[360,16,426,14],[360,21,426,19],[360,24,426,22],[360,26,426,24],[361,10,427,8],[362,10,428,8],[363,10,429,8,"gtlt"],[363,14,429,12],[363,17,429,15],[363,21,429,19],[364,10,430,8],[364,14,430,12,"xm"],[364,16,430,14],[364,18,430,16],[365,12,431,10,"M"],[365,13,431,11],[365,16,431,14],[365,17,431,15,"M"],[365,18,431,16],[365,21,431,19],[365,22,431,20],[366,12,432,10,"m"],[366,13,432,11],[366,16,432,14],[366,17,432,15],[367,12,433,10,"p"],[367,13,433,11],[367,16,433,14],[367,17,433,15],[368,10,434,8],[368,11,434,9],[368,17,434,15],[369,12,435,10,"m"],[369,13,435,11],[369,16,435,14],[369,17,435,15,"m"],[369,18,435,16],[369,21,435,19],[369,22,435,20],[370,12,436,10,"p"],[370,13,436,11],[370,16,436,14],[370,17,436,15],[371,10,437,8],[372,8,438,6],[372,9,438,7],[372,15,438,13],[372,19,438,17,"gtlt"],[372,23,438,21],[372,28,438,26],[372,32,438,30],[372,34,438,32],[373,10,439,8],[374,10,440,8],[375,10,441,8,"gtlt"],[375,14,441,12],[375,17,441,15],[375,20,441,18],[376,10,442,8],[376,14,442,12,"xm"],[376,16,442,14],[376,18,442,16],[377,12,443,10,"M"],[377,13,443,11],[377,16,443,14],[377,17,443,15,"M"],[377,18,443,16],[377,21,443,19],[377,22,443,20],[378,10,444,8],[378,11,444,9],[378,17,444,15],[379,12,445,10,"m"],[379,13,445,11],[379,16,445,14],[379,17,445,15,"m"],[379,18,445,16],[379,21,445,19],[379,22,445,20],[380,10,446,8],[381,8,447,6],[382,8,449,6],[382,12,449,10,"gtlt"],[382,16,449,14],[382,21,449,19],[382,24,449,22],[382,26,449,24],[383,10,450,8,"pr"],[383,12,450,10],[383,15,450,13],[383,19,450,17],[384,8,451,6],[385,8,453,6,"ret"],[385,11,453,9],[385,14,453,12],[385,17,453,15,"gtlt"],[385,21,453,19],[385,24,453,22,"M"],[385,25,453,23],[385,29,453,27,"m"],[385,30,453,28],[385,34,453,32,"p"],[385,35,453,33],[385,38,453,36,"pr"],[385,40,453,38],[385,42,453,40],[386,6,454,4],[386,7,454,5],[386,13,454,11],[386,17,454,15,"xm"],[386,19,454,17],[386,21,454,19],[387,8,455,6,"ret"],[387,11,455,9],[387,14,455,12],[387,19,455,17,"M"],[387,20,455,18],[387,27,455,25,"pr"],[387,29,455,27],[387,34,455,32],[387,35,455,33,"M"],[387,36,455,34],[387,39,455,37],[387,40,455,38],[387,48,455,46],[388,6,456,4],[388,7,456,5],[388,13,456,11],[388,17,456,15,"xp"],[388,19,456,17],[388,21,456,19],[389,8,457,6,"ret"],[389,11,457,9],[389,14,457,12],[389,19,457,17,"M"],[389,20,457,18],[389,24,457,22,"m"],[389,25,457,23],[389,30,457,28,"pr"],[389,32,457,30],[389,37,458,11,"M"],[389,38,458,12],[389,42,458,16],[389,43,458,17,"m"],[389,44,458,18],[389,47,458,21],[389,48,458,22],[389,54,458,28],[390,6,459,4],[391,6,461,4,"debug"],[391,11,461,9],[391,12,461,10],[391,27,461,25],[391,29,461,27,"ret"],[391,32,461,30],[391,33,461,31],[392,6,463,4],[392,13,463,11,"ret"],[392,16,463,14],[393,4,464,2],[393,5,464,3],[393,6,464,4],[394,2,465,0],[394,3,465,1],[396,2,467,0],[397,2,468,0],[398,2,469,0],[398,8,469,6,"replaceStars"],[398,20,469,18],[398,23,469,21,"replaceStars"],[398,24,469,22,"comp"],[398,28,469,26],[398,30,469,28,"options"],[398,37,469,35],[398,42,469,40],[399,4,470,2,"debug"],[399,9,470,7],[399,10,470,8],[399,24,470,22],[399,26,470,24,"comp"],[399,30,470,28],[399,32,470,30,"options"],[399,39,470,37],[399,40,470,38],[400,4,471,2],[401,4,472,2],[401,11,472,9,"comp"],[401,15,472,13],[401,16,473,5,"trim"],[401,20,473,9],[401,21,473,10],[401,22,473,11],[401,23,474,5,"replace"],[401,30,474,12],[401,31,474,13,"re"],[401,33,474,15],[401,34,474,16,"t"],[401,35,474,17],[401,36,474,18,"STAR"],[401,40,474,22],[401,41,474,23],[401,43,474,25],[401,45,474,27],[401,46,474,28],[402,2,475,0],[402,3,475,1],[403,2,477,0],[403,8,477,6,"replaceGTE0"],[403,19,477,17],[403,22,477,20,"replaceGTE0"],[403,23,477,21,"comp"],[403,27,477,25],[403,29,477,27,"options"],[403,36,477,34],[403,41,477,39],[404,4,478,2,"debug"],[404,9,478,7],[404,10,478,8],[404,23,478,21],[404,25,478,23,"comp"],[404,29,478,27],[404,31,478,29,"options"],[404,38,478,36],[404,39,478,37],[405,4,479,2],[405,11,479,9,"comp"],[405,15,479,13],[405,16,480,5,"trim"],[405,20,480,9],[405,21,480,10],[405,22,480,11],[405,23,481,5,"replace"],[405,30,481,12],[405,31,481,13,"re"],[405,33,481,15],[405,34,481,16,"options"],[405,41,481,23],[405,42,481,24,"includePrerelease"],[405,59,481,41],[405,62,481,44,"t"],[405,63,481,45],[405,64,481,46,"GTE0PRE"],[405,71,481,53],[405,74,481,56,"t"],[405,75,481,57],[405,76,481,58,"GTE0"],[405,80,481,62],[405,81,481,63],[405,83,481,65],[405,85,481,67],[405,86,481,68],[406,2,482,0],[406,3,482,1],[408,2,484,0],[409,2,485,0],[410,2,486,0],[411,2,487,0],[412,2,488,0],[413,2,489,0],[414,2,490,0],[414,8,490,6,"hyphenReplace"],[414,21,490,19],[414,24,490,22,"incPr"],[414,29,490,27],[414,33,490,31],[414,34,490,32,"$0"],[414,36,490,34],[414,38,491,2,"from"],[414,42,491,6],[414,44,491,8,"fM"],[414,46,491,10],[414,48,491,12,"fm"],[414,50,491,14],[414,52,491,16,"fp"],[414,54,491,18],[414,56,491,20,"fpr"],[414,59,491,23],[414,61,491,25,"fb"],[414,63,491,27],[414,65,492,2,"to"],[414,67,492,4],[414,69,492,6,"tM"],[414,71,492,8],[414,73,492,10,"tm"],[414,75,492,12],[414,77,492,14,"tp"],[414,79,492,16],[414,81,492,18,"tpr"],[414,84,492,21],[414,89,492,26],[415,4,493,2],[415,8,493,6,"isX"],[415,11,493,9],[415,12,493,10,"fM"],[415,14,493,12],[415,15,493,13],[415,17,493,15],[416,6,494,4,"from"],[416,10,494,8],[416,13,494,11],[416,15,494,13],[417,4,495,2],[417,5,495,3],[417,11,495,9],[417,15,495,13,"isX"],[417,18,495,16],[417,19,495,17,"fm"],[417,21,495,19],[417,22,495,20],[417,24,495,22],[418,6,496,4,"from"],[418,10,496,8],[418,13,496,11],[418,18,496,16,"fM"],[418,20,496,18],[418,27,496,25,"incPr"],[418,32,496,30],[418,35,496,33],[418,39,496,37],[418,42,496,40],[418,44,496,42],[418,46,496,44],[419,4,497,2],[419,5,497,3],[419,11,497,9],[419,15,497,13,"isX"],[419,18,497,16],[419,19,497,17,"fp"],[419,21,497,19],[419,22,497,20],[419,24,497,22],[420,6,498,4,"from"],[420,10,498,8],[420,13,498,11],[420,18,498,16,"fM"],[420,20,498,18],[420,24,498,22,"fm"],[420,26,498,24],[420,31,498,29,"incPr"],[420,36,498,34],[420,39,498,37],[420,43,498,41],[420,46,498,44],[420,48,498,46],[420,50,498,48],[421,4,499,2],[421,5,499,3],[421,11,499,9],[421,15,499,13,"fpr"],[421,18,499,16],[421,20,499,18],[422,6,500,4,"from"],[422,10,500,8],[422,13,500,11],[422,18,500,16,"from"],[422,22,500,20],[422,24,500,22],[423,4,501,2],[423,5,501,3],[423,11,501,9],[424,6,502,4,"from"],[424,10,502,8],[424,13,502,11],[424,18,502,16,"from"],[424,22,502,20],[424,25,502,23,"incPr"],[424,30,502,28],[424,33,502,31],[424,37,502,35],[424,40,502,38],[424,42,502,40],[424,44,502,42],[425,4,503,2],[426,4,505,2],[426,8,505,6,"isX"],[426,11,505,9],[426,12,505,10,"tM"],[426,14,505,12],[426,15,505,13],[426,17,505,15],[427,6,506,4,"to"],[427,8,506,6],[427,11,506,9],[427,13,506,11],[428,4,507,2],[428,5,507,3],[428,11,507,9],[428,15,507,13,"isX"],[428,18,507,16],[428,19,507,17,"tm"],[428,21,507,19],[428,22,507,20],[428,24,507,22],[429,6,508,4,"to"],[429,8,508,6],[429,11,508,9],[429,15,508,13],[429,16,508,14,"tM"],[429,18,508,16],[429,21,508,19],[429,22,508,20],[429,30,508,28],[430,4,509,2],[430,5,509,3],[430,11,509,9],[430,15,509,13,"isX"],[430,18,509,16],[430,19,509,17,"tp"],[430,21,509,19],[430,22,509,20],[430,24,509,22],[431,6,510,4,"to"],[431,8,510,6],[431,11,510,9],[431,15,510,13,"tM"],[431,17,510,15],[431,21,510,19],[431,22,510,20,"tm"],[431,24,510,22],[431,27,510,25],[431,28,510,26],[431,34,510,32],[432,4,511,2],[432,5,511,3],[432,11,511,9],[432,15,511,13,"tpr"],[432,18,511,16],[432,20,511,18],[433,6,512,4,"to"],[433,8,512,6],[433,11,512,9],[433,16,512,14,"tM"],[433,18,512,16],[433,22,512,20,"tm"],[433,24,512,22],[433,28,512,26,"tp"],[433,30,512,28],[433,34,512,32,"tpr"],[433,37,512,35],[433,39,512,37],[434,4,513,2],[434,5,513,3],[434,11,513,9],[434,15,513,13,"incPr"],[434,20,513,18],[434,22,513,20],[435,6,514,4,"to"],[435,8,514,6],[435,11,514,9],[435,15,514,13,"tM"],[435,17,514,15],[435,21,514,19,"tm"],[435,23,514,21],[435,27,514,25],[435,28,514,26,"tp"],[435,30,514,28],[435,33,514,31],[435,34,514,32],[435,38,514,36],[436,4,515,2],[436,5,515,3],[436,11,515,9],[437,6,516,4,"to"],[437,8,516,6],[437,11,516,9],[437,16,516,14,"to"],[437,18,516,16],[437,20,516,18],[438,4,517,2],[439,4,519,2],[439,11,519,9],[439,14,519,12,"from"],[439,18,519,16],[439,22,519,20,"to"],[439,24,519,22],[439,26,519,24],[439,27,519,25,"trim"],[439,31,519,29],[439,32,519,30],[439,33,519,31],[440,2,520,0],[440,3,520,1],[441,2,522,0],[441,8,522,6,"testSet"],[441,15,522,13],[441,18,522,16,"testSet"],[441,19,522,17,"set"],[441,22,522,20],[441,24,522,22,"version"],[441,31,522,29],[441,33,522,31,"options"],[441,40,522,38],[441,45,522,43],[442,4,523,2],[442,9,523,7],[442,13,523,11,"i"],[442,14,523,12],[442,17,523,15],[442,18,523,16],[442,20,523,18,"i"],[442,21,523,19],[442,24,523,22,"set"],[442,27,523,25],[442,28,523,26,"length"],[442,34,523,32],[442,36,523,34,"i"],[442,37,523,35],[442,39,523,37],[442,41,523,39],[443,6,524,4],[443,10,524,8],[443,11,524,9,"set"],[443,14,524,12],[443,15,524,13,"i"],[443,16,524,14],[443,17,524,15],[443,18,524,16,"test"],[443,22,524,20],[443,23,524,21,"version"],[443,30,524,28],[443,31,524,29],[443,33,524,31],[444,8,525,6],[444,15,525,13],[444,20,525,18],[445,6,526,4],[446,4,527,2],[447,4,529,2],[447,8,529,6,"version"],[447,15,529,13],[447,16,529,14,"prerelease"],[447,26,529,24],[447,27,529,25,"length"],[447,33,529,31],[447,37,529,35],[447,38,529,36,"options"],[447,45,529,43],[447,46,529,44,"includePrerelease"],[447,63,529,61],[447,65,529,63],[448,6,530,4],[449,6,531,4],[450,6,532,4],[451,6,533,4],[452,6,534,4],[453,6,535,4],[453,11,535,9],[453,15,535,13,"i"],[453,16,535,14],[453,19,535,17],[453,20,535,18],[453,22,535,20,"i"],[453,23,535,21],[453,26,535,24,"set"],[453,29,535,27],[453,30,535,28,"length"],[453,36,535,34],[453,38,535,36,"i"],[453,39,535,37],[453,41,535,39],[453,43,535,41],[454,8,536,6,"debug"],[454,13,536,11],[454,14,536,12,"set"],[454,17,536,15],[454,18,536,16,"i"],[454,19,536,17],[454,20,536,18],[454,21,536,19,"semver"],[454,27,536,25],[454,28,536,26],[455,8,537,6],[455,12,537,10,"set"],[455,15,537,13],[455,16,537,14,"i"],[455,17,537,15],[455,18,537,16],[455,19,537,17,"semver"],[455,25,537,23],[455,30,537,28,"Comparator"],[455,40,537,38],[455,41,537,39,"ANY"],[455,44,537,42],[455,46,537,44],[456,10,538,8],[457,8,539,6],[458,8,541,6],[458,12,541,10,"set"],[458,15,541,13],[458,16,541,14,"i"],[458,17,541,15],[458,18,541,16],[458,19,541,17,"semver"],[458,25,541,23],[458,26,541,24,"prerelease"],[458,36,541,34],[458,37,541,35,"length"],[458,43,541,41],[458,46,541,44],[458,47,541,45],[458,49,541,47],[459,10,542,8],[459,16,542,14,"allowed"],[459,23,542,21],[459,26,542,24,"set"],[459,29,542,27],[459,30,542,28,"i"],[459,31,542,29],[459,32,542,30],[459,33,542,31,"semver"],[459,39,542,37],[460,10,543,8],[460,14,543,12,"allowed"],[460,21,543,19],[460,22,543,20,"major"],[460,27,543,25],[460,32,543,30,"version"],[460,39,543,37],[460,40,543,38,"major"],[460,45,543,43],[460,49,544,12,"allowed"],[460,56,544,19],[460,57,544,20,"minor"],[460,62,544,25],[460,67,544,30,"version"],[460,74,544,37],[460,75,544,38,"minor"],[460,80,544,43],[460,84,545,12,"allowed"],[460,91,545,19],[460,92,545,20,"patch"],[460,97,545,25],[460,102,545,30,"version"],[460,109,545,37],[460,110,545,38,"patch"],[460,115,545,43],[460,117,545,45],[461,12,546,10],[461,19,546,17],[461,23,546,21],[462,10,547,8],[463,8,548,6],[464,6,549,4],[466,6,551,4],[467,6,552,4],[467,13,552,11],[467,18,552,16],[468,4,553,2],[469,4,555,2],[469,11,555,9],[469,15,555,13],[470,2,556,0],[470,3,556,1],[471,0,556,1],[471,3]],"functionMap":{"names":["<global>","Range","Range#constructor","raw.split.map$argument_0","raw.split.map.filter$argument_0","set.filter$argument_0","Range#get__range","Range#format","Range#toString","Range#parseRange","split.map$argument_0","split...split.map$argument_0","rangeList.filter$argument_0","rangeList.map$argument_0","Range#intersects","set.some$argument_0","thisComparators.every$argument_0","rangeComparators.every$argument_0","Range#test","isNullSet","isAny","isSatisfiable","remainingComparators.every$argument_0","parseComparator","isX","replaceTildes","comp.trim.split.map$argument_0","replaceTilde","comp.replace$argument_1","replaceCarets","replaceCaret","replaceXRanges","comp.split.map$argument_0","replaceXRange","replaceStars","replaceGTE0","hyphenReplace","<anonymous>","testSet"],"mappings":"AAA;ACK;ECC;WCmC,8BD;cEI,aF;iCGU,qBH;GDe;EKE;GLiB;EME;GNE;EOE;GPE;EQE;WCmC,2CD;WEI,uCF;mCGI;OHG;sCIQ,0CJ;GRc;EaE;yBCK;kCCM;4CCC;eDE;aDC;KDI;GbC;EiBG;GjBmB;CDC;kBmBoB,2BnB;coBC,mBpB;sBqBI;wCCM;KDE;CrBM;wBuBK;CvBW;YwBE,mDxB;sByBS;SCI,+BD;CzBE;qB2BE;yBCE;GDuB;C3BC;sB6BU;SHI,+BG;C7BE;qB8BE;yBFI;GE8C;C9BC;uB+BE;SCI,gCD;C/BE;sBiCE;yBLG;GKqE;CjCC;qBkCI;ClCM;oBmCE;CnCK;sBoCQ,SC;CrC8B;gBsCE;CtCkC"},"hasCjsExports":true},"type":"js/module"}]}