{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/useColorScheme","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"gdN+P7eDH4evn7jZBGQVY+YTEvw=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":236},"end":{"line":6,"column":69,"index":288}}],"key":"lV14QuoELkLKy4kI0aEcfvvcE84=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ThemeContext.tsx\"; // Import AsyncStorage conditionally to avoid SSR issues\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"lightTheme\", {\n    enumerable: true,\n    get: function () {\n      return lightTheme;\n    }\n  });\n  Object.defineProperty(exports, \"darkTheme\", {\n    enumerable: true,\n    get: function () {\n      return darkTheme;\n    }\n  });\n  Object.defineProperty(exports, \"useTheme\", {\n    enumerable: true,\n    get: function () {\n      return useTheme;\n    }\n  });\n  Object.defineProperty(exports, \"ThemeProvider\", {\n    enumerable: true,\n    get: function () {\n      return ThemeProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsUseColorScheme = require(_dependencyMap[1], \"react-native-web/dist/exports/useColorScheme\");\n  var useColorScheme = _interopDefault(_reactNativeWebDistExportsUseColorScheme);\n  var _reactJsxDevRuntime = require(_dependencyMap[2], \"react/jsx-dev-runtime\");\n  let AsyncStorage = null;\n  try {\n    AsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\").default;\n  } catch (error) {\n    // AsyncStorage not available (e.g., during SSR)\n    console.log('AsyncStorage not available during initialization');\n  }\n  const lightTheme = {\n    primary: '#FF69B4',\n    background: '#f8f9fa',\n    surface: '#ffffff',\n    text: '#333333',\n    textSecondary: '#666666',\n    border: '#e0e0e0',\n    card: '#ffffff',\n    notification: '#FF69B4',\n    error: '#FF6B6B',\n    success: '#4CAF50',\n    warning: '#FFC107'\n  };\n  const darkTheme = {\n    primary: '#FF69B4',\n    background: '#121212',\n    surface: '#1E1E1E',\n    text: '#FFFFFF',\n    textSecondary: '#CCCCCC',\n    border: '#333333',\n    card: '#2C2C2C',\n    notification: '#FF69B4',\n    error: '#FF6B6B',\n    success: '#4CAF50',\n    warning: '#FFC107'\n  };\n  const ThemeContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useTheme = () => {\n    const context = (0, _react.useContext)(ThemeContext);\n    if (!context) {\n      throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n  };\n  const ThemeProvider = ({\n    children\n  }) => {\n    const systemColorScheme = (0, useColorScheme.default)();\n    const [themeMode, setThemeModeState] = (0, _react.useState)('system');\n\n    // Determine the actual theme based on mode and system preference\n    const isDark = themeMode === 'dark' || themeMode === 'system' && systemColorScheme === 'dark';\n    const theme = isDark ? darkTheme : lightTheme;\n\n    // Load theme preference from storage\n    (0, _react.useEffect)(() => {\n      const loadThemePreference = async () => {\n        try {\n          if (!AsyncStorage) {\n            console.log('AsyncStorage not available, using default theme');\n            return;\n          }\n          const savedThemeMode = await AsyncStorage.getItem('@theme_mode');\n          if (savedThemeMode && ['light', 'dark', 'system'].includes(savedThemeMode)) {\n            setThemeModeState(savedThemeMode);\n          }\n        } catch (error) {\n          console.warn('Failed to load theme preference:', error);\n        }\n      };\n      loadThemePreference();\n    }, []);\n\n    // Save theme preference to storage\n    const setThemeMode = async mode => {\n      try {\n        if (AsyncStorage) {\n          await AsyncStorage.setItem('@theme_mode', mode);\n        }\n        setThemeModeState(mode);\n      } catch (error) {\n        console.warn('Failed to save theme preference:', error);\n        setThemeModeState(mode); // Still update state even if save fails\n      }\n    };\n    const toggleTheme = () => {\n      const newMode = isDark ? 'light' : 'dark';\n      setThemeMode(newMode);\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ThemeContext.Provider, {\n      value: {\n        theme,\n        isDark,\n        toggleTheme,\n        setThemeMode,\n        themeMode\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":142,"map":[[4,68,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0],[8,11,3,0,"_interopDefault"],[8,27,3,0,"e"],[8,28,3,0],[9,4,3,0],[9,11,3,0,"e"],[9,12,3,0],[9,16,3,0,"e"],[9,17,3,0],[9,18,3,0,"__esModule"],[9,28,3,0],[9,31,3,0,"e"],[9,32,3,0],[10,6,3,0,"default"],[10,13,3,0],[10,15,3,0,"e"],[11,4,3,0],[12,2,3,0],[13,2,26,0,"Object"],[13,8,26,0],[13,9,26,0,"defineProperty"],[13,23,26,0],[13,24,26,0,"exports"],[13,31,26,0],[14,4,26,0,"enumerable"],[14,14,26,0],[15,4,26,0,"get"],[15,7,26,0],[15,18,26,0,"get"],[15,19,26,0],[16,6,26,0],[16,13,26,0,"lightTheme"],[16,23,26,0],[17,4,26,0],[18,2,26,0],[19,2,40,0,"Object"],[19,8,40,0],[19,9,40,0,"defineProperty"],[19,23,40,0],[19,24,40,0,"exports"],[19,31,40,0],[20,4,40,0,"enumerable"],[20,14,40,0],[21,4,40,0,"get"],[21,7,40,0],[21,18,40,0,"get"],[21,19,40,0],[22,6,40,0],[22,13,40,0,"darkTheme"],[22,22,40,0],[23,4,40,0],[24,2,40,0],[25,2,64,0,"Object"],[25,8,64,0],[25,9,64,0,"defineProperty"],[25,23,64,0],[25,24,64,0,"exports"],[25,31,64,0],[26,4,64,0,"enumerable"],[26,14,64,0],[27,4,64,0,"get"],[27,7,64,0],[27,18,64,0,"get"],[27,19,64,0],[28,6,64,0],[28,13,64,0,"useTheme"],[28,21,64,0],[29,4,64,0],[30,2,64,0],[31,2,76,0,"Object"],[31,8,76,0],[31,9,76,0,"defineProperty"],[31,23,76,0],[31,24,76,0,"exports"],[31,31,76,0],[32,4,76,0,"enumerable"],[32,14,76,0],[33,4,76,0,"get"],[33,7,76,0],[33,18,76,0,"get"],[33,19,76,0],[34,6,76,0],[34,13,76,0,"ThemeProvider"],[34,26,76,0],[35,4,76,0],[36,2,76,0],[37,2,1,0],[37,6,1,0,"_react"],[37,12,1,0],[37,15,1,0,"require"],[37,22,1,0],[37,23,1,0,"_dependencyMap"],[37,37,1,0],[38,2,1,78],[38,6,1,78,"_reactNativeWebDistExportsUseColorScheme"],[38,46,1,78],[38,49,1,78,"require"],[38,56,1,78],[38,57,1,78,"_dependencyMap"],[38,71,1,78],[39,2,1,78],[39,6,1,78,"useColorScheme"],[39,20,1,78],[39,23,1,78,"_interopDefault"],[39,38,1,78],[39,39,1,78,"_reactNativeWebDistExportsUseColorScheme"],[39,79,1,78],[40,2,1,78],[40,6,1,78,"_reactJsxDevRuntime"],[40,25,1,78],[40,28,1,78,"require"],[40,35,1,78],[40,36,1,78,"_dependencyMap"],[40,50,1,78],[41,2,4,0],[41,6,4,4,"AsyncStorage"],[41,18,4,21],[41,21,4,24],[41,25,4,28],[42,2,5,0],[42,6,5,4],[43,4,6,2,"AsyncStorage"],[43,16,6,14],[43,19,6,17,"require"],[43,26,6,24],[43,27,6,24,"_dependencyMap"],[43,41,6,24],[43,89,6,68],[43,90,6,69],[43,91,6,70,"default"],[43,98,6,77],[44,2,7,0],[44,3,7,1],[44,4,7,2],[44,11,7,9,"error"],[44,16,7,14],[44,18,7,16],[45,4,8,2],[46,4,9,2,"console"],[46,11,9,9],[46,12,9,10,"log"],[46,15,9,13],[46,16,9,14],[46,66,9,64],[46,67,9,65],[47,2,10,0],[48,2,26,7],[48,8,26,13,"lightTheme"],[48,18,26,36],[48,21,26,39],[49,4,27,2,"primary"],[49,11,27,9],[49,13,27,11],[49,22,27,20],[50,4,28,2,"background"],[50,14,28,12],[50,16,28,14],[50,25,28,23],[51,4,29,2,"surface"],[51,11,29,9],[51,13,29,11],[51,22,29,20],[52,4,30,2,"text"],[52,8,30,6],[52,10,30,8],[52,19,30,17],[53,4,31,2,"textSecondary"],[53,17,31,15],[53,19,31,17],[53,28,31,26],[54,4,32,2,"border"],[54,10,32,8],[54,12,32,10],[54,21,32,19],[55,4,33,2,"card"],[55,8,33,6],[55,10,33,8],[55,19,33,17],[56,4,34,2,"notification"],[56,16,34,14],[56,18,34,16],[56,27,34,25],[57,4,35,2,"error"],[57,9,35,7],[57,11,35,9],[57,20,35,18],[58,4,36,2,"success"],[58,11,36,9],[58,13,36,11],[58,22,36,20],[59,4,37,2,"warning"],[59,11,37,9],[59,13,37,11],[60,2,38,0],[60,3,38,1],[61,2,40,7],[61,8,40,13,"darkTheme"],[61,17,40,35],[61,20,40,38],[62,4,41,2,"primary"],[62,11,41,9],[62,13,41,11],[62,22,41,20],[63,4,42,2,"background"],[63,14,42,12],[63,16,42,14],[63,25,42,23],[64,4,43,2,"surface"],[64,11,43,9],[64,13,43,11],[64,22,43,20],[65,4,44,2,"text"],[65,8,44,6],[65,10,44,8],[65,19,44,17],[66,4,45,2,"textSecondary"],[66,17,45,15],[66,19,45,17],[66,28,45,26],[67,4,46,2,"border"],[67,10,46,8],[67,12,46,10],[67,21,46,19],[68,4,47,2,"card"],[68,8,47,6],[68,10,47,8],[68,19,47,17],[69,4,48,2,"notification"],[69,16,48,14],[69,18,48,16],[69,27,48,25],[70,4,49,2,"error"],[70,9,49,7],[70,11,49,9],[70,20,49,18],[71,4,50,2,"success"],[71,11,50,9],[71,13,50,11],[71,22,50,20],[72,4,51,2,"warning"],[72,11,51,9],[72,13,51,11],[73,2,52,0],[73,3,52,1],[74,2,62,0],[74,8,62,6,"ThemeContext"],[74,20,62,18],[74,36,62,21],[74,40,62,21,"createContext"],[74,46,62,34],[74,47,62,34,"createContext"],[74,60,62,34],[74,62,62,65,"undefined"],[74,71,62,74],[74,72,62,75],[75,2,64,7],[75,8,64,13,"useTheme"],[75,16,64,21],[75,19,64,24,"useTheme"],[75,20,64,24],[75,25,64,30],[76,4,65,2],[76,10,65,8,"context"],[76,17,65,15],[76,20,65,18],[76,24,65,18,"useContext"],[76,30,65,28],[76,31,65,28,"useContext"],[76,41,65,28],[76,43,65,29,"ThemeContext"],[76,55,65,41],[76,56,65,42],[77,4,66,2],[77,8,66,6],[77,9,66,7,"context"],[77,16,66,14],[77,18,66,16],[78,6,67,4],[78,12,67,10],[78,16,67,14,"Error"],[78,21,67,19],[78,22,67,20],[78,68,67,66],[78,69,67,67],[79,4,68,2],[80,4,69,2],[80,11,69,9,"context"],[80,18,69,16],[81,2,70,0],[81,3,70,1],[82,2,76,7],[82,8,76,13,"ThemeProvider"],[82,21,76,56],[82,24,76,59,"ThemeProvider"],[82,25,76,60],[83,4,76,62,"children"],[84,2,76,71],[84,3,76,72],[84,8,76,77],[85,4,77,2],[85,10,77,8,"systemColorScheme"],[85,27,77,25],[85,30,77,28],[85,34,77,28,"useColorScheme"],[85,48,77,42],[85,49,77,42,"default"],[85,56,77,42],[85,58,77,43],[85,59,77,44],[86,4,78,2],[86,10,78,8],[86,11,78,9,"themeMode"],[86,20,78,18],[86,22,78,20,"setThemeModeState"],[86,39,78,37],[86,40,78,38],[86,43,78,41],[86,47,78,41,"useState"],[86,53,78,49],[86,54,78,49,"useState"],[86,62,78,49],[86,64,78,79],[86,72,78,87],[86,73,78,88],[88,4,80,2],[89,4,81,2],[89,10,81,8,"isDark"],[89,16,81,14],[89,19,81,17,"themeMode"],[89,28,81,26],[89,33,81,31],[89,39,81,37],[89,43,81,42,"themeMode"],[89,52,81,51],[89,57,81,56],[89,65,81,64],[89,69,81,68,"systemColorScheme"],[89,86,81,85],[89,91,81,90],[89,97,81,97],[90,4,82,2],[90,10,82,8,"theme"],[90,15,82,13],[90,18,82,16,"isDark"],[90,24,82,22],[90,27,82,25,"darkTheme"],[90,36,82,34],[90,39,82,37,"lightTheme"],[90,49,82,47],[92,4,84,2],[93,4,85,2],[93,8,85,2,"useEffect"],[93,14,85,11],[93,15,85,11,"useEffect"],[93,24,85,11],[93,26,85,12],[93,32,85,18],[94,6,86,4],[94,12,86,10,"loadThemePreference"],[94,31,86,29],[94,34,86,32],[94,40,86,32,"loadThemePreference"],[94,41,86,32],[94,46,86,44],[95,8,87,6],[95,12,87,10],[96,10,88,8],[96,14,88,12],[96,15,88,13,"AsyncStorage"],[96,27,88,25],[96,29,88,27],[97,12,89,10,"console"],[97,19,89,17],[97,20,89,18,"log"],[97,23,89,21],[97,24,89,22],[97,73,89,71],[97,74,89,72],[98,12,90,10],[99,10,91,8],[100,10,92,8],[100,16,92,14,"savedThemeMode"],[100,30,92,28],[100,33,92,31],[100,39,92,37,"AsyncStorage"],[100,51,92,49],[100,52,92,50,"getItem"],[100,59,92,57],[100,60,92,58],[100,73,92,71],[100,74,92,72],[101,10,93,8],[101,14,93,12,"savedThemeMode"],[101,28,93,26],[101,32,93,30],[101,33,93,31],[101,40,93,38],[101,42,93,40],[101,48,93,46],[101,50,93,48],[101,58,93,56],[101,59,93,57],[101,60,93,58,"includes"],[101,68,93,66],[101,69,93,67,"savedThemeMode"],[101,83,93,81],[101,84,93,82],[101,86,93,84],[102,12,94,10,"setThemeModeState"],[102,29,94,27],[102,30,94,28,"savedThemeMode"],[102,44,94,73],[102,45,94,74],[103,10,95,8],[104,8,96,6],[104,9,96,7],[104,10,96,8],[104,17,96,15,"error"],[104,22,96,20],[104,24,96,22],[105,10,97,8,"console"],[105,17,97,15],[105,18,97,16,"warn"],[105,22,97,20],[105,23,97,21],[105,57,97,55],[105,59,97,57,"error"],[105,64,97,62],[105,65,97,63],[106,8,98,6],[107,6,99,4],[107,7,99,5],[108,6,101,4,"loadThemePreference"],[108,25,101,23],[108,26,101,24],[108,27,101,25],[109,4,102,2],[109,5,102,3],[109,7,102,5],[109,9,102,7],[109,10,102,8],[111,4,104,2],[112,4,105,2],[112,10,105,8,"setThemeMode"],[112,22,105,20],[112,25,105,23],[112,31,105,30,"mode"],[112,35,105,63],[112,39,105,68],[113,6,106,4],[113,10,106,8],[114,8,107,6],[114,12,107,10,"AsyncStorage"],[114,24,107,22],[114,26,107,24],[115,10,108,8],[115,16,108,14,"AsyncStorage"],[115,28,108,26],[115,29,108,27,"setItem"],[115,36,108,34],[115,37,108,35],[115,50,108,48],[115,52,108,50,"mode"],[115,56,108,54],[115,57,108,55],[116,8,109,6],[117,8,110,6,"setThemeModeState"],[117,25,110,23],[117,26,110,24,"mode"],[117,30,110,28],[117,31,110,29],[118,6,111,4],[118,7,111,5],[118,8,111,6],[118,15,111,13,"error"],[118,20,111,18],[118,22,111,20],[119,8,112,6,"console"],[119,15,112,13],[119,16,112,14,"warn"],[119,20,112,18],[119,21,112,19],[119,55,112,53],[119,57,112,55,"error"],[119,62,112,60],[119,63,112,61],[120,8,113,6,"setThemeModeState"],[120,25,113,23],[120,26,113,24,"mode"],[120,30,113,28],[120,31,113,29],[120,32,113,30],[120,33,113,31],[121,6,114,4],[122,4,115,2],[122,5,115,3],[123,4,117,2],[123,10,117,8,"toggleTheme"],[123,21,117,19],[123,24,117,22,"toggleTheme"],[123,25,117,22],[123,30,117,28],[124,6,118,4],[124,12,118,10,"newMode"],[124,19,118,17],[124,22,118,20,"isDark"],[124,28,118,26],[124,31,118,29],[124,38,118,36],[124,41,118,39],[124,47,118,45],[125,6,119,4,"setThemeMode"],[125,18,119,16],[125,19,119,17,"newMode"],[125,26,119,24],[125,27,119,25],[126,4,120,2],[126,5,120,3],[127,4,122,2],[127,24,123,4],[127,28,123,4,"_reactJsxDevRuntime"],[127,47,123,4],[127,48,123,4,"jsxDEV"],[127,54,123,4],[127,56,123,5,"ThemeContext"],[127,68,123,17],[127,69,123,18,"Provider"],[127,77,123,26],[128,6,124,6,"value"],[128,11,124,11],[128,13,124,13],[129,8,125,8,"theme"],[129,13,125,13],[130,8,126,8,"isDark"],[130,14,126,14],[131,8,127,8,"toggleTheme"],[131,19,127,19],[132,8,128,8,"setThemeMode"],[132,20,128,20],[133,8,129,8,"themeMode"],[134,6,130,6],[134,7,130,8],[135,6,130,8,"children"],[135,14,130,8],[135,16,132,7,"children"],[136,4,132,15],[137,6,132,15,"fileName"],[137,14,132,15],[137,16,132,15,"_jsxFileName"],[137,28,132,15],[138,6,132,15,"lineNumber"],[138,16,132,15],[139,6,132,15,"columnNumber"],[139,18,132,15],[140,4,132,15],[140,11,133,27],[140,12,133,28],[141,2,135,0],[141,3,135,1],[142,0,135,2],[142,3]],"functionMap":{"names":["<global>","useTheme","ThemeProvider","useEffect$argument_0","loadThemePreference","setThemeMode","toggleTheme"],"mappings":"AAA;wBC+D;CDM;2DEM;YCS;gCCC;KDa;GDG;uBGG;GHU;sBIE;GJG;CFe"},"hasCjsExports":false},"type":"js/module"}]}