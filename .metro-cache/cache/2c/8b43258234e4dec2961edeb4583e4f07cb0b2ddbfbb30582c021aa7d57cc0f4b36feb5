{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":31,"index":83}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"composeRefs\", {\n    enumerable: true,\n    get: function () {\n      return composeRefs;\n    }\n  });\n  Object.defineProperty(exports, \"useComposedRefs\", {\n    enumerable: true,\n    get: function () {\n      return useComposedRefs;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  // packages/react/compose-refs/src/compose-refs.tsx\n\n  function setRef(ref, value) {\n    if (typeof ref === \"function\") {\n      return ref(value);\n    } else if (ref !== null && ref !== void 0) {\n      ref.current = value;\n    }\n  }\n  function composeRefs(...refs) {\n    return node => {\n      let hasCleanup = false;\n      const cleanups = refs.map(ref => {\n        const cleanup = setRef(ref, node);\n        if (!hasCleanup && typeof cleanup == \"function\") {\n          hasCleanup = true;\n        }\n        return cleanup;\n      });\n      if (hasCleanup) {\n        return () => {\n          for (let i = 0; i < cleanups.length; i++) {\n            const cleanup = cleanups[i];\n            if (typeof cleanup == \"function\") {\n              cleanup();\n            } else {\n              setRef(refs[i], null);\n            }\n          }\n        };\n      }\n    };\n  }\n  function useComposedRefs(...refs) {\n    return React.useCallback(composeRefs(...refs), refs);\n  }\n});","lineCount":72,"map":[[22,2,37,0,"Object"],[22,8,37,0],[22,9,37,0,"defineProperty"],[22,23,37,0],[22,24,37,0,"exports"],[22,31,37,0],[23,4,37,0,"enumerable"],[23,14,37,0],[24,4,37,0,"get"],[24,7,37,0],[24,18,37,0,"get"],[24,19,37,0],[25,6,37,0],[25,13,38,2,"composeRefs"],[25,24,38,13],[26,4,38,13],[27,2,38,13],[28,2,37,0,"Object"],[28,8,37,0],[28,9,37,0,"defineProperty"],[28,23,37,0],[28,24,37,0,"exports"],[28,31,37,0],[29,4,37,0,"enumerable"],[29,14,37,0],[30,4,37,0,"get"],[30,7,37,0],[30,18,37,0,"get"],[30,19,37,0],[31,6,37,0],[31,13,39,2,"useComposedRefs"],[31,28,39,17],[32,4,39,17],[33,2,39,17],[34,2,2,0],[34,6,2,0,"_react"],[34,12,2,0],[34,15,2,0,"require"],[34,22,2,0],[34,23,2,0,"_dependencyMap"],[34,37,2,0],[35,2,2,0],[35,6,2,0,"React"],[35,11,2,0],[35,14,2,0,"_interopNamespace"],[35,31,2,0],[35,32,2,0,"_react"],[35,38,2,0],[36,2,1,0],[38,2,3,0],[38,11,3,9,"setRef"],[38,17,3,15,"setRef"],[38,18,3,16,"ref"],[38,21,3,19],[38,23,3,21,"value"],[38,28,3,26],[38,30,3,28],[39,4,4,2],[39,8,4,6],[39,15,4,13,"ref"],[39,18,4,16],[39,23,4,21],[39,33,4,31],[39,35,4,33],[40,6,5,4],[40,13,5,11,"ref"],[40,16,5,14],[40,17,5,15,"value"],[40,22,5,20],[40,23,5,21],[41,4,6,2],[41,5,6,3],[41,11,6,9],[41,15,6,13,"ref"],[41,18,6,16],[41,23,6,21],[41,27,6,25],[41,31,6,29,"ref"],[41,34,6,32],[41,39,6,37],[41,44,6,42],[41,45,6,43],[41,47,6,45],[42,6,7,4,"ref"],[42,9,7,7],[42,10,7,8,"current"],[42,17,7,15],[42,20,7,18,"value"],[42,25,7,23],[43,4,8,2],[44,2,9,0],[45,2,10,0],[45,11,10,9,"composeRefs"],[45,22,10,20,"composeRefs"],[45,23,10,21],[45,26,10,24,"refs"],[45,30,10,28],[45,32,10,30],[46,4,11,2],[46,11,11,10,"node"],[46,15,11,14],[46,19,11,19],[47,6,12,4],[47,10,12,8,"hasCleanup"],[47,20,12,18],[47,23,12,21],[47,28,12,26],[48,6,13,4],[48,12,13,10,"cleanups"],[48,20,13,18],[48,23,13,21,"refs"],[48,27,13,25],[48,28,13,26,"map"],[48,31,13,29],[48,32,13,31,"ref"],[48,35,13,34],[48,39,13,39],[49,8,14,6],[49,14,14,12,"cleanup"],[49,21,14,19],[49,24,14,22,"setRef"],[49,30,14,28],[49,31,14,29,"ref"],[49,34,14,32],[49,36,14,34,"node"],[49,40,14,38],[49,41,14,39],[50,8,15,6],[50,12,15,10],[50,13,15,11,"hasCleanup"],[50,23,15,21],[50,27,15,25],[50,34,15,32,"cleanup"],[50,41,15,39],[50,45,15,43],[50,55,15,53],[50,57,15,55],[51,10,16,8,"hasCleanup"],[51,20,16,18],[51,23,16,21],[51,27,16,25],[52,8,17,6],[53,8,18,6],[53,15,18,13,"cleanup"],[53,22,18,20],[54,6,19,4],[54,7,19,5],[54,8,19,6],[55,6,20,4],[55,10,20,8,"hasCleanup"],[55,20,20,18],[55,22,20,20],[56,8,21,6],[56,15,21,13],[56,21,21,19],[57,10,22,8],[57,15,22,13],[57,19,22,17,"i"],[57,20,22,18],[57,23,22,21],[57,24,22,22],[57,26,22,24,"i"],[57,27,22,25],[57,30,22,28,"cleanups"],[57,38,22,36],[57,39,22,37,"length"],[57,45,22,43],[57,47,22,45,"i"],[57,48,22,46],[57,50,22,48],[57,52,22,50],[58,12,23,10],[58,18,23,16,"cleanup"],[58,25,23,23],[58,28,23,26,"cleanups"],[58,36,23,34],[58,37,23,35,"i"],[58,38,23,36],[58,39,23,37],[59,12,24,10],[59,16,24,14],[59,23,24,21,"cleanup"],[59,30,24,28],[59,34,24,32],[59,44,24,42],[59,46,24,44],[60,14,25,12,"cleanup"],[60,21,25,19],[60,22,25,20],[60,23,25,21],[61,12,26,10],[61,13,26,11],[61,19,26,17],[62,14,27,12,"setRef"],[62,20,27,18],[62,21,27,19,"refs"],[62,25,27,23],[62,26,27,24,"i"],[62,27,27,25],[62,28,27,26],[62,30,27,28],[62,34,27,32],[62,35,27,33],[63,12,28,10],[64,10,29,8],[65,8,30,6],[65,9,30,7],[66,6,31,4],[67,4,32,2],[67,5,32,3],[68,2,33,0],[69,2,34,0],[69,11,34,9,"useComposedRefs"],[69,26,34,24,"useComposedRefs"],[69,27,34,25],[69,30,34,28,"refs"],[69,34,34,32],[69,36,34,34],[70,4,35,2],[70,11,35,9,"React"],[70,16,35,14],[70,17,35,15,"useCallback"],[70,28,35,26],[70,29,35,27,"composeRefs"],[70,40,35,38],[70,41,35,39],[70,44,35,42,"refs"],[70,48,35,46],[70,49,35,47],[70,51,35,49,"refs"],[70,55,35,53],[70,56,35,54],[71,2,36,0],[72,0,36,1],[72,3]],"functionMap":{"names":["<global>","setRef","composeRefs","<anonymous>","refs.map$argument_0","useComposedRefs"],"mappings":"AAA;ACE;CDM;AEC;SCC;8BCE;KDM;GDa;CFC;AKC;CLE"},"hasCjsExports":false},"type":"js/module"}]}