{"dependencies":[{"name":"react-native-worklets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":48,"index":63}}],"key":"upgdvla269Vpw38V/0PgHoMDZsA=","exportNames":["*"],"imports":1}},{"name":"./common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":64},"end":{"line":4,"column":35,"index":99}}],"key":"T3X1rGrsueEhPeOGTLhHRm6Tz+4=","exportNames":["*"],"imports":1}},{"name":"./isSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":100},"end":{"line":5,"column":48,"index":148}}],"key":"4GvsAaNC2OU71XMPPfpzkxeW9tk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.startMapper = startMapper;\n  exports.stopMapper = stopMapper;\n  var _reactNativeWorklets = require(_dependencyMap[0], \"react-native-worklets\");\n  var _common = require(_dependencyMap[1], \"./common\");\n  var _isSharedValue = require(_dependencyMap[2], \"./isSharedValue\");\n  const _worklet_6649678464578_init_data = {\n    code: \"function createMapperRegistry_reactNativeReanimated_mappersJs1(){const{IS_JEST,isSharedValue}=this.__closure;const mappers=new Map();let sortedMappers=[];let runRequested=false;let processingMappers=false;function updateMappersOrder(){const pre=new Map();mappers.forEach(function(mapper){if(mapper.outputs){for(const output of mapper.outputs){const preMappers=pre.get(output);if(preMappers===undefined){pre.set(output,[mapper]);}else{preMappers.push(mapper);}}}});const visited=new Set();const newOrder=[];function dfs(mapper){visited.add(mapper);for(const input of mapper.inputs){const preMappers=pre.get(input);if(preMappers){for(const preMapper of preMappers){if(!visited.has(preMapper)){dfs(preMapper);}}}}newOrder.push(mapper);}mappers.forEach(function(mapper){if(!visited.has(mapper)){dfs(mapper);}});sortedMappers=newOrder;}function mapperRun(){runRequested=false;if(processingMappers){return;}try{processingMappers=true;if(mappers.size!==sortedMappers.length){updateMappersOrder();}for(const mapper of sortedMappers){if(mapper.dirty){mapper.dirty=false;mapper.worklet();}}}finally{processingMappers=false;}}function maybeRequestUpdates(){if(IS_JEST){mapperRun();}else if(!runRequested){if(processingMappers){requestAnimationFrame(mapperRun);}else{queueMicrotask(mapperRun);}runRequested=true;}}function extractInputs(inputs,resultArray){if(Array.isArray(inputs)){for(const input of inputs){if(input){extractInputs(input,resultArray);}}}else if(isSharedValue(inputs)){resultArray.push(inputs);}else if(Object.getPrototypeOf(inputs)===Object.prototype){for(const element of Object.values(inputs)){if(element){extractInputs(element,resultArray);}}}return resultArray;}return{start:function(mapperID,worklet,inputs,outputs){const mapper={id:mapperID,dirty:true,worklet:worklet,inputs:extractInputs(inputs,[]),outputs:outputs};mappers.set(mapper.id,mapper);sortedMappers=[];for(const sv of mapper.inputs){sv.addListener(mapper.id,function(){mapper.dirty=true;maybeRequestUpdates();});}maybeRequestUpdates();},stop:function(mapperID){const mapper=mappers.get(mapperID);if(mapper){mappers.delete(mapper.id);sortedMappers=[];for(const sv of mapper.inputs){sv.removeListener(mapper.id);}}}};}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createMapperRegistry_reactNativeReanimated_mappersJs1\\\",\\\"IS_JEST\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"runRequested\\\",\\\"processingMappers\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperRun\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"requestAnimationFrame\\\",\\\"queueMicrotask\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"Object\\\",\\\"getPrototypeOf\\\",\\\"prototype\\\",\\\"element\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"addListener\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\"\n  };\n  const createMapperRegistry = function createMapperRegistry_reactNativeReanimated_mappersJs1Factory({\n    _worklet_6649678464578_init_data,\n    IS_JEST,\n    isSharedValue\n  }) {\n    const _e = [new global.Error(), -3, -27];\n    const createMapperRegistry = function () {\n      const mappers = new Map();\n      let sortedMappers = [];\n      let runRequested = false;\n      let processingMappers = false;\n      function updateMappersOrder() {\n        // sort mappers topologically\n        // the algorithm here takes adventage of a fact that the topological order\n        // of a transposed graph is a reverse topological order of the original graph\n        // The graph in our case consists of mappers and an edge between two mappers\n        // A and B exists if there is a shared value that's on A's output lists and on\n        // B's input list.\n        //\n        // We don't need however to calculate that graph as it is easier to work with\n        // the transposed version of it that can be calculated ad-hoc. For the transposed\n        // version to be traversed we use \"pre\" map that maps share value to mappers that\n        // output that shared value. Then we can infer all the outgoing edges for a given\n        // mapper simply by scanning it's input list and checking if any of the shared values\n        // from that list exists in the \"pre\" map. If they do, then we have an edge between\n        // that mapper and the mappers from the \"pre\" list for the given shared value.\n        //\n        // For topological sorting we use a dfs-based approach that requires the graph to\n        // be traversed in dfs order and each node after being processed lands at the\n        // beginning of the topological order list. Since we traverse a transposed graph,\n        // instead of reversing that order we can use a normal array and push processed\n        // mappers to the end. There is no need to reverse that array after we are done.\n        const pre = new Map(); // map from sv -> mapper that outputs that sv\n        mappers.forEach(mapper => {\n          if (mapper.outputs) {\n            for (const output of mapper.outputs) {\n              const preMappers = pre.get(output);\n              if (preMappers === undefined) {\n                pre.set(output, [mapper]);\n              } else {\n                preMappers.push(mapper);\n              }\n            }\n          }\n        });\n        const visited = new Set();\n        const newOrder = [];\n        function dfs(mapper) {\n          visited.add(mapper);\n          for (const input of mapper.inputs) {\n            const preMappers = pre.get(input);\n            if (preMappers) {\n              for (const preMapper of preMappers) {\n                if (!visited.has(preMapper)) {\n                  dfs(preMapper);\n                }\n              }\n            }\n          }\n          newOrder.push(mapper);\n        }\n        mappers.forEach(mapper => {\n          if (!visited.has(mapper)) {\n            dfs(mapper);\n          }\n        });\n        sortedMappers = newOrder;\n      }\n      function mapperRun() {\n        runRequested = false;\n        if (processingMappers) {\n          return;\n        }\n        try {\n          processingMappers = true;\n          if (mappers.size !== sortedMappers.length) {\n            updateMappersOrder();\n          }\n          for (const mapper of sortedMappers) {\n            if (mapper.dirty) {\n              mapper.dirty = false;\n              mapper.worklet();\n            }\n          }\n        } finally {\n          processingMappers = false;\n        }\n      }\n      function maybeRequestUpdates() {\n        if (IS_JEST) {\n          // On Jest environment we avoid using queueMicrotask as that'd require test\n          // to advance the clock manually. This on other hand would require tests\n          // to know how many times mappers need to run. As we don't want tests to\n          // make any assumptions on that number it is easier to execute mappers\n          // immediately for testing purposes and only expect test to advance timers\n          // if they want to make any assertions on the effects of animations being run.\n          mapperRun();\n        } else if (!runRequested) {\n          if (processingMappers) {\n            // In general, we should avoid having mappers trigger updates as this may\n            // result in unpredictable behavior. Specifically, the updated value can\n            // be read by mappers that run later in the same frame but previous mappers\n            // would access the old value. Updating mappers during the mapper-run phase\n            // breaks the order in which we should execute the mappers. However, doing\n            // that is still a possibility and there are some instances where people use\n            // the API in that way, hence we need to prevent mapper-run phase falling into\n            // an infinite loop. We do that by detecting when mapper-run is requested while\n            // we are already in mapper-run phase, and in that case we use `requestAnimationFrame`\n            // instead of `queueMicrotask` which will schedule mapper run for the next\n            // frame instead of queuing another set of updates in the same frame.\n            requestAnimationFrame(mapperRun);\n          } else {\n            queueMicrotask(mapperRun);\n          }\n          runRequested = true;\n        }\n      }\n      function extractInputs(inputs, resultArray) {\n        if (Array.isArray(inputs)) {\n          for (const input of inputs) {\n            if (input) {\n              extractInputs(input, resultArray);\n            }\n          }\n        } else if (isSharedValue(inputs)) {\n          resultArray.push(inputs);\n        } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\n          // we only extract inputs recursively from \"plain\" objects here, if object\n          // is of a derivative class (e.g. HostObject on web, or Map) we don't scan\n          // it recursively\n          for (const element of Object.values(inputs)) {\n            if (element) {\n              extractInputs(element, resultArray);\n            }\n          }\n        }\n        return resultArray;\n      }\n      return {\n        start: (mapperID, worklet, inputs, outputs) => {\n          const mapper = {\n            id: mapperID,\n            dirty: true,\n            worklet,\n            inputs: extractInputs(inputs, []),\n            outputs\n          };\n          mappers.set(mapper.id, mapper);\n          sortedMappers = [];\n          for (const sv of mapper.inputs) {\n            sv.addListener(mapper.id, () => {\n              mapper.dirty = true;\n              maybeRequestUpdates();\n            });\n          }\n          maybeRequestUpdates();\n        },\n        stop: mapperID => {\n          const mapper = mappers.get(mapperID);\n          if (mapper) {\n            mappers.delete(mapper.id);\n            sortedMappers = [];\n            for (const sv of mapper.inputs) {\n              sv.removeListener(mapper.id);\n            }\n          }\n        }\n      };\n    };\n    createMapperRegistry.__closure = {\n      IS_JEST,\n      isSharedValue\n    };\n    createMapperRegistry.__workletHash = 6649678464578;\n    createMapperRegistry.__pluginVersion = \"0.5.1\";\n    createMapperRegistry.__initData = _worklet_6649678464578_init_data;\n    createMapperRegistry.__stackDetails = _e;\n    return createMapperRegistry;\n  }({\n    _worklet_6649678464578_init_data,\n    IS_JEST: _common.IS_JEST,\n    isSharedValue: _isSharedValue.isSharedValue\n  });\n  let MAPPER_ID = 9999;\n  const _worklet_6546531365916_init_data = {\n    code: \"function reactNativeReanimated_mappersJs2(){const{createMapperRegistry,mapperID,worklet,inputs,outputs}=this.__closure;let mapperRegistry=global.__mapperRegistry;if(mapperRegistry===undefined){mapperRegistry=global.__mapperRegistry=createMapperRegistry();}mapperRegistry.start(mapperID,worklet,inputs,outputs);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs2\\\",\\\"createMapperRegistry\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"start\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AA6KU,SAAAA,gCAAMA,CAAA,QAAAC,oBAAA,CAAAC,QAAA,CAAAC,OAAA,CAAAC,MAAA,CAAAC,OAAA,OAAAC,SAAA,CACZ,GAAI,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC5C,GAAIF,cAAc,GAAKG,SAAS,CAAE,CAChCH,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAAGR,oBAAoB,CAAC,CAAC,CACnE,CACAM,cAAc,CAACI,KAAK,CAACT,QAAQ,CAAEC,OAAO,CAAEC,MAAM,CAAEC,OAAO,CAAC,CAC1D\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function startMapper(worklet, inputs = [], outputs = []) {\n    const mapperID = MAPPER_ID += 1;\n    (0, _reactNativeWorklets.runOnUI)(function reactNativeReanimated_mappersJs2Factory({\n      _worklet_6546531365916_init_data,\n      createMapperRegistry,\n      mapperID,\n      worklet,\n      inputs,\n      outputs\n    }) {\n      const _e = [new global.Error(), -6, -27];\n      const reactNativeReanimated_mappersJs2 = function () {\n        let mapperRegistry = global.__mapperRegistry;\n        if (mapperRegistry === undefined) {\n          mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n        }\n        mapperRegistry.start(mapperID, worklet, inputs, outputs);\n      };\n      reactNativeReanimated_mappersJs2.__closure = {\n        createMapperRegistry,\n        mapperID,\n        worklet,\n        inputs,\n        outputs\n      };\n      reactNativeReanimated_mappersJs2.__workletHash = 6546531365916;\n      reactNativeReanimated_mappersJs2.__pluginVersion = \"0.5.1\";\n      reactNativeReanimated_mappersJs2.__initData = _worklet_6546531365916_init_data;\n      reactNativeReanimated_mappersJs2.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs2;\n    }({\n      _worklet_6546531365916_init_data,\n      createMapperRegistry,\n      mapperID,\n      worklet,\n      inputs,\n      outputs\n    }))();\n    return mapperID;\n  }\n  const _worklet_2151698497712_init_data = {\n    code: \"function reactNativeReanimated_mappersJs3(){const{mapperID}=this.__closure;const mapperRegistry=global.__mapperRegistry;mapperRegistry===null||mapperRegistry===void 0||mapperRegistry.stop(mapperID);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs3\\\",\\\"mapperID\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AAuLU,SAAAA,gCAAMA,CAAA,QAAAC,QAAA,OAAAC,SAAA,CACZ,KAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC9CF,cAAc,SAAdA,cAAc,WAAdA,cAAc,CAAEG,IAAI,CAACL,QAAQ,CAAC,CAChC\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function stopMapper(mapperID) {\n    (0, _reactNativeWorklets.runOnUI)(function reactNativeReanimated_mappersJs3Factory({\n      _worklet_2151698497712_init_data,\n      mapperID\n    }) {\n      const _e = [new global.Error(), -2, -27];\n      const reactNativeReanimated_mappersJs3 = function () {\n        const mapperRegistry = global.__mapperRegistry;\n        mapperRegistry?.stop(mapperID);\n      };\n      reactNativeReanimated_mappersJs3.__closure = {\n        mapperID\n      };\n      reactNativeReanimated_mappersJs3.__workletHash = 2151698497712;\n      reactNativeReanimated_mappersJs3.__pluginVersion = \"0.5.1\";\n      reactNativeReanimated_mappersJs3.__initData = _worklet_2151698497712_init_data;\n      reactNativeReanimated_mappersJs3.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs3;\n    }({\n      _worklet_2151698497712_init_data,\n      mapperID\n    }))();\n  }\n});","lineCount":274,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,172,0,"exports"],[7,9,172,0],[7,10,172,0,"startMapper"],[7,21,172,0],[7,24,172,0,"startMapper"],[7,35,172,0],[8,2,183,0,"exports"],[8,9,183,0],[8,10,183,0,"stopMapper"],[8,20,183,0],[8,23,183,0,"stopMapper"],[8,33,183,0],[9,2,3,0],[9,6,3,0,"_reactNativeWorklets"],[9,26,3,0],[9,29,3,0,"require"],[9,36,3,0],[9,37,3,0,"_dependencyMap"],[9,51,3,0],[10,2,4,0],[10,6,4,0,"_common"],[10,13,4,0],[10,16,4,0,"require"],[10,23,4,0],[10,24,4,0,"_dependencyMap"],[10,38,4,0],[11,2,5,0],[11,6,5,0,"_isSharedValue"],[11,20,5,0],[11,23,5,0,"require"],[11,30,5,0],[11,31,5,0,"_dependencyMap"],[11,45,5,0],[12,2,5,48],[12,8,5,48,"_worklet_6649678464578_init_data"],[12,40,5,48],[13,4,5,48,"code"],[13,8,5,48],[14,4,5,48,"location"],[14,12,5,48],[15,4,5,48,"sourceMap"],[15,13,5,48],[16,2,5,48],[17,2,5,48],[17,8,5,48,"createMapperRegistry"],[17,28,5,48],[17,31,6,0],[17,40,6,0,"createMapperRegistry_reactNativeReanimated_mappersJs1Factory"],[17,101,6,0],[18,4,6,0,"_worklet_6649678464578_init_data"],[18,36,6,0],[19,4,91,8,"IS_JEST"],[19,11,91,15],[20,4,126,15,"isSharedValue"],[21,2,126,28],[22,4,126,28],[22,10,126,28,"_e"],[22,12,126,28],[22,20,126,28,"global"],[22,26,126,28],[22,27,126,28,"Error"],[22,32,126,28],[23,4,126,28],[23,10,126,28,"createMapperRegistry"],[23,30,126,28],[23,42,126,28,"createMapperRegistry"],[23,43,126,28],[23,45,6,32],[24,6,9,2],[24,12,9,8,"mappers"],[24,19,9,15],[24,22,9,18],[24,26,9,22,"Map"],[24,29,9,25],[24,30,9,26],[24,31,9,27],[25,6,10,2],[25,10,10,6,"sortedMappers"],[25,23,10,19],[25,26,10,22],[25,28,10,24],[26,6,11,2],[26,10,11,6,"runRequested"],[26,22,11,18],[26,25,11,21],[26,30,11,26],[27,6,12,2],[27,10,12,6,"processingMappers"],[27,27,12,23],[27,30,12,26],[27,35,12,31],[28,6,13,2],[28,15,13,11,"updateMappersOrder"],[28,33,13,29,"updateMappersOrder"],[28,34,13,29],[28,36,13,32],[29,8,14,4],[30,8,15,4],[31,8,16,4],[32,8,17,4],[33,8,18,4],[34,8,19,4],[35,8,20,4],[36,8,21,4],[37,8,22,4],[38,8,23,4],[39,8,24,4],[40,8,25,4],[41,8,26,4],[42,8,27,4],[43,8,28,4],[44,8,29,4],[45,8,30,4],[46,8,31,4],[47,8,32,4],[48,8,33,4],[49,8,34,4],[49,14,34,10,"pre"],[49,17,34,13],[49,20,34,16],[49,24,34,20,"Map"],[49,27,34,23],[49,28,34,24],[49,29,34,25],[49,30,34,26],[49,31,34,27],[50,8,35,4,"mappers"],[50,15,35,11],[50,16,35,12,"forEach"],[50,23,35,19],[50,24,35,20,"mapper"],[50,30,35,26],[50,34,35,30],[51,10,36,6],[51,14,36,10,"mapper"],[51,20,36,16],[51,21,36,17,"outputs"],[51,28,36,24],[51,30,36,26],[52,12,37,8],[52,17,37,13],[52,23,37,19,"output"],[52,29,37,25],[52,33,37,29,"mapper"],[52,39,37,35],[52,40,37,36,"outputs"],[52,47,37,43],[52,49,37,45],[53,14,38,10],[53,20,38,16,"preMappers"],[53,30,38,26],[53,33,38,29,"pre"],[53,36,38,32],[53,37,38,33,"get"],[53,40,38,36],[53,41,38,37,"output"],[53,47,38,43],[53,48,38,44],[54,14,39,10],[54,18,39,14,"preMappers"],[54,28,39,24],[54,33,39,29,"undefined"],[54,42,39,38],[54,44,39,40],[55,16,40,12,"pre"],[55,19,40,15],[55,20,40,16,"set"],[55,23,40,19],[55,24,40,20,"output"],[55,30,40,26],[55,32,40,28],[55,33,40,29,"mapper"],[55,39,40,35],[55,40,40,36],[55,41,40,37],[56,14,41,10],[56,15,41,11],[56,21,41,17],[57,16,42,12,"preMappers"],[57,26,42,22],[57,27,42,23,"push"],[57,31,42,27],[57,32,42,28,"mapper"],[57,38,42,34],[57,39,42,35],[58,14,43,10],[59,12,44,8],[60,10,45,6],[61,8,46,4],[61,9,46,5],[61,10,46,6],[62,8,47,4],[62,14,47,10,"visited"],[62,21,47,17],[62,24,47,20],[62,28,47,24,"Set"],[62,31,47,27],[62,32,47,28],[62,33,47,29],[63,8,48,4],[63,14,48,10,"newOrder"],[63,22,48,18],[63,25,48,21],[63,27,48,23],[64,8,49,4],[64,17,49,13,"dfs"],[64,20,49,16,"dfs"],[64,21,49,17,"mapper"],[64,27,49,23],[64,29,49,25],[65,10,50,6,"visited"],[65,17,50,13],[65,18,50,14,"add"],[65,21,50,17],[65,22,50,18,"mapper"],[65,28,50,24],[65,29,50,25],[66,10,51,6],[66,15,51,11],[66,21,51,17,"input"],[66,26,51,22],[66,30,51,26,"mapper"],[66,36,51,32],[66,37,51,33,"inputs"],[66,43,51,39],[66,45,51,41],[67,12,52,8],[67,18,52,14,"preMappers"],[67,28,52,24],[67,31,52,27,"pre"],[67,34,52,30],[67,35,52,31,"get"],[67,38,52,34],[67,39,52,35,"input"],[67,44,52,40],[67,45,52,41],[68,12,53,8],[68,16,53,12,"preMappers"],[68,26,53,22],[68,28,53,24],[69,14,54,10],[69,19,54,15],[69,25,54,21,"preMapper"],[69,34,54,30],[69,38,54,34,"preMappers"],[69,48,54,44],[69,50,54,46],[70,16,55,12],[70,20,55,16],[70,21,55,17,"visited"],[70,28,55,24],[70,29,55,25,"has"],[70,32,55,28],[70,33,55,29,"preMapper"],[70,42,55,38],[70,43,55,39],[70,45,55,41],[71,18,56,14,"dfs"],[71,21,56,17],[71,22,56,18,"preMapper"],[71,31,56,27],[71,32,56,28],[72,16,57,12],[73,14,58,10],[74,12,59,8],[75,10,60,6],[76,10,61,6,"newOrder"],[76,18,61,14],[76,19,61,15,"push"],[76,23,61,19],[76,24,61,20,"mapper"],[76,30,61,26],[76,31,61,27],[77,8,62,4],[78,8,63,4,"mappers"],[78,15,63,11],[78,16,63,12,"forEach"],[78,23,63,19],[78,24,63,20,"mapper"],[78,30,63,26],[78,34,63,30],[79,10,64,6],[79,14,64,10],[79,15,64,11,"visited"],[79,22,64,18],[79,23,64,19,"has"],[79,26,64,22],[79,27,64,23,"mapper"],[79,33,64,29],[79,34,64,30],[79,36,64,32],[80,12,65,8,"dfs"],[80,15,65,11],[80,16,65,12,"mapper"],[80,22,65,18],[80,23,65,19],[81,10,66,6],[82,8,67,4],[82,9,67,5],[82,10,67,6],[83,8,68,4,"sortedMappers"],[83,21,68,17],[83,24,68,20,"newOrder"],[83,32,68,28],[84,6,69,2],[85,6,70,2],[85,15,70,11,"mapperRun"],[85,24,70,20,"mapperRun"],[85,25,70,20],[85,27,70,23],[86,8,71,4,"runRequested"],[86,20,71,16],[86,23,71,19],[86,28,71,24],[87,8,72,4],[87,12,72,8,"processingMappers"],[87,29,72,25],[87,31,72,27],[88,10,73,6],[89,8,74,4],[90,8,75,4],[90,12,75,8],[91,10,76,6,"processingMappers"],[91,27,76,23],[91,30,76,26],[91,34,76,30],[92,10,77,6],[92,14,77,10,"mappers"],[92,21,77,17],[92,22,77,18,"size"],[92,26,77,22],[92,31,77,27,"sortedMappers"],[92,44,77,40],[92,45,77,41,"length"],[92,51,77,47],[92,53,77,49],[93,12,78,8,"updateMappersOrder"],[93,30,78,26],[93,31,78,27],[93,32,78,28],[94,10,79,6],[95,10,80,6],[95,15,80,11],[95,21,80,17,"mapper"],[95,27,80,23],[95,31,80,27,"sortedMappers"],[95,44,80,40],[95,46,80,42],[96,12,81,8],[96,16,81,12,"mapper"],[96,22,81,18],[96,23,81,19,"dirty"],[96,28,81,24],[96,30,81,26],[97,14,82,10,"mapper"],[97,20,82,16],[97,21,82,17,"dirty"],[97,26,82,22],[97,29,82,25],[97,34,82,30],[98,14,83,10,"mapper"],[98,20,83,16],[98,21,83,17,"worklet"],[98,28,83,24],[98,29,83,25],[98,30,83,26],[99,12,84,8],[100,10,85,6],[101,8,86,4],[101,9,86,5],[101,18,86,14],[102,10,87,6,"processingMappers"],[102,27,87,23],[102,30,87,26],[102,35,87,31],[103,8,88,4],[104,6,89,2],[105,6,90,2],[105,15,90,11,"maybeRequestUpdates"],[105,34,90,30,"maybeRequestUpdates"],[105,35,90,30],[105,37,90,33],[106,8,91,4],[106,12,91,8,"IS_JEST"],[106,19,91,15],[106,21,91,17],[107,10,92,6],[108,10,93,6],[109,10,94,6],[110,10,95,6],[111,10,96,6],[112,10,97,6],[113,10,98,6,"mapperRun"],[113,19,98,15],[113,20,98,16],[113,21,98,17],[114,8,99,4],[114,9,99,5],[114,15,99,11],[114,19,99,15],[114,20,99,16,"runRequested"],[114,32,99,28],[114,34,99,30],[115,10,100,6],[115,14,100,10,"processingMappers"],[115,31,100,27],[115,33,100,29],[116,12,101,8],[117,12,102,8],[118,12,103,8],[119,12,104,8],[120,12,105,8],[121,12,106,8],[122,12,107,8],[123,12,108,8],[124,12,109,8],[125,12,110,8],[126,12,111,8],[127,12,112,8,"requestAnimationFrame"],[127,33,112,29],[127,34,112,30,"mapperRun"],[127,43,112,39],[127,44,112,40],[128,10,113,6],[128,11,113,7],[128,17,113,13],[129,12,114,8,"queueMicrotask"],[129,26,114,22],[129,27,114,23,"mapperRun"],[129,36,114,32],[129,37,114,33],[130,10,115,6],[131,10,116,6,"runRequested"],[131,22,116,18],[131,25,116,21],[131,29,116,25],[132,8,117,4],[133,6,118,2],[134,6,119,2],[134,15,119,11,"extractInputs"],[134,28,119,24,"extractInputs"],[134,29,119,25,"inputs"],[134,35,119,31],[134,37,119,33,"resultArray"],[134,48,119,44],[134,50,119,46],[135,8,120,4],[135,12,120,8,"Array"],[135,17,120,13],[135,18,120,14,"isArray"],[135,25,120,21],[135,26,120,22,"inputs"],[135,32,120,28],[135,33,120,29],[135,35,120,31],[136,10,121,6],[136,15,121,11],[136,21,121,17,"input"],[136,26,121,22],[136,30,121,26,"inputs"],[136,36,121,32],[136,38,121,34],[137,12,122,8],[137,16,122,12,"input"],[137,21,122,17],[137,23,122,19],[138,14,123,10,"extractInputs"],[138,27,123,23],[138,28,123,24,"input"],[138,33,123,29],[138,35,123,31,"resultArray"],[138,46,123,42],[138,47,123,43],[139,12,124,8],[140,10,125,6],[141,8,126,4],[141,9,126,5],[141,15,126,11],[141,19,126,15,"isSharedValue"],[141,32,126,28],[141,33,126,29,"inputs"],[141,39,126,35],[141,40,126,36],[141,42,126,38],[142,10,127,6,"resultArray"],[142,21,127,17],[142,22,127,18,"push"],[142,26,127,22],[142,27,127,23,"inputs"],[142,33,127,29],[142,34,127,30],[143,8,128,4],[143,9,128,5],[143,15,128,11],[143,19,128,15,"Object"],[143,25,128,21],[143,26,128,22,"getPrototypeOf"],[143,40,128,36],[143,41,128,37,"inputs"],[143,47,128,43],[143,48,128,44],[143,53,128,49,"Object"],[143,59,128,55],[143,60,128,56,"prototype"],[143,69,128,65],[143,71,128,67],[144,10,129,6],[145,10,130,6],[146,10,131,6],[147,10,132,6],[147,15,132,11],[147,21,132,17,"element"],[147,28,132,24],[147,32,132,28,"Object"],[147,38,132,34],[147,39,132,35,"values"],[147,45,132,41],[147,46,132,42,"inputs"],[147,52,132,48],[147,53,132,49],[147,55,132,51],[148,12,133,8],[148,16,133,12,"element"],[148,23,133,19],[148,25,133,21],[149,14,134,10,"extractInputs"],[149,27,134,23],[149,28,134,24,"element"],[149,35,134,31],[149,37,134,33,"resultArray"],[149,48,134,44],[149,49,134,45],[150,12,135,8],[151,10,136,6],[152,8,137,4],[153,8,138,4],[153,15,138,11,"resultArray"],[153,26,138,22],[154,6,139,2],[155,6,140,2],[155,13,140,9],[156,8,141,4,"start"],[156,13,141,9],[156,15,141,11,"start"],[156,16,141,12,"mapperID"],[156,24,141,20],[156,26,141,22,"worklet"],[156,33,141,29],[156,35,141,31,"inputs"],[156,41,141,37],[156,43,141,39,"outputs"],[156,50,141,46],[156,55,141,51],[157,10,142,6],[157,16,142,12,"mapper"],[157,22,142,18],[157,25,142,21],[158,12,143,8,"id"],[158,14,143,10],[158,16,143,12,"mapperID"],[158,24,143,20],[159,12,144,8,"dirty"],[159,17,144,13],[159,19,144,15],[159,23,144,19],[160,12,145,8,"worklet"],[160,19,145,15],[161,12,146,8,"inputs"],[161,18,146,14],[161,20,146,16,"extractInputs"],[161,33,146,29],[161,34,146,30,"inputs"],[161,40,146,36],[161,42,146,38],[161,44,146,40],[161,45,146,41],[162,12,147,8,"outputs"],[163,10,148,6],[163,11,148,7],[164,10,149,6,"mappers"],[164,17,149,13],[164,18,149,14,"set"],[164,21,149,17],[164,22,149,18,"mapper"],[164,28,149,24],[164,29,149,25,"id"],[164,31,149,27],[164,33,149,29,"mapper"],[164,39,149,35],[164,40,149,36],[165,10,150,6,"sortedMappers"],[165,23,150,19],[165,26,150,22],[165,28,150,24],[166,10,151,6],[166,15,151,11],[166,21,151,17,"sv"],[166,23,151,19],[166,27,151,23,"mapper"],[166,33,151,29],[166,34,151,30,"inputs"],[166,40,151,36],[166,42,151,38],[167,12,152,8,"sv"],[167,14,152,10],[167,15,152,11,"addListener"],[167,26,152,22],[167,27,152,23,"mapper"],[167,33,152,29],[167,34,152,30,"id"],[167,36,152,32],[167,38,152,34],[167,44,152,40],[168,14,153,10,"mapper"],[168,20,153,16],[168,21,153,17,"dirty"],[168,26,153,22],[168,29,153,25],[168,33,153,29],[169,14,154,10,"maybeRequestUpdates"],[169,33,154,29],[169,34,154,30],[169,35,154,31],[170,12,155,8],[170,13,155,9],[170,14,155,10],[171,10,156,6],[172,10,157,6,"maybeRequestUpdates"],[172,29,157,25],[172,30,157,26],[172,31,157,27],[173,8,158,4],[173,9,158,5],[174,8,159,4,"stop"],[174,12,159,8],[174,14,159,10,"mapperID"],[174,22,159,18],[174,26,159,22],[175,10,160,6],[175,16,160,12,"mapper"],[175,22,160,18],[175,25,160,21,"mappers"],[175,32,160,28],[175,33,160,29,"get"],[175,36,160,32],[175,37,160,33,"mapperID"],[175,45,160,41],[175,46,160,42],[176,10,161,6],[176,14,161,10,"mapper"],[176,20,161,16],[176,22,161,18],[177,12,162,8,"mappers"],[177,19,162,15],[177,20,162,16,"delete"],[177,26,162,22],[177,27,162,23,"mapper"],[177,33,162,29],[177,34,162,30,"id"],[177,36,162,32],[177,37,162,33],[178,12,163,8,"sortedMappers"],[178,25,163,21],[178,28,163,24],[178,30,163,26],[179,12,164,8],[179,17,164,13],[179,23,164,19,"sv"],[179,25,164,21],[179,29,164,25,"mapper"],[179,35,164,31],[179,36,164,32,"inputs"],[179,42,164,38],[179,44,164,40],[180,14,165,10,"sv"],[180,16,165,12],[180,17,165,13,"removeListener"],[180,31,165,27],[180,32,165,28,"mapper"],[180,38,165,34],[180,39,165,35,"id"],[180,41,165,37],[180,42,165,38],[181,12,166,8],[182,10,167,6],[183,8,168,4],[184,6,169,2],[184,7,169,3],[185,4,170,0],[185,5,170,1],[186,4,170,1,"createMapperRegistry"],[186,24,170,1],[186,25,170,1,"__closure"],[186,34,170,1],[187,6,91,8,"IS_JEST"],[187,13,91,15],[188,6,126,15,"isSharedValue"],[189,4,126,28],[190,4,126,28,"createMapperRegistry"],[190,24,126,28],[190,25,126,28,"__workletHash"],[190,38,126,28],[191,4,126,28,"createMapperRegistry"],[191,24,126,28],[191,25,126,28,"__pluginVersion"],[191,40,126,28],[192,4,126,28,"createMapperRegistry"],[192,24,126,28],[192,25,126,28,"__initData"],[192,35,126,28],[192,38,126,28,"_worklet_6649678464578_init_data"],[192,70,126,28],[193,4,126,28,"createMapperRegistry"],[193,24,126,28],[193,25,126,28,"__stackDetails"],[193,39,126,28],[193,42,126,28,"_e"],[193,44,126,28],[194,4,126,28],[194,11,126,28,"createMapperRegistry"],[194,31,126,28],[195,2,126,28],[195,3,6,0],[196,4,6,0,"_worklet_6649678464578_init_data"],[196,36,6,0],[197,4,91,8,"IS_JEST"],[197,11,91,15],[197,13,91,8,"IS_JEST"],[197,20,91,15],[197,21,91,15,"IS_JEST"],[197,28,91,15],[198,4,126,15,"isSharedValue"],[198,17,126,28],[198,19,126,15,"isSharedValue"],[198,33,126,28],[198,34,126,28,"isSharedValue"],[199,2,126,28],[200,2,171,0],[200,6,171,4,"MAPPER_ID"],[200,15,171,13],[200,18,171,16],[200,22,171,20],[201,2,171,21],[201,8,171,21,"_worklet_6546531365916_init_data"],[201,40,171,21],[202,4,171,21,"code"],[202,8,171,21],[203,4,171,21,"location"],[203,12,171,21],[204,4,171,21,"sourceMap"],[204,13,171,21],[205,2,171,21],[206,2,172,7],[206,11,172,16,"startMapper"],[206,22,172,27,"startMapper"],[206,23,172,28,"worklet"],[206,30,172,35],[206,32,172,37,"inputs"],[206,38,172,43],[206,41,172,46],[206,43,172,48],[206,45,172,50,"outputs"],[206,52,172,57],[206,55,172,60],[206,57,172,62],[206,59,172,64],[207,4,173,2],[207,10,173,8,"mapperID"],[207,18,173,16],[207,21,173,19,"MAPPER_ID"],[207,30,173,28],[207,34,173,32],[207,35,173,33],[208,4,174,2],[208,8,174,2,"runOnUI"],[208,28,174,9],[208,29,174,9,"runOnUI"],[208,36,174,9],[208,38,174,10],[208,47,174,10,"reactNativeReanimated_mappersJs2Factory"],[208,87,174,10],[209,6,174,10,"_worklet_6546531365916_init_data"],[209,38,174,10],[210,6,177,49,"createMapperRegistry"],[210,26,177,69],[211,6,179,25,"mapperID"],[211,14,179,33],[212,6,179,35,"worklet"],[212,13,179,42],[213,6,179,44,"inputs"],[213,12,179,50],[214,6,179,52,"outputs"],[215,4,179,59],[216,6,179,59],[216,12,179,59,"_e"],[216,14,179,59],[216,22,179,59,"global"],[216,28,179,59],[216,29,179,59,"Error"],[216,34,179,59],[217,6,179,59],[217,12,179,59,"reactNativeReanimated_mappersJs2"],[217,44,179,59],[217,56,179,59,"reactNativeReanimated_mappersJs2"],[217,57,179,59],[217,59,174,16],[218,8,175,4],[218,12,175,8,"mapperRegistry"],[218,26,175,22],[218,29,175,25,"global"],[218,35,175,31],[218,36,175,32,"__mapperRegistry"],[218,52,175,48],[219,8,176,4],[219,12,176,8,"mapperRegistry"],[219,26,176,22],[219,31,176,27,"undefined"],[219,40,176,36],[219,42,176,38],[220,10,177,6,"mapperRegistry"],[220,24,177,20],[220,27,177,23,"global"],[220,33,177,29],[220,34,177,30,"__mapperRegistry"],[220,50,177,46],[220,53,177,49,"createMapperRegistry"],[220,73,177,69],[220,74,177,70],[220,75,177,71],[221,8,178,4],[222,8,179,4,"mapperRegistry"],[222,22,179,18],[222,23,179,19,"start"],[222,28,179,24],[222,29,179,25,"mapperID"],[222,37,179,33],[222,39,179,35,"worklet"],[222,46,179,42],[222,48,179,44,"inputs"],[222,54,179,50],[222,56,179,52,"outputs"],[222,63,179,59],[222,64,179,60],[223,6,180,2],[223,7,180,3],[224,6,180,3,"reactNativeReanimated_mappersJs2"],[224,38,180,3],[224,39,180,3,"__closure"],[224,48,180,3],[225,8,177,49,"createMapperRegistry"],[225,28,177,69],[226,8,179,25,"mapperID"],[226,16,179,33],[227,8,179,35,"worklet"],[227,15,179,42],[228,8,179,44,"inputs"],[228,14,179,50],[229,8,179,52,"outputs"],[230,6,179,59],[231,6,179,59,"reactNativeReanimated_mappersJs2"],[231,38,179,59],[231,39,179,59,"__workletHash"],[231,52,179,59],[232,6,179,59,"reactNativeReanimated_mappersJs2"],[232,38,179,59],[232,39,179,59,"__pluginVersion"],[232,54,179,59],[233,6,179,59,"reactNativeReanimated_mappersJs2"],[233,38,179,59],[233,39,179,59,"__initData"],[233,49,179,59],[233,52,179,59,"_worklet_6546531365916_init_data"],[233,84,179,59],[234,6,179,59,"reactNativeReanimated_mappersJs2"],[234,38,179,59],[234,39,179,59,"__stackDetails"],[234,53,179,59],[234,56,179,59,"_e"],[234,58,179,59],[235,6,179,59],[235,13,179,59,"reactNativeReanimated_mappersJs2"],[235,45,179,59],[236,4,179,59],[236,5,174,10],[237,6,174,10,"_worklet_6546531365916_init_data"],[237,38,174,10],[238,6,177,49,"createMapperRegistry"],[238,26,177,69],[239,6,179,25,"mapperID"],[239,14,179,33],[240,6,179,35,"worklet"],[240,13,179,42],[241,6,179,44,"inputs"],[241,12,179,50],[242,6,179,52,"outputs"],[243,4,179,59],[243,6,180,3],[243,7,180,4],[243,8,180,5],[243,9,180,6],[244,4,181,2],[244,11,181,9,"mapperID"],[244,19,181,17],[245,2,182,0],[246,2,182,1],[246,8,182,1,"_worklet_2151698497712_init_data"],[246,40,182,1],[247,4,182,1,"code"],[247,8,182,1],[248,4,182,1,"location"],[248,12,182,1],[249,4,182,1,"sourceMap"],[249,13,182,1],[250,2,182,1],[251,2,183,7],[251,11,183,16,"stopMapper"],[251,21,183,26,"stopMapper"],[251,22,183,27,"mapperID"],[251,30,183,35],[251,32,183,37],[252,4,184,2],[252,8,184,2,"runOnUI"],[252,28,184,9],[252,29,184,9,"runOnUI"],[252,36,184,9],[252,38,184,10],[252,47,184,10,"reactNativeReanimated_mappersJs3Factory"],[252,87,184,10],[253,6,184,10,"_worklet_2151698497712_init_data"],[253,38,184,10],[254,6,186,25,"mapperID"],[255,4,186,33],[256,6,186,33],[256,12,186,33,"_e"],[256,14,186,33],[256,22,186,33,"global"],[256,28,186,33],[256,29,186,33,"Error"],[256,34,186,33],[257,6,186,33],[257,12,186,33,"reactNativeReanimated_mappersJs3"],[257,44,186,33],[257,56,186,33,"reactNativeReanimated_mappersJs3"],[257,57,186,33],[257,59,184,16],[258,8,185,4],[258,14,185,10,"mapperRegistry"],[258,28,185,24],[258,31,185,27,"global"],[258,37,185,33],[258,38,185,34,"__mapperRegistry"],[258,54,185,50],[259,8,186,4,"mapperRegistry"],[259,22,186,18],[259,24,186,20,"stop"],[259,28,186,24],[259,29,186,25,"mapperID"],[259,37,186,33],[259,38,186,34],[260,6,187,2],[260,7,187,3],[261,6,187,3,"reactNativeReanimated_mappersJs3"],[261,38,187,3],[261,39,187,3,"__closure"],[261,48,187,3],[262,8,186,25,"mapperID"],[263,6,186,33],[264,6,186,33,"reactNativeReanimated_mappersJs3"],[264,38,186,33],[264,39,186,33,"__workletHash"],[264,52,186,33],[265,6,186,33,"reactNativeReanimated_mappersJs3"],[265,38,186,33],[265,39,186,33,"__pluginVersion"],[265,54,186,33],[266,6,186,33,"reactNativeReanimated_mappersJs3"],[266,38,186,33],[266,39,186,33,"__initData"],[266,49,186,33],[266,52,186,33,"_worklet_2151698497712_init_data"],[266,84,186,33],[267,6,186,33,"reactNativeReanimated_mappersJs3"],[267,38,186,33],[267,39,186,33,"__stackDetails"],[267,53,186,33],[267,56,186,33,"_e"],[267,58,186,33],[268,6,186,33],[268,13,186,33,"reactNativeReanimated_mappersJs3"],[268,45,186,33],[269,4,186,33],[269,5,184,10],[270,6,184,10,"_worklet_2151698497712_init_data"],[270,38,184,10],[271,6,186,25,"mapperID"],[272,4,186,33],[272,6,187,3],[272,7,187,4],[272,8,187,5],[272,9,187,6],[273,2,188,0],[274,0,188,1],[274,3]],"functionMap":{"names":["<global>","createMapperRegistry","updateMappersOrder","forEach$argument_0","dfs","mapperRun","maybeRequestUpdates","extractInputs","start","sv.addListener$argument_1","stop","startMapper","runOnUI$argument_0","stopMapper"],"mappings":"AAA;ACK;ECO;oBCsB;KDW;IEG;KFa;oBCC;KDI;GDE;EIC;GJmB;EKC;GL4B;EMC;GNoB;WOE;kCCW;SDG;KPG;USC;KTS;CDE;OWE;UCE;GDM;CXE;OaC;UDC;GCG;CbC"},"hasCjsExports":false},"type":"js/module"}]}