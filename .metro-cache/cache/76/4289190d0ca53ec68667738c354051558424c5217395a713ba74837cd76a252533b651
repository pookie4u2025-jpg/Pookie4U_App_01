{"dependencies":[{"name":"../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":88,"index":103}}],"key":"IDJz4HWb8BkS18xB4AVSbpQcs+Y=","exportNames":["*"],"imports":1}},{"name":"../easing","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":104},"end":{"line":4,"column":73,"index":177}}],"key":"tRdcigtM/XpDwl2koov2a/f4tw8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":178},"end":{"line":5,"column":45,"index":223}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.maybeAddSuffixes = maybeAddSuffixes;\n  exports.parseTimingFunction = parseTimingFunction;\n  exports.parseDimensionValue = parseDimensionValue;\n  exports.opacifyColor = opacifyColor;\n  var _common = require(_dependencyMap[0], \"../../common\");\n  var _easing = require(_dependencyMap[1], \"../easing\");\n  var _utils = require(_dependencyMap[2], \"../utils\");\n  function maybeAddSuffixes(object, key, suffix) {\n    if (!(key in object)) {\n      return [];\n    }\n    return object[key].map(value => (0, _common.maybeAddSuffix)(value, suffix));\n  }\n  function easingMapper(easing) {\n    if (typeof easing === 'string') {\n      return easing;\n    }\n    if (easing instanceof _easing.StepsEasing) {\n      return `steps(${easing.stepsNumber}, ${(0, _utils.kebabizeCamelCase)(easing.modifier)})`;\n    }\n    if (easing instanceof _easing.CubicBezierEasing) {\n      return `cubic-bezier(${easing.x1}, ${easing.y1}, ${easing.x2}, ${easing.y2})`;\n    }\n    if (easing instanceof _easing.LinearEasing) {\n      const values = easing.points.map(point => Array.isArray(point) ? point.join(' ') : point).join(', ');\n      return `linear(${values})`;\n    }\n    throw new _common.ReanimatedError(`Invalid timing function ${easing.toString()}`);\n  }\n  function parseTimingFunction(timingFunction) {\n    if (Array.isArray(timingFunction)) {\n      return timingFunction.map(easingMapper).join(', ');\n    }\n    return easingMapper(timingFunction);\n  }\n  function parseDimensionValue(value) {\n    if (typeof value === 'object') {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (!(0, _common.hasSuffix)(value)) {\n      return `${value}px`;\n    }\n    return value;\n  }\n  function opacifyColor(color, opacity) {\n    const colorNumber = (0, _common.processColor)(color);\n    if (colorNumber == null) {\n      return null;\n    }\n    const a = colorNumber >> 24 & 0xff;\n    const r = colorNumber >> 16 & 0xff;\n    const g = colorNumber >> 8 & 0xff;\n    const b = colorNumber & 0xff;\n\n    // Combine the existing alpha with the new opacity\n    const newAlpha = a / 255 * opacity;\n    return `rgba(${r}, ${g}, ${b}, ${newAlpha})`;\n  }\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,6,0,"exports"],[7,9,6,0],[7,10,6,0,"maybeAddSuffixes"],[7,26,6,0],[7,29,6,0,"maybeAddSuffixes"],[7,45,6,0],[8,2,28,0,"exports"],[8,9,28,0],[8,10,28,0,"parseTimingFunction"],[8,29,28,0],[8,32,28,0,"parseTimingFunction"],[8,51,28,0],[9,2,34,0,"exports"],[9,9,34,0],[9,10,34,0,"parseDimensionValue"],[9,29,34,0],[9,32,34,0,"parseDimensionValue"],[9,51,34,0],[10,2,46,0,"exports"],[10,9,46,0],[10,10,46,0,"opacifyColor"],[10,22,46,0],[10,25,46,0,"opacifyColor"],[10,37,46,0],[11,2,3,0],[11,6,3,0,"_common"],[11,13,3,0],[11,16,3,0,"require"],[11,23,3,0],[11,24,3,0,"_dependencyMap"],[11,38,3,0],[12,2,4,0],[12,6,4,0,"_easing"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_utils"],[13,12,5,0],[13,15,5,0,"require"],[13,22,5,0],[13,23,5,0,"_dependencyMap"],[13,37,5,0],[14,2,6,7],[14,11,6,16,"maybeAddSuffixes"],[14,27,6,32,"maybeAddSuffixes"],[14,28,6,33,"object"],[14,34,6,39],[14,36,6,41,"key"],[14,39,6,44],[14,41,6,46,"suffix"],[14,47,6,52],[14,49,6,54],[15,4,7,2],[15,8,7,6],[15,10,7,8,"key"],[15,13,7,11],[15,17,7,15,"object"],[15,23,7,21],[15,24,7,22],[15,26,7,24],[16,6,8,4],[16,13,8,11],[16,15,8,13],[17,4,9,2],[18,4,10,2],[18,11,10,9,"object"],[18,17,10,15],[18,18,10,16,"key"],[18,21,10,19],[18,22,10,20],[18,23,10,21,"map"],[18,26,10,24],[18,27,10,25,"value"],[18,32,10,30],[18,36,10,34],[18,40,10,34,"maybeAddSuffix"],[18,47,10,48],[18,48,10,48,"maybeAddSuffix"],[18,62,10,48],[18,64,10,49,"value"],[18,69,10,54],[18,71,10,56,"suffix"],[18,77,10,62],[18,78,10,63],[18,79,10,64],[19,2,11,0],[20,2,12,0],[20,11,12,9,"easingMapper"],[20,23,12,21,"easingMapper"],[20,24,12,22,"easing"],[20,30,12,28],[20,32,12,30],[21,4,13,2],[21,8,13,6],[21,15,13,13,"easing"],[21,21,13,19],[21,26,13,24],[21,34,13,32],[21,36,13,34],[22,6,14,4],[22,13,14,11,"easing"],[22,19,14,17],[23,4,15,2],[24,4,16,2],[24,8,16,6,"easing"],[24,14,16,12],[24,26,16,24,"StepsEasing"],[24,33,16,35],[24,34,16,35,"StepsEasing"],[24,45,16,35],[24,47,16,37],[25,6,17,4],[25,13,17,11],[25,22,17,20,"easing"],[25,28,17,26],[25,29,17,27,"stepsNumber"],[25,40,17,38],[25,45,17,43],[25,49,17,43,"kebabizeCamelCase"],[25,55,17,60],[25,56,17,60,"kebabizeCamelCase"],[25,73,17,60],[25,75,17,61,"easing"],[25,81,17,67],[25,82,17,68,"modifier"],[25,90,17,76],[25,91,17,77],[25,94,17,80],[26,4,18,2],[27,4,19,2],[27,8,19,6,"easing"],[27,14,19,12],[27,26,19,24,"CubicBezierEasing"],[27,33,19,41],[27,34,19,41,"CubicBezierEasing"],[27,51,19,41],[27,53,19,43],[28,6,20,4],[28,13,20,11],[28,29,20,27,"easing"],[28,35,20,33],[28,36,20,34,"x1"],[28,38,20,36],[28,43,20,41,"easing"],[28,49,20,47],[28,50,20,48,"y1"],[28,52,20,50],[28,57,20,55,"easing"],[28,63,20,61],[28,64,20,62,"x2"],[28,66,20,64],[28,71,20,69,"easing"],[28,77,20,75],[28,78,20,76,"y2"],[28,80,20,78],[28,83,20,81],[29,4,21,2],[30,4,22,2],[30,8,22,6,"easing"],[30,14,22,12],[30,26,22,24,"LinearEasing"],[30,33,22,36],[30,34,22,36,"LinearEasing"],[30,46,22,36],[30,48,22,38],[31,6,23,4],[31,12,23,10,"values"],[31,18,23,16],[31,21,23,19,"easing"],[31,27,23,25],[31,28,23,26,"points"],[31,34,23,32],[31,35,23,33,"map"],[31,38,23,36],[31,39,23,37,"point"],[31,44,23,42],[31,48,23,46,"Array"],[31,53,23,51],[31,54,23,52,"isArray"],[31,61,23,59],[31,62,23,60,"point"],[31,67,23,65],[31,68,23,66],[31,71,23,69,"point"],[31,76,23,74],[31,77,23,75,"join"],[31,81,23,79],[31,82,23,80],[31,85,23,83],[31,86,23,84],[31,89,23,87,"point"],[31,94,23,92],[31,95,23,93],[31,96,23,94,"join"],[31,100,23,98],[31,101,23,99],[31,105,23,103],[31,106,23,104],[32,6,24,4],[32,13,24,11],[32,23,24,21,"values"],[32,29,24,27],[32,32,24,30],[33,4,25,2],[34,4,26,2],[34,10,26,8],[34,14,26,12,"ReanimatedError"],[34,21,26,27],[34,22,26,27,"ReanimatedError"],[34,37,26,27],[34,38,26,28],[34,65,26,55,"easing"],[34,71,26,61],[34,72,26,62,"toString"],[34,80,26,70],[34,81,26,71],[34,82,26,72],[34,84,26,74],[34,85,26,75],[35,2,27,0],[36,2,28,7],[36,11,28,16,"parseTimingFunction"],[36,30,28,35,"parseTimingFunction"],[36,31,28,36,"timingFunction"],[36,45,28,50],[36,47,28,52],[37,4,29,2],[37,8,29,6,"Array"],[37,13,29,11],[37,14,29,12,"isArray"],[37,21,29,19],[37,22,29,20,"timingFunction"],[37,36,29,34],[37,37,29,35],[37,39,29,37],[38,6,30,4],[38,13,30,11,"timingFunction"],[38,27,30,25],[38,28,30,26,"map"],[38,31,30,29],[38,32,30,30,"easingMapper"],[38,44,30,42],[38,45,30,43],[38,46,30,44,"join"],[38,50,30,48],[38,51,30,49],[38,55,30,53],[38,56,30,54],[39,4,31,2],[40,4,32,2],[40,11,32,9,"easingMapper"],[40,23,32,21],[40,24,32,22,"timingFunction"],[40,38,32,36],[40,39,32,37],[41,2,33,0],[42,2,34,7],[42,11,34,16,"parseDimensionValue"],[42,30,34,35,"parseDimensionValue"],[42,31,34,36,"value"],[42,36,34,41],[42,38,34,43],[43,4,35,2],[43,8,35,6],[43,15,35,13,"value"],[43,20,35,18],[43,25,35,23],[43,33,35,31],[43,35,35,33],[44,6,36,4],[45,4,37,2],[46,4,38,2],[46,8,38,6],[46,15,38,13,"value"],[46,20,38,18],[46,25,38,23],[46,33,38,31],[46,35,38,33],[47,6,39,4],[47,13,39,11,"value"],[47,18,39,16],[48,4,40,2],[49,4,41,2],[49,8,41,6],[49,9,41,7],[49,13,41,7,"hasSuffix"],[49,20,41,16],[49,21,41,16,"hasSuffix"],[49,30,41,16],[49,32,41,17,"value"],[49,37,41,22],[49,38,41,23],[49,40,41,25],[50,6,42,4],[50,13,42,11],[50,16,42,14,"value"],[50,21,42,19],[50,25,42,23],[51,4,43,2],[52,4,44,2],[52,11,44,9,"value"],[52,16,44,14],[53,2,45,0],[54,2,46,7],[54,11,46,16,"opacifyColor"],[54,23,46,28,"opacifyColor"],[54,24,46,29,"color"],[54,29,46,34],[54,31,46,36,"opacity"],[54,38,46,43],[54,40,46,45],[55,4,47,2],[55,10,47,8,"colorNumber"],[55,21,47,19],[55,24,47,22],[55,28,47,22,"processColor"],[55,35,47,34],[55,36,47,34,"processColor"],[55,48,47,34],[55,50,47,35,"color"],[55,55,47,40],[55,56,47,41],[56,4,48,2],[56,8,48,6,"colorNumber"],[56,19,48,17],[56,23,48,21],[56,27,48,25],[56,29,48,27],[57,6,49,4],[57,13,49,11],[57,17,49,15],[58,4,50,2],[59,4,51,2],[59,10,51,8,"a"],[59,11,51,9],[59,14,51,12,"colorNumber"],[59,25,51,23],[59,29,51,27],[59,31,51,29],[59,34,51,32],[59,38,51,36],[60,4,52,2],[60,10,52,8,"r"],[60,11,52,9],[60,14,52,12,"colorNumber"],[60,25,52,23],[60,29,52,27],[60,31,52,29],[60,34,52,32],[60,38,52,36],[61,4,53,2],[61,10,53,8,"g"],[61,11,53,9],[61,14,53,12,"colorNumber"],[61,25,53,23],[61,29,53,27],[61,30,53,28],[61,33,53,31],[61,37,53,35],[62,4,54,2],[62,10,54,8,"b"],[62,11,54,9],[62,14,54,12,"colorNumber"],[62,25,54,23],[62,28,54,26],[62,32,54,30],[64,4,56,2],[65,4,57,2],[65,10,57,8,"newAlpha"],[65,18,57,16],[65,21,57,19,"a"],[65,22,57,20],[65,25,57,23],[65,28,57,26],[65,31,57,29,"opacity"],[65,38,57,36],[66,4,58,2],[66,11,58,9],[66,19,58,17,"r"],[66,20,58,18],[66,25,58,23,"g"],[66,26,58,24],[66,31,58,29,"b"],[66,32,58,30],[66,37,58,35,"newAlpha"],[66,45,58,43],[66,48,58,46],[67,2,59,0],[68,0,59,1],[68,3]],"functionMap":{"names":["<global>","maybeAddSuffixes","object.key.map$argument_0","easingMapper","easing.points.map$argument_0","parseTimingFunction","parseDimensionValue","opacifyColor"],"mappings":"AAA;OCK;yBCI,sCD;CDC;AGC;qCCW,uDD;CHI;OKC;CLK;OMC;CNW;OOC;CPa"},"hasCjsExports":false},"type":"js/module"}]}