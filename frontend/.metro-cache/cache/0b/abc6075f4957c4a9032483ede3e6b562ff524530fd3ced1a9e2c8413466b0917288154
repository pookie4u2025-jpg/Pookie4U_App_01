{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":34,"index":82}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./AuthRequest.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":124},"end":{"line":4,"column":73,"index":197}}],"key":"0pAeVE4PBjkr2BbVHAnYCGpI6dQ=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":37,"index":235}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./PKCE","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":236},"end":{"line":6,"column":31,"index":267}}],"key":"O6rIjOENJps9CCWJ28jKcMFTSp8=","exportNames":["*"],"imports":1}},{"name":"./QueryParams","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":268},"end":{"line":7,"column":45,"index":313}}],"key":"+sRi/Vos4DfuwEst+v0hvDvbtnY=","exportNames":["*"],"imports":1}},{"name":"./TokenRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":314},"end":{"line":8,"column":47,"index":361}}],"key":"d1uOSXontqXdGR3Qx6fQsTSh36E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"url\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"AuthRequest\", {\n    enumerable: true,\n    get: function () {\n      return AuthRequest;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _invariant = require(_dependencyMap[2], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _AuthRequestTypes = require(_dependencyMap[4], \"./AuthRequest.types\");\n  var _Errors = require(_dependencyMap[5], \"./Errors\");\n  var _PKCE = require(_dependencyMap[6], \"./PKCE\");\n  var PKCE = _interopNamespace(_PKCE);\n  var _QueryParams = require(_dependencyMap[7], \"./QueryParams\");\n  var QueryParams = _interopNamespace(_QueryParams);\n  var _TokenRequest = require(_dependencyMap[8], \"./TokenRequest\");\n  let _authLock = false;\n  // @needsAudit @docsMissing\n  /**\n   * Used to manage an authorization request according to the OAuth spec: [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\n   * You can use this class directly for more info around the authorization.\n   *\n   * **Common use-cases:**\n   *\n   * - Parse a URL returned from the authorization server with `parseReturnUrlAsync()`.\n   * - Get the built authorization URL with `makeAuthUrlAsync()`.\n   * - Get a loaded JSON representation of the auth request with crypto state loaded with `getAuthRequestConfigAsync()`.\n   *\n   * @example\n   * ```ts\n   * // Create a request.\n   * const request = new AuthRequest({ ... });\n   *\n   * // Prompt for an auth code\n   * const result = await request.promptAsync(discovery);\n   *\n   * // Get the URL to invoke\n   * const url = await request.makeAuthUrlAsync(discovery);\n   *\n   * // Get the URL to invoke\n   * const parsed = await request.parseReturnUrlAsync(\"<URL From Server>\");\n   * ```\n   */\n  class AuthRequest {\n    /**\n     * Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12).\n     */\n\n    url = null;\n    constructor(request) {\n      this.responseType = request.responseType ?? _AuthRequestTypes.ResponseType.Code;\n      this.clientId = request.clientId;\n      this.redirectUri = request.redirectUri;\n      this.scopes = request.scopes;\n      this.clientSecret = request.clientSecret;\n      this.prompt = request.prompt;\n      this.state = request.state ?? PKCE.generateRandom(10);\n      this.extraParams = request.extraParams ?? {};\n      this.codeChallengeMethod = request.codeChallengeMethod ?? _AuthRequestTypes.CodeChallengeMethod.S256;\n      // PKCE defaults to true\n      this.usePKCE = request.usePKCE ?? true;\n      // Some warnings in development about potential confusing application code\n      if (__DEV__) {\n        if (this.prompt && this.extraParams.prompt) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.prompt\\` will be overwritten by \\`prompt\\`.`);\n        }\n        if (this.clientSecret && this.extraParams.client_secret) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.client_secret\\` will be overwritten by \\`clientSecret\\`.`);\n        }\n        if (this.codeChallengeMethod && this.extraParams.code_challenge_method) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.code_challenge_method\\` will be overwritten by \\`codeChallengeMethod\\`.`);\n        }\n      }\n      (0, invariant.default)(this.codeChallengeMethod !== _AuthRequestTypes.CodeChallengeMethod.Plain, `\\`AuthRequest\\` does not support \\`CodeChallengeMethod.Plain\\` as it's not secure.`);\n      (0, invariant.default)(this.redirectUri, `\\`AuthRequest\\` requires a valid \\`redirectUri\\`. Ex: ${Platform.default.select({\n        web: 'https://yourwebsite.com/',\n        default: 'com.your.app:/oauthredirect'\n      })}`);\n    }\n    /**\n     * Load and return a valid auth request based on the input config.\n     */\n    async getAuthRequestConfigAsync() {\n      if (this.usePKCE) {\n        await this.ensureCodeIsSetupAsync();\n      }\n      return {\n        responseType: this.responseType,\n        clientId: this.clientId,\n        redirectUri: this.redirectUri,\n        scopes: this.scopes,\n        clientSecret: this.clientSecret,\n        codeChallenge: this.codeChallenge,\n        codeChallengeMethod: this.codeChallengeMethod,\n        prompt: this.prompt,\n        state: this.state,\n        extraParams: this.extraParams,\n        usePKCE: this.usePKCE\n      };\n    }\n    /**\n     * Prompt a user to authorize for a code.\n     *\n     * @param discovery\n     * @param promptOptions\n     */\n    async promptAsync(discovery, _ref = {}) {\n      let {\n          url\n        } = _ref,\n        options = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      if (!url) {\n        if (!this.url) {\n          // Generate a new url\n          return this.promptAsync(discovery, Object.assign({}, options, {\n            url: await this.makeAuthUrlAsync(discovery)\n          }));\n        }\n        // Reuse the preloaded url\n        url = this.url;\n      }\n      // Prevent accidentally starting to an empty url\n      (0, invariant.default)(url, 'No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.');\n      const startUrl = url;\n      const returnUrl = this.redirectUri;\n      // Prevent multiple sessions from running at the same time, WebBrowser doesn't\n      // support it this makes the behavior predictable.\n      if (_authLock) {\n        if (__DEV__) {\n          console.warn('Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.');\n        }\n        return {\n          type: 'locked'\n        };\n      }\n      // About to start session, set lock\n      _authLock = true;\n      let result;\n      try {\n        result = await WebBrowser.openAuthSessionAsync(startUrl, returnUrl, options);\n      } finally {\n        _authLock = false;\n      }\n      if (result.type === 'opened') {\n        // This should never happen\n        throw new Error('An unexpected error occurred');\n      }\n      if (result.type !== 'success') {\n        return {\n          type: result.type\n        };\n      }\n      return this.parseReturnUrl(result.url);\n    }\n    parseReturnUrl(url) {\n      const {\n        params,\n        errorCode\n      } = QueryParams.getQueryParams(url);\n      const {\n        state,\n        error = errorCode\n      } = params;\n      let parsedError = null;\n      let authentication = null;\n      if (state !== this.state) {\n        // This is a non-standard error\n        parsedError = new _Errors.AuthError({\n          error: 'state_mismatch',\n          error_description: 'Cross-Site request verification failed. Cached state and returned state do not match.'\n        });\n      } else if (error) {\n        parsedError = new _Errors.AuthError(Object.assign({\n          error\n        }, params));\n      }\n      if (params.access_token) {\n        authentication = _TokenRequest.TokenResponse.fromQueryParams(params);\n      }\n      return {\n        type: parsedError ? 'error' : 'success',\n        error: parsedError,\n        url,\n        params,\n        authentication,\n        // Return errorCode for legacy\n        errorCode\n      };\n    }\n    /**\n     * Create the URL for authorization.\n     *\n     * @param discovery\n     */\n    async makeAuthUrlAsync(discovery) {\n      const request = await this.getAuthRequestConfigAsync();\n      if (!request.state) throw new Error('Cannot make request URL without a valid `state` loaded');\n      // Create a query string\n      const params = {};\n      if (request.codeChallenge) {\n        params.code_challenge = request.codeChallenge;\n      }\n      // copy over extra params\n      for (const extra in request.extraParams) {\n        if (extra in request.extraParams) {\n          params[extra] = request.extraParams[extra];\n        }\n      }\n      if (request.usePKCE && request.codeChallengeMethod) {\n        params.code_challenge_method = request.codeChallengeMethod;\n      }\n      if (request.clientSecret) {\n        params.client_secret = request.clientSecret;\n      }\n      if (request.prompt) {\n        params.prompt = typeof request.prompt === 'string' ? request.prompt : request.prompt.join(' ');\n      }\n      // These overwrite any extra params\n      params.redirect_uri = request.redirectUri;\n      params.client_id = request.clientId;\n      params.response_type = request.responseType;\n      params.state = request.state;\n      if (request.scopes?.length) {\n        params.scope = request.scopes.join(' ');\n      }\n      // Store the URL for later\n      this.url = `${discovery.authorizationEndpoint}?${new URLSearchParams(params)}`;\n      return this.url;\n    }\n    async ensureCodeIsSetupAsync() {\n      if (this.codeVerifier) {\n        return;\n      }\n      // This method needs to be resolved like all other native methods.\n      const {\n        codeVerifier,\n        codeChallenge\n      } = await PKCE.buildCodeAsync();\n      this.codeVerifier = codeVerifier;\n      this.codeChallenge = codeChallenge;\n    }\n  }\n});","lineCount":275,"map":[[28,2,36,0,"Object"],[28,8,36,0],[28,9,36,0,"defineProperty"],[28,23,36,0],[28,24,36,0,"exports"],[28,31,36,0],[29,4,36,0,"enumerable"],[29,14,36,0],[30,4,36,0,"get"],[30,7,36,0],[30,18,36,0,"get"],[30,19,36,0],[31,6,36,0],[31,13,36,0,"AuthRequest"],[31,24,36,0],[32,4,36,0],[33,2,36,0],[34,2,231,1],[34,6,231,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[34,54,231,1],[34,57,231,1,"require"],[34,64,231,1],[34,65,231,1,"_dependencyMap"],[34,79,231,1],[35,2,231,1],[35,6,231,1,"_objectWithoutPropertiesLoose"],[35,35,231,1],[35,38,231,1,"_interopDefault"],[35,53,231,1],[35,54,231,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[35,102,231,1],[36,2,1,0],[36,6,1,0,"_expoWebBrowser"],[36,21,1,0],[36,24,1,0,"require"],[36,31,1,0],[36,32,1,0,"_dependencyMap"],[36,46,1,0],[37,2,1,0],[37,6,1,0,"WebBrowser"],[37,16,1,0],[37,19,1,0,"_interopNamespace"],[37,36,1,0],[37,37,1,0,"_expoWebBrowser"],[37,52,1,0],[38,2,2,0],[38,6,2,0,"_invariant"],[38,16,2,0],[38,19,2,0,"require"],[38,26,2,0],[38,27,2,0,"_dependencyMap"],[38,41,2,0],[39,2,2,0],[39,6,2,0,"invariant"],[39,15,2,0],[39,18,2,0,"_interopDefault"],[39,33,2,0],[39,34,2,0,"_invariant"],[39,44,2,0],[40,2,2,34],[40,6,2,34,"_reactNativeWebDistExportsPlatform"],[40,40,2,34],[40,43,2,34,"require"],[40,50,2,34],[40,51,2,34,"_dependencyMap"],[40,65,2,34],[41,2,2,34],[41,6,2,34,"Platform"],[41,14,2,34],[41,17,2,34,"_interopDefault"],[41,32,2,34],[41,33,2,34,"_reactNativeWebDistExportsPlatform"],[41,67,2,34],[42,2,4,0],[42,6,4,0,"_AuthRequestTypes"],[42,23,4,0],[42,26,4,0,"require"],[42,33,4,0],[42,34,4,0,"_dependencyMap"],[42,48,4,0],[43,2,5,0],[43,6,5,0,"_Errors"],[43,13,5,0],[43,16,5,0,"require"],[43,23,5,0],[43,24,5,0,"_dependencyMap"],[43,38,5,0],[44,2,6,0],[44,6,6,0,"_PKCE"],[44,11,6,0],[44,14,6,0,"require"],[44,21,6,0],[44,22,6,0,"_dependencyMap"],[44,36,6,0],[45,2,6,0],[45,6,6,0,"PKCE"],[45,10,6,0],[45,13,6,0,"_interopNamespace"],[45,30,6,0],[45,31,6,0,"_PKCE"],[45,36,6,0],[46,2,7,0],[46,6,7,0,"_QueryParams"],[46,18,7,0],[46,21,7,0,"require"],[46,28,7,0],[46,29,7,0,"_dependencyMap"],[46,43,7,0],[47,2,7,0],[47,6,7,0,"QueryParams"],[47,17,7,0],[47,20,7,0,"_interopNamespace"],[47,37,7,0],[47,38,7,0,"_QueryParams"],[47,50,7,0],[48,2,8,0],[48,6,8,0,"_TokenRequest"],[48,19,8,0],[48,22,8,0,"require"],[48,29,8,0],[48,30,8,0,"_dependencyMap"],[48,44,8,0],[49,2,9,0],[49,6,9,4,"_authLock"],[49,15,9,13],[49,18,9,16],[49,23,9,21],[50,2,10,0],[51,2,11,0],[52,0,12,0],[53,0,13,0],[54,0,14,0],[55,0,15,0],[56,0,16,0],[57,0,17,0],[58,0,18,0],[59,0,19,0],[60,0,20,0],[61,0,21,0],[62,0,22,0],[63,0,23,0],[64,0,24,0],[65,0,25,0],[66,0,26,0],[67,0,27,0],[68,0,28,0],[69,0,29,0],[70,0,30,0],[71,0,31,0],[72,0,32,0],[73,0,33,0],[74,0,34,0],[75,0,35,0],[76,2,36,7],[76,8,36,13,"AuthRequest"],[76,19,36,24],[76,20,36,25],[77,4,37,4],[78,0,38,0],[79,0,39,0],[81,4,41,4,"url"],[81,7,41,7],[81,10,41,10],[81,14,41,14],[82,4,53,4,"constructor"],[82,15,53,15,"constructor"],[82,16,53,16,"request"],[82,23,53,23],[82,25,53,25],[83,6,54,8],[83,10,54,12],[83,11,54,13,"responseType"],[83,23,54,25],[83,26,54,28,"request"],[83,33,54,35],[83,34,54,36,"responseType"],[83,46,54,48],[83,50,54,52,"ResponseType"],[83,67,54,64],[83,68,54,64,"ResponseType"],[83,80,54,64],[83,81,54,65,"Code"],[83,85,54,69],[84,6,55,8],[84,10,55,12],[84,11,55,13,"clientId"],[84,19,55,21],[84,22,55,24,"request"],[84,29,55,31],[84,30,55,32,"clientId"],[84,38,55,40],[85,6,56,8],[85,10,56,12],[85,11,56,13,"redirectUri"],[85,22,56,24],[85,25,56,27,"request"],[85,32,56,34],[85,33,56,35,"redirectUri"],[85,44,56,46],[86,6,57,8],[86,10,57,12],[86,11,57,13,"scopes"],[86,17,57,19],[86,20,57,22,"request"],[86,27,57,29],[86,28,57,30,"scopes"],[86,34,57,36],[87,6,58,8],[87,10,58,12],[87,11,58,13,"clientSecret"],[87,23,58,25],[87,26,58,28,"request"],[87,33,58,35],[87,34,58,36,"clientSecret"],[87,46,58,48],[88,6,59,8],[88,10,59,12],[88,11,59,13,"prompt"],[88,17,59,19],[88,20,59,22,"request"],[88,27,59,29],[88,28,59,30,"prompt"],[88,34,59,36],[89,6,60,8],[89,10,60,12],[89,11,60,13,"state"],[89,16,60,18],[89,19,60,21,"request"],[89,26,60,28],[89,27,60,29,"state"],[89,32,60,34],[89,36,60,38,"PKCE"],[89,40,60,42],[89,41,60,43,"generateRandom"],[89,55,60,57],[89,56,60,58],[89,58,60,60],[89,59,60,61],[90,6,61,8],[90,10,61,12],[90,11,61,13,"extraParams"],[90,22,61,24],[90,25,61,27,"request"],[90,32,61,34],[90,33,61,35,"extraParams"],[90,44,61,46],[90,48,61,50],[90,49,61,51],[90,50,61,52],[91,6,62,8],[91,10,62,12],[91,11,62,13,"codeChallengeMethod"],[91,30,62,32],[91,33,62,35,"request"],[91,40,62,42],[91,41,62,43,"codeChallengeMethod"],[91,60,62,62],[91,64,62,66,"CodeChallengeMethod"],[91,81,62,85],[91,82,62,85,"CodeChallengeMethod"],[91,101,62,85],[91,102,62,86,"S256"],[91,106,62,90],[92,6,63,8],[93,6,64,8],[93,10,64,12],[93,11,64,13,"usePKCE"],[93,18,64,20],[93,21,64,23,"request"],[93,28,64,30],[93,29,64,31,"usePKCE"],[93,36,64,38],[93,40,64,42],[93,44,64,46],[94,6,65,8],[95,6,66,8],[95,10,66,12,"__DEV__"],[95,17,66,19],[95,19,66,21],[96,8,67,12],[96,12,67,16],[96,16,67,20],[96,17,67,21,"prompt"],[96,23,67,27],[96,27,67,31],[96,31,67,35],[96,32,67,36,"extraParams"],[96,43,67,47],[96,44,67,48,"prompt"],[96,50,67,54],[96,52,67,56],[97,10,68,16,"console"],[97,17,68,23],[97,18,68,24,"warn"],[97,22,68,28],[97,23,68,29],[97,98,68,104],[97,99,68,105],[98,8,69,12],[99,8,70,12],[99,12,70,16],[99,16,70,20],[99,17,70,21,"clientSecret"],[99,29,70,33],[99,33,70,37],[99,37,70,41],[99,38,70,42,"extraParams"],[99,49,70,53],[99,50,70,54,"client_secret"],[99,63,70,67],[99,65,70,69],[100,10,71,16,"console"],[100,17,71,23],[100,18,71,24,"warn"],[100,22,71,28],[100,23,71,29],[100,111,71,117],[100,112,71,118],[101,8,72,12],[102,8,73,12],[102,12,73,16],[102,16,73,20],[102,17,73,21,"codeChallengeMethod"],[102,36,73,40],[102,40,73,44],[102,44,73,48],[102,45,73,49,"extraParams"],[102,56,73,60],[102,57,73,61,"code_challenge_method"],[102,78,73,82],[102,80,73,84],[103,10,74,16,"console"],[103,17,74,23],[103,18,74,24,"warn"],[103,22,74,28],[103,23,74,29],[103,126,74,132],[103,127,74,133],[104,8,75,12],[105,6,76,8],[106,6,77,8],[106,10,77,8,"invariant"],[106,19,77,17],[106,20,77,17,"default"],[106,27,77,17],[106,29,77,18],[106,33,77,22],[106,34,77,23,"codeChallengeMethod"],[106,53,77,42],[106,58,77,47,"CodeChallengeMethod"],[106,75,77,66],[106,76,77,66,"CodeChallengeMethod"],[106,95,77,66],[106,96,77,67,"Plain"],[106,101,77,72],[106,103,77,74],[106,187,77,158],[106,188,77,159],[107,6,78,8],[107,10,78,8,"invariant"],[107,19,78,17],[107,20,78,17,"default"],[107,27,78,17],[107,29,78,18],[107,33,78,22],[107,34,78,23,"redirectUri"],[107,45,78,34],[107,47,78,36],[107,104,78,93,"Platform"],[107,112,78,101],[107,113,78,101,"default"],[107,120,78,101],[107,121,78,102,"select"],[107,127,78,108],[107,128,78,109],[108,8,79,12,"web"],[108,11,79,15],[108,13,79,17],[108,39,79,43],[109,8,80,12,"default"],[109,15,80,19],[109,17,80,21],[110,6,81,8],[110,7,81,9],[110,8,81,10],[110,10,81,12],[110,11,81,13],[111,4,82,4],[112,4,83,4],[113,0,84,0],[114,0,85,0],[115,4,86,4],[115,10,86,10,"getAuthRequestConfigAsync"],[115,35,86,35,"getAuthRequestConfigAsync"],[115,36,86,35],[115,38,86,38],[116,6,87,8],[116,10,87,12],[116,14,87,16],[116,15,87,17,"usePKCE"],[116,22,87,24],[116,24,87,26],[117,8,88,12],[117,14,88,18],[117,18,88,22],[117,19,88,23,"ensureCodeIsSetupAsync"],[117,41,88,45],[117,42,88,46],[117,43,88,47],[118,6,89,8],[119,6,90,8],[119,13,90,15],[120,8,91,12,"responseType"],[120,20,91,24],[120,22,91,26],[120,26,91,30],[120,27,91,31,"responseType"],[120,39,91,43],[121,8,92,12,"clientId"],[121,16,92,20],[121,18,92,22],[121,22,92,26],[121,23,92,27,"clientId"],[121,31,92,35],[122,8,93,12,"redirectUri"],[122,19,93,23],[122,21,93,25],[122,25,93,29],[122,26,93,30,"redirectUri"],[122,37,93,41],[123,8,94,12,"scopes"],[123,14,94,18],[123,16,94,20],[123,20,94,24],[123,21,94,25,"scopes"],[123,27,94,31],[124,8,95,12,"clientSecret"],[124,20,95,24],[124,22,95,26],[124,26,95,30],[124,27,95,31,"clientSecret"],[124,39,95,43],[125,8,96,12,"codeChallenge"],[125,21,96,25],[125,23,96,27],[125,27,96,31],[125,28,96,32,"codeChallenge"],[125,41,96,45],[126,8,97,12,"codeChallengeMethod"],[126,27,97,31],[126,29,97,33],[126,33,97,37],[126,34,97,38,"codeChallengeMethod"],[126,53,97,57],[127,8,98,12,"prompt"],[127,14,98,18],[127,16,98,20],[127,20,98,24],[127,21,98,25,"prompt"],[127,27,98,31],[128,8,99,12,"state"],[128,13,99,17],[128,15,99,19],[128,19,99,23],[128,20,99,24,"state"],[128,25,99,29],[129,8,100,12,"extraParams"],[129,19,100,23],[129,21,100,25],[129,25,100,29],[129,26,100,30,"extraParams"],[129,37,100,41],[130,8,101,12,"usePKCE"],[130,15,101,19],[130,17,101,21],[130,21,101,25],[130,22,101,26,"usePKCE"],[131,6,102,8],[131,7,102,9],[132,4,103,4],[133,4,104,4],[134,0,105,0],[135,0,106,0],[136,0,107,0],[137,0,108,0],[138,0,109,0],[139,4,110,4],[139,10,110,10,"promptAsync"],[139,21,110,21,"promptAsync"],[139,22,110,22,"discovery"],[139,31,110,31],[139,33,110,33,"_ref"],[139,37,110,33],[139,40,110,55],[139,41,110,56],[139,42,110,57],[139,44,110,59],[140,6,110,59],[140,10,110,33],[141,10,110,35,"url"],[142,8,110,51],[142,9,110,52],[142,12,110,52,"_ref"],[142,16,110,52],[143,8,110,43,"options"],[143,15,110,50],[143,22,110,50,"_objectWithoutPropertiesLoose"],[143,51,110,50],[143,52,110,50,"default"],[143,59,110,50],[143,61,110,50,"_ref"],[143,65,110,50],[143,67,110,50,"_excluded"],[143,76,110,50],[144,6,111,8],[144,10,111,12],[144,11,111,13,"url"],[144,14,111,16],[144,16,111,18],[145,8,112,12],[145,12,112,16],[145,13,112,17],[145,17,112,21],[145,18,112,22,"url"],[145,21,112,25],[145,23,112,27],[146,10,113,16],[147,10,114,16],[147,17,114,23],[147,21,114,27],[147,22,114,28,"promptAsync"],[147,33,114,39],[147,34,114,40,"discovery"],[147,43,114,49],[147,45,114,49,"Object"],[147,51,114,49],[147,52,114,49,"assign"],[147,58,114,49],[147,63,115,23,"options"],[147,70,115,30],[148,12,116,20,"url"],[148,15,116,23],[148,17,116,25],[148,23,116,31],[148,27,116,35],[148,28,116,36,"makeAuthUrlAsync"],[148,44,116,52],[148,45,116,53,"discovery"],[148,54,116,62],[149,10,116,63],[149,12,117,17],[149,13,117,18],[150,8,118,12],[151,8,119,12],[152,8,120,12,"url"],[152,11,120,15],[152,14,120,18],[152,18,120,22],[152,19,120,23,"url"],[152,22,120,26],[153,6,121,8],[154,6,122,8],[155,6,123,8],[155,10,123,8,"invariant"],[155,19,123,17],[155,20,123,17,"default"],[155,27,123,17],[155,29,123,18,"url"],[155,32,123,21],[155,34,123,23],[155,170,123,159],[155,171,123,160],[156,6,124,8],[156,12,124,14,"startUrl"],[156,20,124,22],[156,23,124,25,"url"],[156,26,124,28],[157,6,125,8],[157,12,125,14,"returnUrl"],[157,21,125,23],[157,24,125,26],[157,28,125,30],[157,29,125,31,"redirectUri"],[157,40,125,42],[158,6,126,8],[159,6,127,8],[160,6,128,8],[160,10,128,12,"_authLock"],[160,19,128,21],[160,21,128,23],[161,8,129,12],[161,12,129,16,"__DEV__"],[161,19,129,23],[161,21,129,25],[162,10,130,16,"console"],[162,17,130,23],[162,18,130,24,"warn"],[162,22,130,28],[162,23,130,29],[162,156,130,162],[162,157,130,163],[163,8,131,12],[164,8,132,12],[164,15,132,19],[165,10,132,21,"type"],[165,14,132,25],[165,16,132,27],[166,8,132,36],[166,9,132,37],[167,6,133,8],[168,6,134,8],[169,6,135,8,"_authLock"],[169,15,135,17],[169,18,135,20],[169,22,135,24],[170,6,136,8],[170,10,136,12,"result"],[170,16,136,18],[171,6,137,8],[171,10,137,12],[172,8,138,12,"result"],[172,14,138,18],[172,17,138,21],[172,23,138,27,"WebBrowser"],[172,33,138,37],[172,34,138,38,"openAuthSessionAsync"],[172,54,138,58],[172,55,138,59,"startUrl"],[172,63,138,67],[172,65,138,69,"returnUrl"],[172,74,138,78],[172,76,138,80,"options"],[172,83,138,87],[172,84,138,88],[173,6,139,8],[173,7,139,9],[173,16,140,16],[174,8,141,12,"_authLock"],[174,17,141,21],[174,20,141,24],[174,25,141,29],[175,6,142,8],[176,6,143,8],[176,10,143,12,"result"],[176,16,143,18],[176,17,143,19,"type"],[176,21,143,23],[176,26,143,28],[176,34,143,36],[176,36,143,38],[177,8,144,12],[178,8,145,12],[178,14,145,18],[178,18,145,22,"Error"],[178,23,145,27],[178,24,145,28],[178,54,145,58],[178,55,145,59],[179,6,146,8],[180,6,147,8],[180,10,147,12,"result"],[180,16,147,18],[180,17,147,19,"type"],[180,21,147,23],[180,26,147,28],[180,35,147,37],[180,37,147,39],[181,8,148,12],[181,15,148,19],[182,10,148,21,"type"],[182,14,148,25],[182,16,148,27,"result"],[182,22,148,33],[182,23,148,34,"type"],[183,8,148,39],[183,9,148,40],[184,6,149,8],[185,6,150,8],[185,13,150,15],[185,17,150,19],[185,18,150,20,"parseReturnUrl"],[185,32,150,34],[185,33,150,35,"result"],[185,39,150,41],[185,40,150,42,"url"],[185,43,150,45],[185,44,150,46],[186,4,151,4],[187,4,152,4,"parseReturnUrl"],[187,18,152,18,"parseReturnUrl"],[187,19,152,19,"url"],[187,22,152,22],[187,24,152,24],[188,6,153,8],[188,12,153,14],[189,8,153,16,"params"],[189,14,153,22],[190,8,153,24,"errorCode"],[191,6,153,34],[191,7,153,35],[191,10,153,38,"QueryParams"],[191,21,153,49],[191,22,153,50,"getQueryParams"],[191,36,153,64],[191,37,153,65,"url"],[191,40,153,68],[191,41,153,69],[192,6,154,8],[192,12,154,14],[193,8,154,16,"state"],[193,13,154,21],[194,8,154,23,"error"],[194,13,154,28],[194,16,154,31,"errorCode"],[195,6,154,41],[195,7,154,42],[195,10,154,45,"params"],[195,16,154,51],[196,6,155,8],[196,10,155,12,"parsedError"],[196,21,155,23],[196,24,155,26],[196,28,155,30],[197,6,156,8],[197,10,156,12,"authentication"],[197,24,156,26],[197,27,156,29],[197,31,156,33],[198,6,157,8],[198,10,157,12,"state"],[198,15,157,17],[198,20,157,22],[198,24,157,26],[198,25,157,27,"state"],[198,30,157,32],[198,32,157,34],[199,8,158,12],[200,8,159,12,"parsedError"],[200,19,159,23],[200,22,159,26],[200,26,159,30,"AuthError"],[200,33,159,39],[200,34,159,39,"AuthError"],[200,43,159,39],[200,44,159,40],[201,10,160,16,"error"],[201,15,160,21],[201,17,160,23],[201,33,160,39],[202,10,161,16,"error_description"],[202,27,161,33],[202,29,161,35],[203,8,162,12],[203,9,162,13],[203,10,162,14],[204,6,163,8],[204,7,163,9],[204,13,164,13],[204,17,164,17,"error"],[204,22,164,22],[204,24,164,24],[205,8,165,12,"parsedError"],[205,19,165,23],[205,22,165,26],[205,26,165,30,"AuthError"],[205,33,165,39],[205,34,165,39,"AuthError"],[205,43,165,39],[205,44,165,39,"Object"],[205,50,165,39],[205,51,165,39,"assign"],[205,57,165,39],[206,10,165,42,"error"],[207,8,165,47],[207,11,165,52,"params"],[207,17,165,58],[207,18,165,60],[207,19,165,61],[208,6,166,8],[209,6,167,8],[209,10,167,12,"params"],[209,16,167,18],[209,17,167,19,"access_token"],[209,29,167,31],[209,31,167,33],[210,8,168,12,"authentication"],[210,22,168,26],[210,25,168,29,"TokenResponse"],[210,38,168,42],[210,39,168,42,"TokenResponse"],[210,52,168,42],[210,53,168,43,"fromQueryParams"],[210,68,168,58],[210,69,168,59,"params"],[210,75,168,65],[210,76,168,66],[211,6,169,8],[212,6,170,8],[212,13,170,15],[213,8,171,12,"type"],[213,12,171,16],[213,14,171,18,"parsedError"],[213,25,171,29],[213,28,171,32],[213,35,171,39],[213,38,171,42],[213,47,171,51],[214,8,172,12,"error"],[214,13,172,17],[214,15,172,19,"parsedError"],[214,26,172,30],[215,8,173,12,"url"],[215,11,173,15],[216,8,174,12,"params"],[216,14,174,18],[217,8,175,12,"authentication"],[217,22,175,26],[218,8,176,12],[219,8,177,12,"errorCode"],[220,6,178,8],[220,7,178,9],[221,4,179,4],[222,4,180,4],[223,0,181,0],[224,0,182,0],[225,0,183,0],[226,0,184,0],[227,4,185,4],[227,10,185,10,"makeAuthUrlAsync"],[227,26,185,26,"makeAuthUrlAsync"],[227,27,185,27,"discovery"],[227,36,185,36],[227,38,185,38],[228,6,186,8],[228,12,186,14,"request"],[228,19,186,21],[228,22,186,24],[228,28,186,30],[228,32,186,34],[228,33,186,35,"getAuthRequestConfigAsync"],[228,58,186,60],[228,59,186,61],[228,60,186,62],[229,6,187,8],[229,10,187,12],[229,11,187,13,"request"],[229,18,187,20],[229,19,187,21,"state"],[229,24,187,26],[229,26,188,12],[229,32,188,18],[229,36,188,22,"Error"],[229,41,188,27],[229,42,188,28],[229,98,188,84],[229,99,188,85],[230,6,189,8],[231,6,190,8],[231,12,190,14,"params"],[231,18,190,20],[231,21,190,23],[231,22,190,24],[231,23,190,25],[232,6,191,8],[232,10,191,12,"request"],[232,17,191,19],[232,18,191,20,"codeChallenge"],[232,31,191,33],[232,33,191,35],[233,8,192,12,"params"],[233,14,192,18],[233,15,192,19,"code_challenge"],[233,29,192,33],[233,32,192,36,"request"],[233,39,192,43],[233,40,192,44,"codeChallenge"],[233,53,192,57],[234,6,193,8],[235,6,194,8],[236,6,195,8],[236,11,195,13],[236,17,195,19,"extra"],[236,22,195,24],[236,26,195,28,"request"],[236,33,195,35],[236,34,195,36,"extraParams"],[236,45,195,47],[236,47,195,49],[237,8,196,12],[237,12,196,16,"extra"],[237,17,196,21],[237,21,196,25,"request"],[237,28,196,32],[237,29,196,33,"extraParams"],[237,40,196,44],[237,42,196,46],[238,10,197,16,"params"],[238,16,197,22],[238,17,197,23,"extra"],[238,22,197,28],[238,23,197,29],[238,26,197,32,"request"],[238,33,197,39],[238,34,197,40,"extraParams"],[238,45,197,51],[238,46,197,52,"extra"],[238,51,197,57],[238,52,197,58],[239,8,198,12],[240,6,199,8],[241,6,200,8],[241,10,200,12,"request"],[241,17,200,19],[241,18,200,20,"usePKCE"],[241,25,200,27],[241,29,200,31,"request"],[241,36,200,38],[241,37,200,39,"codeChallengeMethod"],[241,56,200,58],[241,58,200,60],[242,8,201,12,"params"],[242,14,201,18],[242,15,201,19,"code_challenge_method"],[242,36,201,40],[242,39,201,43,"request"],[242,46,201,50],[242,47,201,51,"codeChallengeMethod"],[242,66,201,70],[243,6,202,8],[244,6,203,8],[244,10,203,12,"request"],[244,17,203,19],[244,18,203,20,"clientSecret"],[244,30,203,32],[244,32,203,34],[245,8,204,12,"params"],[245,14,204,18],[245,15,204,19,"client_secret"],[245,28,204,32],[245,31,204,35,"request"],[245,38,204,42],[245,39,204,43,"clientSecret"],[245,51,204,55],[246,6,205,8],[247,6,206,8],[247,10,206,12,"request"],[247,17,206,19],[247,18,206,20,"prompt"],[247,24,206,26],[247,26,206,28],[248,8,207,12,"params"],[248,14,207,18],[248,15,207,19,"prompt"],[248,21,207,25],[248,24,208,16],[248,31,208,23,"request"],[248,38,208,30],[248,39,208,31,"prompt"],[248,45,208,37],[248,50,208,42],[248,58,208,50],[248,61,208,53,"request"],[248,68,208,60],[248,69,208,61,"prompt"],[248,75,208,67],[248,78,208,70,"request"],[248,85,208,77],[248,86,208,78,"prompt"],[248,92,208,84],[248,93,208,85,"join"],[248,97,208,89],[248,98,208,90],[248,101,208,93],[248,102,208,94],[249,6,209,8],[250,6,210,8],[251,6,211,8,"params"],[251,12,211,14],[251,13,211,15,"redirect_uri"],[251,25,211,27],[251,28,211,30,"request"],[251,35,211,37],[251,36,211,38,"redirectUri"],[251,47,211,49],[252,6,212,8,"params"],[252,12,212,14],[252,13,212,15,"client_id"],[252,22,212,24],[252,25,212,27,"request"],[252,32,212,34],[252,33,212,35,"clientId"],[252,41,212,43],[253,6,213,8,"params"],[253,12,213,14],[253,13,213,15,"response_type"],[253,26,213,28],[253,29,213,31,"request"],[253,36,213,38],[253,37,213,39,"responseType"],[253,49,213,51],[254,6,214,8,"params"],[254,12,214,14],[254,13,214,15,"state"],[254,18,214,20],[254,21,214,23,"request"],[254,28,214,30],[254,29,214,31,"state"],[254,34,214,36],[255,6,215,8],[255,10,215,12,"request"],[255,17,215,19],[255,18,215,20,"scopes"],[255,24,215,26],[255,26,215,28,"length"],[255,32,215,34],[255,34,215,36],[256,8,216,12,"params"],[256,14,216,18],[256,15,216,19,"scope"],[256,20,216,24],[256,23,216,27,"request"],[256,30,216,34],[256,31,216,35,"scopes"],[256,37,216,41],[256,38,216,42,"join"],[256,42,216,46],[256,43,216,47],[256,46,216,50],[256,47,216,51],[257,6,217,8],[258,6,218,8],[259,6,219,8],[259,10,219,12],[259,11,219,13,"url"],[259,14,219,16],[259,17,219,19],[259,20,219,22,"discovery"],[259,29,219,31],[259,30,219,32,"authorizationEndpoint"],[259,51,219,53],[259,55,219,57],[259,59,219,61,"URLSearchParams"],[259,74,219,76],[259,75,219,77,"params"],[259,81,219,83],[259,82,219,84],[259,84,219,86],[260,6,220,8],[260,13,220,15],[260,17,220,19],[260,18,220,20,"url"],[260,21,220,23],[261,4,221,4],[262,4,222,4],[262,10,222,10,"ensureCodeIsSetupAsync"],[262,32,222,32,"ensureCodeIsSetupAsync"],[262,33,222,32],[262,35,222,35],[263,6,223,8],[263,10,223,12],[263,14,223,16],[263,15,223,17,"codeVerifier"],[263,27,223,29],[263,29,223,31],[264,8,224,12],[265,6,225,8],[266,6,226,8],[267,6,227,8],[267,12,227,14],[268,8,227,16,"codeVerifier"],[268,20,227,28],[269,8,227,30,"codeChallenge"],[270,6,227,44],[270,7,227,45],[270,10,227,48],[270,16,227,54,"PKCE"],[270,20,227,58],[270,21,227,59,"buildCodeAsync"],[270,35,227,73],[270,36,227,74],[270,37,227,75],[271,6,228,8],[271,10,228,12],[271,11,228,13,"codeVerifier"],[271,23,228,25],[271,26,228,28,"codeVerifier"],[271,38,228,40],[272,6,229,8],[272,10,229,12],[272,11,229,13,"codeChallenge"],[272,24,229,26],[272,27,229,29,"codeChallenge"],[272,40,229,42],[273,4,230,4],[274,2,231,0],[275,0,231,1],[275,3]],"functionMap":{"names":["<global>","AuthRequest","constructor","getAuthRequestConfigAsync","promptAsync","parseReturnUrl","makeAuthUrlAsync","ensureCodeIsSetupAsync"],"mappings":"AAA;OCmC;ICiB;KD6B;IEI;KFiB;IGO;KHyC;IIC;KJ2B;IKM;KLoC;IMC;KNQ;CDC"},"hasCjsExports":false},"type":"js/module"}]}