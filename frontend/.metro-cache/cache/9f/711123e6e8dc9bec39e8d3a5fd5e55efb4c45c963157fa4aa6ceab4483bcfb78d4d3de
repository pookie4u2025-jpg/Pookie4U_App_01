{"dependencies":[{"name":"../../../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":53,"index":68}}],"key":"lWBwZ2gfCJqIdYPstlqcFfa1xEQ=","exportNames":["*"],"imports":1}},{"name":"../../../easing","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":69},"end":{"line":4,"column":61,"index":130}}],"key":"+80dbmARANnOtOhvA2f1J11PAto=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":131},"end":{"line":5,"column":192,"index":323}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createEmptyTransitionConfig\", {\n    enumerable: true,\n    get: function () {\n      return createEmptyTransitionConfig;\n    }\n  });\n  exports.parseTransitionShorthand = parseTransitionShorthand;\n  var _common = require(_dependencyMap[0], \"../../../../common\");\n  var _easing = require(_dependencyMap[1], \"../../../easing\");\n  var _utils = require(_dependencyMap[2], \"../../../utils\");\n  const createEmptyTransitionConfig = () => ({\n    transitionProperty: [],\n    transitionDuration: [],\n    transitionTimingFunction: [],\n    transitionDelay: [],\n    transitionBehavior: []\n  });\n  function parseTransitionShorthand(value) {\n    return (0, _utils.splitByComma)(value).reduce((acc, part) => {\n      const result = (0, _utils.parseSingleTransitionShorthand)(part);\n      acc.transitionProperty.push((0, _utils.camelizeKebabCase)(result.transitionProperty ?? 'all'));\n      acc.transitionDuration.push(result.transitionDuration);\n      acc.transitionTimingFunction.push(result.transitionTimingFunction ? parseTimingFunction(result.transitionTimingFunction) : undefined);\n      acc.transitionDelay.push(result.transitionDelay);\n      acc.transitionBehavior.push(result.transitionBehavior);\n      return acc;\n    }, createEmptyTransitionConfig());\n  }\n  function asControlPoint(value) {\n    const [first, ...rest] = value;\n    if (!first || isNaN(Number(first)) || !rest.every(_utils.isPercentage)) {\n      return null;\n    }\n    return [Number(first), ...rest];\n  }\n  function parseTimingFunction(value) {\n    if ((0, _utils.isPredefinedTimingFunction)(value)) {\n      return value;\n    }\n\n    // TODO: implement more strict check\n    const regex = /^(.+)\\((.+)\\)$/;\n    if (!regex.test(value)) {\n      throw new _common.ReanimatedError(`Unsupported timing function: ${value}`);\n    }\n    const [, name, args] = value.match(regex);\n    const parsedArgs = (0, _utils.splitByComma)(args);\n    switch (name) {\n      case 'cubic-bezier':\n        {\n          const numberArgs = parsedArgs.map(Number);\n          if ((0, _utils.isArrayOfLength)(numberArgs, 4) && numberArgs.every(n => !isNaN(n))) {\n            return (0, _easing.cubicBezier)(...numberArgs);\n          }\n          break;\n        }\n      case 'linear':\n        {\n          const controlPoints = parsedArgs.map(arg => {\n            const parts = (0, _utils.splitByWhitespace)(arg);\n            const controlPoint = asControlPoint(parts);\n            if (!controlPoint) {\n              throw new _common.ReanimatedError(`Invalid control point: ${arg} in ${value} timing function`);\n            }\n            return controlPoint;\n          });\n          return (0, _easing.linear)(...controlPoints);\n        }\n      case 'steps':\n        {\n          const stepsNumber = Number(parsedArgs[0]);\n          const stepsModifier = parsedArgs[1];\n          if (!isNaN(stepsNumber) && stepsNumber > 0 && (stepsModifier === undefined || (0, _utils.isStepsModifier)(stepsModifier))) {\n            return (0, _easing.steps)(stepsNumber, stepsModifier);\n          }\n          break;\n        }\n    }\n    throw new _common.ReanimatedError(`Invalid timing function: ${value}`);\n  }\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"createEmptyTransitionConfig"],[10,40,6,0],[11,4,6,0],[12,2,6,0],[13,2,13,0,"exports"],[13,9,13,0],[13,10,13,0,"parseTransitionShorthand"],[13,34,13,0],[13,37,13,0,"parseTransitionShorthand"],[13,61,13,0],[14,2,3,0],[14,6,3,0,"_common"],[14,13,3,0],[14,16,3,0,"require"],[14,23,3,0],[14,24,3,0,"_dependencyMap"],[14,38,3,0],[15,2,4,0],[15,6,4,0,"_easing"],[15,13,4,0],[15,16,4,0,"require"],[15,23,4,0],[15,24,4,0,"_dependencyMap"],[15,38,4,0],[16,2,5,0],[16,6,5,0,"_utils"],[16,12,5,0],[16,15,5,0,"require"],[16,22,5,0],[16,23,5,0,"_dependencyMap"],[16,37,5,0],[17,2,6,7],[17,8,6,13,"createEmptyTransitionConfig"],[17,35,6,40],[17,38,6,43,"createEmptyTransitionConfig"],[17,39,6,43],[17,45,6,50],[18,4,7,2,"transitionProperty"],[18,22,7,20],[18,24,7,22],[18,26,7,24],[19,4,8,2,"transitionDuration"],[19,22,8,20],[19,24,8,22],[19,26,8,24],[20,4,9,2,"transitionTimingFunction"],[20,28,9,26],[20,30,9,28],[20,32,9,30],[21,4,10,2,"transitionDelay"],[21,19,10,17],[21,21,10,19],[21,23,10,21],[22,4,11,2,"transitionBehavior"],[22,22,11,20],[22,24,11,22],[23,2,12,0],[23,3,12,1],[23,4,12,2],[24,2,13,7],[24,11,13,16,"parseTransitionShorthand"],[24,35,13,40,"parseTransitionShorthand"],[24,36,13,41,"value"],[24,41,13,46],[24,43,13,48],[25,4,14,2],[25,11,14,9],[25,15,14,9,"splitByComma"],[25,21,14,21],[25,22,14,21,"splitByComma"],[25,34,14,21],[25,36,14,22,"value"],[25,41,14,27],[25,42,14,28],[25,43,14,29,"reduce"],[25,49,14,35],[25,50,14,36],[25,51,14,37,"acc"],[25,54,14,40],[25,56,14,42,"part"],[25,60,14,46],[25,65,14,51],[26,6,15,4],[26,12,15,10,"result"],[26,18,15,16],[26,21,15,19],[26,25,15,19,"parseSingleTransitionShorthand"],[26,31,15,49],[26,32,15,49,"parseSingleTransitionShorthand"],[26,62,15,49],[26,64,15,50,"part"],[26,68,15,54],[26,69,15,55],[27,6,16,4,"acc"],[27,9,16,7],[27,10,16,8,"transitionProperty"],[27,28,16,26],[27,29,16,27,"push"],[27,33,16,31],[27,34,16,32],[27,38,16,32,"camelizeKebabCase"],[27,44,16,49],[27,45,16,49,"camelizeKebabCase"],[27,62,16,49],[27,64,16,50,"result"],[27,70,16,56],[27,71,16,57,"transitionProperty"],[27,89,16,75],[27,93,16,79],[27,98,16,84],[27,99,16,85],[27,100,16,86],[28,6,17,4,"acc"],[28,9,17,7],[28,10,17,8,"transitionDuration"],[28,28,17,26],[28,29,17,27,"push"],[28,33,17,31],[28,34,17,32,"result"],[28,40,17,38],[28,41,17,39,"transitionDuration"],[28,59,17,57],[28,60,17,58],[29,6,18,4,"acc"],[29,9,18,7],[29,10,18,8,"transitionTimingFunction"],[29,34,18,32],[29,35,18,33,"push"],[29,39,18,37],[29,40,18,38,"result"],[29,46,18,44],[29,47,18,45,"transitionTimingFunction"],[29,71,18,69],[29,74,18,72,"parseTimingFunction"],[29,93,18,91],[29,94,18,92,"result"],[29,100,18,98],[29,101,18,99,"transitionTimingFunction"],[29,125,18,123],[29,126,18,124],[29,129,18,127,"undefined"],[29,138,18,136],[29,139,18,137],[30,6,19,4,"acc"],[30,9,19,7],[30,10,19,8,"transitionDelay"],[30,25,19,23],[30,26,19,24,"push"],[30,30,19,28],[30,31,19,29,"result"],[30,37,19,35],[30,38,19,36,"transitionDelay"],[30,53,19,51],[30,54,19,52],[31,6,20,4,"acc"],[31,9,20,7],[31,10,20,8,"transitionBehavior"],[31,28,20,26],[31,29,20,27,"push"],[31,33,20,31],[31,34,20,32,"result"],[31,40,20,38],[31,41,20,39,"transitionBehavior"],[31,59,20,57],[31,60,20,58],[32,6,21,4],[32,13,21,11,"acc"],[32,16,21,14],[33,4,22,2],[33,5,22,3],[33,7,22,5,"createEmptyTransitionConfig"],[33,34,22,32],[33,35,22,33],[33,36,22,34],[33,37,22,35],[34,2,23,0],[35,2,24,0],[35,11,24,9,"asControlPoint"],[35,25,24,23,"asControlPoint"],[35,26,24,24,"value"],[35,31,24,29],[35,33,24,31],[36,4,25,2],[36,10,25,8],[36,11,25,9,"first"],[36,16,25,14],[36,18,25,16],[36,21,25,19,"rest"],[36,25,25,23],[36,26,25,24],[36,29,25,27,"value"],[36,34,25,32],[37,4,26,2],[37,8,26,6],[37,9,26,7,"first"],[37,14,26,12],[37,18,26,16,"isNaN"],[37,23,26,21],[37,24,26,22,"Number"],[37,30,26,28],[37,31,26,29,"first"],[37,36,26,34],[37,37,26,35],[37,38,26,36],[37,42,26,40],[37,43,26,41,"rest"],[37,47,26,45],[37,48,26,46,"every"],[37,53,26,51],[37,54,26,52,"isPercentage"],[37,60,26,64],[37,61,26,64,"isPercentage"],[37,73,26,64],[37,74,26,65],[37,76,26,67],[38,6,27,4],[38,13,27,11],[38,17,27,15],[39,4,28,2],[40,4,29,2],[40,11,29,9],[40,12,29,10,"Number"],[40,18,29,16],[40,19,29,17,"first"],[40,24,29,22],[40,25,29,23],[40,27,29,25],[40,30,29,28,"rest"],[40,34,29,32],[40,35,29,33],[41,2,30,0],[42,2,31,0],[42,11,31,9,"parseTimingFunction"],[42,30,31,28,"parseTimingFunction"],[42,31,31,29,"value"],[42,36,31,34],[42,38,31,36],[43,4,32,2],[43,8,32,6],[43,12,32,6,"isPredefinedTimingFunction"],[43,18,32,32],[43,19,32,32,"isPredefinedTimingFunction"],[43,45,32,32],[43,47,32,33,"value"],[43,52,32,38],[43,53,32,39],[43,55,32,41],[44,6,33,4],[44,13,33,11,"value"],[44,18,33,16],[45,4,34,2],[47,4,36,2],[48,4,37,2],[48,10,37,8,"regex"],[48,15,37,13],[48,18,37,16],[48,34,37,32],[49,4,38,2],[49,8,38,6],[49,9,38,7,"regex"],[49,14,38,12],[49,15,38,13,"test"],[49,19,38,17],[49,20,38,18,"value"],[49,25,38,23],[49,26,38,24],[49,28,38,26],[50,6,39,4],[50,12,39,10],[50,16,39,14,"ReanimatedError"],[50,23,39,29],[50,24,39,29,"ReanimatedError"],[50,39,39,29],[50,40,39,30],[50,72,39,62,"value"],[50,77,39,67],[50,79,39,69],[50,80,39,70],[51,4,40,2],[52,4,41,2],[52,10,41,8],[52,13,41,11,"name"],[52,17,41,15],[52,19,41,17,"args"],[52,23,41,21],[52,24,41,22],[52,27,41,25,"value"],[52,32,41,30],[52,33,41,31,"match"],[52,38,41,36],[52,39,41,37,"regex"],[52,44,41,42],[52,45,41,43],[53,4,42,2],[53,10,42,8,"parsedArgs"],[53,20,42,18],[53,23,42,21],[53,27,42,21,"splitByComma"],[53,33,42,33],[53,34,42,33,"splitByComma"],[53,46,42,33],[53,48,42,34,"args"],[53,52,42,38],[53,53,42,39],[54,4,43,2],[54,12,43,10,"name"],[54,16,43,14],[55,6,44,4],[55,11,44,9],[55,25,44,23],[56,8,45,6],[57,10,46,8],[57,16,46,14,"numberArgs"],[57,26,46,24],[57,29,46,27,"parsedArgs"],[57,39,46,37],[57,40,46,38,"map"],[57,43,46,41],[57,44,46,42,"Number"],[57,50,46,48],[57,51,46,49],[58,10,47,8],[58,14,47,12],[58,18,47,12,"isArrayOfLength"],[58,24,47,27],[58,25,47,27,"isArrayOfLength"],[58,40,47,27],[58,42,47,28,"numberArgs"],[58,52,47,38],[58,54,47,40],[58,55,47,41],[58,56,47,42],[58,60,47,46,"numberArgs"],[58,70,47,56],[58,71,47,57,"every"],[58,76,47,62],[58,77,47,63,"n"],[58,78,47,64],[58,82,47,68],[58,83,47,69,"isNaN"],[58,88,47,74],[58,89,47,75,"n"],[58,90,47,76],[58,91,47,77],[58,92,47,78],[58,94,47,80],[59,12,48,10],[59,19,48,17],[59,23,48,17,"cubicBezier"],[59,30,48,28],[59,31,48,28,"cubicBezier"],[59,42,48,28],[59,44,48,29],[59,47,48,32,"numberArgs"],[59,57,48,42],[59,58,48,43],[60,10,49,8],[61,10,50,8],[62,8,51,6],[63,6,52,4],[63,11,52,9],[63,19,52,17],[64,8,53,6],[65,10,54,8],[65,16,54,14,"controlPoints"],[65,29,54,27],[65,32,54,30,"parsedArgs"],[65,42,54,40],[65,43,54,41,"map"],[65,46,54,44],[65,47,54,45,"arg"],[65,50,54,48],[65,54,54,52],[66,12,55,10],[66,18,55,16,"parts"],[66,23,55,21],[66,26,55,24],[66,30,55,24,"splitByWhitespace"],[66,36,55,41],[66,37,55,41,"splitByWhitespace"],[66,54,55,41],[66,56,55,42,"arg"],[66,59,55,45],[66,60,55,46],[67,12,56,10],[67,18,56,16,"controlPoint"],[67,30,56,28],[67,33,56,31,"asControlPoint"],[67,47,56,45],[67,48,56,46,"parts"],[67,53,56,51],[67,54,56,52],[68,12,57,10],[68,16,57,14],[68,17,57,15,"controlPoint"],[68,29,57,27],[68,31,57,29],[69,14,58,12],[69,20,58,18],[69,24,58,22,"ReanimatedError"],[69,31,58,37],[69,32,58,37,"ReanimatedError"],[69,47,58,37],[69,48,58,38],[69,74,58,64,"arg"],[69,77,58,67],[69,84,58,74,"value"],[69,89,58,79],[69,107,58,97],[69,108,58,98],[70,12,59,10],[71,12,60,10],[71,19,60,17,"controlPoint"],[71,31,60,29],[72,10,61,8],[72,11,61,9],[72,12,61,10],[73,10,62,8],[73,17,62,15],[73,21,62,15,"linear"],[73,28,62,21],[73,29,62,21,"linear"],[73,35,62,21],[73,37,62,22],[73,40,62,25,"controlPoints"],[73,53,62,38],[73,54,62,39],[74,8,63,6],[75,6,64,4],[75,11,64,9],[75,18,64,16],[76,8,65,6],[77,10,66,8],[77,16,66,14,"stepsNumber"],[77,27,66,25],[77,30,66,28,"Number"],[77,36,66,34],[77,37,66,35,"parsedArgs"],[77,47,66,45],[77,48,66,46],[77,49,66,47],[77,50,66,48],[77,51,66,49],[78,10,67,8],[78,16,67,14,"stepsModifier"],[78,29,67,27],[78,32,67,30,"parsedArgs"],[78,42,67,40],[78,43,67,41],[78,44,67,42],[78,45,67,43],[79,10,68,8],[79,14,68,12],[79,15,68,13,"isNaN"],[79,20,68,18],[79,21,68,19,"stepsNumber"],[79,32,68,30],[79,33,68,31],[79,37,68,35,"stepsNumber"],[79,48,68,46],[79,51,68,49],[79,52,68,50],[79,57,68,55,"stepsModifier"],[79,70,68,68],[79,75,68,73,"undefined"],[79,84,68,82],[79,88,68,86],[79,92,68,86,"isStepsModifier"],[79,98,68,101],[79,99,68,101,"isStepsModifier"],[79,114,68,101],[79,116,68,102,"stepsModifier"],[79,129,68,115],[79,130,68,116],[79,131,68,117],[79,133,68,119],[80,12,69,10],[80,19,69,17],[80,23,69,17,"steps"],[80,30,69,22],[80,31,69,22,"steps"],[80,36,69,22],[80,38,69,23,"stepsNumber"],[80,49,69,34],[80,51,69,36,"stepsModifier"],[80,64,69,49],[80,65,69,50],[81,10,70,8],[82,10,71,8],[83,8,72,6],[84,4,73,2],[85,4,74,2],[85,10,74,8],[85,14,74,12,"ReanimatedError"],[85,21,74,27],[85,22,74,27,"ReanimatedError"],[85,37,74,27],[85,38,74,28],[85,66,74,56,"value"],[85,71,74,61],[85,73,74,63],[85,74,74,64],[86,2,75,0],[87,0,75,1],[87,3]],"functionMap":{"names":["<global>","createEmptyTransitionConfig","parseTransitionShorthand","splitByComma.reduce$argument_0","asControlPoint","parseTimingFunction","numberArgs.every$argument_0","parsedArgs.map$argument_0"],"mappings":"AAA;2CCK;EDM;OEC;oCCC;GDQ;CFC;AIC;CJM;AKC;+DCgB,cD;6CEO;SFO;CLc"},"hasCjsExports":false},"type":"js/module"}]}