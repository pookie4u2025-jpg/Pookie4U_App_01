{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./AuthRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":44,"index":111}}],"key":"BFyNh543W2KnsToqdsAa2+thYOo=","exportNames":["*"],"imports":1}},{"name":"./Discovery","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":112},"end":{"line":3,"column":52,"index":164}}],"key":"r5fifmpNd960vV6idFP2s9wdtw4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"windowFeatures\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useAutoDiscovery = useAutoDiscovery;\n  exports.useLoadedAuthRequest = useLoadedAuthRequest;\n  exports.useAuthRequestResult = useAuthRequestResult;\n  exports.useAuthRequest = useAuthRequest;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _AuthRequest = require(_dependencyMap[2], \"./AuthRequest\");\n  var _Discovery = require(_dependencyMap[3], \"./Discovery\");\n  // @needsAudit\n  /**\n   * Given an OpenID Connect issuer URL, this will fetch and return the [`DiscoveryDocument`](#discoverydocument)\n   * (a collection of URLs) from the resource provider.\n   *\n   * @param issuerOrDiscovery URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier.\n   * @return Returns `null` until the [`DiscoveryDocument`](#discoverydocument) has been fetched from the provided issuer URL.\n   *\n   * @example\n   * ```ts\n   * const discovery = useAutoDiscovery('https://example.com/auth');\n   * ```\n   */\n  function useAutoDiscovery(issuerOrDiscovery) {\n    const [discovery, setDiscovery] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      let isAllowed = true;\n      (0, _Discovery.resolveDiscoveryAsync)(issuerOrDiscovery).then(discovery => {\n        if (isAllowed) {\n          setDiscovery(discovery);\n        }\n      });\n      return () => {\n        isAllowed = false;\n      };\n    }, [issuerOrDiscovery]);\n    return discovery;\n  }\n  function useLoadedAuthRequest(config, discovery, AuthRequestInstance) {\n    const [request, setRequest] = (0, _react.useState)(null);\n    const scopeString = config.scopes?.join(' ');\n    const promptString = createPromptString(config.prompt);\n    const extraParamsString = (0, _react.useMemo)(() => JSON.stringify(config.extraParams || {}), [config.extraParams]);\n    (0, _react.useEffect)(() => {\n      let isMounted = true;\n      if (discovery) {\n        const request = new AuthRequestInstance(config);\n        request.makeAuthUrlAsync(discovery).then(() => {\n          if (isMounted) {\n            setRequest(request);\n          }\n        });\n      }\n      return () => {\n        isMounted = false;\n      };\n    }, [discovery?.authorizationEndpoint, config.clientId, config.redirectUri, config.responseType, config.clientSecret, config.codeChallenge, config.state, config.usePKCE, scopeString, promptString, extraParamsString]);\n    return request;\n  }\n  /**\n   * @returns Prompt type converted to a primitive value to be used as a React hook dependency\n   */\n  function createPromptString(prompt) {\n    if (!prompt) {\n      return;\n    }\n    if (Array.isArray(prompt)) {\n      return prompt.join(' ');\n    }\n    return prompt;\n  }\n  function useAuthRequestResult(request, discovery, customOptions = {}) {\n    const [result, setResult] = (0, _react.useState)(null);\n    const promptAsync = (0, _react.useCallback)(async (_ref = {}) => {\n      let {\n          windowFeatures = {}\n        } = _ref,\n        options = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      if (!discovery || !request) {\n        throw new Error('Cannot prompt to authenticate until the request has finished loading.');\n      }\n      const inputOptions = Object.assign({}, customOptions, options, {\n        windowFeatures: Object.assign({}, customOptions.windowFeatures ?? {}, windowFeatures)\n      });\n      const result = await request?.promptAsync(discovery, inputOptions);\n      setResult(result);\n      return result;\n    }, [request?.url, discovery?.authorizationEndpoint]);\n    return [result, promptAsync];\n  }\n  // @needsAudit\n  /**\n   * Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.\n   *\n   * > In order to close the popup window on web, you need to invoke `WebBrowser.maybeCompleteAuthSession()`.\n   * > See the [GitHub example](/guides/authentication#github) for more info.\n   *\n   * If an Implicit grant flow was used, you can pass the `response.params` to `TokenResponse.fromQueryParams()`\n   * to get a `TokenResponse` instance which you can use to easily refresh the token.\n   *\n   * @param config A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use.\n   * @param discovery A loaded [`DiscoveryDocument`](#discoverydocument) with endpoints used for authenticating.\n   * Only `authorizationEndpoint` is required for requesting an authorization code.\n   *\n   * @return Returns a loaded request, a response, and a prompt method in a single array in the following order:\n   * - `request` - An instance of [`AuthRequest`](#authrequest) that can be used to prompt the user for authorization.\n   *   This will be `null` until the auth request has finished loading.\n   * - `response` - This is `null` until `promptAsync` has been invoked. Once fulfilled it will return information about the authorization.\n   * - `promptAsync` - When invoked, a web browser will open up and prompt the user for authentication.\n   *   Accepts an [`AuthRequestPromptOptions`](#authrequestpromptoptions) object with options about how the prompt will execute.\n   *\n   * @example\n   * ```ts\n   * const [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\n   * ```\n   */\n  function useAuthRequest(config, discovery) {\n    const request = useLoadedAuthRequest(config, discovery, _AuthRequest.AuthRequest);\n    const [result, promptAsync] = useAuthRequestResult(request, discovery);\n    return [request, result, promptAsync];\n  }\n});","lineCount":133,"map":[[13,2,17,0,"exports"],[13,9,17,0],[13,10,17,0,"useAutoDiscovery"],[13,26,17,0],[13,29,17,0,"useAutoDiscovery"],[13,45,17,0],[14,2,32,0,"exports"],[14,9,32,0],[14,10,32,0,"useLoadedAuthRequest"],[14,30,32,0],[14,33,32,0,"useLoadedAuthRequest"],[14,53,32,0],[15,2,77,0,"exports"],[15,9,77,0],[15,10,77,0,"useAuthRequestResult"],[15,30,77,0],[15,33,77,0,"useAuthRequestResult"],[15,53,77,0],[16,2,123,0,"exports"],[16,9,123,0],[16,10,123,0,"useAuthRequest"],[16,24,123,0],[16,27,123,0,"useAuthRequest"],[16,41,123,0],[17,2,127,1],[17,6,127,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[17,54,127,1],[17,57,127,1,"require"],[17,64,127,1],[17,65,127,1,"_dependencyMap"],[17,79,127,1],[18,2,127,1],[18,6,127,1,"_objectWithoutPropertiesLoose"],[18,35,127,1],[18,38,127,1,"_interopDefault"],[18,53,127,1],[18,54,127,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[18,102,127,1],[19,2,1,0],[19,6,1,0,"_react"],[19,12,1,0],[19,15,1,0,"require"],[19,22,1,0],[19,23,1,0,"_dependencyMap"],[19,37,1,0],[20,2,2,0],[20,6,2,0,"_AuthRequest"],[20,18,2,0],[20,21,2,0,"require"],[20,28,2,0],[20,29,2,0,"_dependencyMap"],[20,43,2,0],[21,2,3,0],[21,6,3,0,"_Discovery"],[21,16,3,0],[21,19,3,0,"require"],[21,26,3,0],[21,27,3,0,"_dependencyMap"],[21,41,3,0],[22,2,4,0],[23,2,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[27,0,9,0],[28,0,10,0],[29,0,11,0],[30,0,12,0],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,2,17,7],[35,11,17,16,"useAutoDiscovery"],[35,27,17,32,"useAutoDiscovery"],[35,28,17,33,"issuerOrDiscovery"],[35,45,17,50],[35,47,17,52],[36,4,18,4],[36,10,18,10],[36,11,18,11,"discovery"],[36,20,18,20],[36,22,18,22,"setDiscovery"],[36,34,18,34],[36,35,18,35],[36,38,18,38],[36,42,18,38,"useState"],[36,48,18,46],[36,49,18,46,"useState"],[36,57,18,46],[36,59,18,47],[36,63,18,51],[36,64,18,52],[37,4,19,4],[37,8,19,4,"useEffect"],[37,14,19,13],[37,15,19,13,"useEffect"],[37,24,19,13],[37,26,19,14],[37,32,19,20],[38,6,20,8],[38,10,20,12,"isAllowed"],[38,19,20,21],[38,22,20,24],[38,26,20,28],[39,6,21,8],[39,10,21,8,"resolveDiscoveryAsync"],[39,20,21,29],[39,21,21,29,"resolveDiscoveryAsync"],[39,42,21,29],[39,44,21,30,"issuerOrDiscovery"],[39,61,21,47],[39,62,21,48],[39,63,21,49,"then"],[39,67,21,53],[39,68,21,55,"discovery"],[39,77,21,64],[39,81,21,69],[40,8,22,12],[40,12,22,16,"isAllowed"],[40,21,22,25],[40,23,22,27],[41,10,23,16,"setDiscovery"],[41,22,23,28],[41,23,23,29,"discovery"],[41,32,23,38],[41,33,23,39],[42,8,24,12],[43,6,25,8],[43,7,25,9],[43,8,25,10],[44,6,26,8],[44,13,26,15],[44,19,26,21],[45,8,27,12,"isAllowed"],[45,17,27,21],[45,20,27,24],[45,25,27,29],[46,6,28,8],[46,7,28,9],[47,4,29,4],[47,5,29,5],[47,7,29,7],[47,8,29,8,"issuerOrDiscovery"],[47,25,29,25],[47,26,29,26],[47,27,29,27],[48,4,30,4],[48,11,30,11,"discovery"],[48,20,30,20],[49,2,31,0],[50,2,32,7],[50,11,32,16,"useLoadedAuthRequest"],[50,31,32,36,"useLoadedAuthRequest"],[50,32,32,37,"config"],[50,38,32,43],[50,40,32,45,"discovery"],[50,49,32,54],[50,51,32,56,"AuthRequestInstance"],[50,70,32,75],[50,72,32,77],[51,4,33,4],[51,10,33,10],[51,11,33,11,"request"],[51,18,33,18],[51,20,33,20,"setRequest"],[51,30,33,30],[51,31,33,31],[51,34,33,34],[51,38,33,34,"useState"],[51,44,33,42],[51,45,33,42,"useState"],[51,53,33,42],[51,55,33,43],[51,59,33,47],[51,60,33,48],[52,4,34,4],[52,10,34,10,"scopeString"],[52,21,34,21],[52,24,34,24,"config"],[52,30,34,30],[52,31,34,31,"scopes"],[52,37,34,37],[52,39,34,39,"join"],[52,43,34,43],[52,44,34,44],[52,47,34,47],[52,48,34,48],[53,4,35,4],[53,10,35,10,"promptString"],[53,22,35,22],[53,25,35,25,"createPromptString"],[53,43,35,43],[53,44,35,44,"config"],[53,50,35,50],[53,51,35,51,"prompt"],[53,57,35,57],[53,58,35,58],[54,4,36,4],[54,10,36,10,"extraParamsString"],[54,27,36,27],[54,30,36,30],[54,34,36,30,"useMemo"],[54,40,36,37],[54,41,36,37,"useMemo"],[54,48,36,37],[54,50,36,38],[54,56,36,44,"JSON"],[54,60,36,48],[54,61,36,49,"stringify"],[54,70,36,58],[54,71,36,59,"config"],[54,77,36,65],[54,78,36,66,"extraParams"],[54,89,36,77],[54,93,36,81],[54,94,36,82],[54,95,36,83],[54,96,36,84],[54,98,36,86],[54,99,36,87,"config"],[54,105,36,93],[54,106,36,94,"extraParams"],[54,117,36,105],[54,118,36,106],[54,119,36,107],[55,4,37,4],[55,8,37,4,"useEffect"],[55,14,37,13],[55,15,37,13,"useEffect"],[55,24,37,13],[55,26,37,14],[55,32,37,20],[56,6,38,8],[56,10,38,12,"isMounted"],[56,19,38,21],[56,22,38,24],[56,26,38,28],[57,6,39,8],[57,10,39,12,"discovery"],[57,19,39,21],[57,21,39,23],[58,8,40,12],[58,14,40,18,"request"],[58,21,40,25],[58,24,40,28],[58,28,40,32,"AuthRequestInstance"],[58,47,40,51],[58,48,40,52,"config"],[58,54,40,58],[58,55,40,59],[59,8,41,12,"request"],[59,15,41,19],[59,16,41,20,"makeAuthUrlAsync"],[59,32,41,36],[59,33,41,37,"discovery"],[59,42,41,46],[59,43,41,47],[59,44,41,48,"then"],[59,48,41,52],[59,49,41,53],[59,55,41,59],[60,10,42,16],[60,14,42,20,"isMounted"],[60,23,42,29],[60,25,42,31],[61,12,43,20,"setRequest"],[61,22,43,30],[61,23,43,31,"request"],[61,30,43,38],[61,31,43,39],[62,10,44,16],[63,8,45,12],[63,9,45,13],[63,10,45,14],[64,6,46,8],[65,6,47,8],[65,13,47,15],[65,19,47,21],[66,8,48,12,"isMounted"],[66,17,48,21],[66,20,48,24],[66,25,48,29],[67,6,49,8],[67,7,49,9],[68,4,50,4],[68,5,50,5],[68,7,50,7],[68,8,51,8,"discovery"],[68,17,51,17],[68,19,51,19,"authorizationEndpoint"],[68,40,51,40],[68,42,52,8,"config"],[68,48,52,14],[68,49,52,15,"clientId"],[68,57,52,23],[68,59,53,8,"config"],[68,65,53,14],[68,66,53,15,"redirectUri"],[68,77,53,26],[68,79,54,8,"config"],[68,85,54,14],[68,86,54,15,"responseType"],[68,98,54,27],[68,100,55,8,"config"],[68,106,55,14],[68,107,55,15,"clientSecret"],[68,119,55,27],[68,121,56,8,"config"],[68,127,56,14],[68,128,56,15,"codeChallenge"],[68,141,56,28],[68,143,57,8,"config"],[68,149,57,14],[68,150,57,15,"state"],[68,155,57,20],[68,157,58,8,"config"],[68,163,58,14],[68,164,58,15,"usePKCE"],[68,171,58,22],[68,173,59,8,"scopeString"],[68,184,59,19],[68,186,60,8,"promptString"],[68,198,60,20],[68,200,61,8,"extraParamsString"],[68,217,61,25],[68,218,62,5],[68,219,62,6],[69,4,63,4],[69,11,63,11,"request"],[69,18,63,18],[70,2,64,0],[71,2,65,0],[72,0,66,0],[73,0,67,0],[74,2,68,0],[74,11,68,9,"createPromptString"],[74,29,68,27,"createPromptString"],[74,30,68,28,"prompt"],[74,36,68,34],[74,38,68,36],[75,4,69,4],[75,8,69,8],[75,9,69,9,"prompt"],[75,15,69,15],[75,17,69,17],[76,6,70,8],[77,4,71,4],[78,4,72,4],[78,8,72,8,"Array"],[78,13,72,13],[78,14,72,14,"isArray"],[78,21,72,21],[78,22,72,22,"prompt"],[78,28,72,28],[78,29,72,29],[78,31,72,31],[79,6,73,8],[79,13,73,15,"prompt"],[79,19,73,21],[79,20,73,22,"join"],[79,24,73,26],[79,25,73,27],[79,28,73,30],[79,29,73,31],[80,4,74,4],[81,4,75,4],[81,11,75,11,"prompt"],[81,17,75,17],[82,2,76,0],[83,2,77,7],[83,11,77,16,"useAuthRequestResult"],[83,31,77,36,"useAuthRequestResult"],[83,32,77,37,"request"],[83,39,77,44],[83,41,77,46,"discovery"],[83,50,77,55],[83,52,77,57,"customOptions"],[83,65,77,70],[83,68,77,73],[83,69,77,74],[83,70,77,75],[83,72,77,77],[84,4,78,4],[84,10,78,10],[84,11,78,11,"result"],[84,17,78,17],[84,19,78,19,"setResult"],[84,28,78,28],[84,29,78,29],[84,32,78,32],[84,36,78,32,"useState"],[84,42,78,40],[84,43,78,40,"useState"],[84,51,78,40],[84,53,78,41],[84,57,78,45],[84,58,78,46],[85,4,79,4],[85,10,79,10,"promptAsync"],[85,21,79,21],[85,24,79,24],[85,28,79,24,"useCallback"],[85,34,79,35],[85,35,79,35,"useCallback"],[85,46,79,35],[85,48,79,36],[85,55,79,43,"_ref"],[85,59,79,43],[85,62,79,81],[85,63,79,82],[85,64,79,83],[85,69,79,88],[86,6,79,88],[86,10,79,43],[87,10,79,45,"windowFeatures"],[87,24,79,59],[87,27,79,62],[87,28,79,63],[88,8,79,77],[88,9,79,78],[88,12,79,78,"_ref"],[88,16,79,78],[89,8,79,69,"options"],[89,15,79,76],[89,22,79,76,"_objectWithoutPropertiesLoose"],[89,51,79,76],[89,52,79,76,"default"],[89,59,79,76],[89,61,79,76,"_ref"],[89,65,79,76],[89,67,79,76,"_excluded"],[89,76,79,76],[90,6,80,8],[90,10,80,12],[90,11,80,13,"discovery"],[90,20,80,22],[90,24,80,26],[90,25,80,27,"request"],[90,32,80,34],[90,34,80,36],[91,8,81,12],[91,14,81,18],[91,18,81,22,"Error"],[91,23,81,27],[91,24,81,28],[91,95,81,99],[91,96,81,100],[92,6,82,8],[93,6,83,8],[93,12,83,14,"inputOptions"],[93,24,83,26],[93,27,83,26,"Object"],[93,33,83,26],[93,34,83,26,"assign"],[93,40,83,26],[93,45,84,15,"customOptions"],[93,58,84,28],[93,60,85,15,"options"],[93,67,85,22],[94,8,86,12,"windowFeatures"],[94,22,86,26],[94,24,86,26,"Object"],[94,30,86,26],[94,31,86,26,"assign"],[94,37,86,26],[94,42,87,20,"customOptions"],[94,55,87,33],[94,56,87,34,"windowFeatures"],[94,70,87,48],[94,74,87,52],[94,75,87,53],[94,76,87,54],[94,78,88,19,"windowFeatures"],[94,92,88,33],[95,6,89,13],[95,8,90,9],[96,6,91,8],[96,12,91,14,"result"],[96,18,91,20],[96,21,91,23],[96,27,91,29,"request"],[96,34,91,36],[96,36,91,38,"promptAsync"],[96,47,91,49],[96,48,91,50,"discovery"],[96,57,91,59],[96,59,91,61,"inputOptions"],[96,71,91,73],[96,72,91,74],[97,6,92,8,"setResult"],[97,15,92,17],[97,16,92,18,"result"],[97,22,92,24],[97,23,92,25],[98,6,93,8],[98,13,93,15,"result"],[98,19,93,21],[99,4,94,4],[99,5,94,5],[99,7,94,7],[99,8,94,8,"request"],[99,15,94,15],[99,17,94,17,"url"],[99,20,94,20],[99,22,94,22,"discovery"],[99,31,94,31],[99,33,94,33,"authorizationEndpoint"],[99,54,94,54],[99,55,94,55],[99,56,94,56],[100,4,95,4],[100,11,95,11],[100,12,95,12,"result"],[100,18,95,18],[100,20,95,20,"promptAsync"],[100,31,95,31],[100,32,95,32],[101,2,96,0],[102,2,97,0],[103,2,98,0],[104,0,99,0],[105,0,100,0],[106,0,101,0],[107,0,102,0],[108,0,103,0],[109,0,104,0],[110,0,105,0],[111,0,106,0],[112,0,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,0,112,0],[118,0,113,0],[119,0,114,0],[120,0,115,0],[121,0,116,0],[122,0,117,0],[123,0,118,0],[124,0,119,0],[125,0,120,0],[126,0,121,0],[127,0,122,0],[128,2,123,7],[128,11,123,16,"useAuthRequest"],[128,25,123,30,"useAuthRequest"],[128,26,123,31,"config"],[128,32,123,37],[128,34,123,39,"discovery"],[128,43,123,48],[128,45,123,50],[129,4,124,4],[129,10,124,10,"request"],[129,17,124,17],[129,20,124,20,"useLoadedAuthRequest"],[129,40,124,40],[129,41,124,41,"config"],[129,47,124,47],[129,49,124,49,"discovery"],[129,58,124,58],[129,60,124,60,"AuthRequest"],[129,72,124,71],[129,73,124,71,"AuthRequest"],[129,84,124,71],[129,85,124,72],[130,4,125,4],[130,10,125,10],[130,11,125,11,"result"],[130,17,125,17],[130,19,125,19,"promptAsync"],[130,30,125,30],[130,31,125,31],[130,34,125,34,"useAuthRequestResult"],[130,54,125,54],[130,55,125,55,"request"],[130,62,125,62],[130,64,125,64,"discovery"],[130,73,125,73],[130,74,125,74],[131,4,126,4],[131,11,126,11],[131,12,126,12,"request"],[131,19,126,19],[131,21,126,21,"result"],[131,27,126,27],[131,29,126,29,"promptAsync"],[131,40,126,40],[131,41,126,41],[132,2,127,0],[133,0,127,1],[133,3]],"functionMap":{"names":["<global>","useAutoDiscovery","useEffect$argument_0","resolveDiscoveryAsync.then$argument_0","<anonymous>","useLoadedAuthRequest","useMemo$argument_0","request.makeAuthUrlAsync.then$argument_0","createPromptString","useAuthRequestResult","promptAsync","useAuthRequest"],"mappings":"AAA;OCgB;cCE;sDCE;SDI;eEC;SFE;KDC;CDE;OKC;sCCI,8CD;cHC;qDKI;aLI;eEE;SFE;KGC;CLc;AQI;CRQ;OSC;oCCE;KDe;CTE;OW2B;CXI"},"hasCjsExports":false},"type":"js/module"}]}