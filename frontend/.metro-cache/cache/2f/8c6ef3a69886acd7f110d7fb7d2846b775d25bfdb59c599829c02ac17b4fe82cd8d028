{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./AuthRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":44,"index":111}}],"key":"BFyNh543W2KnsToqdsAa2+thYOo=","exportNames":["*"],"imports":1}},{"name":"./Discovery","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":112},"end":{"line":3,"column":52,"index":164}}],"key":"r5fifmpNd960vV6idFP2s9wdtw4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useAutoDiscovery = useAutoDiscovery;\n  exports.useLoadedAuthRequest = useLoadedAuthRequest;\n  exports.useAuthRequestResult = useAuthRequestResult;\n  exports.useAuthRequest = useAuthRequest;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _AuthRequest = require(_dependencyMap[1], \"./AuthRequest\");\n  var _Discovery = require(_dependencyMap[2], \"./Discovery\");\n  // @needsAudit\n  /**\n   * Given an OpenID Connect issuer URL, this will fetch and return the [`DiscoveryDocument`](#discoverydocument)\n   * (a collection of URLs) from the resource provider.\n   *\n   * @param issuerOrDiscovery URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier.\n   * @return Returns `null` until the [`DiscoveryDocument`](#discoverydocument) has been fetched from the provided issuer URL.\n   *\n   * @example\n   * ```ts\n   * const discovery = useAutoDiscovery('https://example.com/auth');\n   * ```\n   */\n  function useAutoDiscovery(issuerOrDiscovery) {\n    const [discovery, setDiscovery] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      let isAllowed = true;\n      (0, _Discovery.resolveDiscoveryAsync)(issuerOrDiscovery).then(discovery => {\n        if (isAllowed) {\n          setDiscovery(discovery);\n        }\n      });\n      return () => {\n        isAllowed = false;\n      };\n    }, [issuerOrDiscovery]);\n    return discovery;\n  }\n  function useLoadedAuthRequest(config, discovery, AuthRequestInstance) {\n    const [request, setRequest] = (0, _react.useState)(null);\n    const scopeString = config.scopes?.join(' ');\n    const promptString = createPromptString(config.prompt);\n    const extraParamsString = (0, _react.useMemo)(() => JSON.stringify(config.extraParams || {}), [config.extraParams]);\n    (0, _react.useEffect)(() => {\n      let isMounted = true;\n      if (discovery) {\n        const request = new AuthRequestInstance(config);\n        request.makeAuthUrlAsync(discovery).then(() => {\n          if (isMounted) {\n            setRequest(request);\n          }\n        });\n      }\n      return () => {\n        isMounted = false;\n      };\n    }, [discovery?.authorizationEndpoint, config.clientId, config.redirectUri, config.responseType, config.clientSecret, config.codeChallenge, config.state, config.usePKCE, scopeString, promptString, extraParamsString]);\n    return request;\n  }\n  /**\n   * @returns Prompt type converted to a primitive value to be used as a React hook dependency\n   */\n  function createPromptString(prompt) {\n    if (!prompt) {\n      return;\n    }\n    if (Array.isArray(prompt)) {\n      return prompt.join(' ');\n    }\n    return prompt;\n  }\n  function useAuthRequestResult(request, discovery, customOptions = {}) {\n    const [result, setResult] = (0, _react.useState)(null);\n    const promptAsync = (0, _react.useCallback)(async ({\n      windowFeatures = {},\n      ...options\n    } = {}) => {\n      if (!discovery || !request) {\n        throw new Error('Cannot prompt to authenticate until the request has finished loading.');\n      }\n      const inputOptions = {\n        ...customOptions,\n        ...options,\n        windowFeatures: {\n          ...(customOptions.windowFeatures ?? {}),\n          ...windowFeatures\n        }\n      };\n      const result = await request?.promptAsync(discovery, inputOptions);\n      setResult(result);\n      return result;\n    }, [request?.url, discovery?.authorizationEndpoint]);\n    return [result, promptAsync];\n  }\n  // @needsAudit\n  /**\n   * Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.\n   *\n   * > In order to close the popup window on web, you need to invoke `WebBrowser.maybeCompleteAuthSession()`.\n   * > See the [GitHub example](/guides/authentication#github) for more info.\n   *\n   * If an Implicit grant flow was used, you can pass the `response.params` to `TokenResponse.fromQueryParams()`\n   * to get a `TokenResponse` instance which you can use to easily refresh the token.\n   *\n   * @param config A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use.\n   * @param discovery A loaded [`DiscoveryDocument`](#discoverydocument) with endpoints used for authenticating.\n   * Only `authorizationEndpoint` is required for requesting an authorization code.\n   *\n   * @return Returns a loaded request, a response, and a prompt method in a single array in the following order:\n   * - `request` - An instance of [`AuthRequest`](#authrequest) that can be used to prompt the user for authorization.\n   *   This will be `null` until the auth request has finished loading.\n   * - `response` - This is `null` until `promptAsync` has been invoked. Once fulfilled it will return information about the authorization.\n   * - `promptAsync` - When invoked, a web browser will open up and prompt the user for authentication.\n   *   Accepts an [`AuthRequestPromptOptions`](#authrequestpromptoptions) object with options about how the prompt will execute.\n   *\n   * @example\n   * ```ts\n   * const [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\n   * ```\n   */\n  function useAuthRequest(config, discovery) {\n    const request = useLoadedAuthRequest(config, discovery, _AuthRequest.AuthRequest);\n    const [result, promptAsync] = useAuthRequestResult(request, discovery);\n    return [request, result, promptAsync];\n  }\n});","lineCount":129,"map":[[7,2,17,0,"exports"],[7,9,17,0],[7,10,17,0,"useAutoDiscovery"],[7,26,17,0],[7,29,17,0,"useAutoDiscovery"],[7,45,17,0],[8,2,32,0,"exports"],[8,9,32,0],[8,10,32,0,"useLoadedAuthRequest"],[8,30,32,0],[8,33,32,0,"useLoadedAuthRequest"],[8,53,32,0],[9,2,77,0,"exports"],[9,9,77,0],[9,10,77,0,"useAuthRequestResult"],[9,30,77,0],[9,33,77,0,"useAuthRequestResult"],[9,53,77,0],[10,2,123,0,"exports"],[10,9,123,0],[10,10,123,0,"useAuthRequest"],[10,24,123,0],[10,27,123,0,"useAuthRequest"],[10,41,123,0],[11,2,1,0],[11,6,1,0,"_react"],[11,12,1,0],[11,15,1,0,"require"],[11,22,1,0],[11,23,1,0,"_dependencyMap"],[11,37,1,0],[12,2,2,0],[12,6,2,0,"_AuthRequest"],[12,18,2,0],[12,21,2,0,"require"],[12,28,2,0],[12,29,2,0,"_dependencyMap"],[12,43,2,0],[13,2,3,0],[13,6,3,0,"_Discovery"],[13,16,3,0],[13,19,3,0,"require"],[13,26,3,0],[13,27,3,0,"_dependencyMap"],[13,41,3,0],[14,2,4,0],[15,2,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,0,10,0],[21,0,11,0],[22,0,12,0],[23,0,13,0],[24,0,14,0],[25,0,15,0],[26,0,16,0],[27,2,17,7],[27,11,17,16,"useAutoDiscovery"],[27,27,17,32,"useAutoDiscovery"],[27,28,17,33,"issuerOrDiscovery"],[27,45,17,50],[27,47,17,52],[28,4,18,4],[28,10,18,10],[28,11,18,11,"discovery"],[28,20,18,20],[28,22,18,22,"setDiscovery"],[28,34,18,34],[28,35,18,35],[28,38,18,38],[28,42,18,38,"useState"],[28,48,18,46],[28,49,18,46,"useState"],[28,57,18,46],[28,59,18,47],[28,63,18,51],[28,64,18,52],[29,4,19,4],[29,8,19,4,"useEffect"],[29,14,19,13],[29,15,19,13,"useEffect"],[29,24,19,13],[29,26,19,14],[29,32,19,20],[30,6,20,8],[30,10,20,12,"isAllowed"],[30,19,20,21],[30,22,20,24],[30,26,20,28],[31,6,21,8],[31,10,21,8,"resolveDiscoveryAsync"],[31,20,21,29],[31,21,21,29,"resolveDiscoveryAsync"],[31,42,21,29],[31,44,21,30,"issuerOrDiscovery"],[31,61,21,47],[31,62,21,48],[31,63,21,49,"then"],[31,67,21,53],[31,68,21,55,"discovery"],[31,77,21,64],[31,81,21,69],[32,8,22,12],[32,12,22,16,"isAllowed"],[32,21,22,25],[32,23,22,27],[33,10,23,16,"setDiscovery"],[33,22,23,28],[33,23,23,29,"discovery"],[33,32,23,38],[33,33,23,39],[34,8,24,12],[35,6,25,8],[35,7,25,9],[35,8,25,10],[36,6,26,8],[36,13,26,15],[36,19,26,21],[37,8,27,12,"isAllowed"],[37,17,27,21],[37,20,27,24],[37,25,27,29],[38,6,28,8],[38,7,28,9],[39,4,29,4],[39,5,29,5],[39,7,29,7],[39,8,29,8,"issuerOrDiscovery"],[39,25,29,25],[39,26,29,26],[39,27,29,27],[40,4,30,4],[40,11,30,11,"discovery"],[40,20,30,20],[41,2,31,0],[42,2,32,7],[42,11,32,16,"useLoadedAuthRequest"],[42,31,32,36,"useLoadedAuthRequest"],[42,32,32,37,"config"],[42,38,32,43],[42,40,32,45,"discovery"],[42,49,32,54],[42,51,32,56,"AuthRequestInstance"],[42,70,32,75],[42,72,32,77],[43,4,33,4],[43,10,33,10],[43,11,33,11,"request"],[43,18,33,18],[43,20,33,20,"setRequest"],[43,30,33,30],[43,31,33,31],[43,34,33,34],[43,38,33,34,"useState"],[43,44,33,42],[43,45,33,42,"useState"],[43,53,33,42],[43,55,33,43],[43,59,33,47],[43,60,33,48],[44,4,34,4],[44,10,34,10,"scopeString"],[44,21,34,21],[44,24,34,24,"config"],[44,30,34,30],[44,31,34,31,"scopes"],[44,37,34,37],[44,39,34,39,"join"],[44,43,34,43],[44,44,34,44],[44,47,34,47],[44,48,34,48],[45,4,35,4],[45,10,35,10,"promptString"],[45,22,35,22],[45,25,35,25,"createPromptString"],[45,43,35,43],[45,44,35,44,"config"],[45,50,35,50],[45,51,35,51,"prompt"],[45,57,35,57],[45,58,35,58],[46,4,36,4],[46,10,36,10,"extraParamsString"],[46,27,36,27],[46,30,36,30],[46,34,36,30,"useMemo"],[46,40,36,37],[46,41,36,37,"useMemo"],[46,48,36,37],[46,50,36,38],[46,56,36,44,"JSON"],[46,60,36,48],[46,61,36,49,"stringify"],[46,70,36,58],[46,71,36,59,"config"],[46,77,36,65],[46,78,36,66,"extraParams"],[46,89,36,77],[46,93,36,81],[46,94,36,82],[46,95,36,83],[46,96,36,84],[46,98,36,86],[46,99,36,87,"config"],[46,105,36,93],[46,106,36,94,"extraParams"],[46,117,36,105],[46,118,36,106],[46,119,36,107],[47,4,37,4],[47,8,37,4,"useEffect"],[47,14,37,13],[47,15,37,13,"useEffect"],[47,24,37,13],[47,26,37,14],[47,32,37,20],[48,6,38,8],[48,10,38,12,"isMounted"],[48,19,38,21],[48,22,38,24],[48,26,38,28],[49,6,39,8],[49,10,39,12,"discovery"],[49,19,39,21],[49,21,39,23],[50,8,40,12],[50,14,40,18,"request"],[50,21,40,25],[50,24,40,28],[50,28,40,32,"AuthRequestInstance"],[50,47,40,51],[50,48,40,52,"config"],[50,54,40,58],[50,55,40,59],[51,8,41,12,"request"],[51,15,41,19],[51,16,41,20,"makeAuthUrlAsync"],[51,32,41,36],[51,33,41,37,"discovery"],[51,42,41,46],[51,43,41,47],[51,44,41,48,"then"],[51,48,41,52],[51,49,41,53],[51,55,41,59],[52,10,42,16],[52,14,42,20,"isMounted"],[52,23,42,29],[52,25,42,31],[53,12,43,20,"setRequest"],[53,22,43,30],[53,23,43,31,"request"],[53,30,43,38],[53,31,43,39],[54,10,44,16],[55,8,45,12],[55,9,45,13],[55,10,45,14],[56,6,46,8],[57,6,47,8],[57,13,47,15],[57,19,47,21],[58,8,48,12,"isMounted"],[58,17,48,21],[58,20,48,24],[58,25,48,29],[59,6,49,8],[59,7,49,9],[60,4,50,4],[60,5,50,5],[60,7,50,7],[60,8,51,8,"discovery"],[60,17,51,17],[60,19,51,19,"authorizationEndpoint"],[60,40,51,40],[60,42,52,8,"config"],[60,48,52,14],[60,49,52,15,"clientId"],[60,57,52,23],[60,59,53,8,"config"],[60,65,53,14],[60,66,53,15,"redirectUri"],[60,77,53,26],[60,79,54,8,"config"],[60,85,54,14],[60,86,54,15,"responseType"],[60,98,54,27],[60,100,55,8,"config"],[60,106,55,14],[60,107,55,15,"clientSecret"],[60,119,55,27],[60,121,56,8,"config"],[60,127,56,14],[60,128,56,15,"codeChallenge"],[60,141,56,28],[60,143,57,8,"config"],[60,149,57,14],[60,150,57,15,"state"],[60,155,57,20],[60,157,58,8,"config"],[60,163,58,14],[60,164,58,15,"usePKCE"],[60,171,58,22],[60,173,59,8,"scopeString"],[60,184,59,19],[60,186,60,8,"promptString"],[60,198,60,20],[60,200,61,8,"extraParamsString"],[60,217,61,25],[60,218,62,5],[60,219,62,6],[61,4,63,4],[61,11,63,11,"request"],[61,18,63,18],[62,2,64,0],[63,2,65,0],[64,0,66,0],[65,0,67,0],[66,2,68,0],[66,11,68,9,"createPromptString"],[66,29,68,27,"createPromptString"],[66,30,68,28,"prompt"],[66,36,68,34],[66,38,68,36],[67,4,69,4],[67,8,69,8],[67,9,69,9,"prompt"],[67,15,69,15],[67,17,69,17],[68,6,70,8],[69,4,71,4],[70,4,72,4],[70,8,72,8,"Array"],[70,13,72,13],[70,14,72,14,"isArray"],[70,21,72,21],[70,22,72,22,"prompt"],[70,28,72,28],[70,29,72,29],[70,31,72,31],[71,6,73,8],[71,13,73,15,"prompt"],[71,19,73,21],[71,20,73,22,"join"],[71,24,73,26],[71,25,73,27],[71,28,73,30],[71,29,73,31],[72,4,74,4],[73,4,75,4],[73,11,75,11,"prompt"],[73,17,75,17],[74,2,76,0],[75,2,77,7],[75,11,77,16,"useAuthRequestResult"],[75,31,77,36,"useAuthRequestResult"],[75,32,77,37,"request"],[75,39,77,44],[75,41,77,46,"discovery"],[75,50,77,55],[75,52,77,57,"customOptions"],[75,65,77,70],[75,68,77,73],[75,69,77,74],[75,70,77,75],[75,72,77,77],[76,4,78,4],[76,10,78,10],[76,11,78,11,"result"],[76,17,78,17],[76,19,78,19,"setResult"],[76,28,78,28],[76,29,78,29],[76,32,78,32],[76,36,78,32,"useState"],[76,42,78,40],[76,43,78,40,"useState"],[76,51,78,40],[76,53,78,41],[76,57,78,45],[76,58,78,46],[77,4,79,4],[77,10,79,10,"promptAsync"],[77,21,79,21],[77,24,79,24],[77,28,79,24,"useCallback"],[77,34,79,35],[77,35,79,35,"useCallback"],[77,46,79,35],[77,48,79,36],[77,55,79,43],[78,6,79,45,"windowFeatures"],[78,20,79,59],[78,23,79,62],[78,24,79,63],[78,25,79,64],[79,6,79,66],[79,9,79,69,"options"],[80,4,79,77],[80,5,79,78],[80,8,79,81],[80,9,79,82],[80,10,79,83],[80,15,79,88],[81,6,80,8],[81,10,80,12],[81,11,80,13,"discovery"],[81,20,80,22],[81,24,80,26],[81,25,80,27,"request"],[81,32,80,34],[81,34,80,36],[82,8,81,12],[82,14,81,18],[82,18,81,22,"Error"],[82,23,81,27],[82,24,81,28],[82,95,81,99],[82,96,81,100],[83,6,82,8],[84,6,83,8],[84,12,83,14,"inputOptions"],[84,24,83,26],[84,27,83,29],[85,8,84,12],[85,11,84,15,"customOptions"],[85,24,84,28],[86,8,85,12],[86,11,85,15,"options"],[86,18,85,22],[87,8,86,12,"windowFeatures"],[87,22,86,26],[87,24,86,28],[88,10,87,16],[88,14,87,20,"customOptions"],[88,27,87,33],[88,28,87,34,"windowFeatures"],[88,42,87,48],[88,46,87,52],[88,47,87,53],[88,48,87,54],[88,49,87,55],[89,10,88,16],[89,13,88,19,"windowFeatures"],[90,8,89,12],[91,6,90,8],[91,7,90,9],[92,6,91,8],[92,12,91,14,"result"],[92,18,91,20],[92,21,91,23],[92,27,91,29,"request"],[92,34,91,36],[92,36,91,38,"promptAsync"],[92,47,91,49],[92,48,91,50,"discovery"],[92,57,91,59],[92,59,91,61,"inputOptions"],[92,71,91,73],[92,72,91,74],[93,6,92,8,"setResult"],[93,15,92,17],[93,16,92,18,"result"],[93,22,92,24],[93,23,92,25],[94,6,93,8],[94,13,93,15,"result"],[94,19,93,21],[95,4,94,4],[95,5,94,5],[95,7,94,7],[95,8,94,8,"request"],[95,15,94,15],[95,17,94,17,"url"],[95,20,94,20],[95,22,94,22,"discovery"],[95,31,94,31],[95,33,94,33,"authorizationEndpoint"],[95,54,94,54],[95,55,94,55],[95,56,94,56],[96,4,95,4],[96,11,95,11],[96,12,95,12,"result"],[96,18,95,18],[96,20,95,20,"promptAsync"],[96,31,95,31],[96,32,95,32],[97,2,96,0],[98,2,97,0],[99,2,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,2,123,7],[124,11,123,16,"useAuthRequest"],[124,25,123,30,"useAuthRequest"],[124,26,123,31,"config"],[124,32,123,37],[124,34,123,39,"discovery"],[124,43,123,48],[124,45,123,50],[125,4,124,4],[125,10,124,10,"request"],[125,17,124,17],[125,20,124,20,"useLoadedAuthRequest"],[125,40,124,40],[125,41,124,41,"config"],[125,47,124,47],[125,49,124,49,"discovery"],[125,58,124,58],[125,60,124,60,"AuthRequest"],[125,72,124,71],[125,73,124,71,"AuthRequest"],[125,84,124,71],[125,85,124,72],[126,4,125,4],[126,10,125,10],[126,11,125,11,"result"],[126,17,125,17],[126,19,125,19,"promptAsync"],[126,30,125,30],[126,31,125,31],[126,34,125,34,"useAuthRequestResult"],[126,54,125,54],[126,55,125,55,"request"],[126,62,125,62],[126,64,125,64,"discovery"],[126,73,125,73],[126,74,125,74],[127,4,126,4],[127,11,126,11],[127,12,126,12,"request"],[127,19,126,19],[127,21,126,21,"result"],[127,27,126,27],[127,29,126,29,"promptAsync"],[127,40,126,40],[127,41,126,41],[128,2,127,0],[129,0,127,1],[129,3]],"functionMap":{"names":["<global>","useAutoDiscovery","useEffect$argument_0","resolveDiscoveryAsync.then$argument_0","<anonymous>","useLoadedAuthRequest","useMemo$argument_0","request.makeAuthUrlAsync.then$argument_0","createPromptString","useAuthRequestResult","promptAsync","useAuthRequest"],"mappings":"AAA;OCgB;cCE;sDCE;SDI;eEC;SFE;KDC;CDE;OKC;sCCI,8CD;cHC;qDKI;aLI;eEE;SFE;KGC;CLc;AQI;CRQ;OSC;oCCE;KDe;CTE;OW2B;CXI"},"hasCjsExports":false},"type":"js/module"}]}