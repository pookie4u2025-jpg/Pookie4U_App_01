{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":4,"index":94},"end":{"line":7,"column":26,"index":116}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./debug","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":131},"end":{"line":8,"column":32,"index":149}}],"key":"TxAI1NjbyH9rczJWabibJU6Zawg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const {\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_LENGTH\n  } = require(_dependencyMap[0], \"./constants\");\n  const debug = require(_dependencyMap[1], \"./debug\");\n  exports = module.exports = {};\n\n  // The actual regexps go on exports.re\n  const re = exports.re = [];\n  const safeRe = exports.safeRe = [];\n  const src = exports.src = [];\n  const safeSrc = exports.safeSrc = [];\n  const t = exports.t = {};\n  let R = 0;\n  const LETTERDASHNUMBER = '[a-zA-Z0-9-]';\n\n  // Replace some greedy regex tokens to prevent regex dos issues. These regex are\n  // used internally via the safeRe object since all inputs in this library get\n  // normalized first to trim and collapse all extra whitespace. The original\n  // regexes are exported for userland consumption and lower level usage. A\n  // future breaking change could export the safer regex only with a note that\n  // all input should have extra whitespace removed.\n  const safeRegexReplacements = [['\\\\s', 1], ['\\\\d', MAX_LENGTH], [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]];\n  const makeSafeRegex = value => {\n    for (const [token, max] of safeRegexReplacements) {\n      value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n    }\n    return value;\n  };\n  const createToken = (name, value, isGlobal) => {\n    const safe = makeSafeRegex(value);\n    const index = R++;\n    debug(name, index, value);\n    t[name] = index;\n    src[index] = value;\n    safeSrc[index] = safe;\n    re[index] = new RegExp(value, isGlobal ? 'g' : undefined);\n    safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined);\n  };\n\n  // The following Regular Expressions can be used for tokenizing,\n  // validating, and parsing SemVer version strings.\n\n  // ## Numeric Identifier\n  // A single `0`, or a non-zero digit followed by zero or more digits.\n\n  createToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*');\n  createToken('NUMERICIDENTIFIERLOOSE', '\\\\d+');\n\n  // ## Non-numeric Identifier\n  // Zero or more digits, followed by a letter or hyphen, and then zero or\n  // more letters, digits, or hyphens.\n\n  createToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n\n  // ## Main Version\n  // Three dot-separated numeric identifiers.\n\n  createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})`);\n  createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);\n\n  // ## Pre-release Version Identifier\n  // A numeric identifier, or a non-numeric identifier.\n  // Non-numberic identifiers include numberic identifiers but can be longer.\n  // Therefore non-numberic identifiers must go first.\n\n  createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIER]})`);\n  createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIERLOOSE]})`);\n\n  // ## Pre-release Version\n  // Hyphen, followed by one or more dot-separated pre-release version\n  // identifiers.\n\n  createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);\n  createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);\n\n  // ## Build Metadata Identifier\n  // Any combination of digits, letters, or hyphens.\n\n  createToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`);\n\n  // ## Build Metadata\n  // Plus sign, followed by one or more period-separated build metadata\n  // identifiers.\n\n  createToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);\n\n  // ## Full Version String\n  // A main version, followed optionally by a pre-release version and\n  // build metadata.\n\n  // Note that the only major, minor, patch, and pre-release sections of\n  // the version string are capturing groups.  The build metadata is not a\n  // capturing group, because it should not ever be used in version\n  // comparison.\n\n  createToken('FULLPLAIN', `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);\n  createToken('FULL', `^${src[t.FULLPLAIN]}$`);\n\n  // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n  // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n  // common in the npm registry.\n  createToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);\n  createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`);\n  createToken('GTLT', '((?:<|>)?=?)');\n\n  // Something like \"2.*\" or \"1.2.x\".\n  // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n  // Only the first item is strictly required.\n  createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\n  createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);\n  createToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);\n  createToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // Coercion.\n  // Extract anything that could conceivably be a part of a valid semver\n  createToken('COERCEPLAIN', `${'(^|[^\\\\d])' + '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);\n  createToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`);\n  createToken('COERCEFULL', src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?` + `(?:${src[t.BUILD]})?` + `(?:$|[^\\\\d])`);\n  createToken('COERCERTL', src[t.COERCE], true);\n  createToken('COERCERTLFULL', src[t.COERCEFULL], true);\n\n  // Tilde ranges.\n  // Meaning is \"reasonably at or greater than\"\n  createToken('LONETILDE', '(?:~>?)');\n  createToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true);\n  exports.tildeTrimReplace = '$1~';\n  createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);\n  createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // Caret ranges.\n  // Meaning is \"at least and backwards compatible with\"\n  createToken('LONECARET', '(?:\\\\^)');\n  createToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true);\n  exports.caretTrimReplace = '$1^';\n  createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);\n  createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);\n\n  // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n  createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);\n  createToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);\n\n  // An expression to strip any whitespace between the gtlt and the thing\n  // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n  createToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);\n  exports.comparatorTrimReplace = '$1$2$3';\n\n  // Something like `1.2.3 - 1.2.4`\n  // Note that these all use the loose form, because they'll be\n  // checked against either the strict or loose comparator form\n  // later.\n  createToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\\\s*$`);\n  createToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s*$`);\n\n  // Star ranges basically just allow anything at all.\n  createToken('STAR', '(<|>)?=?\\\\s*\\\\*');\n  // >=0.0.0 is like a star\n  createToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$');\n  createToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$');\n});","lineCount":166,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6],[5,4,4,2,"MAX_SAFE_COMPONENT_LENGTH"],[5,29,4,27],[6,4,5,2,"MAX_SAFE_BUILD_LENGTH"],[6,25,5,23],[7,4,6,2,"MAX_LENGTH"],[8,2,7,0],[8,3,7,1],[8,6,7,4,"require"],[8,13,7,11],[8,14,7,11,"_dependencyMap"],[8,28,7,11],[8,46,7,25],[8,47,7,26],[9,2,8,0],[9,8,8,6,"debug"],[9,13,8,11],[9,16,8,14,"require"],[9,23,8,21],[9,24,8,21,"_dependencyMap"],[9,38,8,21],[9,52,8,31],[9,53,8,32],[10,2,9,0,"exports"],[10,9,9,7],[10,12,9,10,"module"],[10,18,9,16],[10,19,9,17,"exports"],[10,26,9,24],[10,29,9,27],[10,30,9,28],[10,31,9,29],[12,2,11,0],[13,2,12,0],[13,8,12,6,"re"],[13,10,12,8],[13,13,12,11,"exports"],[13,20,12,18],[13,21,12,19,"re"],[13,23,12,21],[13,26,12,24],[13,28,12,26],[14,2,13,0],[14,8,13,6,"safeRe"],[14,14,13,12],[14,17,13,15,"exports"],[14,24,13,22],[14,25,13,23,"safeRe"],[14,31,13,29],[14,34,13,32],[14,36,13,34],[15,2,14,0],[15,8,14,6,"src"],[15,11,14,9],[15,14,14,12,"exports"],[15,21,14,19],[15,22,14,20,"src"],[15,25,14,23],[15,28,14,26],[15,30,14,28],[16,2,15,0],[16,8,15,6,"safeSrc"],[16,15,15,13],[16,18,15,16,"exports"],[16,25,15,23],[16,26,15,24,"safeSrc"],[16,33,15,31],[16,36,15,34],[16,38,15,36],[17,2,16,0],[17,8,16,6,"t"],[17,9,16,7],[17,12,16,10,"exports"],[17,19,16,17],[17,20,16,18,"t"],[17,21,16,19],[17,24,16,22],[17,25,16,23],[17,26,16,24],[18,2,17,0],[18,6,17,4,"R"],[18,7,17,5],[18,10,17,8],[18,11,17,9],[19,2,19,0],[19,8,19,6,"LETTERDASHNUMBER"],[19,24,19,22],[19,27,19,25],[19,41,19,39],[21,2,21,0],[22,2,22,0],[23,2,23,0],[24,2,24,0],[25,2,25,0],[26,2,26,0],[27,2,27,0],[27,8,27,6,"safeRegexReplacements"],[27,29,27,27],[27,32,27,30],[27,33,28,2],[27,34,28,3],[27,39,28,8],[27,41,28,10],[27,42,28,11],[27,43,28,12],[27,45,29,2],[27,46,29,3],[27,51,29,8],[27,53,29,10,"MAX_LENGTH"],[27,63,29,20],[27,64,29,21],[27,66,30,2],[27,67,30,3,"LETTERDASHNUMBER"],[27,83,30,19],[27,85,30,21,"MAX_SAFE_BUILD_LENGTH"],[27,106,30,42],[27,107,30,43],[27,108,31,1],[28,2,33,0],[28,8,33,6,"makeSafeRegex"],[28,21,33,19],[28,24,33,23,"value"],[28,29,33,28],[28,33,33,33],[29,4,34,2],[29,9,34,7],[29,15,34,13],[29,16,34,14,"token"],[29,21,34,19],[29,23,34,21,"max"],[29,26,34,24],[29,27,34,25],[29,31,34,29,"safeRegexReplacements"],[29,52,34,50],[29,54,34,52],[30,6,35,4,"value"],[30,11,35,9],[30,14,35,12,"value"],[30,19,35,17],[30,20,36,7,"split"],[30,25,36,12],[30,26,36,13],[30,29,36,16,"token"],[30,34,36,21],[30,37,36,24],[30,38,36,25],[30,39,36,26,"join"],[30,43,36,30],[30,44,36,31],[30,47,36,34,"token"],[30,52,36,39],[30,58,36,45,"max"],[30,61,36,48],[30,64,36,51],[30,65,36,52],[30,66,37,7,"split"],[30,71,37,12],[30,72,37,13],[30,75,37,16,"token"],[30,80,37,21],[30,83,37,24],[30,84,37,25],[30,85,37,26,"join"],[30,89,37,30],[30,90,37,31],[30,93,37,34,"token"],[30,98,37,39],[30,104,37,45,"max"],[30,107,37,48],[30,110,37,51],[30,111,37,52],[31,4,38,2],[32,4,39,2],[32,11,39,9,"value"],[32,16,39,14],[33,2,40,0],[33,3,40,1],[34,2,42,0],[34,8,42,6,"createToken"],[34,19,42,17],[34,22,42,20,"createToken"],[34,23,42,21,"name"],[34,27,42,25],[34,29,42,27,"value"],[34,34,42,32],[34,36,42,34,"isGlobal"],[34,44,42,42],[34,49,42,47],[35,4,43,2],[35,10,43,8,"safe"],[35,14,43,12],[35,17,43,15,"makeSafeRegex"],[35,30,43,28],[35,31,43,29,"value"],[35,36,43,34],[35,37,43,35],[36,4,44,2],[36,10,44,8,"index"],[36,15,44,13],[36,18,44,16,"R"],[36,19,44,17],[36,21,44,19],[37,4,45,2,"debug"],[37,9,45,7],[37,10,45,8,"name"],[37,14,45,12],[37,16,45,14,"index"],[37,21,45,19],[37,23,45,21,"value"],[37,28,45,26],[37,29,45,27],[38,4,46,2,"t"],[38,5,46,3],[38,6,46,4,"name"],[38,10,46,8],[38,11,46,9],[38,14,46,12,"index"],[38,19,46,17],[39,4,47,2,"src"],[39,7,47,5],[39,8,47,6,"index"],[39,13,47,11],[39,14,47,12],[39,17,47,15,"value"],[39,22,47,20],[40,4,48,2,"safeSrc"],[40,11,48,9],[40,12,48,10,"index"],[40,17,48,15],[40,18,48,16],[40,21,48,19,"safe"],[40,25,48,23],[41,4,49,2,"re"],[41,6,49,4],[41,7,49,5,"index"],[41,12,49,10],[41,13,49,11],[41,16,49,14],[41,20,49,18,"RegExp"],[41,26,49,24],[41,27,49,25,"value"],[41,32,49,30],[41,34,49,32,"isGlobal"],[41,42,49,40],[41,45,49,43],[41,48,49,46],[41,51,49,49,"undefined"],[41,60,49,58],[41,61,49,59],[42,4,50,2,"safeRe"],[42,10,50,8],[42,11,50,9,"index"],[42,16,50,14],[42,17,50,15],[42,20,50,18],[42,24,50,22,"RegExp"],[42,30,50,28],[42,31,50,29,"safe"],[42,35,50,33],[42,37,50,35,"isGlobal"],[42,45,50,43],[42,48,50,46],[42,51,50,49],[42,54,50,52,"undefined"],[42,63,50,61],[42,64,50,62],[43,2,51,0],[43,3,51,1],[45,2,53,0],[46,2,54,0],[48,2,56,0],[49,2,57,0],[51,2,59,0,"createToken"],[51,13,59,11],[51,14,59,12],[51,33,59,31],[51,35,59,33],[51,48,59,46],[51,49,59,47],[52,2,60,0,"createToken"],[52,13,60,11],[52,14,60,12],[52,38,60,36],[52,40,60,38],[52,46,60,44],[52,47,60,45],[54,2,62,0],[55,2,63,0],[56,2,64,0],[58,2,66,0,"createToken"],[58,13,66,11],[58,14,66,12],[58,36,66,34],[58,38,66,36],[58,54,66,52,"LETTERDASHNUMBER"],[58,70,66,68],[58,73,66,71],[58,74,66,72],[60,2,68,0],[61,2,69,0],[63,2,71,0,"createToken"],[63,13,71,11],[63,14,71,12],[63,27,71,25],[63,29,71,27],[63,33,71,31,"src"],[63,36,71,34],[63,37,71,35,"t"],[63,38,71,36],[63,39,71,37,"NUMERICIDENTIFIER"],[63,56,71,54],[63,57,71,55],[63,63,71,61],[63,66,72,19],[63,70,72,23,"src"],[63,73,72,26],[63,74,72,27,"t"],[63,75,72,28],[63,76,72,29,"NUMERICIDENTIFIER"],[63,93,72,46],[63,94,72,47],[63,100,72,53],[63,103,73,19],[63,107,73,23,"src"],[63,110,73,26],[63,111,73,27,"t"],[63,112,73,28],[63,113,73,29,"NUMERICIDENTIFIER"],[63,130,73,46],[63,131,73,47],[63,134,73,50],[63,135,73,51],[64,2,75,0,"createToken"],[64,13,75,11],[64,14,75,12],[64,32,75,30],[64,34,75,32],[64,38,75,36,"src"],[64,41,75,39],[64,42,75,40,"t"],[64,43,75,41],[64,44,75,42,"NUMERICIDENTIFIERLOOSE"],[64,66,75,64],[64,67,75,65],[64,73,75,71],[64,76,76,24],[64,80,76,28,"src"],[64,83,76,31],[64,84,76,32,"t"],[64,85,76,33],[64,86,76,34,"NUMERICIDENTIFIERLOOSE"],[64,108,76,56],[64,109,76,57],[64,115,76,63],[64,118,77,24],[64,122,77,28,"src"],[64,125,77,31],[64,126,77,32,"t"],[64,127,77,33],[64,128,77,34,"NUMERICIDENTIFIERLOOSE"],[64,150,77,56],[64,151,77,57],[64,154,77,60],[64,155,77,61],[66,2,79,0],[67,2,80,0],[68,2,81,0],[69,2,82,0],[71,2,84,0,"createToken"],[71,13,84,11],[71,14,84,12],[71,36,84,34],[71,38,84,36],[71,44,84,42,"src"],[71,47,84,45],[71,48,84,46,"t"],[71,49,84,47],[71,50,84,48,"NONNUMERICIDENTIFIER"],[71,70,84,68],[71,71,84,69],[71,75,85,4,"src"],[71,78,85,7],[71,79,85,8,"t"],[71,80,85,9],[71,81,85,10,"NUMERICIDENTIFIER"],[71,98,85,27],[71,99,85,28],[71,102,85,31],[71,103,85,32],[72,2,87,0,"createToken"],[72,13,87,11],[72,14,87,12],[72,41,87,39],[72,43,87,41],[72,49,87,47,"src"],[72,52,87,50],[72,53,87,51,"t"],[72,54,87,52],[72,55,87,53,"NONNUMERICIDENTIFIER"],[72,75,87,73],[72,76,87,74],[72,80,88,4,"src"],[72,83,88,7],[72,84,88,8,"t"],[72,85,88,9],[72,86,88,10,"NUMERICIDENTIFIERLOOSE"],[72,108,88,32],[72,109,88,33],[72,112,88,36],[72,113,88,37],[74,2,90,0],[75,2,91,0],[76,2,92,0],[78,2,94,0,"createToken"],[78,13,94,11],[78,14,94,12],[78,26,94,24],[78,28,94,26],[78,36,94,34,"src"],[78,39,94,37],[78,40,94,38,"t"],[78,41,94,39],[78,42,94,40,"PRERELEASEIDENTIFIER"],[78,62,94,60],[78,63,94,61],[78,72,95,9,"src"],[78,75,95,12],[78,76,95,13,"t"],[78,77,95,14],[78,78,95,15,"PRERELEASEIDENTIFIER"],[78,98,95,35],[78,99,95,36],[78,105,95,42],[78,106,95,43],[79,2,97,0,"createToken"],[79,13,97,11],[79,14,97,12],[79,31,97,29],[79,33,97,31],[79,42,97,40,"src"],[79,45,97,43],[79,46,97,44,"t"],[79,47,97,45],[79,48,97,46,"PRERELEASEIDENTIFIERLOOSE"],[79,73,97,71],[79,74,97,72],[79,83,98,9,"src"],[79,86,98,12],[79,87,98,13,"t"],[79,88,98,14],[79,89,98,15,"PRERELEASEIDENTIFIERLOOSE"],[79,114,98,40],[79,115,98,41],[79,121,98,47],[79,122,98,48],[81,2,100,0],[82,2,101,0],[84,2,103,0,"createToken"],[84,13,103,11],[84,14,103,12],[84,31,103,29],[84,33,103,31],[84,36,103,34,"LETTERDASHNUMBER"],[84,52,103,50],[84,55,103,53],[84,56,103,54],[86,2,105,0],[87,2,106,0],[88,2,107,0],[90,2,109,0,"createToken"],[90,13,109,11],[90,14,109,12],[90,21,109,19],[90,23,109,21],[90,33,109,31,"src"],[90,36,109,34],[90,37,109,35,"t"],[90,38,109,36],[90,39,109,37,"BUILDIDENTIFIER"],[90,54,109,52],[90,55,109,53],[90,64,110,9,"src"],[90,67,110,12],[90,68,110,13,"t"],[90,69,110,14],[90,70,110,15,"BUILDIDENTIFIER"],[90,85,110,30],[90,86,110,31],[90,92,110,37],[90,93,110,38],[92,2,112,0],[93,2,113,0],[94,2,114,0],[96,2,116,0],[97,2,117,0],[98,2,118,0],[99,2,119,0],[101,2,121,0,"createToken"],[101,13,121,11],[101,14,121,12],[101,25,121,23],[101,27,121,25],[101,32,121,30,"src"],[101,35,121,33],[101,36,121,34,"t"],[101,37,121,35],[101,38,121,36,"MAINVERSION"],[101,49,121,47],[101,50,121,48],[101,53,122,3,"src"],[101,56,122,6],[101,57,122,7,"t"],[101,58,122,8],[101,59,122,9,"PRERELEASE"],[101,69,122,19],[101,70,122,20],[101,74,123,2,"src"],[101,77,123,5],[101,78,123,6,"t"],[101,79,123,7],[101,80,123,8,"BUILD"],[101,85,123,13],[101,86,123,14],[101,89,123,17],[101,90,123,18],[102,2,125,0,"createToken"],[102,13,125,11],[102,14,125,12],[102,20,125,18],[102,22,125,20],[102,26,125,24,"src"],[102,29,125,27],[102,30,125,28,"t"],[102,31,125,29],[102,32,125,30,"FULLPLAIN"],[102,41,125,39],[102,42,125,40],[102,45,125,43],[102,46,125,44],[104,2,127,0],[105,2,128,0],[106,2,129,0],[107,2,130,0,"createToken"],[107,13,130,11],[107,14,130,12],[107,26,130,24],[107,28,130,26],[107,39,130,37,"src"],[107,42,130,40],[107,43,130,41,"t"],[107,44,130,42],[107,45,130,43,"MAINVERSIONLOOSE"],[107,61,130,59],[107,62,130,60],[107,65,131,3,"src"],[107,68,131,6],[107,69,131,7,"t"],[107,70,131,8],[107,71,131,9,"PRERELEASELOOSE"],[107,86,131,24],[107,87,131,25],[107,91,132,2,"src"],[107,94,132,5],[107,95,132,6,"t"],[107,96,132,7],[107,97,132,8,"BUILD"],[107,102,132,13],[107,103,132,14],[107,106,132,17],[107,107,132,18],[108,2,134,0,"createToken"],[108,13,134,11],[108,14,134,12],[108,21,134,19],[108,23,134,21],[108,27,134,25,"src"],[108,30,134,28],[108,31,134,29,"t"],[108,32,134,30],[108,33,134,31,"LOOSEPLAIN"],[108,43,134,41],[108,44,134,42],[108,47,134,45],[108,48,134,46],[109,2,136,0,"createToken"],[109,13,136,11],[109,14,136,12],[109,20,136,18],[109,22,136,20],[109,36,136,34],[109,37,136,35],[111,2,138,0],[112,2,139,0],[113,2,140,0],[114,2,141,0,"createToken"],[114,13,141,11],[114,14,141,12],[114,37,141,35],[114,39,141,37],[114,42,141,40,"src"],[114,45,141,43],[114,46,141,44,"t"],[114,47,141,45],[114,48,141,46,"NUMERICIDENTIFIERLOOSE"],[114,70,141,68],[114,71,141,69],[114,81,141,79],[114,82,141,80],[115,2,142,0,"createToken"],[115,13,142,11],[115,14,142,12],[115,32,142,30],[115,34,142,32],[115,37,142,35,"src"],[115,40,142,38],[115,41,142,39,"t"],[115,42,142,40],[115,43,142,41,"NUMERICIDENTIFIER"],[115,60,142,58],[115,61,142,59],[115,71,142,69],[115,72,142,70],[116,2,144,0,"createToken"],[116,13,144,11],[116,14,144,12],[116,27,144,25],[116,29,144,27],[116,41,144,39,"src"],[116,44,144,42],[116,45,144,43,"t"],[116,46,144,44],[116,47,144,45,"XRANGEIDENTIFIER"],[116,63,144,61],[116,64,144,62],[116,67,144,65],[116,70,145,19],[116,80,145,29,"src"],[116,83,145,32],[116,84,145,33,"t"],[116,85,145,34],[116,86,145,35,"XRANGEIDENTIFIER"],[116,102,145,51],[116,103,145,52],[116,106,145,55],[116,109,146,19],[116,119,146,29,"src"],[116,122,146,32],[116,123,146,33,"t"],[116,124,146,34],[116,125,146,35,"XRANGEIDENTIFIER"],[116,141,146,51],[116,142,146,52],[116,145,146,55],[116,148,147,19],[116,154,147,25,"src"],[116,157,147,28],[116,158,147,29,"t"],[116,159,147,30],[116,160,147,31,"PRERELEASE"],[116,170,147,41],[116,171,147,42],[116,176,148,21,"src"],[116,179,148,24],[116,180,148,25,"t"],[116,181,148,26],[116,182,148,27,"BUILD"],[116,187,148,32],[116,188,148,33],[116,191,148,36],[116,194,149,19],[116,200,149,25],[116,201,149,26],[117,2,151,0,"createToken"],[117,13,151,11],[117,14,151,12],[117,32,151,30],[117,34,151,32],[117,46,151,44,"src"],[117,49,151,47],[117,50,151,48,"t"],[117,51,151,49],[117,52,151,50,"XRANGEIDENTIFIERLOOSE"],[117,73,151,71],[117,74,151,72],[117,77,151,75],[117,80,152,24],[117,90,152,34,"src"],[117,93,152,37],[117,94,152,38,"t"],[117,95,152,39],[117,96,152,40,"XRANGEIDENTIFIERLOOSE"],[117,117,152,61],[117,118,152,62],[117,121,152,65],[117,124,153,24],[117,134,153,34,"src"],[117,137,153,37],[117,138,153,38,"t"],[117,139,153,39],[117,140,153,40,"XRANGEIDENTIFIERLOOSE"],[117,161,153,61],[117,162,153,62],[117,165,153,65],[117,168,154,24],[117,174,154,30,"src"],[117,177,154,33],[117,178,154,34,"t"],[117,179,154,35],[117,180,154,36,"PRERELEASELOOSE"],[117,195,154,51],[117,196,154,52],[117,201,155,26,"src"],[117,204,155,29],[117,205,155,30,"t"],[117,206,155,31],[117,207,155,32,"BUILD"],[117,212,155,37],[117,213,155,38],[117,216,155,41],[117,219,156,24],[117,225,156,30],[117,226,156,31],[118,2,158,0,"createToken"],[118,13,158,11],[118,14,158,12],[118,22,158,20],[118,24,158,22],[118,28,158,26,"src"],[118,31,158,29],[118,32,158,30,"t"],[118,33,158,31],[118,34,158,32,"GTLT"],[118,38,158,36],[118,39,158,37],[118,46,158,44,"src"],[118,49,158,47],[118,50,158,48,"t"],[118,51,158,49],[118,52,158,50,"XRANGEPLAIN"],[118,63,158,61],[118,64,158,62],[118,67,158,65],[118,68,158,66],[119,2,159,0,"createToken"],[119,13,159,11],[119,14,159,12],[119,27,159,25],[119,29,159,27],[119,33,159,31,"src"],[119,36,159,34],[119,37,159,35,"t"],[119,38,159,36],[119,39,159,37,"GTLT"],[119,43,159,41],[119,44,159,42],[119,51,159,49,"src"],[119,54,159,52],[119,55,159,53,"t"],[119,56,159,54],[119,57,159,55,"XRANGEPLAINLOOSE"],[119,73,159,71],[119,74,159,72],[119,77,159,75],[119,78,159,76],[121,2,161,0],[122,2,162,0],[123,2,163,0,"createToken"],[123,13,163,11],[123,14,163,12],[123,27,163,25],[123,29,163,27],[123,32,163,30],[123,44,163,42],[123,47,164,14],[123,56,164,23],[123,59,164,26,"MAX_SAFE_COMPONENT_LENGTH"],[123,84,164,51],[123,88,164,55],[123,91,165,14],[123,107,165,30,"MAX_SAFE_COMPONENT_LENGTH"],[123,132,165,55],[123,138,165,61],[123,141,166,14],[123,157,166,30,"MAX_SAFE_COMPONENT_LENGTH"],[123,182,166,55],[123,188,166,61],[123,189,166,62],[124,2,167,0,"createToken"],[124,13,167,11],[124,14,167,12],[124,22,167,20],[124,24,167,22],[124,27,167,25,"src"],[124,30,167,28],[124,31,167,29,"t"],[124,32,167,30],[124,33,167,31,"COERCEPLAIN"],[124,44,167,42],[124,45,167,43],[124,59,167,57],[124,60,167,58],[125,2,168,0,"createToken"],[125,13,168,11],[125,14,168,12],[125,26,168,24],[125,28,168,26,"src"],[125,31,168,29],[125,32,168,30,"t"],[125,33,168,31],[125,34,168,32,"COERCEPLAIN"],[125,45,168,43],[125,46,168,44],[125,49,169,14],[125,55,169,20,"src"],[125,58,169,23],[125,59,169,24,"t"],[125,60,169,25],[125,61,169,26,"PRERELEASE"],[125,71,169,36],[125,72,169,37],[125,76,169,41],[125,79,170,14],[125,85,170,20,"src"],[125,88,170,23],[125,89,170,24,"t"],[125,90,170,25],[125,91,170,26,"BUILD"],[125,96,170,31],[125,97,170,32],[125,101,170,36],[125,104,171,14],[125,118,171,28],[125,119,171,29],[126,2,172,0,"createToken"],[126,13,172,11],[126,14,172,12],[126,25,172,23],[126,27,172,25,"src"],[126,30,172,28],[126,31,172,29,"t"],[126,32,172,30],[126,33,172,31,"COERCE"],[126,39,172,37],[126,40,172,38],[126,42,172,40],[126,46,172,44],[126,47,172,45],[127,2,173,0,"createToken"],[127,13,173,11],[127,14,173,12],[127,29,173,27],[127,31,173,29,"src"],[127,34,173,32],[127,35,173,33,"t"],[127,36,173,34],[127,37,173,35,"COERCEFULL"],[127,47,173,45],[127,48,173,46],[127,50,173,48],[127,54,173,52],[127,55,173,53],[129,2,175,0],[130,2,176,0],[131,2,177,0,"createToken"],[131,13,177,11],[131,14,177,12],[131,25,177,23],[131,27,177,25],[131,36,177,34],[131,37,177,35],[132,2,179,0,"createToken"],[132,13,179,11],[132,14,179,12],[132,25,179,23],[132,27,179,25],[132,36,179,34,"src"],[132,39,179,37],[132,40,179,38,"t"],[132,41,179,39],[132,42,179,40,"LONETILDE"],[132,51,179,49],[132,52,179,50],[132,58,179,56],[132,60,179,58],[132,64,179,62],[132,65,179,63],[133,2,180,0,"exports"],[133,9,180,7],[133,10,180,8,"tildeTrimReplace"],[133,26,180,24],[133,29,180,27],[133,34,180,32],[134,2,182,0,"createToken"],[134,13,182,11],[134,14,182,12],[134,21,182,19],[134,23,182,21],[134,27,182,25,"src"],[134,30,182,28],[134,31,182,29,"t"],[134,32,182,30],[134,33,182,31,"LONETILDE"],[134,42,182,40],[134,43,182,41],[134,46,182,44,"src"],[134,49,182,47],[134,50,182,48,"t"],[134,51,182,49],[134,52,182,50,"XRANGEPLAIN"],[134,63,182,61],[134,64,182,62],[134,67,182,65],[134,68,182,66],[135,2,183,0,"createToken"],[135,13,183,11],[135,14,183,12],[135,26,183,24],[135,28,183,26],[135,32,183,30,"src"],[135,35,183,33],[135,36,183,34,"t"],[135,37,183,35],[135,38,183,36,"LONETILDE"],[135,47,183,45],[135,48,183,46],[135,51,183,49,"src"],[135,54,183,52],[135,55,183,53,"t"],[135,56,183,54],[135,57,183,55,"XRANGEPLAINLOOSE"],[135,73,183,71],[135,74,183,72],[135,77,183,75],[135,78,183,76],[137,2,185,0],[138,2,186,0],[139,2,187,0,"createToken"],[139,13,187,11],[139,14,187,12],[139,25,187,23],[139,27,187,25],[139,36,187,34],[139,37,187,35],[140,2,189,0,"createToken"],[140,13,189,11],[140,14,189,12],[140,25,189,23],[140,27,189,25],[140,36,189,34,"src"],[140,39,189,37],[140,40,189,38,"t"],[140,41,189,39],[140,42,189,40,"LONECARET"],[140,51,189,49],[140,52,189,50],[140,58,189,56],[140,60,189,58],[140,64,189,62],[140,65,189,63],[141,2,190,0,"exports"],[141,9,190,7],[141,10,190,8,"caretTrimReplace"],[141,26,190,24],[141,29,190,27],[141,34,190,32],[142,2,192,0,"createToken"],[142,13,192,11],[142,14,192,12],[142,21,192,19],[142,23,192,21],[142,27,192,25,"src"],[142,30,192,28],[142,31,192,29,"t"],[142,32,192,30],[142,33,192,31,"LONECARET"],[142,42,192,40],[142,43,192,41],[142,46,192,44,"src"],[142,49,192,47],[142,50,192,48,"t"],[142,51,192,49],[142,52,192,50,"XRANGEPLAIN"],[142,63,192,61],[142,64,192,62],[142,67,192,65],[142,68,192,66],[143,2,193,0,"createToken"],[143,13,193,11],[143,14,193,12],[143,26,193,24],[143,28,193,26],[143,32,193,30,"src"],[143,35,193,33],[143,36,193,34,"t"],[143,37,193,35],[143,38,193,36,"LONECARET"],[143,47,193,45],[143,48,193,46],[143,51,193,49,"src"],[143,54,193,52],[143,55,193,53,"t"],[143,56,193,54],[143,57,193,55,"XRANGEPLAINLOOSE"],[143,73,193,71],[143,74,193,72],[143,77,193,75],[143,78,193,76],[145,2,195,0],[146,2,196,0,"createToken"],[146,13,196,11],[146,14,196,12],[146,31,196,29],[146,33,196,31],[146,37,196,35,"src"],[146,40,196,38],[146,41,196,39,"t"],[146,42,196,40],[146,43,196,41,"GTLT"],[146,47,196,45],[146,48,196,46],[146,56,196,54,"src"],[146,59,196,57],[146,60,196,58,"t"],[146,61,196,59],[146,62,196,60,"LOOSEPLAIN"],[146,72,196,70],[146,73,196,71],[146,80,196,78],[146,81,196,79],[147,2,197,0,"createToken"],[147,13,197,11],[147,14,197,12],[147,26,197,24],[147,28,197,26],[147,32,197,30,"src"],[147,35,197,33],[147,36,197,34,"t"],[147,37,197,35],[147,38,197,36,"GTLT"],[147,42,197,40],[147,43,197,41],[147,51,197,49,"src"],[147,54,197,52],[147,55,197,53,"t"],[147,56,197,54],[147,57,197,55,"FULLPLAIN"],[147,66,197,64],[147,67,197,65],[147,74,197,72],[147,75,197,73],[149,2,199,0],[150,2,200,0],[151,2,201,0,"createToken"],[151,13,201,11],[151,14,201,12],[151,30,201,28],[151,32,201,30],[151,41,201,39,"src"],[151,44,201,42],[151,45,201,43,"t"],[151,46,201,44],[151,47,201,45,"GTLT"],[151,51,201,49],[151,52,201,50],[151,60,202,8,"src"],[151,63,202,11],[151,64,202,12,"t"],[151,65,202,13],[151,66,202,14,"LOOSEPLAIN"],[151,76,202,24],[151,77,202,25],[151,81,202,29,"src"],[151,84,202,32],[151,85,202,33,"t"],[151,86,202,34],[151,87,202,35,"XRANGEPLAIN"],[151,98,202,46],[151,99,202,47],[151,102,202,50],[151,104,202,52],[151,108,202,56],[151,109,202,57],[152,2,203,0,"exports"],[152,9,203,7],[152,10,203,8,"comparatorTrimReplace"],[152,31,203,29],[152,34,203,32],[152,42,203,40],[154,2,205,0],[155,2,206,0],[156,2,207,0],[157,2,208,0],[158,2,209,0,"createToken"],[158,13,209,11],[158,14,209,12],[158,27,209,25],[158,29,209,27],[158,38,209,36,"src"],[158,41,209,39],[158,42,209,40,"t"],[158,43,209,41],[158,44,209,42,"XRANGEPLAIN"],[158,55,209,53],[158,56,209,54],[158,59,209,57],[158,62,210,19],[158,73,210,30],[158,76,211,19],[158,80,211,23,"src"],[158,83,211,26],[158,84,211,27,"t"],[158,85,211,28],[158,86,211,29,"XRANGEPLAIN"],[158,97,211,40],[158,98,211,41],[158,101,211,44],[158,104,212,19],[158,111,212,26],[158,112,212,27],[159,2,214,0,"createToken"],[159,13,214,11],[159,14,214,12],[159,32,214,30],[159,34,214,32],[159,43,214,41,"src"],[159,46,214,44],[159,47,214,45,"t"],[159,48,214,46],[159,49,214,47,"XRANGEPLAINLOOSE"],[159,65,214,63],[159,66,214,64],[159,69,214,67],[159,72,215,24],[159,83,215,35],[159,86,216,24],[159,90,216,28,"src"],[159,93,216,31],[159,94,216,32,"t"],[159,95,216,33],[159,96,216,34,"XRANGEPLAINLOOSE"],[159,112,216,50],[159,113,216,51],[159,116,216,54],[159,119,217,24],[159,126,217,31],[159,127,217,32],[161,2,219,0],[162,2,220,0,"createToken"],[162,13,220,11],[162,14,220,12],[162,20,220,18],[162,22,220,20],[162,39,220,37],[162,40,220,38],[163,2,221,0],[164,2,222,0,"createToken"],[164,13,222,11],[164,14,222,12],[164,20,222,18],[164,22,222,20],[164,49,222,47],[164,50,222,48],[165,2,223,0,"createToken"],[165,13,223,11],[165,14,223,12],[165,23,223,21],[165,25,223,23],[165,54,223,52],[165,55,223,53],[166,0,223,53],[166,3]],"functionMap":{"names":["<global>","makeSafeRegex","createToken"],"mappings":"AAA;sBCgC;CDO;oBEE;CFS"},"hasCjsExports":true},"type":"js/module"}]}