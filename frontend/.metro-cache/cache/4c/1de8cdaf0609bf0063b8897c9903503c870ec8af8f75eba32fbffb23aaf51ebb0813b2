{"dependencies":[{"name":"../internal/parse-options","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":138,"column":21,"index":3391},"end":{"line":138,"column":57,"index":3427}}],"key":"m8nCrMiqXou1ytII/Ex1QKQthGk=","exportNames":["*"],"imports":1}},{"name":"../internal/re","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":139,"column":26,"index":3454},"end":{"line":139,"column":51,"index":3479}}],"key":"P6ANvKO12H/9KIqgrR+w8ctGRr8=","exportNames":["*"],"imports":1}},{"name":"../functions/cmp","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":140,"column":12,"index":3492},"end":{"line":140,"column":39,"index":3519}}],"key":"XtHEUhNqTqxGQDgS6nCC9zuM3xM=","exportNames":["*"],"imports":1}},{"name":"../internal/debug","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":141,"column":14,"index":3534},"end":{"line":141,"column":42,"index":3562}}],"key":"nMor496VJyerNzwid3cdupj9/ww=","exportNames":["*"],"imports":1}},{"name":"./semver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":142,"column":15,"index":3578},"end":{"line":142,"column":34,"index":3597}}],"key":"oTtX8ioZBweGT9g7U2RT0bwzOf8=","exportNames":["*"],"imports":1}},{"name":"./range","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":143,"column":14,"index":3612},"end":{"line":143,"column":32,"index":3630}}],"key":"YXfSqvUoyFxHQywKv3k529KqQp4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const ANY = Symbol('SemVer ANY');\n  // hoisted class for cyclic dependency\n  class Comparator {\n    static get ANY() {\n      return ANY;\n    }\n    constructor(comp, options) {\n      options = parseOptions(options);\n      if (comp instanceof Comparator) {\n        if (comp.loose === !!options.loose) {\n          return comp;\n        } else {\n          comp = comp.value;\n        }\n      }\n      comp = comp.trim().split(/\\s+/).join(' ');\n      debug('comparator', comp, options);\n      this.options = options;\n      this.loose = !!options.loose;\n      this.parse(comp);\n      if (this.semver === ANY) {\n        this.value = '';\n      } else {\n        this.value = this.operator + this.semver.version;\n      }\n      debug('comp', this);\n    }\n    parse(comp) {\n      const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n      const m = comp.match(r);\n      if (!m) {\n        throw new TypeError(`Invalid comparator: ${comp}`);\n      }\n      this.operator = m[1] !== undefined ? m[1] : '';\n      if (this.operator === '=') {\n        this.operator = '';\n      }\n\n      // if it literally is just '>' or '' then allow anything.\n      if (!m[2]) {\n        this.semver = ANY;\n      } else {\n        this.semver = new SemVer(m[2], this.options.loose);\n      }\n    }\n    toString() {\n      return this.value;\n    }\n    test(version) {\n      debug('Comparator.test', version, this.options.loose);\n      if (this.semver === ANY || version === ANY) {\n        return true;\n      }\n      if (typeof version === 'string') {\n        try {\n          version = new SemVer(version, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n      return cmp(version, this.operator, this.semver, this.options);\n    }\n    intersects(comp, options) {\n      if (!(comp instanceof Comparator)) {\n        throw new TypeError('a Comparator is required');\n      }\n      if (this.operator === '') {\n        if (this.value === '') {\n          return true;\n        }\n        return new Range(comp.value, options).test(this.value);\n      } else if (comp.operator === '') {\n        if (comp.value === '') {\n          return true;\n        }\n        return new Range(this.value, options).test(comp.semver);\n      }\n      options = parseOptions(options);\n\n      // Special cases where nothing can possibly be lower\n      if (options.includePrerelease && (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n        return false;\n      }\n      if (!options.includePrerelease && (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n        return false;\n      }\n\n      // Same direction increasing (> or >=)\n      if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n        return true;\n      }\n      // Same direction decreasing (< or <=)\n      if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n        return true;\n      }\n      // same SemVer and both sides are inclusive (<= or >=)\n      if (this.semver.version === comp.semver.version && this.operator.includes('=') && comp.operator.includes('=')) {\n        return true;\n      }\n      // opposite directions less than\n      if (cmp(this.semver, '<', comp.semver, options) && this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n        return true;\n      }\n      // opposite directions greater than\n      if (cmp(this.semver, '>', comp.semver, options) && this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n        return true;\n      }\n      return false;\n    }\n  }\n  module.exports = Comparator;\n  const parseOptions = require(_dependencyMap[0], \"../internal/parse-options\");\n  const {\n    safeRe: re,\n    t\n  } = require(_dependencyMap[1], \"../internal/re\");\n  const cmp = require(_dependencyMap[2], \"../functions/cmp\");\n  const debug = require(_dependencyMap[3], \"../internal/debug\");\n  const SemVer = require(_dependencyMap[4], \"./semver\");\n  const Range = require(_dependencyMap[5], \"./range\");\n});","lineCount":124,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6,"ANY"],[4,11,3,9],[4,14,3,12,"Symbol"],[4,20,3,18],[4,21,3,19],[4,33,3,31],[4,34,3,32],[5,2,4,0],[6,2,5,0],[6,8,5,6,"Comparator"],[6,18,5,16],[6,19,5,17],[7,4,6,2],[7,15,6,13,"ANY"],[7,18,6,16,"ANY"],[7,19,6,16],[7,21,6,20],[8,6,7,4],[8,13,7,11,"ANY"],[8,16,7,14],[9,4,8,2],[10,4,10,2,"constructor"],[10,15,10,13,"constructor"],[10,16,10,15,"comp"],[10,20,10,19],[10,22,10,21,"options"],[10,29,10,28],[10,31,10,30],[11,6,11,4,"options"],[11,13,11,11],[11,16,11,14,"parseOptions"],[11,28,11,26],[11,29,11,27,"options"],[11,36,11,34],[11,37,11,35],[12,6,13,4],[12,10,13,8,"comp"],[12,14,13,12],[12,26,13,24,"Comparator"],[12,36,13,34],[12,38,13,36],[13,8,14,6],[13,12,14,10,"comp"],[13,16,14,14],[13,17,14,15,"loose"],[13,22,14,20],[13,27,14,25],[13,28,14,26],[13,29,14,27,"options"],[13,36,14,34],[13,37,14,35,"loose"],[13,42,14,40],[13,44,14,42],[14,10,15,8],[14,17,15,15,"comp"],[14,21,15,19],[15,8,16,6],[15,9,16,7],[15,15,16,13],[16,10,17,8,"comp"],[16,14,17,12],[16,17,17,15,"comp"],[16,21,17,19],[16,22,17,20,"value"],[16,27,17,25],[17,8,18,6],[18,6,19,4],[19,6,21,4,"comp"],[19,10,21,8],[19,13,21,11,"comp"],[19,17,21,15],[19,18,21,16,"trim"],[19,22,21,20],[19,23,21,21],[19,24,21,22],[19,25,21,23,"split"],[19,30,21,28],[19,31,21,29],[19,36,21,34],[19,37,21,35],[19,38,21,36,"join"],[19,42,21,40],[19,43,21,41],[19,46,21,44],[19,47,21,45],[20,6,22,4,"debug"],[20,11,22,9],[20,12,22,10],[20,24,22,22],[20,26,22,24,"comp"],[20,30,22,28],[20,32,22,30,"options"],[20,39,22,37],[20,40,22,38],[21,6,23,4],[21,10,23,8],[21,11,23,9,"options"],[21,18,23,16],[21,21,23,19,"options"],[21,28,23,26],[22,6,24,4],[22,10,24,8],[22,11,24,9,"loose"],[22,16,24,14],[22,19,24,17],[22,20,24,18],[22,21,24,19,"options"],[22,28,24,26],[22,29,24,27,"loose"],[22,34,24,32],[23,6,25,4],[23,10,25,8],[23,11,25,9,"parse"],[23,16,25,14],[23,17,25,15,"comp"],[23,21,25,19],[23,22,25,20],[24,6,27,4],[24,10,27,8],[24,14,27,12],[24,15,27,13,"semver"],[24,21,27,19],[24,26,27,24,"ANY"],[24,29,27,27],[24,31,27,29],[25,8,28,6],[25,12,28,10],[25,13,28,11,"value"],[25,18,28,16],[25,21,28,19],[25,23,28,21],[26,6,29,4],[26,7,29,5],[26,13,29,11],[27,8,30,6],[27,12,30,10],[27,13,30,11,"value"],[27,18,30,16],[27,21,30,19],[27,25,30,23],[27,26,30,24,"operator"],[27,34,30,32],[27,37,30,35],[27,41,30,39],[27,42,30,40,"semver"],[27,48,30,46],[27,49,30,47,"version"],[27,56,30,54],[28,6,31,4],[29,6,33,4,"debug"],[29,11,33,9],[29,12,33,10],[29,18,33,16],[29,20,33,18],[29,24,33,22],[29,25,33,23],[30,4,34,2],[31,4,36,2,"parse"],[31,9,36,7,"parse"],[31,10,36,9,"comp"],[31,14,36,13],[31,16,36,15],[32,6,37,4],[32,12,37,10,"r"],[32,13,37,11],[32,16,37,14],[32,20,37,18],[32,21,37,19,"options"],[32,28,37,26],[32,29,37,27,"loose"],[32,34,37,32],[32,37,37,35,"re"],[32,39,37,37],[32,40,37,38,"t"],[32,41,37,39],[32,42,37,40,"COMPARATORLOOSE"],[32,57,37,55],[32,58,37,56],[32,61,37,59,"re"],[32,63,37,61],[32,64,37,62,"t"],[32,65,37,63],[32,66,37,64,"COMPARATOR"],[32,76,37,74],[32,77,37,75],[33,6,38,4],[33,12,38,10,"m"],[33,13,38,11],[33,16,38,14,"comp"],[33,20,38,18],[33,21,38,19,"match"],[33,26,38,24],[33,27,38,25,"r"],[33,28,38,26],[33,29,38,27],[34,6,40,4],[34,10,40,8],[34,11,40,9,"m"],[34,12,40,10],[34,14,40,12],[35,8,41,6],[35,14,41,12],[35,18,41,16,"TypeError"],[35,27,41,25],[35,28,41,26],[35,51,41,49,"comp"],[35,55,41,53],[35,57,41,55],[35,58,41,56],[36,6,42,4],[37,6,44,4],[37,10,44,8],[37,11,44,9,"operator"],[37,19,44,17],[37,22,44,20,"m"],[37,23,44,21],[37,24,44,22],[37,25,44,23],[37,26,44,24],[37,31,44,29,"undefined"],[37,40,44,38],[37,43,44,41,"m"],[37,44,44,42],[37,45,44,43],[37,46,44,44],[37,47,44,45],[37,50,44,48],[37,52,44,50],[38,6,45,4],[38,10,45,8],[38,14,45,12],[38,15,45,13,"operator"],[38,23,45,21],[38,28,45,26],[38,31,45,29],[38,33,45,31],[39,8,46,6],[39,12,46,10],[39,13,46,11,"operator"],[39,21,46,19],[39,24,46,22],[39,26,46,24],[40,6,47,4],[42,6,49,4],[43,6,50,4],[43,10,50,8],[43,11,50,9,"m"],[43,12,50,10],[43,13,50,11],[43,14,50,12],[43,15,50,13],[43,17,50,15],[44,8,51,6],[44,12,51,10],[44,13,51,11,"semver"],[44,19,51,17],[44,22,51,20,"ANY"],[44,25,51,23],[45,6,52,4],[45,7,52,5],[45,13,52,11],[46,8,53,6],[46,12,53,10],[46,13,53,11,"semver"],[46,19,53,17],[46,22,53,20],[46,26,53,24,"SemVer"],[46,32,53,30],[46,33,53,31,"m"],[46,34,53,32],[46,35,53,33],[46,36,53,34],[46,37,53,35],[46,39,53,37],[46,43,53,41],[46,44,53,42,"options"],[46,51,53,49],[46,52,53,50,"loose"],[46,57,53,55],[46,58,53,56],[47,6,54,4],[48,4,55,2],[49,4,57,2,"toString"],[49,12,57,10,"toString"],[49,13,57,10],[49,15,57,14],[50,6,58,4],[50,13,58,11],[50,17,58,15],[50,18,58,16,"value"],[50,23,58,21],[51,4,59,2],[52,4,61,2,"test"],[52,8,61,6,"test"],[52,9,61,8,"version"],[52,16,61,15],[52,18,61,17],[53,6,62,4,"debug"],[53,11,62,9],[53,12,62,10],[53,29,62,27],[53,31,62,29,"version"],[53,38,62,36],[53,40,62,38],[53,44,62,42],[53,45,62,43,"options"],[53,52,62,50],[53,53,62,51,"loose"],[53,58,62,56],[53,59,62,57],[54,6,64,4],[54,10,64,8],[54,14,64,12],[54,15,64,13,"semver"],[54,21,64,19],[54,26,64,24,"ANY"],[54,29,64,27],[54,33,64,31,"version"],[54,40,64,38],[54,45,64,43,"ANY"],[54,48,64,46],[54,50,64,48],[55,8,65,6],[55,15,65,13],[55,19,65,17],[56,6,66,4],[57,6,68,4],[57,10,68,8],[57,17,68,15,"version"],[57,24,68,22],[57,29,68,27],[57,37,68,35],[57,39,68,37],[58,8,69,6],[58,12,69,10],[59,10,70,8,"version"],[59,17,70,15],[59,20,70,18],[59,24,70,22,"SemVer"],[59,30,70,28],[59,31,70,29,"version"],[59,38,70,36],[59,40,70,38],[59,44,70,42],[59,45,70,43,"options"],[59,52,70,50],[59,53,70,51],[60,8,71,6],[60,9,71,7],[60,10,71,8],[60,17,71,15,"er"],[60,19,71,17],[60,21,71,19],[61,10,72,8],[61,17,72,15],[61,22,72,20],[62,8,73,6],[63,6,74,4],[64,6,76,4],[64,13,76,11,"cmp"],[64,16,76,14],[64,17,76,15,"version"],[64,24,76,22],[64,26,76,24],[64,30,76,28],[64,31,76,29,"operator"],[64,39,76,37],[64,41,76,39],[64,45,76,43],[64,46,76,44,"semver"],[64,52,76,50],[64,54,76,52],[64,58,76,56],[64,59,76,57,"options"],[64,66,76,64],[64,67,76,65],[65,4,77,2],[66,4,79,2,"intersects"],[66,14,79,12,"intersects"],[66,15,79,14,"comp"],[66,19,79,18],[66,21,79,20,"options"],[66,28,79,27],[66,30,79,29],[67,6,80,4],[67,10,80,8],[67,12,80,10,"comp"],[67,16,80,14],[67,28,80,26,"Comparator"],[67,38,80,36],[67,39,80,37],[67,41,80,39],[68,8,81,6],[68,14,81,12],[68,18,81,16,"TypeError"],[68,27,81,25],[68,28,81,26],[68,54,81,52],[68,55,81,53],[69,6,82,4],[70,6,84,4],[70,10,84,8],[70,14,84,12],[70,15,84,13,"operator"],[70,23,84,21],[70,28,84,26],[70,30,84,28],[70,32,84,30],[71,8,85,6],[71,12,85,10],[71,16,85,14],[71,17,85,15,"value"],[71,22,85,20],[71,27,85,25],[71,29,85,27],[71,31,85,29],[72,10,86,8],[72,17,86,15],[72,21,86,19],[73,8,87,6],[74,8,88,6],[74,15,88,13],[74,19,88,17,"Range"],[74,24,88,22],[74,25,88,23,"comp"],[74,29,88,27],[74,30,88,28,"value"],[74,35,88,33],[74,37,88,35,"options"],[74,44,88,42],[74,45,88,43],[74,46,88,44,"test"],[74,50,88,48],[74,51,88,49],[74,55,88,53],[74,56,88,54,"value"],[74,61,88,59],[74,62,88,60],[75,6,89,4],[75,7,89,5],[75,13,89,11],[75,17,89,15,"comp"],[75,21,89,19],[75,22,89,20,"operator"],[75,30,89,28],[75,35,89,33],[75,37,89,35],[75,39,89,37],[76,8,90,6],[76,12,90,10,"comp"],[76,16,90,14],[76,17,90,15,"value"],[76,22,90,20],[76,27,90,25],[76,29,90,27],[76,31,90,29],[77,10,91,8],[77,17,91,15],[77,21,91,19],[78,8,92,6],[79,8,93,6],[79,15,93,13],[79,19,93,17,"Range"],[79,24,93,22],[79,25,93,23],[79,29,93,27],[79,30,93,28,"value"],[79,35,93,33],[79,37,93,35,"options"],[79,44,93,42],[79,45,93,43],[79,46,93,44,"test"],[79,50,93,48],[79,51,93,49,"comp"],[79,55,93,53],[79,56,93,54,"semver"],[79,62,93,60],[79,63,93,61],[80,6,94,4],[81,6,96,4,"options"],[81,13,96,11],[81,16,96,14,"parseOptions"],[81,28,96,26],[81,29,96,27,"options"],[81,36,96,34],[81,37,96,35],[83,6,98,4],[84,6,99,4],[84,10,99,8,"options"],[84,17,99,15],[84,18,99,16,"includePrerelease"],[84,35,99,33],[84,40,100,7],[84,44,100,11],[84,45,100,12,"value"],[84,50,100,17],[84,55,100,22],[84,65,100,32],[84,69,100,36,"comp"],[84,73,100,40],[84,74,100,41,"value"],[84,79,100,46],[84,84,100,51],[84,94,100,61],[84,95,100,62],[84,97,100,64],[85,8,101,6],[85,15,101,13],[85,20,101,18],[86,6,102,4],[87,6,103,4],[87,10,103,8],[87,11,103,9,"options"],[87,18,103,16],[87,19,103,17,"includePrerelease"],[87,36,103,34],[87,41,104,7],[87,45,104,11],[87,46,104,12,"value"],[87,51,104,17],[87,52,104,18,"startsWith"],[87,62,104,28],[87,63,104,29],[87,71,104,37],[87,72,104,38],[87,76,104,42,"comp"],[87,80,104,46],[87,81,104,47,"value"],[87,86,104,52],[87,87,104,53,"startsWith"],[87,97,104,63],[87,98,104,64],[87,106,104,72],[87,107,104,73],[87,108,104,74],[87,110,104,76],[88,8,105,6],[88,15,105,13],[88,20,105,18],[89,6,106,4],[91,6,108,4],[92,6,109,4],[92,10,109,8],[92,14,109,12],[92,15,109,13,"operator"],[92,23,109,21],[92,24,109,22,"startsWith"],[92,34,109,32],[92,35,109,33],[92,38,109,36],[92,39,109,37],[92,43,109,41,"comp"],[92,47,109,45],[92,48,109,46,"operator"],[92,56,109,54],[92,57,109,55,"startsWith"],[92,67,109,65],[92,68,109,66],[92,71,109,69],[92,72,109,70],[92,74,109,72],[93,8,110,6],[93,15,110,13],[93,19,110,17],[94,6,111,4],[95,6,112,4],[96,6,113,4],[96,10,113,8],[96,14,113,12],[96,15,113,13,"operator"],[96,23,113,21],[96,24,113,22,"startsWith"],[96,34,113,32],[96,35,113,33],[96,38,113,36],[96,39,113,37],[96,43,113,41,"comp"],[96,47,113,45],[96,48,113,46,"operator"],[96,56,113,54],[96,57,113,55,"startsWith"],[96,67,113,65],[96,68,113,66],[96,71,113,69],[96,72,113,70],[96,74,113,72],[97,8,114,6],[97,15,114,13],[97,19,114,17],[98,6,115,4],[99,6,116,4],[100,6,117,4],[100,10,118,7],[100,14,118,11],[100,15,118,12,"semver"],[100,21,118,18],[100,22,118,19,"version"],[100,29,118,26],[100,34,118,31,"comp"],[100,38,118,35],[100,39,118,36,"semver"],[100,45,118,42],[100,46,118,43,"version"],[100,53,118,50],[100,57,119,6],[100,61,119,10],[100,62,119,11,"operator"],[100,70,119,19],[100,71,119,20,"includes"],[100,79,119,28],[100,80,119,29],[100,83,119,32],[100,84,119,33],[100,88,119,37,"comp"],[100,92,119,41],[100,93,119,42,"operator"],[100,101,119,50],[100,102,119,51,"includes"],[100,110,119,59],[100,111,119,60],[100,114,119,63],[100,115,119,64],[100,117,119,66],[101,8,120,6],[101,15,120,13],[101,19,120,17],[102,6,121,4],[103,6,122,4],[104,6,123,4],[104,10,123,8,"cmp"],[104,13,123,11],[104,14,123,12],[104,18,123,16],[104,19,123,17,"semver"],[104,25,123,23],[104,27,123,25],[104,30,123,28],[104,32,123,30,"comp"],[104,36,123,34],[104,37,123,35,"semver"],[104,43,123,41],[104,45,123,43,"options"],[104,52,123,50],[104,53,123,51],[104,57,124,6],[104,61,124,10],[104,62,124,11,"operator"],[104,70,124,19],[104,71,124,20,"startsWith"],[104,81,124,30],[104,82,124,31],[104,85,124,34],[104,86,124,35],[104,90,124,39,"comp"],[104,94,124,43],[104,95,124,44,"operator"],[104,103,124,52],[104,104,124,53,"startsWith"],[104,114,124,63],[104,115,124,64],[104,118,124,67],[104,119,124,68],[104,121,124,70],[105,8,125,6],[105,15,125,13],[105,19,125,17],[106,6,126,4],[107,6,127,4],[108,6,128,4],[108,10,128,8,"cmp"],[108,13,128,11],[108,14,128,12],[108,18,128,16],[108,19,128,17,"semver"],[108,25,128,23],[108,27,128,25],[108,30,128,28],[108,32,128,30,"comp"],[108,36,128,34],[108,37,128,35,"semver"],[108,43,128,41],[108,45,128,43,"options"],[108,52,128,50],[108,53,128,51],[108,57,129,6],[108,61,129,10],[108,62,129,11,"operator"],[108,70,129,19],[108,71,129,20,"startsWith"],[108,81,129,30],[108,82,129,31],[108,85,129,34],[108,86,129,35],[108,90,129,39,"comp"],[108,94,129,43],[108,95,129,44,"operator"],[108,103,129,52],[108,104,129,53,"startsWith"],[108,114,129,63],[108,115,129,64],[108,118,129,67],[108,119,129,68],[108,121,129,70],[109,8,130,6],[109,15,130,13],[109,19,130,17],[110,6,131,4],[111,6,132,4],[111,13,132,11],[111,18,132,16],[112,4,133,2],[113,2,134,0],[114,2,136,0,"module"],[114,8,136,6],[114,9,136,7,"exports"],[114,16,136,14],[114,19,136,17,"Comparator"],[114,29,136,27],[115,2,138,0],[115,8,138,6,"parseOptions"],[115,20,138,18],[115,23,138,21,"require"],[115,30,138,28],[115,31,138,28,"_dependencyMap"],[115,45,138,28],[115,77,138,56],[115,78,138,57],[116,2,139,0],[116,8,139,6],[117,4,139,8,"safeRe"],[117,10,139,14],[117,12,139,16,"re"],[117,14,139,18],[118,4,139,20,"t"],[119,2,139,22],[119,3,139,23],[119,6,139,26,"require"],[119,13,139,33],[119,14,139,33,"_dependencyMap"],[119,28,139,33],[119,49,139,50],[119,50,139,51],[120,2,140,0],[120,8,140,6,"cmp"],[120,11,140,9],[120,14,140,12,"require"],[120,21,140,19],[120,22,140,19,"_dependencyMap"],[120,36,140,19],[120,59,140,38],[120,60,140,39],[121,2,141,0],[121,8,141,6,"debug"],[121,13,141,11],[121,16,141,14,"require"],[121,23,141,21],[121,24,141,21,"_dependencyMap"],[121,38,141,21],[121,62,141,41],[121,63,141,42],[122,2,142,0],[122,8,142,6,"SemVer"],[122,14,142,12],[122,17,142,15,"require"],[122,24,142,22],[122,25,142,22,"_dependencyMap"],[122,39,142,22],[122,54,142,33],[122,55,142,34],[123,2,143,0],[123,8,143,6,"Range"],[123,13,143,11],[123,16,143,14,"require"],[123,23,143,21],[123,24,143,21,"_dependencyMap"],[123,38,143,21],[123,52,143,31],[123,53,143,32],[124,0,143,32],[124,3]],"functionMap":{"names":["<global>","Comparator","Comparator.get__ANY","Comparator#constructor","Comparator#parse","Comparator#toString","Comparator#test","Comparator#intersects"],"mappings":"AAA;ACI;ECC;GDE;EEE;GFwB;EGE;GHmB;EIE;GJE;EKE;GLgB;EME;GNsD;CDC"},"hasCjsExports":true},"type":"js/module"}]}