{"dependencies":[{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoAuthSession = require(_dependencyMap[0], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request with proper configuration\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.IdToken,\n        redirectUri,\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync (new method)\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          const {\n            id_token,\n            access_token\n          } = result.params;\n          console.log('✅ OAuth success, ID token present:', !!id_token);\n          if (id_token) {\n            return {\n              type: 'success',\n              idToken: id_token,\n              accessToken: access_token\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No ID token received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":241,"map":[[27,2,223,0,"Object"],[27,8,223,0],[27,9,223,0,"defineProperty"],[27,23,223,0],[27,24,223,0,"exports"],[27,31,223,0],[28,4,223,0,"enumerable"],[28,14,223,0],[29,4,223,0,"get"],[29,7,223,0],[29,18,223,0,"get"],[29,19,223,0],[30,6,223,0],[30,13,223,0,"_default"],[30,21,223,0],[31,4,223,0],[32,2,223,0],[33,2,198,0,"Object"],[33,8,198,0],[33,9,198,0,"defineProperty"],[33,23,198,0],[33,24,198,0,"exports"],[33,31,198,0],[34,4,198,0,"enumerable"],[34,14,198,0],[35,4,198,0,"get"],[35,7,198,0],[35,18,198,0,"get"],[35,19,198,0],[36,6,198,0],[36,13,198,0,"googleOAuthService"],[36,31,198,0],[37,4,198,0],[38,2,198,0],[39,2,201,0,"Object"],[39,8,201,0],[39,9,201,0,"defineProperty"],[39,23,201,0],[39,24,201,0,"exports"],[39,31,201,0],[40,4,201,0,"enumerable"],[40,14,201,0],[41,4,201,0,"get"],[41,7,201,0],[41,18,201,0,"get"],[41,19,201,0],[42,6,201,0],[42,13,201,0,"useGoogleOAuth"],[42,27,201,0],[43,4,201,0],[44,2,201,0],[45,2,1,0],[45,6,1,0,"_expoAuthSession"],[45,22,1,0],[45,25,1,0,"require"],[45,32,1,0],[45,33,1,0,"_dependencyMap"],[45,47,1,0],[46,2,1,0],[46,6,1,0,"AuthSession"],[46,17,1,0],[46,20,1,0,"_interopNamespace"],[46,37,1,0],[46,38,1,0,"_expoAuthSession"],[46,54,1,0],[47,2,2,0],[47,6,2,0,"_expoWebBrowser"],[47,21,2,0],[47,24,2,0,"require"],[47,31,2,0],[47,32,2,0,"_dependencyMap"],[47,46,2,0],[48,2,2,0],[48,6,2,0,"WebBrowser"],[48,16,2,0],[48,19,2,0,"_interopNamespace"],[48,36,2,0],[48,37,2,0,"_expoWebBrowser"],[48,52,2,0],[49,2,2,47],[49,6,2,47,"_reactNativeWebDistExportsPlatform"],[49,40,2,47],[49,43,2,47,"require"],[49,50,2,47],[49,51,2,47,"_dependencyMap"],[49,65,2,47],[50,2,2,47],[50,6,2,47,"Platform"],[50,14,2,47],[50,17,2,47,"_interopDefault"],[50,32,2,47],[50,33,2,47,"_reactNativeWebDistExportsPlatform"],[50,67,2,47],[51,2,5,0],[52,2,6,0,"WebBrowser"],[52,12,6,10],[52,13,6,11,"maybeCompleteAuthSession"],[52,37,6,35],[52,38,6,36],[52,39,6,37],[54,2,8,0],[55,2,9,0],[55,8,9,6,"GOOGLE_CLIENT_ID"],[55,24,9,22],[55,27,9,25],[55,29,9,27],[55,30,9,28],[55,31,9,29],[56,2,10,0],[56,8,10,6,"GOOGLE_CLIENT_SECRET"],[56,28,10,26],[56,31,10,29],[56,33,10,31],[56,34,10,32],[56,35,10,33],[58,2,12,0],[59,2,13,0],[59,8,13,6,"discovery"],[59,17,13,15],[59,20,13,18],[60,4,14,2,"authorizationEndpoint"],[60,25,14,23],[60,27,14,25],[60,73,14,71],[61,4,15,2,"tokenEndpoint"],[61,17,15,15],[61,19,15,17],[61,56,15,54],[62,4,16,2,"revocationEndpoint"],[62,22,16,20],[62,24,16,22],[63,2,17,0],[63,3,17,1],[64,2,31,0],[64,8,31,6,"GoogleOAuthService"],[64,26,31,24],[64,27,31,25],[65,4,32,10,"config"],[65,10,32,16],[65,13,32,45],[65,17,32,49],[66,4,33,10,"authRequest"],[66,15,33,21],[66,18,33,56],[66,22,33,60],[68,4,35,2],[69,0,36,0],[70,0,37,0],[71,4,38,2,"initialize"],[71,14,38,12,"initialize"],[71,15,38,13,"config"],[71,21,38,38],[71,23,38,40],[72,6,39,4],[72,10,39,8],[72,11,39,9,"config"],[72,17,39,15],[72,20,39,18,"config"],[72,26,39,24],[73,4,40,2],[75,4,42,2],[76,0,43,0],[77,0,44,0],[78,4,45,2],[78,10,45,16,"createAuthRequest"],[78,27,45,33,"createAuthRequest"],[78,28,45,33],[78,30,45,70],[79,6,46,4],[79,10,46,8],[79,11,46,9],[79,15,46,13],[79,16,46,14,"config"],[79,22,46,20],[79,24,46,22],[80,8,47,6],[80,14,47,12],[80,18,47,16,"Error"],[80,23,47,21],[80,24,47,22],[80,80,47,78],[80,81,47,79],[81,6,48,4],[82,6,50,4],[82,12,50,10,"redirectUri"],[82,23,50,21],[82,26,50,24,"AuthSession"],[82,37,50,35],[82,38,50,36,"makeRedirectUri"],[82,53,50,51],[82,54,50,52],[83,8,51,6,"useProxy"],[83,16,51,14],[83,18,51,16],[83,22,51,20],[84,8,51,22],[85,8,52,6,"preferLocalhost"],[85,23,52,21],[85,25,52,23,"Platform"],[85,33,52,31],[85,34,52,31,"default"],[85,41,52,31],[85,42,52,32,"OS"],[85,44,52,34],[85,49,52,39],[86,6,53,4],[86,7,53,5],[86,8,53,6],[87,6,55,4,"console"],[87,13,55,11],[87,14,55,12,"log"],[87,17,55,15],[87,18,55,16],[87,39,55,37],[87,41,55,39,"redirectUri"],[87,52,55,50],[87,53,55,51],[89,6,57,4],[90,6,58,4],[90,12,58,10,"request"],[90,19,58,17],[90,22,58,20],[90,26,58,24,"AuthSession"],[90,37,58,35],[90,38,58,36,"AuthRequest"],[90,49,58,47],[90,50,58,48],[91,8,59,6,"clientId"],[91,16,59,14],[91,18,59,16],[91,22,59,20],[91,23,59,21,"config"],[91,29,59,27],[91,30,59,28,"clientId"],[91,38,59,36],[92,8,60,6,"scopes"],[92,14,60,12],[92,16,60,14],[92,17,60,15],[92,25,60,23],[92,27,60,25],[92,36,60,34],[92,38,60,36],[92,45,60,43],[92,46,60,44],[93,8,61,6,"responseType"],[93,20,61,18],[93,22,61,20,"AuthSession"],[93,33,61,31],[93,34,61,32,"ResponseType"],[93,46,61,44],[93,47,61,45,"IdToken"],[93,54,61,52],[94,8,62,6,"redirectUri"],[94,19,62,17],[95,8,63,6],[96,8,64,6,"extraParams"],[96,19,64,17],[96,21,64,19],[97,10,65,8,"access_type"],[97,21,65,19],[97,23,65,21],[97,32,65,30],[98,10,66,8,"prompt"],[98,16,66,14],[98,18,66,16],[98,34,66,32],[98,35,66,34],[99,8,67,6],[100,6,68,4],[100,7,68,5],[100,8,68,6],[101,6,70,4],[101,13,70,11,"request"],[101,20,70,18],[102,4,71,2],[104,4,73,2],[105,0,74,0],[106,0,75,0],[107,4,76,2],[107,10,76,8,"signIn"],[107,16,76,14,"signIn"],[107,17,76,14],[107,19,76,45],[108,6,77,4],[108,10,77,8],[109,8,78,6],[109,12,78,10],[109,13,78,11],[109,17,78,15],[109,18,78,16,"config"],[109,24,78,22],[109,26,78,24],[110,10,79,8],[110,17,79,15],[111,12,80,10,"type"],[111,16,80,14],[111,18,80,16],[111,25,80,23],[112,12,81,10,"error"],[112,17,81,15],[112,19,81,17],[113,10,82,8],[113,11,82,9],[114,8,83,6],[115,8,85,6,"console"],[115,15,85,13],[115,16,85,14,"log"],[115,19,85,17],[115,20,85,18],[115,49,85,47],[115,50,85,48],[117,8,87,6],[118,8,88,6],[118,12,88,10],[118,13,88,11,"authRequest"],[118,24,88,22],[118,27,88,25],[118,33,88,31],[118,37,88,35],[118,38,88,36,"createAuthRequest"],[118,55,88,53],[118,56,88,54],[118,57,88,55],[119,8,90,6,"console"],[119,15,90,13],[119,16,90,14,"log"],[119,19,90,17],[119,20,90,18],[119,52,90,50],[119,53,90,51],[121,8,92,6],[122,8,93,6],[122,14,93,12,"result"],[122,20,93,18],[122,23,93,21],[122,29,93,27],[122,33,93,31],[122,34,93,32,"authRequest"],[122,45,93,43],[122,46,93,44,"promptAsync"],[122,57,93,55],[122,58,93,56,"discovery"],[122,67,93,65],[122,68,93,66],[123,8,95,6,"console"],[123,15,95,13],[123,16,95,14,"log"],[123,19,95,17],[123,20,95,18],[123,38,95,36],[123,40,95,38,"result"],[123,46,95,44],[123,47,95,45],[124,8,97,6],[124,12,97,10,"result"],[124,18,97,16],[124,19,97,17,"type"],[124,23,97,21],[124,28,97,26],[124,37,97,35],[124,39,97,37],[125,10,98,8],[125,16,98,14],[126,12,98,16,"id_token"],[126,20,98,24],[127,12,98,26,"access_token"],[128,10,98,39],[128,11,98,40],[128,14,98,43,"result"],[128,20,98,49],[128,21,98,50,"params"],[128,27,98,56],[129,10,100,8,"console"],[129,17,100,15],[129,18,100,16,"log"],[129,21,100,19],[129,22,100,20],[129,58,100,56],[129,60,100,58],[129,61,100,59],[129,62,100,60,"id_token"],[129,70,100,68],[129,71,100,69],[130,10,102,8],[130,14,102,12,"id_token"],[130,22,102,20],[130,24,102,22],[131,12,103,10],[131,19,103,17],[132,14,104,12,"type"],[132,18,104,16],[132,20,104,18],[132,29,104,27],[133,14,105,12,"idToken"],[133,21,105,19],[133,23,105,21,"id_token"],[133,31,105,29],[134,14,106,12,"accessToken"],[134,25,106,23],[134,27,106,25,"access_token"],[135,12,107,10],[135,13,107,11],[136,10,108,8],[136,11,108,9],[136,17,108,15],[137,12,109,10],[137,19,109,17],[138,14,110,12,"type"],[138,18,110,16],[138,20,110,18],[138,27,110,25],[139,14,111,12,"error"],[139,19,111,17],[139,21,111,19],[140,12,112,10],[140,13,112,11],[141,10,113,8],[142,8,114,6],[142,9,114,7],[142,15,114,13],[142,19,114,17,"result"],[142,25,114,23],[142,26,114,24,"type"],[142,30,114,28],[142,35,114,33],[142,44,114,42],[142,48,114,46,"result"],[142,54,114,52],[142,55,114,53,"type"],[142,59,114,57],[142,64,114,62],[142,72,114,70],[142,74,114,72],[143,10,115,8,"console"],[143,17,115,15],[143,18,115,16,"log"],[143,21,115,19],[143,22,115,20],[143,60,115,58],[143,61,115,59],[144,10,116,8],[144,17,116,15],[145,12,117,10,"type"],[145,16,117,14],[145,18,117,16],[146,10,118,8],[146,11,118,9],[147,8,119,6],[147,9,119,7],[147,15,119,13],[148,10,120,8,"console"],[148,17,120,15],[148,18,120,16,"error"],[148,23,120,21],[148,24,120,22],[148,40,120,38],[148,42,120,40,"result"],[148,48,120,46],[148,49,120,47],[149,10,121,8],[149,17,121,15],[150,12,122,10,"type"],[150,16,122,14],[150,18,122,16],[150,25,122,23],[151,12,123,10,"error"],[151,17,123,15],[151,19,123,17],[152,10,124,8],[152,11,124,9],[153,8,125,6],[154,6,126,4],[154,7,126,5],[154,8,126,6],[154,15,126,13,"error"],[154,20,126,18],[154,22,126,20],[155,8,127,6,"console"],[155,15,127,13],[155,16,127,14,"error"],[155,21,127,19],[155,22,127,20],[155,45,127,43],[155,47,127,45,"error"],[155,52,127,50],[155,53,127,51],[156,8,128,6],[156,15,128,13],[157,10,129,8,"type"],[157,14,129,12],[157,16,129,14],[157,23,129,21],[158,10,130,8,"error"],[158,15,130,13],[158,17,130,15,"error"],[158,22,130,20],[158,34,130,32,"Error"],[158,39,130,37],[158,42,130,40,"error"],[158,47,130,45],[158,48,130,46,"message"],[158,55,130,53],[158,58,130,56],[159,8,131,6],[159,9,131,7],[160,6,132,4],[161,4,133,2],[163,4,135,2],[164,0,136,0],[165,0,137,0],[166,4,138,2],[166,10,138,8,"authenticateWithBackend"],[166,33,138,31,"authenticateWithBackend"],[166,34,138,32,"idToken"],[166,41,138,47],[166,43,138,49,"accessToken"],[166,54,138,69],[166,56,138,85],[167,6,139,4],[167,10,139,8],[168,8,140,6],[168,14,140,12,"backendUrl"],[168,24,140,22],[168,27,140,25,"process"],[168,34,140,32],[168,35,140,33,"env"],[168,38,140,36],[168,39,140,37,"EXPO_PUBLIC_BACKEND_URL"],[168,62,140,60],[168,66,140,64],[168,68,140,66],[169,8,142,6],[169,14,142,12,"response"],[169,22,142,20],[169,25,142,23],[169,31,142,29,"fetch"],[169,36,142,34],[169,37,142,35],[169,40,142,38,"backendUrl"],[169,50,142,48],[169,74,142,72],[169,76,142,74],[170,10,143,8,"method"],[170,16,143,14],[170,18,143,16],[170,24,143,22],[171,10,144,8,"headers"],[171,17,144,15],[171,19,144,17],[172,12,145,10],[172,26,145,24],[172,28,145,26],[173,10,146,8],[173,11,146,9],[174,10,147,8,"body"],[174,14,147,12],[174,16,147,14,"JSON"],[174,20,147,18],[174,21,147,19,"stringify"],[174,30,147,28],[174,31,147,29],[175,12,148,10,"provider"],[175,20,148,18],[175,22,148,20],[175,30,148,28],[176,12,149,10,"id_token"],[176,20,149,18],[176,22,149,20,"idToken"],[176,29,149,27],[177,12,150,10,"access_token"],[177,24,150,22],[177,26,150,24,"accessToken"],[178,10,151,8],[178,11,151,9],[179,8,152,6],[179,9,152,7],[179,10,152,8],[180,8,154,6],[180,12,154,10],[180,13,154,11,"response"],[180,21,154,19],[180,22,154,20,"ok"],[180,24,154,22],[180,26,154,24],[181,10,155,8],[181,16,155,14,"errorData"],[181,25,155,23],[181,28,155,26],[181,34,155,32,"response"],[181,42,155,40],[181,43,155,41,"json"],[181,47,155,45],[181,48,155,46],[181,49,155,47],[181,50,155,48,"catch"],[181,55,155,53],[181,56,155,54],[181,63,155,61],[181,64,155,62],[181,65,155,63],[181,66,155,64],[181,67,155,65],[182,10,156,8],[182,16,156,14],[182,20,156,18,"Error"],[182,25,156,23],[182,26,156,24,"errorData"],[182,35,156,33],[182,36,156,34,"detail"],[182,42,156,40],[182,46,156,44],[182,77,156,75],[182,78,156,76],[183,8,157,6],[184,8,159,6],[184,15,159,13],[184,21,159,19,"response"],[184,29,159,27],[184,30,159,28,"json"],[184,34,159,32],[184,35,159,33],[184,36,159,34],[185,6,160,4],[185,7,160,5],[185,8,160,6],[185,15,160,13,"error"],[185,20,160,18],[185,22,160,20],[186,8,161,6,"console"],[186,15,161,13],[186,16,161,14,"error"],[186,21,161,19],[186,22,161,20],[186,44,161,42],[186,46,161,44,"error"],[186,51,161,49],[186,52,161,50],[187,8,162,6],[187,14,162,12,"error"],[187,19,162,17],[188,6,163,4],[189,4,164,2],[191,4,166,2],[192,0,167,0],[193,0,168,0],[194,4,169,2],[194,10,169,8,"completeOAuthFlow"],[194,27,169,25,"completeOAuthFlow"],[194,28,169,25],[194,30,169,42],[195,6,170,4],[195,12,170,10,"oauthResult"],[195,23,170,21],[195,26,170,24],[195,32,170,30],[195,36,170,34],[195,37,170,35,"signIn"],[195,43,170,41],[195,44,170,42],[195,45,170,43],[196,6,172,4],[196,10,172,8,"oauthResult"],[196,21,172,19],[196,22,172,20,"type"],[196,26,172,24],[196,31,172,29],[196,40,172,38],[196,44,172,42,"oauthResult"],[196,55,172,53],[196,56,172,54,"idToken"],[196,63,172,61],[196,65,172,63],[197,8,173,6],[197,15,173,13],[197,21,173,19],[197,25,173,23],[197,26,173,24,"authenticateWithBackend"],[197,49,173,47],[197,50,174,8,"oauthResult"],[197,61,174,19],[197,62,174,20,"idToken"],[197,69,174,27],[197,71,175,8,"oauthResult"],[197,82,175,19],[197,83,175,20,"accessToken"],[197,94,176,6],[197,95,176,7],[198,6,177,4],[198,7,177,5],[198,13,177,11],[199,8,178,6],[199,14,178,12],[199,18,178,16,"Error"],[199,23,178,21],[199,24,178,22,"oauthResult"],[199,35,178,33],[199,36,178,34,"error"],[199,41,178,39],[199,45,178,43],[199,64,178,62],[199,65,178,63],[200,6,179,4],[201,4,180,2],[203,4,182,2],[204,0,183,0],[205,0,184,0],[206,4,185,2,"isConfigured"],[206,16,185,14,"isConfigured"],[206,17,185,14],[206,19,185,26],[207,6,186,4],[207,13,186,11],[207,17,186,15],[207,18,186,16,"config"],[207,24,186,22],[207,29,186,27],[207,33,186,31],[207,37,186,35],[207,38,186,36],[207,39,186,37],[207,43,186,41],[207,44,186,42,"config"],[207,50,186,48],[207,51,186,49,"clientId"],[207,59,186,57],[208,4,187,2],[210,4,189,2],[211,0,190,0],[212,0,191,0],[213,4,192,2,"getConfig"],[213,13,192,11,"getConfig"],[213,14,192,11],[213,16,192,40],[214,6,193,4],[214,13,193,11],[214,17,193,15],[214,18,193,16,"config"],[214,24,193,22],[215,4,194,2],[216,2,195,0],[218,2,197,0],[219,2,198,7],[219,8,198,13,"googleOAuthService"],[219,26,198,31],[219,29,198,34],[219,33,198,38,"GoogleOAuthService"],[219,51,198,56],[219,52,198,57],[219,53,198,58],[221,2,200,0],[222,2,201,7],[222,8,201,13,"useGoogleOAuth"],[222,22,201,27],[222,25,201,30,"useGoogleOAuth"],[222,26,201,30],[222,31,201,36],[223,4,202,2],[223,10,202,8,"signIn"],[223,16,202,14],[223,19,202,17],[223,25,202,17,"signIn"],[223,26,202,17],[223,31,202,57],[224,6,203,4],[224,13,203,11],[224,19,203,17,"googleOAuthService"],[224,37,203,35],[224,38,203,36,"signIn"],[224,44,203,42],[224,45,203,43],[224,46,203,44],[225,4,204,2],[225,5,204,3],[226,4,206,2],[226,10,206,8,"authenticateWithBackend"],[226,33,206,31],[226,36,206,34],[226,42,206,34,"authenticateWithBackend"],[226,43,206,41,"idToken"],[226,50,206,56],[226,52,206,58,"accessToken"],[226,63,206,78],[226,68,206,83],[227,6,207,4],[227,13,207,11],[227,19,207,17,"googleOAuthService"],[227,37,207,35],[227,38,207,36,"authenticateWithBackend"],[227,61,207,59],[227,62,207,60,"idToken"],[227,69,207,67],[227,71,207,69,"accessToken"],[227,82,207,80],[227,83,207,81],[228,4,208,2],[228,5,208,3],[229,4,210,2],[229,10,210,8,"completeOAuthFlow"],[229,27,210,25],[229,30,210,28],[229,36,210,28,"completeOAuthFlow"],[229,37,210,28],[229,42,210,40],[230,6,211,4],[230,13,211,11],[230,19,211,17,"googleOAuthService"],[230,37,211,35],[230,38,211,36,"completeOAuthFlow"],[230,55,211,53],[230,56,211,54],[230,57,211,55],[231,4,212,2],[231,5,212,3],[232,4,214,2],[232,11,214,9],[233,6,215,4,"signIn"],[233,12,215,10],[234,6,216,4,"authenticateWithBackend"],[234,29,216,27],[235,6,217,4,"completeOAuthFlow"],[235,23,217,21],[236,6,218,4,"isConfigured"],[236,18,218,16],[236,20,218,18,"googleOAuthService"],[236,38,218,36],[236,39,218,37,"isConfigured"],[236,51,218,49],[236,52,218,50],[236,53,218,51],[237,6,219,4,"initialize"],[237,16,219,14],[237,18,219,16,"googleOAuthService"],[237,36,219,34],[237,37,219,35,"initialize"],[237,47,219,45],[237,48,219,46,"bind"],[237,52,219,50],[237,53,219,51,"googleOAuthService"],[237,71,219,69],[238,4,220,2],[238,5,220,3],[239,2,221,0],[239,3,221,1],[240,2,223,0],[240,6,223,0,"_default"],[240,14,223,0],[240,17,223,15,"googleOAuthService"],[240,35,223,33],[241,0,223,34],[241,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF0B;EGK;GHyD;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}