{"dependencies":[{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"expo-crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":98},"end":{"line":3,"column":38,"index":136}}],"key":"+Akla+LrhuGGU54C9zXxLPlFUv4=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoAuthSession = require(_dependencyMap[0], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[1], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _expoCrypto = require(_dependencyMap[2], \"expo-crypto\");\n  var Crypto = _interopNamespace(_expoCrypto);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.IdToken,\n        redirectUri,\n        // Use PKCE for security (required for mobile OAuth)\n        codeChallenge: Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, Crypto.getRandomBytes(32).toString(), {\n          encoding: Crypto.CryptoEncoding.BASE64URL\n        }).then(challenge => challenge),\n        codeChallengeMethod: AuthSession.CodeChallengeMethod.S256,\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        },\n        additionalParameters: {}\n      });\n      return Promise.resolve(request);\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n\n        // Start the authentication flow\n        const result = await AuthSession.startAsync({\n          authUrl: await this.authRequest.makeAuthUrlAsync(discovery),\n          returnUrl: this.authRequest.redirectUri\n        });\n        console.log('OAuth Result:', result);\n        if (result.type === 'success') {\n          const {\n            id_token,\n            access_token\n          } = result.params;\n          if (id_token) {\n            return {\n              type: 'success',\n              idToken: id_token,\n              accessToken: access_token\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No ID token received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss') {\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          return {\n            type: 'error',\n            error: result.error?.description || 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":247,"map":[[27,2,227,0,"Object"],[27,8,227,0],[27,9,227,0,"defineProperty"],[27,23,227,0],[27,24,227,0,"exports"],[27,31,227,0],[28,4,227,0,"enumerable"],[28,14,227,0],[29,4,227,0,"get"],[29,7,227,0],[29,18,227,0,"get"],[29,19,227,0],[30,6,227,0],[30,13,227,0,"_default"],[30,21,227,0],[31,4,227,0],[32,2,227,0],[33,2,202,0,"Object"],[33,8,202,0],[33,9,202,0,"defineProperty"],[33,23,202,0],[33,24,202,0,"exports"],[33,31,202,0],[34,4,202,0,"enumerable"],[34,14,202,0],[35,4,202,0,"get"],[35,7,202,0],[35,18,202,0,"get"],[35,19,202,0],[36,6,202,0],[36,13,202,0,"googleOAuthService"],[36,31,202,0],[37,4,202,0],[38,2,202,0],[39,2,205,0,"Object"],[39,8,205,0],[39,9,205,0,"defineProperty"],[39,23,205,0],[39,24,205,0,"exports"],[39,31,205,0],[40,4,205,0,"enumerable"],[40,14,205,0],[41,4,205,0,"get"],[41,7,205,0],[41,18,205,0,"get"],[41,19,205,0],[42,6,205,0],[42,13,205,0,"useGoogleOAuth"],[42,27,205,0],[43,4,205,0],[44,2,205,0],[45,2,1,0],[45,6,1,0,"_expoAuthSession"],[45,22,1,0],[45,25,1,0,"require"],[45,32,1,0],[45,33,1,0,"_dependencyMap"],[45,47,1,0],[46,2,1,0],[46,6,1,0,"AuthSession"],[46,17,1,0],[46,20,1,0,"_interopNamespace"],[46,37,1,0],[46,38,1,0,"_expoAuthSession"],[46,54,1,0],[47,2,2,0],[47,6,2,0,"_expoWebBrowser"],[47,21,2,0],[47,24,2,0,"require"],[47,31,2,0],[47,32,2,0,"_dependencyMap"],[47,46,2,0],[48,2,2,0],[48,6,2,0,"WebBrowser"],[48,16,2,0],[48,19,2,0,"_interopNamespace"],[48,36,2,0],[48,37,2,0,"_expoWebBrowser"],[48,52,2,0],[49,2,3,0],[49,6,3,0,"_expoCrypto"],[49,17,3,0],[49,20,3,0,"require"],[49,27,3,0],[49,28,3,0,"_dependencyMap"],[49,42,3,0],[50,2,3,0],[50,6,3,0,"Crypto"],[50,12,3,0],[50,15,3,0,"_interopNamespace"],[50,32,3,0],[50,33,3,0,"_expoCrypto"],[50,44,3,0],[51,2,3,38],[51,6,3,38,"_reactNativeWebDistExportsPlatform"],[51,40,3,38],[51,43,3,38,"require"],[51,50,3,38],[51,51,3,38,"_dependencyMap"],[51,65,3,38],[52,2,3,38],[52,6,3,38,"Platform"],[52,14,3,38],[52,17,3,38,"_interopDefault"],[52,32,3,38],[52,33,3,38,"_reactNativeWebDistExportsPlatform"],[52,67,3,38],[53,2,6,0],[54,2,7,0,"WebBrowser"],[54,12,7,10],[54,13,7,11,"maybeCompleteAuthSession"],[54,37,7,35],[54,38,7,36],[54,39,7,37],[56,2,9,0],[57,2,10,0],[57,8,10,6,"GOOGLE_CLIENT_ID"],[57,24,10,22],[57,27,10,25],[57,29,10,27],[57,30,10,28],[57,31,10,29],[58,2,11,0],[58,8,11,6,"GOOGLE_CLIENT_SECRET"],[58,28,11,26],[58,31,11,29],[58,33,11,31],[58,34,11,32],[58,35,11,33],[60,2,13,0],[61,2,14,0],[61,8,14,6,"discovery"],[61,17,14,15],[61,20,14,18],[62,4,15,2,"authorizationEndpoint"],[62,25,15,23],[62,27,15,25],[62,73,15,71],[63,4,16,2,"tokenEndpoint"],[63,17,16,15],[63,19,16,17],[63,56,16,54],[64,4,17,2,"revocationEndpoint"],[64,22,17,20],[64,24,17,22],[65,2,18,0],[65,3,18,1],[66,2,32,0],[66,8,32,6,"GoogleOAuthService"],[66,26,32,24],[66,27,32,25],[67,4,33,10,"config"],[67,10,33,16],[67,13,33,45],[67,17,33,49],[68,4,34,10,"authRequest"],[68,15,34,21],[68,18,34,56],[68,22,34,60],[70,4,36,2],[71,0,37,0],[72,0,38,0],[73,4,39,2,"initialize"],[73,14,39,12,"initialize"],[73,15,39,13,"config"],[73,21,39,38],[73,23,39,40],[74,6,40,4],[74,10,40,8],[74,11,40,9,"config"],[74,17,40,15],[74,20,40,18,"config"],[74,26,40,24],[75,4,41,2],[77,4,43,2],[78,0,44,0],[79,0,45,0],[80,4,46,10,"createAuthRequest"],[80,21,46,27,"createAuthRequest"],[80,22,46,27],[80,24,46,64],[81,6,47,4],[81,10,47,8],[81,11,47,9],[81,15,47,13],[81,16,47,14,"config"],[81,22,47,20],[81,24,47,22],[82,8,48,6],[82,14,48,12],[82,18,48,16,"Error"],[82,23,48,21],[82,24,48,22],[82,80,48,78],[82,81,48,79],[83,6,49,4],[84,6,51,4],[84,12,51,10,"redirectUri"],[84,23,51,21],[84,26,51,24,"AuthSession"],[84,37,51,35],[84,38,51,36,"makeRedirectUri"],[84,53,51,51],[84,54,51,52],[85,8,52,6,"useProxy"],[85,16,52,14],[85,18,52,16],[85,22,52,20],[86,8,52,22],[87,8,53,6,"preferLocalhost"],[87,23,53,21],[87,25,53,23,"Platform"],[87,33,53,31],[87,34,53,31,"default"],[87,41,53,31],[87,42,53,32,"OS"],[87,44,53,34],[87,49,53,39],[88,6,54,4],[88,7,54,5],[88,8,54,6],[89,6,56,4,"console"],[89,13,56,11],[89,14,56,12,"log"],[89,17,56,15],[89,18,56,16],[89,39,56,37],[89,41,56,39,"redirectUri"],[89,52,56,50],[89,53,56,51],[91,6,58,4],[92,6,59,4],[92,12,59,10,"request"],[92,19,59,17],[92,22,59,20],[92,26,59,24,"AuthSession"],[92,37,59,35],[92,38,59,36,"AuthRequest"],[92,49,59,47],[92,50,59,48],[93,8,60,6,"clientId"],[93,16,60,14],[93,18,60,16],[93,22,60,20],[93,23,60,21,"config"],[93,29,60,27],[93,30,60,28,"clientId"],[93,38,60,36],[94,8,61,6,"scopes"],[94,14,61,12],[94,16,61,14],[94,17,61,15],[94,25,61,23],[94,27,61,25],[94,36,61,34],[94,38,61,36],[94,45,61,43],[94,46,61,44],[95,8,62,6,"responseType"],[95,20,62,18],[95,22,62,20,"AuthSession"],[95,33,62,31],[95,34,62,32,"ResponseType"],[95,46,62,44],[95,47,62,45,"IdToken"],[95,54,62,52],[96,8,63,6,"redirectUri"],[96,19,63,17],[97,8,64,6],[98,8,65,6,"codeChallenge"],[98,21,65,19],[98,23,65,21,"Crypto"],[98,29,65,27],[98,30,65,28,"digestStringAsync"],[98,47,65,45],[98,48,66,8,"Crypto"],[98,54,66,14],[98,55,66,15,"CryptoDigestAlgorithm"],[98,76,66,36],[98,77,66,37,"SHA256"],[98,83,66,43],[98,85,67,8,"Crypto"],[98,91,67,14],[98,92,67,15,"getRandomBytes"],[98,106,67,29],[98,107,67,30],[98,109,67,32],[98,110,67,33],[98,111,67,34,"toString"],[98,119,67,42],[98,120,67,43],[98,121,67,44],[98,123,68,8],[99,10,68,10,"encoding"],[99,18,68,18],[99,20,68,20,"Crypto"],[99,26,68,26],[99,27,68,27,"CryptoEncoding"],[99,41,68,41],[99,42,68,42,"BASE64URL"],[100,8,68,52],[100,9,69,6],[100,10,69,7],[100,11,69,8,"then"],[100,15,69,12],[100,16,69,14,"challenge"],[100,25,69,23],[100,29,69,28,"challenge"],[100,38,69,37],[100,39,69,38],[101,8,70,6,"codeChallengeMethod"],[101,27,70,25],[101,29,70,27,"AuthSession"],[101,40,70,38],[101,41,70,39,"CodeChallengeMethod"],[101,60,70,58],[101,61,70,59,"S256"],[101,65,70,63],[102,8,71,6],[103,8,72,6,"extraParams"],[103,19,72,17],[103,21,72,19],[104,10,73,8,"access_type"],[104,21,73,19],[104,23,73,21],[104,32,73,30],[105,10,74,8,"prompt"],[105,16,74,14],[105,18,74,16],[105,34,74,32],[105,35,74,34],[106,8,75,6],[106,9,75,7],[107,8,76,6,"additionalParameters"],[107,28,76,26],[107,30,76,28],[107,31,76,29],[108,6,77,4],[108,7,77,5],[108,8,77,6],[109,6,79,4],[109,13,79,11,"Promise"],[109,20,79,18],[109,21,79,19,"resolve"],[109,28,79,26],[109,29,79,27,"request"],[109,36,79,34],[109,37,79,35],[110,4,80,2],[112,4,82,2],[113,0,83,0],[114,0,84,0],[115,4,85,2],[115,10,85,8,"signIn"],[115,16,85,14,"signIn"],[115,17,85,14],[115,19,85,45],[116,6,86,4],[116,10,86,8],[117,8,87,6],[117,12,87,10],[117,13,87,11],[117,17,87,15],[117,18,87,16,"config"],[117,24,87,22],[117,26,87,24],[118,10,88,8],[118,17,88,15],[119,12,89,10,"type"],[119,16,89,14],[119,18,89,16],[119,25,89,23],[120,12,90,10,"error"],[120,17,90,15],[120,19,90,17],[121,10,91,8],[121,11,91,9],[122,8,92,6],[124,8,94,6],[125,8,95,6],[125,12,95,10],[125,13,95,11,"authRequest"],[125,24,95,22],[125,27,95,25],[125,33,95,31],[125,37,95,35],[125,38,95,36,"createAuthRequest"],[125,55,95,53],[125,56,95,54],[125,57,95,55],[127,8,97,6],[128,8,98,6],[128,14,98,12,"result"],[128,20,98,18],[128,23,98,21],[128,29,98,27,"AuthSession"],[128,40,98,38],[128,41,98,39,"startAsync"],[128,51,98,49],[128,52,98,50],[129,10,99,8,"authUrl"],[129,17,99,15],[129,19,99,17],[129,25,99,23],[129,29,99,27],[129,30,99,28,"authRequest"],[129,41,99,39],[129,42,99,40,"makeAuthUrlAsync"],[129,58,99,56],[129,59,99,57,"discovery"],[129,68,99,66],[129,69,99,67],[130,10,100,8,"returnUrl"],[130,19,100,17],[130,21,100,19],[130,25,100,23],[130,26,100,24,"authRequest"],[130,37,100,35],[130,38,100,36,"redirectUri"],[131,8,101,6],[131,9,101,7],[131,10,101,8],[132,8,103,6,"console"],[132,15,103,13],[132,16,103,14,"log"],[132,19,103,17],[132,20,103,18],[132,35,103,33],[132,37,103,35,"result"],[132,43,103,41],[132,44,103,42],[133,8,105,6],[133,12,105,10,"result"],[133,18,105,16],[133,19,105,17,"type"],[133,23,105,21],[133,28,105,26],[133,37,105,35],[133,39,105,37],[134,10,106,8],[134,16,106,14],[135,12,106,16,"id_token"],[135,20,106,24],[136,12,106,26,"access_token"],[137,10,106,39],[137,11,106,40],[137,14,106,43,"result"],[137,20,106,49],[137,21,106,50,"params"],[137,27,106,56],[138,10,108,8],[138,14,108,12,"id_token"],[138,22,108,20],[138,24,108,22],[139,12,109,10],[139,19,109,17],[140,14,110,12,"type"],[140,18,110,16],[140,20,110,18],[140,29,110,27],[141,14,111,12,"idToken"],[141,21,111,19],[141,23,111,21,"id_token"],[141,31,111,29],[142,14,112,12,"accessToken"],[142,25,112,23],[142,27,112,25,"access_token"],[143,12,113,10],[143,13,113,11],[144,10,114,8],[144,11,114,9],[144,17,114,15],[145,12,115,10],[145,19,115,17],[146,14,116,12,"type"],[146,18,116,16],[146,20,116,18],[146,27,116,25],[147,14,117,12,"error"],[147,19,117,17],[147,21,117,19],[148,12,118,10],[148,13,118,11],[149,10,119,8],[150,8,120,6],[150,9,120,7],[150,15,120,13],[150,19,120,17,"result"],[150,25,120,23],[150,26,120,24,"type"],[150,30,120,28],[150,35,120,33],[150,44,120,42],[150,46,120,44],[151,10,121,8],[151,17,121,15],[152,12,122,10,"type"],[152,16,122,14],[152,18,122,16],[153,10,123,8],[153,11,123,9],[154,8,124,6],[154,9,124,7],[154,15,124,13],[155,10,125,8],[155,17,125,15],[156,12,126,10,"type"],[156,16,126,14],[156,18,126,16],[156,25,126,23],[157,12,127,10,"error"],[157,17,127,15],[157,19,127,17,"result"],[157,25,127,23],[157,26,127,24,"error"],[157,31,127,29],[157,33,127,31,"description"],[157,44,127,42],[157,48,127,46],[158,10,128,8],[158,11,128,9],[159,8,129,6],[160,6,130,4],[160,7,130,5],[160,8,130,6],[160,15,130,13,"error"],[160,20,130,18],[160,22,130,20],[161,8,131,6,"console"],[161,15,131,13],[161,16,131,14,"error"],[161,21,131,19],[161,22,131,20],[161,43,131,41],[161,45,131,43,"error"],[161,50,131,48],[161,51,131,49],[162,8,132,6],[162,15,132,13],[163,10,133,8,"type"],[163,14,133,12],[163,16,133,14],[163,23,133,21],[164,10,134,8,"error"],[164,15,134,13],[164,17,134,15,"error"],[164,22,134,20],[164,34,134,32,"Error"],[164,39,134,37],[164,42,134,40,"error"],[164,47,134,45],[164,48,134,46,"message"],[164,55,134,53],[164,58,134,56],[165,8,135,6],[165,9,135,7],[166,6,136,4],[167,4,137,2],[169,4,139,2],[170,0,140,0],[171,0,141,0],[172,4,142,2],[172,10,142,8,"authenticateWithBackend"],[172,33,142,31,"authenticateWithBackend"],[172,34,142,32,"idToken"],[172,41,142,47],[172,43,142,49,"accessToken"],[172,54,142,69],[172,56,142,85],[173,6,143,4],[173,10,143,8],[174,8,144,6],[174,14,144,12,"backendUrl"],[174,24,144,22],[174,27,144,25,"process"],[174,34,144,32],[174,35,144,33,"env"],[174,38,144,36],[174,39,144,37,"EXPO_PUBLIC_BACKEND_URL"],[174,62,144,60],[174,66,144,64],[174,68,144,66],[175,8,146,6],[175,14,146,12,"response"],[175,22,146,20],[175,25,146,23],[175,31,146,29,"fetch"],[175,36,146,34],[175,37,146,35],[175,40,146,38,"backendUrl"],[175,50,146,48],[175,74,146,72],[175,76,146,74],[176,10,147,8,"method"],[176,16,147,14],[176,18,147,16],[176,24,147,22],[177,10,148,8,"headers"],[177,17,148,15],[177,19,148,17],[178,12,149,10],[178,26,149,24],[178,28,149,26],[179,10,150,8],[179,11,150,9],[180,10,151,8,"body"],[180,14,151,12],[180,16,151,14,"JSON"],[180,20,151,18],[180,21,151,19,"stringify"],[180,30,151,28],[180,31,151,29],[181,12,152,10,"provider"],[181,20,152,18],[181,22,152,20],[181,30,152,28],[182,12,153,10,"id_token"],[182,20,153,18],[182,22,153,20,"idToken"],[182,29,153,27],[183,12,154,10,"access_token"],[183,24,154,22],[183,26,154,24,"accessToken"],[184,10,155,8],[184,11,155,9],[185,8,156,6],[185,9,156,7],[185,10,156,8],[186,8,158,6],[186,12,158,10],[186,13,158,11,"response"],[186,21,158,19],[186,22,158,20,"ok"],[186,24,158,22],[186,26,158,24],[187,10,159,8],[187,16,159,14,"errorData"],[187,25,159,23],[187,28,159,26],[187,34,159,32,"response"],[187,42,159,40],[187,43,159,41,"json"],[187,47,159,45],[187,48,159,46],[187,49,159,47],[187,50,159,48,"catch"],[187,55,159,53],[187,56,159,54],[187,63,159,61],[187,64,159,62],[187,65,159,63],[187,66,159,64],[187,67,159,65],[188,10,160,8],[188,16,160,14],[188,20,160,18,"Error"],[188,25,160,23],[188,26,160,24,"errorData"],[188,35,160,33],[188,36,160,34,"detail"],[188,42,160,40],[188,46,160,44],[188,77,160,75],[188,78,160,76],[189,8,161,6],[190,8,163,6],[190,15,163,13],[190,21,163,19,"response"],[190,29,163,27],[190,30,163,28,"json"],[190,34,163,32],[190,35,163,33],[190,36,163,34],[191,6,164,4],[191,7,164,5],[191,8,164,6],[191,15,164,13,"error"],[191,20,164,18],[191,22,164,20],[192,8,165,6,"console"],[192,15,165,13],[192,16,165,14,"error"],[192,21,165,19],[192,22,165,20],[192,44,165,42],[192,46,165,44,"error"],[192,51,165,49],[192,52,165,50],[193,8,166,6],[193,14,166,12,"error"],[193,19,166,17],[194,6,167,4],[195,4,168,2],[197,4,170,2],[198,0,171,0],[199,0,172,0],[200,4,173,2],[200,10,173,8,"completeOAuthFlow"],[200,27,173,25,"completeOAuthFlow"],[200,28,173,25],[200,30,173,42],[201,6,174,4],[201,12,174,10,"oauthResult"],[201,23,174,21],[201,26,174,24],[201,32,174,30],[201,36,174,34],[201,37,174,35,"signIn"],[201,43,174,41],[201,44,174,42],[201,45,174,43],[202,6,176,4],[202,10,176,8,"oauthResult"],[202,21,176,19],[202,22,176,20,"type"],[202,26,176,24],[202,31,176,29],[202,40,176,38],[202,44,176,42,"oauthResult"],[202,55,176,53],[202,56,176,54,"idToken"],[202,63,176,61],[202,65,176,63],[203,8,177,6],[203,15,177,13],[203,21,177,19],[203,25,177,23],[203,26,177,24,"authenticateWithBackend"],[203,49,177,47],[203,50,178,8,"oauthResult"],[203,61,178,19],[203,62,178,20,"idToken"],[203,69,178,27],[203,71,179,8,"oauthResult"],[203,82,179,19],[203,83,179,20,"accessToken"],[203,94,180,6],[203,95,180,7],[204,6,181,4],[204,7,181,5],[204,13,181,11],[205,8,182,6],[205,14,182,12],[205,18,182,16,"Error"],[205,23,182,21],[205,24,182,22,"oauthResult"],[205,35,182,33],[205,36,182,34,"error"],[205,41,182,39],[205,45,182,43],[205,64,182,62],[205,65,182,63],[206,6,183,4],[207,4,184,2],[209,4,186,2],[210,0,187,0],[211,0,188,0],[212,4,189,2,"isConfigured"],[212,16,189,14,"isConfigured"],[212,17,189,14],[212,19,189,26],[213,6,190,4],[213,13,190,11],[213,17,190,15],[213,18,190,16,"config"],[213,24,190,22],[213,29,190,27],[213,33,190,31],[213,37,190,35],[213,38,190,36],[213,39,190,37],[213,43,190,41],[213,44,190,42,"config"],[213,50,190,48],[213,51,190,49,"clientId"],[213,59,190,57],[214,4,191,2],[216,4,193,2],[217,0,194,0],[218,0,195,0],[219,4,196,2,"getConfig"],[219,13,196,11,"getConfig"],[219,14,196,11],[219,16,196,40],[220,6,197,4],[220,13,197,11],[220,17,197,15],[220,18,197,16,"config"],[220,24,197,22],[221,4,198,2],[222,2,199,0],[224,2,201,0],[225,2,202,7],[225,8,202,13,"googleOAuthService"],[225,26,202,31],[225,29,202,34],[225,33,202,38,"GoogleOAuthService"],[225,51,202,56],[225,52,202,57],[225,53,202,58],[227,2,204,0],[228,2,205,7],[228,8,205,13,"useGoogleOAuth"],[228,22,205,27],[228,25,205,30,"useGoogleOAuth"],[228,26,205,30],[228,31,205,36],[229,4,206,2],[229,10,206,8,"signIn"],[229,16,206,14],[229,19,206,17],[229,25,206,17,"signIn"],[229,26,206,17],[229,31,206,57],[230,6,207,4],[230,13,207,11],[230,19,207,17,"googleOAuthService"],[230,37,207,35],[230,38,207,36,"signIn"],[230,44,207,42],[230,45,207,43],[230,46,207,44],[231,4,208,2],[231,5,208,3],[232,4,210,2],[232,10,210,8,"authenticateWithBackend"],[232,33,210,31],[232,36,210,34],[232,42,210,34,"authenticateWithBackend"],[232,43,210,41,"idToken"],[232,50,210,56],[232,52,210,58,"accessToken"],[232,63,210,78],[232,68,210,83],[233,6,211,4],[233,13,211,11],[233,19,211,17,"googleOAuthService"],[233,37,211,35],[233,38,211,36,"authenticateWithBackend"],[233,61,211,59],[233,62,211,60,"idToken"],[233,69,211,67],[233,71,211,69,"accessToken"],[233,82,211,80],[233,83,211,81],[234,4,212,2],[234,5,212,3],[235,4,214,2],[235,10,214,8,"completeOAuthFlow"],[235,27,214,25],[235,30,214,28],[235,36,214,28,"completeOAuthFlow"],[235,37,214,28],[235,42,214,40],[236,6,215,4],[236,13,215,11],[236,19,215,17,"googleOAuthService"],[236,37,215,35],[236,38,215,36,"completeOAuthFlow"],[236,55,215,53],[236,56,215,54],[236,57,215,55],[237,4,216,2],[237,5,216,3],[238,4,218,2],[238,11,218,9],[239,6,219,4,"signIn"],[239,12,219,10],[240,6,220,4,"authenticateWithBackend"],[240,29,220,27],[241,6,221,4,"completeOAuthFlow"],[241,23,221,21],[242,6,222,4,"isConfigured"],[242,18,222,16],[242,20,222,18,"googleOAuthService"],[242,38,222,36],[242,39,222,37,"isConfigured"],[242,51,222,49],[242,52,222,50],[242,53,222,51],[243,6,223,4,"initialize"],[243,16,223,14],[243,18,223,16,"googleOAuthService"],[243,36,223,34],[243,37,223,35,"initialize"],[243,47,223,45],[243,48,223,46,"bind"],[243,52,223,50],[243,53,223,51,"googleOAuthService"],[243,71,223,69],[244,4,224,2],[244,5,224,3],[245,2,225,0],[245,3,225,1],[246,2,227,0],[246,6,227,0,"_default"],[246,14,227,0],[246,17,227,15,"googleOAuthService"],[246,35,227,33],[247,0,227,34],[247,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","Crypto.digestStringAsync.then$argument_0","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC+B;ECO;GDE;EEK;aCuB,wBD;GFW;EIK;GJoD;EKK;sDCiB,UD;GLS;EOK;GPW;EQK;GRE;ESK;GTE;CDC;8BWM;iBNC;GME;kCLE;GKE;4BHE;GGE;CXS"},"hasCjsExports":false},"type":"js/module"}]}