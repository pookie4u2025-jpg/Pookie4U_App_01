{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoAuthSession = require(_dependencyMap[1], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[2], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    async createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n\n      // For development with Expo Go, we need to use the auth proxy\n      // This creates a stable redirect URI that doesn't change with ngrok\n      const redirectUri = AuthSession.makeRedirectUri({\n        scheme: 'exp',\n        path: 'redirect'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n      console.log('Platform:', Platform.default.OS);\n\n      // Create auth request - Use Code flow (not IdToken) to avoid PKCE issues\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.Code,\n        // Changed from IdToken to Code\n        redirectUri,\n        usePKCE: false,\n        // Explicitly disable PKCE to avoid the error\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        }\n      });\n      return request;\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n        console.log('🔐 Creating auth request...');\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n        console.log('🚀 Prompting user for OAuth...');\n\n        // Start the authentication flow using promptAsync\n        const result = await this.authRequest.promptAsync(discovery);\n        console.log('📋 OAuth Result:', result);\n        if (result.type === 'success') {\n          // With Code flow, we get an authorization code instead of direct tokens\n          const {\n            code\n          } = result.params;\n          console.log('✅ OAuth success, authorization code present:', !!code);\n          if (code) {\n            // Exchange authorization code for tokens\n            const tokenResult = await AuthSession.exchangeCodeAsync({\n              clientId: this.config.clientId,\n              code,\n              redirectUri: this.authRequest.redirectUri,\n              extraParams: {\n                client_secret: this.config.clientSecret || ''\n              }\n            }, discovery);\n            console.log('🎫 Token exchange successful');\n            return {\n              type: 'success',\n              idToken: tokenResult.idToken || undefined,\n              accessToken: tokenResult.accessToken\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No authorization code received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss' || result.type === 'cancel') {\n          console.log('⚠️ OAuth dismissed/cancelled by user');\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          console.error('❌ OAuth error:', result);\n          return {\n            type: 'error',\n            error: 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('❌ Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":258,"map":[[27,2,243,0,"Object"],[27,8,243,0],[27,9,243,0,"defineProperty"],[27,23,243,0],[27,24,243,0,"exports"],[27,31,243,0],[28,4,243,0,"enumerable"],[28,14,243,0],[29,4,243,0,"get"],[29,7,243,0],[29,18,243,0,"get"],[29,19,243,0],[30,6,243,0],[30,13,243,0,"_default"],[30,21,243,0],[31,4,243,0],[32,2,243,0],[33,2,218,0,"Object"],[33,8,218,0],[33,9,218,0,"defineProperty"],[33,23,218,0],[33,24,218,0,"exports"],[33,31,218,0],[34,4,218,0,"enumerable"],[34,14,218,0],[35,4,218,0,"get"],[35,7,218,0],[35,18,218,0,"get"],[35,19,218,0],[36,6,218,0],[36,13,218,0,"googleOAuthService"],[36,31,218,0],[37,4,218,0],[38,2,218,0],[39,2,221,0,"Object"],[39,8,221,0],[39,9,221,0,"defineProperty"],[39,23,221,0],[39,24,221,0,"exports"],[39,31,221,0],[40,4,221,0,"enumerable"],[40,14,221,0],[41,4,221,0,"get"],[41,7,221,0],[41,18,221,0,"get"],[41,19,221,0],[42,6,221,0],[42,13,221,0,"useGoogleOAuth"],[42,27,221,0],[43,4,221,0],[44,2,221,0],[45,2,241,2],[45,6,241,2,"_expoVirtualEnv"],[45,21,241,2],[45,24,241,2,"require"],[45,31,241,2],[45,32,241,2,"_dependencyMap"],[45,46,241,2],[46,2,1,0],[46,6,1,0,"_expoAuthSession"],[46,22,1,0],[46,25,1,0,"require"],[46,32,1,0],[46,33,1,0,"_dependencyMap"],[46,47,1,0],[47,2,1,0],[47,6,1,0,"AuthSession"],[47,17,1,0],[47,20,1,0,"_interopNamespace"],[47,37,1,0],[47,38,1,0,"_expoAuthSession"],[47,54,1,0],[48,2,2,0],[48,6,2,0,"_expoWebBrowser"],[48,21,2,0],[48,24,2,0,"require"],[48,31,2,0],[48,32,2,0,"_dependencyMap"],[48,46,2,0],[49,2,2,0],[49,6,2,0,"WebBrowser"],[49,16,2,0],[49,19,2,0,"_interopNamespace"],[49,36,2,0],[49,37,2,0,"_expoWebBrowser"],[49,52,2,0],[50,2,2,47],[50,6,2,47,"_reactNativeWebDistExportsPlatform"],[50,40,2,47],[50,43,2,47,"require"],[50,50,2,47],[50,51,2,47,"_dependencyMap"],[50,65,2,47],[51,2,2,47],[51,6,2,47,"Platform"],[51,14,2,47],[51,17,2,47,"_interopDefault"],[51,32,2,47],[51,33,2,47,"_reactNativeWebDistExportsPlatform"],[51,67,2,47],[52,2,5,0],[53,2,6,0,"WebBrowser"],[53,12,6,10],[53,13,6,11,"maybeCompleteAuthSession"],[53,37,6,35],[53,38,6,36],[53,39,6,37],[55,2,8,0],[56,2,9,0],[56,8,9,6,"GOOGLE_CLIENT_ID"],[56,24,9,22],[56,27,9,25],[56,29,9,27],[56,30,9,28],[56,31,9,29],[57,2,10,0],[57,8,10,6,"GOOGLE_CLIENT_SECRET"],[57,28,10,26],[57,31,10,29],[57,33,10,31],[57,34,10,32],[57,35,10,33],[59,2,12,0],[60,2,13,0],[60,8,13,6,"discovery"],[60,17,13,15],[60,20,13,18],[61,4,14,2,"authorizationEndpoint"],[61,25,14,23],[61,27,14,25],[61,73,14,71],[62,4,15,2,"tokenEndpoint"],[62,17,15,15],[62,19,15,17],[62,56,15,54],[63,4,16,2,"revocationEndpoint"],[63,22,16,20],[63,24,16,22],[64,2,17,0],[64,3,17,1],[65,2,31,0],[65,8,31,6,"GoogleOAuthService"],[65,26,31,24],[65,27,31,25],[66,4,32,10,"config"],[66,10,32,16],[66,13,32,45],[66,17,32,49],[67,4,33,10,"authRequest"],[67,15,33,21],[67,18,33,56],[67,22,33,60],[69,4,35,2],[70,0,36,0],[71,0,37,0],[72,4,38,2,"initialize"],[72,14,38,12,"initialize"],[72,15,38,13,"config"],[72,21,38,38],[72,23,38,40],[73,6,39,4],[73,10,39,8],[73,11,39,9,"config"],[73,17,39,15],[73,20,39,18,"config"],[73,26,39,24],[74,4,40,2],[76,4,42,2],[77,0,43,0],[78,0,44,0],[79,4,45,2],[79,10,45,16,"createAuthRequest"],[79,27,45,33,"createAuthRequest"],[79,28,45,33],[79,30,45,70],[80,6,46,4],[80,10,46,8],[80,11,46,9],[80,15,46,13],[80,16,46,14,"config"],[80,22,46,20],[80,24,46,22],[81,8,47,6],[81,14,47,12],[81,18,47,16,"Error"],[81,23,47,21],[81,24,47,22],[81,80,47,78],[81,81,47,79],[82,6,48,4],[84,6,50,4],[85,6,51,4],[86,6,52,4],[86,12,52,10,"redirectUri"],[86,23,52,21],[86,26,52,24,"AuthSession"],[86,37,52,35],[86,38,52,36,"makeRedirectUri"],[86,53,52,51],[86,54,52,52],[87,8,53,6,"scheme"],[87,14,53,12],[87,16,53,14],[87,21,53,19],[88,8,54,6,"path"],[88,12,54,10],[88,14,54,12],[89,6,55,4],[89,7,55,5],[89,8,55,6],[90,6,57,4,"console"],[90,13,57,11],[90,14,57,12,"log"],[90,17,57,15],[90,18,57,16],[90,39,57,37],[90,41,57,39,"redirectUri"],[90,52,57,50],[90,53,57,51],[91,6,58,4,"console"],[91,13,58,11],[91,14,58,12,"log"],[91,17,58,15],[91,18,58,16],[91,29,58,27],[91,31,58,29,"Platform"],[91,39,58,37],[91,40,58,37,"default"],[91,47,58,37],[91,48,58,38,"OS"],[91,50,58,40],[91,51,58,41],[93,6,60,4],[94,6,61,4],[94,12,61,10,"request"],[94,19,61,17],[94,22,61,20],[94,26,61,24,"AuthSession"],[94,37,61,35],[94,38,61,36,"AuthRequest"],[94,49,61,47],[94,50,61,48],[95,8,62,6,"clientId"],[95,16,62,14],[95,18,62,16],[95,22,62,20],[95,23,62,21,"config"],[95,29,62,27],[95,30,62,28,"clientId"],[95,38,62,36],[96,8,63,6,"scopes"],[96,14,63,12],[96,16,63,14],[96,17,63,15],[96,25,63,23],[96,27,63,25],[96,36,63,34],[96,38,63,36],[96,45,63,43],[96,46,63,44],[97,8,64,6,"responseType"],[97,20,64,18],[97,22,64,20,"AuthSession"],[97,33,64,31],[97,34,64,32,"ResponseType"],[97,46,64,44],[97,47,64,45,"Code"],[97,51,64,49],[98,8,64,51],[99,8,65,6,"redirectUri"],[99,19,65,17],[100,8,66,6,"usePKCE"],[100,15,66,13],[100,17,66,15],[100,22,66,20],[101,8,66,22],[102,8,67,6],[103,8,68,6,"extraParams"],[103,19,68,17],[103,21,68,19],[104,10,69,8,"access_type"],[104,21,69,19],[104,23,69,21],[104,32,69,30],[105,10,70,8,"prompt"],[105,16,70,14],[105,18,70,16],[105,34,70,32],[105,35,70,34],[106,8,71,6],[107,6,72,4],[107,7,72,5],[107,8,72,6],[108,6,74,4],[108,13,74,11,"request"],[108,20,74,18],[109,4,75,2],[111,4,77,2],[112,0,78,0],[113,0,79,0],[114,4,80,2],[114,10,80,8,"signIn"],[114,16,80,14,"signIn"],[114,17,80,14],[114,19,80,45],[115,6,81,4],[115,10,81,8],[116,8,82,6],[116,12,82,10],[116,13,82,11],[116,17,82,15],[116,18,82,16,"config"],[116,24,82,22],[116,26,82,24],[117,10,83,8],[117,17,83,15],[118,12,84,10,"type"],[118,16,84,14],[118,18,84,16],[118,25,84,23],[119,12,85,10,"error"],[119,17,85,15],[119,19,85,17],[120,10,86,8],[120,11,86,9],[121,8,87,6],[122,8,89,6,"console"],[122,15,89,13],[122,16,89,14,"log"],[122,19,89,17],[122,20,89,18],[122,49,89,47],[122,50,89,48],[124,8,91,6],[125,8,92,6],[125,12,92,10],[125,13,92,11,"authRequest"],[125,24,92,22],[125,27,92,25],[125,33,92,31],[125,37,92,35],[125,38,92,36,"createAuthRequest"],[125,55,92,53],[125,56,92,54],[125,57,92,55],[126,8,94,6,"console"],[126,15,94,13],[126,16,94,14,"log"],[126,19,94,17],[126,20,94,18],[126,52,94,50],[126,53,94,51],[128,8,96,6],[129,8,97,6],[129,14,97,12,"result"],[129,20,97,18],[129,23,97,21],[129,29,97,27],[129,33,97,31],[129,34,97,32,"authRequest"],[129,45,97,43],[129,46,97,44,"promptAsync"],[129,57,97,55],[129,58,97,56,"discovery"],[129,67,97,65],[129,68,97,66],[130,8,99,6,"console"],[130,15,99,13],[130,16,99,14,"log"],[130,19,99,17],[130,20,99,18],[130,38,99,36],[130,40,99,38,"result"],[130,46,99,44],[130,47,99,45],[131,8,101,6],[131,12,101,10,"result"],[131,18,101,16],[131,19,101,17,"type"],[131,23,101,21],[131,28,101,26],[131,37,101,35],[131,39,101,37],[132,10,102,8],[133,10,103,8],[133,16,103,14],[134,12,103,16,"code"],[135,10,103,21],[135,11,103,22],[135,14,103,25,"result"],[135,20,103,31],[135,21,103,32,"params"],[135,27,103,38],[136,10,105,8,"console"],[136,17,105,15],[136,18,105,16,"log"],[136,21,105,19],[136,22,105,20],[136,68,105,66],[136,70,105,68],[136,71,105,69],[136,72,105,70,"code"],[136,76,105,74],[136,77,105,75],[137,10,107,8],[137,14,107,12,"code"],[137,18,107,16],[137,20,107,18],[138,12,108,10],[139,12,109,10],[139,18,109,16,"tokenResult"],[139,29,109,27],[139,32,109,30],[139,38,109,36,"AuthSession"],[139,49,109,47],[139,50,109,48,"exchangeCodeAsync"],[139,67,109,65],[139,68,110,12],[140,14,111,14,"clientId"],[140,22,111,22],[140,24,111,24],[140,28,111,28],[140,29,111,29,"config"],[140,35,111,35],[140,36,111,36,"clientId"],[140,44,111,44],[141,14,112,14,"code"],[141,18,112,18],[142,14,113,14,"redirectUri"],[142,25,113,25],[142,27,113,27],[142,31,113,31],[142,32,113,32,"authRequest"],[142,43,113,43],[142,44,113,44,"redirectUri"],[142,55,113,55],[143,14,114,14,"extraParams"],[143,25,114,25],[143,27,114,27],[144,16,115,16,"client_secret"],[144,29,115,29],[144,31,115,31],[144,35,115,35],[144,36,115,36,"config"],[144,42,115,42],[144,43,115,43,"clientSecret"],[144,55,115,55],[144,59,115,59],[145,14,116,14],[146,12,117,12],[146,13,117,13],[146,15,118,12,"discovery"],[146,24,119,10],[146,25,119,11],[147,12,121,10,"console"],[147,19,121,17],[147,20,121,18,"log"],[147,23,121,21],[147,24,121,22],[147,54,121,52],[147,55,121,53],[148,12,123,10],[148,19,123,17],[149,14,124,12,"type"],[149,18,124,16],[149,20,124,18],[149,29,124,27],[150,14,125,12,"idToken"],[150,21,125,19],[150,23,125,21,"tokenResult"],[150,34,125,32],[150,35,125,33,"idToken"],[150,42,125,40],[150,46,125,44,"undefined"],[150,55,125,53],[151,14,126,12,"accessToken"],[151,25,126,23],[151,27,126,25,"tokenResult"],[151,38,126,36],[151,39,126,37,"accessToken"],[152,12,127,10],[152,13,127,11],[153,10,128,8],[153,11,128,9],[153,17,128,15],[154,12,129,10],[154,19,129,17],[155,14,130,12,"type"],[155,18,130,16],[155,20,130,18],[155,27,130,25],[156,14,131,12,"error"],[156,19,131,17],[156,21,131,19],[157,12,132,10],[157,13,132,11],[158,10,133,8],[159,8,134,6],[159,9,134,7],[159,15,134,13],[159,19,134,17,"result"],[159,25,134,23],[159,26,134,24,"type"],[159,30,134,28],[159,35,134,33],[159,44,134,42],[159,48,134,46,"result"],[159,54,134,52],[159,55,134,53,"type"],[159,59,134,57],[159,64,134,62],[159,72,134,70],[159,74,134,72],[160,10,135,8,"console"],[160,17,135,15],[160,18,135,16,"log"],[160,21,135,19],[160,22,135,20],[160,60,135,58],[160,61,135,59],[161,10,136,8],[161,17,136,15],[162,12,137,10,"type"],[162,16,137,14],[162,18,137,16],[163,10,138,8],[163,11,138,9],[164,8,139,6],[164,9,139,7],[164,15,139,13],[165,10,140,8,"console"],[165,17,140,15],[165,18,140,16,"error"],[165,23,140,21],[165,24,140,22],[165,40,140,38],[165,42,140,40,"result"],[165,48,140,46],[165,49,140,47],[166,10,141,8],[166,17,141,15],[167,12,142,10,"type"],[167,16,142,14],[167,18,142,16],[167,25,142,23],[168,12,143,10,"error"],[168,17,143,15],[168,19,143,17],[169,10,144,8],[169,11,144,9],[170,8,145,6],[171,6,146,4],[171,7,146,5],[171,8,146,6],[171,15,146,13,"error"],[171,20,146,18],[171,22,146,20],[172,8,147,6,"console"],[172,15,147,13],[172,16,147,14,"error"],[172,21,147,19],[172,22,147,20],[172,45,147,43],[172,47,147,45,"error"],[172,52,147,50],[172,53,147,51],[173,8,148,6],[173,15,148,13],[174,10,149,8,"type"],[174,14,149,12],[174,16,149,14],[174,23,149,21],[175,10,150,8,"error"],[175,15,150,13],[175,17,150,15,"error"],[175,22,150,20],[175,34,150,32,"Error"],[175,39,150,37],[175,42,150,40,"error"],[175,47,150,45],[175,48,150,46,"message"],[175,55,150,53],[175,58,150,56],[176,8,151,6],[176,9,151,7],[177,6,152,4],[178,4,153,2],[180,4,155,2],[181,0,156,0],[182,0,157,0],[183,4,158,2],[183,10,158,8,"authenticateWithBackend"],[183,33,158,31,"authenticateWithBackend"],[183,34,158,32,"idToken"],[183,41,158,47],[183,43,158,49,"accessToken"],[183,54,158,69],[183,56,158,85],[184,6,159,4],[184,10,159,8],[185,8,160,6],[185,14,160,12,"backendUrl"],[185,24,160,22],[185,27,160,25,"_expoVirtualEnv"],[185,42,160,25],[185,43,160,25,"env"],[185,46,160,25],[185,47,160,25,"EXPO_PUBLIC_BACKEND_URL"],[185,70,160,25],[185,74,160,64],[185,76,160,66],[186,8,162,6],[186,14,162,12,"response"],[186,22,162,20],[186,25,162,23],[186,31,162,29,"fetch"],[186,36,162,34],[186,37,162,35],[186,40,162,38,"backendUrl"],[186,50,162,48],[186,74,162,72],[186,76,162,74],[187,10,163,8,"method"],[187,16,163,14],[187,18,163,16],[187,24,163,22],[188,10,164,8,"headers"],[188,17,164,15],[188,19,164,17],[189,12,165,10],[189,26,165,24],[189,28,165,26],[190,10,166,8],[190,11,166,9],[191,10,167,8,"body"],[191,14,167,12],[191,16,167,14,"JSON"],[191,20,167,18],[191,21,167,19,"stringify"],[191,30,167,28],[191,31,167,29],[192,12,168,10,"provider"],[192,20,168,18],[192,22,168,20],[192,30,168,28],[193,12,169,10,"id_token"],[193,20,169,18],[193,22,169,20,"idToken"],[193,29,169,27],[194,12,170,10,"access_token"],[194,24,170,22],[194,26,170,24,"accessToken"],[195,10,171,8],[195,11,171,9],[196,8,172,6],[196,9,172,7],[196,10,172,8],[197,8,174,6],[197,12,174,10],[197,13,174,11,"response"],[197,21,174,19],[197,22,174,20,"ok"],[197,24,174,22],[197,26,174,24],[198,10,175,8],[198,16,175,14,"errorData"],[198,25,175,23],[198,28,175,26],[198,34,175,32,"response"],[198,42,175,40],[198,43,175,41,"json"],[198,47,175,45],[198,48,175,46],[198,49,175,47],[198,50,175,48,"catch"],[198,55,175,53],[198,56,175,54],[198,63,175,61],[198,64,175,62],[198,65,175,63],[198,66,175,64],[198,67,175,65],[199,10,176,8],[199,16,176,14],[199,20,176,18,"Error"],[199,25,176,23],[199,26,176,24,"errorData"],[199,35,176,33],[199,36,176,34,"detail"],[199,42,176,40],[199,46,176,44],[199,77,176,75],[199,78,176,76],[200,8,177,6],[201,8,179,6],[201,15,179,13],[201,21,179,19,"response"],[201,29,179,27],[201,30,179,28,"json"],[201,34,179,32],[201,35,179,33],[201,36,179,34],[202,6,180,4],[202,7,180,5],[202,8,180,6],[202,15,180,13,"error"],[202,20,180,18],[202,22,180,20],[203,8,181,6,"console"],[203,15,181,13],[203,16,181,14,"error"],[203,21,181,19],[203,22,181,20],[203,44,181,42],[203,46,181,44,"error"],[203,51,181,49],[203,52,181,50],[204,8,182,6],[204,14,182,12,"error"],[204,19,182,17],[205,6,183,4],[206,4,184,2],[208,4,186,2],[209,0,187,0],[210,0,188,0],[211,4,189,2],[211,10,189,8,"completeOAuthFlow"],[211,27,189,25,"completeOAuthFlow"],[211,28,189,25],[211,30,189,42],[212,6,190,4],[212,12,190,10,"oauthResult"],[212,23,190,21],[212,26,190,24],[212,32,190,30],[212,36,190,34],[212,37,190,35,"signIn"],[212,43,190,41],[212,44,190,42],[212,45,190,43],[213,6,192,4],[213,10,192,8,"oauthResult"],[213,21,192,19],[213,22,192,20,"type"],[213,26,192,24],[213,31,192,29],[213,40,192,38],[213,44,192,42,"oauthResult"],[213,55,192,53],[213,56,192,54,"idToken"],[213,63,192,61],[213,65,192,63],[214,8,193,6],[214,15,193,13],[214,21,193,19],[214,25,193,23],[214,26,193,24,"authenticateWithBackend"],[214,49,193,47],[214,50,194,8,"oauthResult"],[214,61,194,19],[214,62,194,20,"idToken"],[214,69,194,27],[214,71,195,8,"oauthResult"],[214,82,195,19],[214,83,195,20,"accessToken"],[214,94,196,6],[214,95,196,7],[215,6,197,4],[215,7,197,5],[215,13,197,11],[216,8,198,6],[216,14,198,12],[216,18,198,16,"Error"],[216,23,198,21],[216,24,198,22,"oauthResult"],[216,35,198,33],[216,36,198,34,"error"],[216,41,198,39],[216,45,198,43],[216,64,198,62],[216,65,198,63],[217,6,199,4],[218,4,200,2],[220,4,202,2],[221,0,203,0],[222,0,204,0],[223,4,205,2,"isConfigured"],[223,16,205,14,"isConfigured"],[223,17,205,14],[223,19,205,26],[224,6,206,4],[224,13,206,11],[224,17,206,15],[224,18,206,16,"config"],[224,24,206,22],[224,29,206,27],[224,33,206,31],[224,37,206,35],[224,38,206,36],[224,39,206,37],[224,43,206,41],[224,44,206,42,"config"],[224,50,206,48],[224,51,206,49,"clientId"],[224,59,206,57],[225,4,207,2],[227,4,209,2],[228,0,210,0],[229,0,211,0],[230,4,212,2,"getConfig"],[230,13,212,11,"getConfig"],[230,14,212,11],[230,16,212,40],[231,6,213,4],[231,13,213,11],[231,17,213,15],[231,18,213,16,"config"],[231,24,213,22],[232,4,214,2],[233,2,215,0],[235,2,217,0],[236,2,218,7],[236,8,218,13,"googleOAuthService"],[236,26,218,31],[236,29,218,34],[236,33,218,38,"GoogleOAuthService"],[236,51,218,56],[236,52,218,57],[236,53,218,58],[238,2,220,0],[239,2,221,7],[239,8,221,13,"useGoogleOAuth"],[239,22,221,27],[239,25,221,30,"useGoogleOAuth"],[239,26,221,30],[239,31,221,36],[240,4,222,2],[240,10,222,8,"signIn"],[240,16,222,14],[240,19,222,17],[240,25,222,17,"signIn"],[240,26,222,17],[240,31,222,57],[241,6,223,4],[241,13,223,11],[241,19,223,17,"googleOAuthService"],[241,37,223,35],[241,38,223,36,"signIn"],[241,44,223,42],[241,45,223,43],[241,46,223,44],[242,4,224,2],[242,5,224,3],[243,4,226,2],[243,10,226,8,"authenticateWithBackend"],[243,33,226,31],[243,36,226,34],[243,42,226,34,"authenticateWithBackend"],[243,43,226,41,"idToken"],[243,50,226,56],[243,52,226,58,"accessToken"],[243,63,226,78],[243,68,226,83],[244,6,227,4],[244,13,227,11],[244,19,227,17,"googleOAuthService"],[244,37,227,35],[244,38,227,36,"authenticateWithBackend"],[244,61,227,59],[244,62,227,60,"idToken"],[244,69,227,67],[244,71,227,69,"accessToken"],[244,82,227,80],[244,83,227,81],[245,4,228,2],[245,5,228,3],[246,4,230,2],[246,10,230,8,"completeOAuthFlow"],[246,27,230,25],[246,30,230,28],[246,36,230,28,"completeOAuthFlow"],[246,37,230,28],[246,42,230,40],[247,6,231,4],[247,13,231,11],[247,19,231,17,"googleOAuthService"],[247,37,231,35],[247,38,231,36,"completeOAuthFlow"],[247,55,231,53],[247,56,231,54],[247,57,231,55],[248,4,232,2],[248,5,232,3],[249,4,234,2],[249,11,234,9],[250,6,235,4,"signIn"],[250,12,235,10],[251,6,236,4,"authenticateWithBackend"],[251,29,236,27],[252,6,237,4,"completeOAuthFlow"],[252,23,237,21],[253,6,238,4,"isConfigured"],[253,18,238,16],[253,20,238,18,"googleOAuthService"],[253,38,238,36],[253,39,238,37,"isConfigured"],[253,51,238,49],[253,52,238,50],[253,53,238,51],[254,6,239,4,"initialize"],[254,16,239,14],[254,18,239,16,"googleOAuthService"],[254,36,239,34],[254,37,239,35,"initialize"],[254,47,239,45],[254,48,239,46,"bind"],[254,52,239,50],[254,53,239,51,"googleOAuthService"],[254,71,239,69],[255,4,240,2],[255,5,240,3],[256,2,241,0],[256,3,241,1],[257,2,243,0],[257,6,243,0,"_default"],[257,14,243,0],[257,17,243,15,"googleOAuthService"],[257,35,243,33],[258,0,243,34],[258,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC8B;ECO;GDE;EEK;GF8B;EGK;GHyE;EIK;sDCiB,UD;GJS;EMK;GNW;EOK;GPE;EQK;GRE;CDC;8BUM;iBNC;GME;kCLE;GKE;4BHE;GGE;CVS"},"hasCjsExports":false},"type":"js/module"}]}