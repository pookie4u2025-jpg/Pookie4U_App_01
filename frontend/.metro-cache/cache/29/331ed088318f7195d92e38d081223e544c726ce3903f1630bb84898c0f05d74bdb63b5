{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"expo-auth-session","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"s3shNvVlaQeRdxbAJkHAKmToFDc=","exportNames":["*"],"imports":1}},{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":47,"index":97}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"expo-crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":98},"end":{"line":3,"column":38,"index":136}}],"key":"+Akla+LrhuGGU54C9zXxLPlFUv4=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"googleOAuthService\", {\n    enumerable: true,\n    get: function () {\n      return googleOAuthService;\n    }\n  });\n  Object.defineProperty(exports, \"useGoogleOAuth\", {\n    enumerable: true,\n    get: function () {\n      return useGoogleOAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _expoAuthSession = require(_dependencyMap[1], \"expo-auth-session\");\n  var AuthSession = _interopNamespace(_expoAuthSession);\n  var _expoWebBrowser = require(_dependencyMap[2], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _expoCrypto = require(_dependencyMap[3], \"expo-crypto\");\n  var Crypto = _interopNamespace(_expoCrypto);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[4], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  // Complete the auth session when browser closes\n  WebBrowser.maybeCompleteAuthSession();\n\n  // Google OAuth configuration\n  const GOOGLE_CLIENT_ID = ''; // This will be set when user provides credentials\n  const GOOGLE_CLIENT_SECRET = ''; // This will be set when user provides credentials\n\n  // Discovery endpoint for Google OAuth\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke'\n  };\n  class GoogleOAuthService {\n    config = null;\n    authRequest = null;\n\n    /**\n     * Initialize Google OAuth with configuration\n     */\n    initialize(config) {\n      this.config = config;\n    }\n\n    /**\n     * Create authentication request\n     */\n    createAuthRequest() {\n      if (!this.config) {\n        throw new Error('Google OAuth not initialized. Call initialize() first.');\n      }\n      const redirectUri = AuthSession.makeRedirectUri({\n        useProxy: true,\n        // Use Expo's auth proxy for development\n        preferLocalhost: Platform.default.OS === 'web'\n      });\n      console.log('OAuth Redirect URI:', redirectUri);\n\n      // Create auth request\n      const request = new AuthSession.AuthRequest({\n        clientId: this.config.clientId,\n        scopes: ['openid', 'profile', 'email'],\n        responseType: AuthSession.ResponseType.IdToken,\n        redirectUri,\n        // Use PKCE for security (required for mobile OAuth)\n        codeChallenge: Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, Crypto.getRandomBytes(32).toString(), {\n          encoding: Crypto.CryptoEncoding.BASE64URL\n        }).then(challenge => challenge),\n        codeChallengeMethod: AuthSession.CodeChallengeMethod.S256,\n        // Additional parameters for better UX\n        extraParams: {\n          access_type: 'offline',\n          prompt: 'select_account' // Always show account selector\n        },\n        additionalParameters: {}\n      });\n      return Promise.resolve(request);\n    }\n\n    /**\n     * Start Google OAuth flow\n     */\n    async signIn() {\n      try {\n        if (!this.config) {\n          return {\n            type: 'error',\n            error: 'Google OAuth not initialized. Call initialize() first.'\n          };\n        }\n\n        // Create auth request\n        this.authRequest = await this.createAuthRequest();\n\n        // Start the authentication flow\n        const result = await AuthSession.startAsync({\n          authUrl: await this.authRequest.makeAuthUrlAsync(discovery),\n          returnUrl: this.authRequest.redirectUri\n        });\n        console.log('OAuth Result:', result);\n        if (result.type === 'success') {\n          const {\n            id_token,\n            access_token\n          } = result.params;\n          if (id_token) {\n            return {\n              type: 'success',\n              idToken: id_token,\n              accessToken: access_token\n            };\n          } else {\n            return {\n              type: 'error',\n              error: 'No ID token received from Google'\n            };\n          }\n        } else if (result.type === 'dismiss') {\n          return {\n            type: 'dismiss'\n          };\n        } else {\n          return {\n            type: 'error',\n            error: result.error?.description || 'Authentication failed'\n          };\n        }\n      } catch (error) {\n        console.error('Google OAuth Error:', error);\n        return {\n          type: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n      }\n    }\n\n    /**\n     * Exchange ID token with backend\n     */\n    async authenticateWithBackend(idToken, accessToken) {\n      try {\n        const backendUrl = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        const response = await fetch(`${backendUrl}/api/auth/oauth/google`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            provider: 'google',\n            id_token: idToken,\n            access_token: accessToken\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.detail || 'Backend authentication failed');\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('Backend OAuth Error:', error);\n        throw error;\n      }\n    }\n\n    /**\n     * Complete OAuth flow (sign in + backend authentication)\n     */\n    async completeOAuthFlow() {\n      const oauthResult = await this.signIn();\n      if (oauthResult.type === 'success' && oauthResult.idToken) {\n        return await this.authenticateWithBackend(oauthResult.idToken, oauthResult.accessToken);\n      } else {\n        throw new Error(oauthResult.error || 'OAuth flow failed');\n      }\n    }\n\n    /**\n     * Check if Google OAuth is configured\n     */\n    isConfigured() {\n      return this.config !== null && !!this.config.clientId;\n    }\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n      return this.config;\n    }\n  }\n\n  // Export singleton instance\n  const googleOAuthService = new GoogleOAuthService();\n\n  // Hook for React components\n  const useGoogleOAuth = () => {\n    const signIn = async () => {\n      return await googleOAuthService.signIn();\n    };\n    const authenticateWithBackend = async (idToken, accessToken) => {\n      return await googleOAuthService.authenticateWithBackend(idToken, accessToken);\n    };\n    const completeOAuthFlow = async () => {\n      return await googleOAuthService.completeOAuthFlow();\n    };\n    return {\n      signIn,\n      authenticateWithBackend,\n      completeOAuthFlow,\n      isConfigured: googleOAuthService.isConfigured(),\n      initialize: googleOAuthService.initialize.bind(googleOAuthService)\n    };\n  };\n  var _default = googleOAuthService;\n});","lineCount":248,"map":[[27,2,227,0,"Object"],[27,8,227,0],[27,9,227,0,"defineProperty"],[27,23,227,0],[27,24,227,0,"exports"],[27,31,227,0],[28,4,227,0,"enumerable"],[28,14,227,0],[29,4,227,0,"get"],[29,7,227,0],[29,18,227,0,"get"],[29,19,227,0],[30,6,227,0],[30,13,227,0,"_default"],[30,21,227,0],[31,4,227,0],[32,2,227,0],[33,2,202,0,"Object"],[33,8,202,0],[33,9,202,0,"defineProperty"],[33,23,202,0],[33,24,202,0,"exports"],[33,31,202,0],[34,4,202,0,"enumerable"],[34,14,202,0],[35,4,202,0,"get"],[35,7,202,0],[35,18,202,0,"get"],[35,19,202,0],[36,6,202,0],[36,13,202,0,"googleOAuthService"],[36,31,202,0],[37,4,202,0],[38,2,202,0],[39,2,205,0,"Object"],[39,8,205,0],[39,9,205,0,"defineProperty"],[39,23,205,0],[39,24,205,0,"exports"],[39,31,205,0],[40,4,205,0,"enumerable"],[40,14,205,0],[41,4,205,0,"get"],[41,7,205,0],[41,18,205,0,"get"],[41,19,205,0],[42,6,205,0],[42,13,205,0,"useGoogleOAuth"],[42,27,205,0],[43,4,205,0],[44,2,205,0],[45,2,225,2],[45,6,225,2,"_expoVirtualEnv"],[45,21,225,2],[45,24,225,2,"require"],[45,31,225,2],[45,32,225,2,"_dependencyMap"],[45,46,225,2],[46,2,1,0],[46,6,1,0,"_expoAuthSession"],[46,22,1,0],[46,25,1,0,"require"],[46,32,1,0],[46,33,1,0,"_dependencyMap"],[46,47,1,0],[47,2,1,0],[47,6,1,0,"AuthSession"],[47,17,1,0],[47,20,1,0,"_interopNamespace"],[47,37,1,0],[47,38,1,0,"_expoAuthSession"],[47,54,1,0],[48,2,2,0],[48,6,2,0,"_expoWebBrowser"],[48,21,2,0],[48,24,2,0,"require"],[48,31,2,0],[48,32,2,0,"_dependencyMap"],[48,46,2,0],[49,2,2,0],[49,6,2,0,"WebBrowser"],[49,16,2,0],[49,19,2,0,"_interopNamespace"],[49,36,2,0],[49,37,2,0,"_expoWebBrowser"],[49,52,2,0],[50,2,3,0],[50,6,3,0,"_expoCrypto"],[50,17,3,0],[50,20,3,0,"require"],[50,27,3,0],[50,28,3,0,"_dependencyMap"],[50,42,3,0],[51,2,3,0],[51,6,3,0,"Crypto"],[51,12,3,0],[51,15,3,0,"_interopNamespace"],[51,32,3,0],[51,33,3,0,"_expoCrypto"],[51,44,3,0],[52,2,3,38],[52,6,3,38,"_reactNativeWebDistExportsPlatform"],[52,40,3,38],[52,43,3,38,"require"],[52,50,3,38],[52,51,3,38,"_dependencyMap"],[52,65,3,38],[53,2,3,38],[53,6,3,38,"Platform"],[53,14,3,38],[53,17,3,38,"_interopDefault"],[53,32,3,38],[53,33,3,38,"_reactNativeWebDistExportsPlatform"],[53,67,3,38],[54,2,6,0],[55,2,7,0,"WebBrowser"],[55,12,7,10],[55,13,7,11,"maybeCompleteAuthSession"],[55,37,7,35],[55,38,7,36],[55,39,7,37],[57,2,9,0],[58,2,10,0],[58,8,10,6,"GOOGLE_CLIENT_ID"],[58,24,10,22],[58,27,10,25],[58,29,10,27],[58,30,10,28],[58,31,10,29],[59,2,11,0],[59,8,11,6,"GOOGLE_CLIENT_SECRET"],[59,28,11,26],[59,31,11,29],[59,33,11,31],[59,34,11,32],[59,35,11,33],[61,2,13,0],[62,2,14,0],[62,8,14,6,"discovery"],[62,17,14,15],[62,20,14,18],[63,4,15,2,"authorizationEndpoint"],[63,25,15,23],[63,27,15,25],[63,73,15,71],[64,4,16,2,"tokenEndpoint"],[64,17,16,15],[64,19,16,17],[64,56,16,54],[65,4,17,2,"revocationEndpoint"],[65,22,17,20],[65,24,17,22],[66,2,18,0],[66,3,18,1],[67,2,32,0],[67,8,32,6,"GoogleOAuthService"],[67,26,32,24],[67,27,32,25],[68,4,33,10,"config"],[68,10,33,16],[68,13,33,45],[68,17,33,49],[69,4,34,10,"authRequest"],[69,15,34,21],[69,18,34,56],[69,22,34,60],[71,4,36,2],[72,0,37,0],[73,0,38,0],[74,4,39,2,"initialize"],[74,14,39,12,"initialize"],[74,15,39,13,"config"],[74,21,39,38],[74,23,39,40],[75,6,40,4],[75,10,40,8],[75,11,40,9,"config"],[75,17,40,15],[75,20,40,18,"config"],[75,26,40,24],[76,4,41,2],[78,4,43,2],[79,0,44,0],[80,0,45,0],[81,4,46,10,"createAuthRequest"],[81,21,46,27,"createAuthRequest"],[81,22,46,27],[81,24,46,64],[82,6,47,4],[82,10,47,8],[82,11,47,9],[82,15,47,13],[82,16,47,14,"config"],[82,22,47,20],[82,24,47,22],[83,8,48,6],[83,14,48,12],[83,18,48,16,"Error"],[83,23,48,21],[83,24,48,22],[83,80,48,78],[83,81,48,79],[84,6,49,4],[85,6,51,4],[85,12,51,10,"redirectUri"],[85,23,51,21],[85,26,51,24,"AuthSession"],[85,37,51,35],[85,38,51,36,"makeRedirectUri"],[85,53,51,51],[85,54,51,52],[86,8,52,6,"useProxy"],[86,16,52,14],[86,18,52,16],[86,22,52,20],[87,8,52,22],[88,8,53,6,"preferLocalhost"],[88,23,53,21],[88,25,53,23,"Platform"],[88,33,53,31],[88,34,53,31,"default"],[88,41,53,31],[88,42,53,32,"OS"],[88,44,53,34],[88,49,53,39],[89,6,54,4],[89,7,54,5],[89,8,54,6],[90,6,56,4,"console"],[90,13,56,11],[90,14,56,12,"log"],[90,17,56,15],[90,18,56,16],[90,39,56,37],[90,41,56,39,"redirectUri"],[90,52,56,50],[90,53,56,51],[92,6,58,4],[93,6,59,4],[93,12,59,10,"request"],[93,19,59,17],[93,22,59,20],[93,26,59,24,"AuthSession"],[93,37,59,35],[93,38,59,36,"AuthRequest"],[93,49,59,47],[93,50,59,48],[94,8,60,6,"clientId"],[94,16,60,14],[94,18,60,16],[94,22,60,20],[94,23,60,21,"config"],[94,29,60,27],[94,30,60,28,"clientId"],[94,38,60,36],[95,8,61,6,"scopes"],[95,14,61,12],[95,16,61,14],[95,17,61,15],[95,25,61,23],[95,27,61,25],[95,36,61,34],[95,38,61,36],[95,45,61,43],[95,46,61,44],[96,8,62,6,"responseType"],[96,20,62,18],[96,22,62,20,"AuthSession"],[96,33,62,31],[96,34,62,32,"ResponseType"],[96,46,62,44],[96,47,62,45,"IdToken"],[96,54,62,52],[97,8,63,6,"redirectUri"],[97,19,63,17],[98,8,64,6],[99,8,65,6,"codeChallenge"],[99,21,65,19],[99,23,65,21,"Crypto"],[99,29,65,27],[99,30,65,28,"digestStringAsync"],[99,47,65,45],[99,48,66,8,"Crypto"],[99,54,66,14],[99,55,66,15,"CryptoDigestAlgorithm"],[99,76,66,36],[99,77,66,37,"SHA256"],[99,83,66,43],[99,85,67,8,"Crypto"],[99,91,67,14],[99,92,67,15,"getRandomBytes"],[99,106,67,29],[99,107,67,30],[99,109,67,32],[99,110,67,33],[99,111,67,34,"toString"],[99,119,67,42],[99,120,67,43],[99,121,67,44],[99,123,68,8],[100,10,68,10,"encoding"],[100,18,68,18],[100,20,68,20,"Crypto"],[100,26,68,26],[100,27,68,27,"CryptoEncoding"],[100,41,68,41],[100,42,68,42,"BASE64URL"],[101,8,68,52],[101,9,69,6],[101,10,69,7],[101,11,69,8,"then"],[101,15,69,12],[101,16,69,14,"challenge"],[101,25,69,23],[101,29,69,28,"challenge"],[101,38,69,37],[101,39,69,38],[102,8,70,6,"codeChallengeMethod"],[102,27,70,25],[102,29,70,27,"AuthSession"],[102,40,70,38],[102,41,70,39,"CodeChallengeMethod"],[102,60,70,58],[102,61,70,59,"S256"],[102,65,70,63],[103,8,71,6],[104,8,72,6,"extraParams"],[104,19,72,17],[104,21,72,19],[105,10,73,8,"access_type"],[105,21,73,19],[105,23,73,21],[105,32,73,30],[106,10,74,8,"prompt"],[106,16,74,14],[106,18,74,16],[106,34,74,32],[106,35,74,34],[107,8,75,6],[107,9,75,7],[108,8,76,6,"additionalParameters"],[108,28,76,26],[108,30,76,28],[108,31,76,29],[109,6,77,4],[109,7,77,5],[109,8,77,6],[110,6,79,4],[110,13,79,11,"Promise"],[110,20,79,18],[110,21,79,19,"resolve"],[110,28,79,26],[110,29,79,27,"request"],[110,36,79,34],[110,37,79,35],[111,4,80,2],[113,4,82,2],[114,0,83,0],[115,0,84,0],[116,4,85,2],[116,10,85,8,"signIn"],[116,16,85,14,"signIn"],[116,17,85,14],[116,19,85,45],[117,6,86,4],[117,10,86,8],[118,8,87,6],[118,12,87,10],[118,13,87,11],[118,17,87,15],[118,18,87,16,"config"],[118,24,87,22],[118,26,87,24],[119,10,88,8],[119,17,88,15],[120,12,89,10,"type"],[120,16,89,14],[120,18,89,16],[120,25,89,23],[121,12,90,10,"error"],[121,17,90,15],[121,19,90,17],[122,10,91,8],[122,11,91,9],[123,8,92,6],[125,8,94,6],[126,8,95,6],[126,12,95,10],[126,13,95,11,"authRequest"],[126,24,95,22],[126,27,95,25],[126,33,95,31],[126,37,95,35],[126,38,95,36,"createAuthRequest"],[126,55,95,53],[126,56,95,54],[126,57,95,55],[128,8,97,6],[129,8,98,6],[129,14,98,12,"result"],[129,20,98,18],[129,23,98,21],[129,29,98,27,"AuthSession"],[129,40,98,38],[129,41,98,39,"startAsync"],[129,51,98,49],[129,52,98,50],[130,10,99,8,"authUrl"],[130,17,99,15],[130,19,99,17],[130,25,99,23],[130,29,99,27],[130,30,99,28,"authRequest"],[130,41,99,39],[130,42,99,40,"makeAuthUrlAsync"],[130,58,99,56],[130,59,99,57,"discovery"],[130,68,99,66],[130,69,99,67],[131,10,100,8,"returnUrl"],[131,19,100,17],[131,21,100,19],[131,25,100,23],[131,26,100,24,"authRequest"],[131,37,100,35],[131,38,100,36,"redirectUri"],[132,8,101,6],[132,9,101,7],[132,10,101,8],[133,8,103,6,"console"],[133,15,103,13],[133,16,103,14,"log"],[133,19,103,17],[133,20,103,18],[133,35,103,33],[133,37,103,35,"result"],[133,43,103,41],[133,44,103,42],[134,8,105,6],[134,12,105,10,"result"],[134,18,105,16],[134,19,105,17,"type"],[134,23,105,21],[134,28,105,26],[134,37,105,35],[134,39,105,37],[135,10,106,8],[135,16,106,14],[136,12,106,16,"id_token"],[136,20,106,24],[137,12,106,26,"access_token"],[138,10,106,39],[138,11,106,40],[138,14,106,43,"result"],[138,20,106,49],[138,21,106,50,"params"],[138,27,106,56],[139,10,108,8],[139,14,108,12,"id_token"],[139,22,108,20],[139,24,108,22],[140,12,109,10],[140,19,109,17],[141,14,110,12,"type"],[141,18,110,16],[141,20,110,18],[141,29,110,27],[142,14,111,12,"idToken"],[142,21,111,19],[142,23,111,21,"id_token"],[142,31,111,29],[143,14,112,12,"accessToken"],[143,25,112,23],[143,27,112,25,"access_token"],[144,12,113,10],[144,13,113,11],[145,10,114,8],[145,11,114,9],[145,17,114,15],[146,12,115,10],[146,19,115,17],[147,14,116,12,"type"],[147,18,116,16],[147,20,116,18],[147,27,116,25],[148,14,117,12,"error"],[148,19,117,17],[148,21,117,19],[149,12,118,10],[149,13,118,11],[150,10,119,8],[151,8,120,6],[151,9,120,7],[151,15,120,13],[151,19,120,17,"result"],[151,25,120,23],[151,26,120,24,"type"],[151,30,120,28],[151,35,120,33],[151,44,120,42],[151,46,120,44],[152,10,121,8],[152,17,121,15],[153,12,122,10,"type"],[153,16,122,14],[153,18,122,16],[154,10,123,8],[154,11,123,9],[155,8,124,6],[155,9,124,7],[155,15,124,13],[156,10,125,8],[156,17,125,15],[157,12,126,10,"type"],[157,16,126,14],[157,18,126,16],[157,25,126,23],[158,12,127,10,"error"],[158,17,127,15],[158,19,127,17,"result"],[158,25,127,23],[158,26,127,24,"error"],[158,31,127,29],[158,33,127,31,"description"],[158,44,127,42],[158,48,127,46],[159,10,128,8],[159,11,128,9],[160,8,129,6],[161,6,130,4],[161,7,130,5],[161,8,130,6],[161,15,130,13,"error"],[161,20,130,18],[161,22,130,20],[162,8,131,6,"console"],[162,15,131,13],[162,16,131,14,"error"],[162,21,131,19],[162,22,131,20],[162,43,131,41],[162,45,131,43,"error"],[162,50,131,48],[162,51,131,49],[163,8,132,6],[163,15,132,13],[164,10,133,8,"type"],[164,14,133,12],[164,16,133,14],[164,23,133,21],[165,10,134,8,"error"],[165,15,134,13],[165,17,134,15,"error"],[165,22,134,20],[165,34,134,32,"Error"],[165,39,134,37],[165,42,134,40,"error"],[165,47,134,45],[165,48,134,46,"message"],[165,55,134,53],[165,58,134,56],[166,8,135,6],[166,9,135,7],[167,6,136,4],[168,4,137,2],[170,4,139,2],[171,0,140,0],[172,0,141,0],[173,4,142,2],[173,10,142,8,"authenticateWithBackend"],[173,33,142,31,"authenticateWithBackend"],[173,34,142,32,"idToken"],[173,41,142,47],[173,43,142,49,"accessToken"],[173,54,142,69],[173,56,142,85],[174,6,143,4],[174,10,143,8],[175,8,144,6],[175,14,144,12,"backendUrl"],[175,24,144,22],[175,27,144,25,"_expoVirtualEnv"],[175,42,144,25],[175,43,144,25,"env"],[175,46,144,25],[175,47,144,25,"EXPO_PUBLIC_BACKEND_URL"],[175,70,144,25],[175,74,144,64],[175,76,144,66],[176,8,146,6],[176,14,146,12,"response"],[176,22,146,20],[176,25,146,23],[176,31,146,29,"fetch"],[176,36,146,34],[176,37,146,35],[176,40,146,38,"backendUrl"],[176,50,146,48],[176,74,146,72],[176,76,146,74],[177,10,147,8,"method"],[177,16,147,14],[177,18,147,16],[177,24,147,22],[178,10,148,8,"headers"],[178,17,148,15],[178,19,148,17],[179,12,149,10],[179,26,149,24],[179,28,149,26],[180,10,150,8],[180,11,150,9],[181,10,151,8,"body"],[181,14,151,12],[181,16,151,14,"JSON"],[181,20,151,18],[181,21,151,19,"stringify"],[181,30,151,28],[181,31,151,29],[182,12,152,10,"provider"],[182,20,152,18],[182,22,152,20],[182,30,152,28],[183,12,153,10,"id_token"],[183,20,153,18],[183,22,153,20,"idToken"],[183,29,153,27],[184,12,154,10,"access_token"],[184,24,154,22],[184,26,154,24,"accessToken"],[185,10,155,8],[185,11,155,9],[186,8,156,6],[186,9,156,7],[186,10,156,8],[187,8,158,6],[187,12,158,10],[187,13,158,11,"response"],[187,21,158,19],[187,22,158,20,"ok"],[187,24,158,22],[187,26,158,24],[188,10,159,8],[188,16,159,14,"errorData"],[188,25,159,23],[188,28,159,26],[188,34,159,32,"response"],[188,42,159,40],[188,43,159,41,"json"],[188,47,159,45],[188,48,159,46],[188,49,159,47],[188,50,159,48,"catch"],[188,55,159,53],[188,56,159,54],[188,63,159,61],[188,64,159,62],[188,65,159,63],[188,66,159,64],[188,67,159,65],[189,10,160,8],[189,16,160,14],[189,20,160,18,"Error"],[189,25,160,23],[189,26,160,24,"errorData"],[189,35,160,33],[189,36,160,34,"detail"],[189,42,160,40],[189,46,160,44],[189,77,160,75],[189,78,160,76],[190,8,161,6],[191,8,163,6],[191,15,163,13],[191,21,163,19,"response"],[191,29,163,27],[191,30,163,28,"json"],[191,34,163,32],[191,35,163,33],[191,36,163,34],[192,6,164,4],[192,7,164,5],[192,8,164,6],[192,15,164,13,"error"],[192,20,164,18],[192,22,164,20],[193,8,165,6,"console"],[193,15,165,13],[193,16,165,14,"error"],[193,21,165,19],[193,22,165,20],[193,44,165,42],[193,46,165,44,"error"],[193,51,165,49],[193,52,165,50],[194,8,166,6],[194,14,166,12,"error"],[194,19,166,17],[195,6,167,4],[196,4,168,2],[198,4,170,2],[199,0,171,0],[200,0,172,0],[201,4,173,2],[201,10,173,8,"completeOAuthFlow"],[201,27,173,25,"completeOAuthFlow"],[201,28,173,25],[201,30,173,42],[202,6,174,4],[202,12,174,10,"oauthResult"],[202,23,174,21],[202,26,174,24],[202,32,174,30],[202,36,174,34],[202,37,174,35,"signIn"],[202,43,174,41],[202,44,174,42],[202,45,174,43],[203,6,176,4],[203,10,176,8,"oauthResult"],[203,21,176,19],[203,22,176,20,"type"],[203,26,176,24],[203,31,176,29],[203,40,176,38],[203,44,176,42,"oauthResult"],[203,55,176,53],[203,56,176,54,"idToken"],[203,63,176,61],[203,65,176,63],[204,8,177,6],[204,15,177,13],[204,21,177,19],[204,25,177,23],[204,26,177,24,"authenticateWithBackend"],[204,49,177,47],[204,50,178,8,"oauthResult"],[204,61,178,19],[204,62,178,20,"idToken"],[204,69,178,27],[204,71,179,8,"oauthResult"],[204,82,179,19],[204,83,179,20,"accessToken"],[204,94,180,6],[204,95,180,7],[205,6,181,4],[205,7,181,5],[205,13,181,11],[206,8,182,6],[206,14,182,12],[206,18,182,16,"Error"],[206,23,182,21],[206,24,182,22,"oauthResult"],[206,35,182,33],[206,36,182,34,"error"],[206,41,182,39],[206,45,182,43],[206,64,182,62],[206,65,182,63],[207,6,183,4],[208,4,184,2],[210,4,186,2],[211,0,187,0],[212,0,188,0],[213,4,189,2,"isConfigured"],[213,16,189,14,"isConfigured"],[213,17,189,14],[213,19,189,26],[214,6,190,4],[214,13,190,11],[214,17,190,15],[214,18,190,16,"config"],[214,24,190,22],[214,29,190,27],[214,33,190,31],[214,37,190,35],[214,38,190,36],[214,39,190,37],[214,43,190,41],[214,44,190,42,"config"],[214,50,190,48],[214,51,190,49,"clientId"],[214,59,190,57],[215,4,191,2],[217,4,193,2],[218,0,194,0],[219,0,195,0],[220,4,196,2,"getConfig"],[220,13,196,11,"getConfig"],[220,14,196,11],[220,16,196,40],[221,6,197,4],[221,13,197,11],[221,17,197,15],[221,18,197,16,"config"],[221,24,197,22],[222,4,198,2],[223,2,199,0],[225,2,201,0],[226,2,202,7],[226,8,202,13,"googleOAuthService"],[226,26,202,31],[226,29,202,34],[226,33,202,38,"GoogleOAuthService"],[226,51,202,56],[226,52,202,57],[226,53,202,58],[228,2,204,0],[229,2,205,7],[229,8,205,13,"useGoogleOAuth"],[229,22,205,27],[229,25,205,30,"useGoogleOAuth"],[229,26,205,30],[229,31,205,36],[230,4,206,2],[230,10,206,8,"signIn"],[230,16,206,14],[230,19,206,17],[230,25,206,17,"signIn"],[230,26,206,17],[230,31,206,57],[231,6,207,4],[231,13,207,11],[231,19,207,17,"googleOAuthService"],[231,37,207,35],[231,38,207,36,"signIn"],[231,44,207,42],[231,45,207,43],[231,46,207,44],[232,4,208,2],[232,5,208,3],[233,4,210,2],[233,10,210,8,"authenticateWithBackend"],[233,33,210,31],[233,36,210,34],[233,42,210,34,"authenticateWithBackend"],[233,43,210,41,"idToken"],[233,50,210,56],[233,52,210,58,"accessToken"],[233,63,210,78],[233,68,210,83],[234,6,211,4],[234,13,211,11],[234,19,211,17,"googleOAuthService"],[234,37,211,35],[234,38,211,36,"authenticateWithBackend"],[234,61,211,59],[234,62,211,60,"idToken"],[234,69,211,67],[234,71,211,69,"accessToken"],[234,82,211,80],[234,83,211,81],[235,4,212,2],[235,5,212,3],[236,4,214,2],[236,10,214,8,"completeOAuthFlow"],[236,27,214,25],[236,30,214,28],[236,36,214,28,"completeOAuthFlow"],[236,37,214,28],[236,42,214,40],[237,6,215,4],[237,13,215,11],[237,19,215,17,"googleOAuthService"],[237,37,215,35],[237,38,215,36,"completeOAuthFlow"],[237,55,215,53],[237,56,215,54],[237,57,215,55],[238,4,216,2],[238,5,216,3],[239,4,218,2],[239,11,218,9],[240,6,219,4,"signIn"],[240,12,219,10],[241,6,220,4,"authenticateWithBackend"],[241,29,220,27],[242,6,221,4,"completeOAuthFlow"],[242,23,221,21],[243,6,222,4,"isConfigured"],[243,18,222,16],[243,20,222,18,"googleOAuthService"],[243,38,222,36],[243,39,222,37,"isConfigured"],[243,51,222,49],[243,52,222,50],[243,53,222,51],[244,6,223,4,"initialize"],[244,16,223,14],[244,18,223,16,"googleOAuthService"],[244,36,223,34],[244,37,223,35,"initialize"],[244,47,223,45],[244,48,223,46,"bind"],[244,52,223,50],[244,53,223,51,"googleOAuthService"],[244,71,223,69],[245,4,224,2],[245,5,224,3],[246,2,225,0],[246,3,225,1],[247,2,227,0],[247,6,227,0,"_default"],[247,14,227,0],[247,17,227,15,"googleOAuthService"],[247,35,227,33],[248,0,227,34],[248,3]],"functionMap":{"names":["<global>","GoogleOAuthService","initialize","createAuthRequest","Crypto.digestStringAsync.then$argument_0","signIn","authenticateWithBackend","response.json._catch$argument_0","completeOAuthFlow","isConfigured","getConfig","useGoogleOAuth"],"mappings":"AAA;AC+B;ECO;GDE;EEK;aCuB,wBD;GFW;EIK;GJoD;EKK;sDCiB,UD;GLS;EOK;GPW;EQK;GRE;ESK;GTE;CDC;8BWM;iBNC;GME;kCLE;GKE;4BHE;GGE;CXS"},"hasCjsExports":false},"type":"js/module"}]}