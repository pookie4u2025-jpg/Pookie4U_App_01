{"dependencies":[{"name":"../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":47,"index":62}}],"key":"IDJz4HWb8BkS18xB4AVSbpQcs+Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ERROR_MESSAGES\", {\n    enumerable: true,\n    get: function () {\n      return ERROR_MESSAGES;\n    }\n  });\n  Object.defineProperty(exports, \"StepsEasing\", {\n    enumerable: true,\n    get: function () {\n      return StepsEasing;\n    }\n  });\n  var _common = require(_dependencyMap[0], \"../../common\");\n  const ERROR_MESSAGES = {\n    invalidStepsNumber: stepsNumber => `Steps easing function accepts only positive integers as numbers of steps, ${stepsNumber} isn't a one`\n  };\n  class StepsEasing {\n    static easingName = 'steps';\n    constructor(stepsNumber, modifier = 'jump-end') {\n      if (stepsNumber <= 0 || stepsNumber % 1 !== 0) {\n        throw new _common.ReanimatedError(ERROR_MESSAGES.invalidStepsNumber(stepsNumber));\n      }\n      this.stepsNumber = stepsNumber;\n      this.modifier = modifier;\n    }\n    toString() {\n      return `${StepsEasing.easingName}(${this.stepsNumber}, ${this.modifier})`;\n    }\n    normalize() {\n      switch (this.modifier) {\n        case 'jump-start':\n        case 'start':\n          return this.jumpStart();\n        case 'jump-end':\n        case 'end':\n          return this.jumpEnd();\n        case 'jump-both':\n          return this.jumpBoth();\n        case 'jump-none':\n        default:\n          if (this.stepsNumber === 1) {\n            // CSS animations standard returns here linear easing\n            return 'linear';\n          }\n          return this.jumpNone();\n      }\n    }\n    jumpNone() {\n      const points = [];\n      const div = this.stepsNumber - 1;\n      for (let i = 0; i < this.stepsNumber; i++) {\n        points.push({\n          x: i / this.stepsNumber,\n          y: i / div\n        });\n      }\n      return this.withName(points);\n    }\n    jumpStart() {\n      const points = [];\n      for (let i = 0; i < this.stepsNumber; i++) {\n        points.push({\n          x: i / this.stepsNumber,\n          y: (i + 1) / this.stepsNumber\n        });\n      }\n      return this.withName(points);\n    }\n    jumpEnd() {\n      const points = [];\n      for (let i = 0; i < this.stepsNumber; i++) {\n        points.push({\n          x: i / this.stepsNumber,\n          y: i / this.stepsNumber\n        });\n      }\n      // Final jump\n      points.push({\n        x: 1,\n        y: 1\n      });\n      return this.withName(points);\n    }\n    jumpBoth() {\n      const points = [];\n      const div = this.stepsNumber + 1;\n      for (let i = 0; i < this.stepsNumber; i++) {\n        points.push({\n          x: i / this.stepsNumber,\n          y: (i + 1) / div\n        });\n      }\n      // Final jump\n      points.push({\n        x: 1,\n        y: 1\n      });\n      return this.withName(points);\n    }\n    withName(points) {\n      return {\n        name: StepsEasing.easingName,\n        points\n      };\n    }\n  }\n});","lineCount":113,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"enumerable"],[8,14,4,0],[9,4,4,0,"get"],[9,7,4,0],[9,18,4,0,"get"],[9,19,4,0],[10,6,4,0],[10,13,4,0,"ERROR_MESSAGES"],[10,27,4,0],[11,4,4,0],[12,2,4,0],[13,2,7,0,"Object"],[13,8,7,0],[13,9,7,0,"defineProperty"],[13,23,7,0],[13,24,7,0,"exports"],[13,31,7,0],[14,4,7,0,"enumerable"],[14,14,7,0],[15,4,7,0,"get"],[15,7,7,0],[15,18,7,0,"get"],[15,19,7,0],[16,6,7,0],[16,13,7,0,"StepsEasing"],[16,24,7,0],[17,4,7,0],[18,2,7,0],[19,2,3,0],[19,6,3,0,"_common"],[19,13,3,0],[19,16,3,0,"require"],[19,23,3,0],[19,24,3,0,"_dependencyMap"],[19,38,3,0],[20,2,4,7],[20,8,4,13,"ERROR_MESSAGES"],[20,22,4,27],[20,25,4,30],[21,4,5,2,"invalidStepsNumber"],[21,22,5,20],[21,24,5,22,"stepsNumber"],[21,35,5,33],[21,39,5,37],[21,116,5,114,"stepsNumber"],[21,127,5,125],[22,2,6,0],[22,3,6,1],[23,2,7,7],[23,8,7,13,"StepsEasing"],[23,19,7,24],[23,20,7,25],[24,4,8,2],[24,11,8,9,"easingName"],[24,21,8,19],[24,24,8,22],[24,31,8,29],[25,4,9,2,"constructor"],[25,15,9,13,"constructor"],[25,16,9,14,"stepsNumber"],[25,27,9,25],[25,29,9,27,"modifier"],[25,37,9,35],[25,40,9,38],[25,50,9,48],[25,52,9,50],[26,6,10,4],[26,10,10,8,"stepsNumber"],[26,21,10,19],[26,25,10,23],[26,26,10,24],[26,30,10,28,"stepsNumber"],[26,41,10,39],[26,44,10,42],[26,45,10,43],[26,50,10,48],[26,51,10,49],[26,53,10,51],[27,8,11,6],[27,14,11,12],[27,18,11,16,"ReanimatedError"],[27,25,11,31],[27,26,11,31,"ReanimatedError"],[27,41,11,31],[27,42,11,32,"ERROR_MESSAGES"],[27,56,11,46],[27,57,11,47,"invalidStepsNumber"],[27,75,11,65],[27,76,11,66,"stepsNumber"],[27,87,11,77],[27,88,11,78],[27,89,11,79],[28,6,12,4],[29,6,13,4],[29,10,13,8],[29,11,13,9,"stepsNumber"],[29,22,13,20],[29,25,13,23,"stepsNumber"],[29,36,13,34],[30,6,14,4],[30,10,14,8],[30,11,14,9,"modifier"],[30,19,14,17],[30,22,14,20,"modifier"],[30,30,14,28],[31,4,15,2],[32,4,16,2,"toString"],[32,12,16,10,"toString"],[32,13,16,10],[32,15,16,13],[33,6,17,4],[33,13,17,11],[33,16,17,14,"StepsEasing"],[33,27,17,25],[33,28,17,26,"easingName"],[33,38,17,36],[33,42,17,40],[33,46,17,44],[33,47,17,45,"stepsNumber"],[33,58,17,56],[33,63,17,61],[33,67,17,65],[33,68,17,66,"modifier"],[33,76,17,74],[33,79,17,77],[34,4,18,2],[35,4,19,2,"normalize"],[35,13,19,11,"normalize"],[35,14,19,11],[35,16,19,14],[36,6,20,4],[36,14,20,12],[36,18,20,16],[36,19,20,17,"modifier"],[36,27,20,25],[37,8,21,6],[37,13,21,11],[37,25,21,23],[38,8,22,6],[38,13,22,11],[38,20,22,18],[39,10,23,8],[39,17,23,15],[39,21,23,19],[39,22,23,20,"jumpStart"],[39,31,23,29],[39,32,23,30],[39,33,23,31],[40,8,24,6],[40,13,24,11],[40,23,24,21],[41,8,25,6],[41,13,25,11],[41,18,25,16],[42,10,26,8],[42,17,26,15],[42,21,26,19],[42,22,26,20,"jumpEnd"],[42,29,26,27],[42,30,26,28],[42,31,26,29],[43,8,27,6],[43,13,27,11],[43,24,27,22],[44,10,28,8],[44,17,28,15],[44,21,28,19],[44,22,28,20,"jumpBoth"],[44,30,28,28],[44,31,28,29],[44,32,28,30],[45,8,29,6],[45,13,29,11],[45,24,29,22],[46,8,30,6],[47,10,31,8],[47,14,31,12],[47,18,31,16],[47,19,31,17,"stepsNumber"],[47,30,31,28],[47,35,31,33],[47,36,31,34],[47,38,31,36],[48,12,32,10],[49,12,33,10],[49,19,33,17],[49,27,33,25],[50,10,34,8],[51,10,35,8],[51,17,35,15],[51,21,35,19],[51,22,35,20,"jumpNone"],[51,30,35,28],[51,31,35,29],[51,32,35,30],[52,6,36,4],[53,4,37,2],[54,4,38,2,"jumpNone"],[54,12,38,10,"jumpNone"],[54,13,38,10],[54,15,38,13],[55,6,39,4],[55,12,39,10,"points"],[55,18,39,16],[55,21,39,19],[55,23,39,21],[56,6,40,4],[56,12,40,10,"div"],[56,15,40,13],[56,18,40,16],[56,22,40,20],[56,23,40,21,"stepsNumber"],[56,34,40,32],[56,37,40,35],[56,38,40,36],[57,6,41,4],[57,11,41,9],[57,15,41,13,"i"],[57,16,41,14],[57,19,41,17],[57,20,41,18],[57,22,41,20,"i"],[57,23,41,21],[57,26,41,24],[57,30,41,28],[57,31,41,29,"stepsNumber"],[57,42,41,40],[57,44,41,42,"i"],[57,45,41,43],[57,47,41,45],[57,49,41,47],[58,8,42,6,"points"],[58,14,42,12],[58,15,42,13,"push"],[58,19,42,17],[58,20,42,18],[59,10,43,8,"x"],[59,11,43,9],[59,13,43,11,"i"],[59,14,43,12],[59,17,43,15],[59,21,43,19],[59,22,43,20,"stepsNumber"],[59,33,43,31],[60,10,44,8,"y"],[60,11,44,9],[60,13,44,11,"i"],[60,14,44,12],[60,17,44,15,"div"],[61,8,45,6],[61,9,45,7],[61,10,45,8],[62,6,46,4],[63,6,47,4],[63,13,47,11],[63,17,47,15],[63,18,47,16,"withName"],[63,26,47,24],[63,27,47,25,"points"],[63,33,47,31],[63,34,47,32],[64,4,48,2],[65,4,49,2,"jumpStart"],[65,13,49,11,"jumpStart"],[65,14,49,11],[65,16,49,14],[66,6,50,4],[66,12,50,10,"points"],[66,18,50,16],[66,21,50,19],[66,23,50,21],[67,6,51,4],[67,11,51,9],[67,15,51,13,"i"],[67,16,51,14],[67,19,51,17],[67,20,51,18],[67,22,51,20,"i"],[67,23,51,21],[67,26,51,24],[67,30,51,28],[67,31,51,29,"stepsNumber"],[67,42,51,40],[67,44,51,42,"i"],[67,45,51,43],[67,47,51,45],[67,49,51,47],[68,8,52,6,"points"],[68,14,52,12],[68,15,52,13,"push"],[68,19,52,17],[68,20,52,18],[69,10,53,8,"x"],[69,11,53,9],[69,13,53,11,"i"],[69,14,53,12],[69,17,53,15],[69,21,53,19],[69,22,53,20,"stepsNumber"],[69,33,53,31],[70,10,54,8,"y"],[70,11,54,9],[70,13,54,11],[70,14,54,12,"i"],[70,15,54,13],[70,18,54,16],[70,19,54,17],[70,23,54,21],[70,27,54,25],[70,28,54,26,"stepsNumber"],[71,8,55,6],[71,9,55,7],[71,10,55,8],[72,6,56,4],[73,6,57,4],[73,13,57,11],[73,17,57,15],[73,18,57,16,"withName"],[73,26,57,24],[73,27,57,25,"points"],[73,33,57,31],[73,34,57,32],[74,4,58,2],[75,4,59,2,"jumpEnd"],[75,11,59,9,"jumpEnd"],[75,12,59,9],[75,14,59,12],[76,6,60,4],[76,12,60,10,"points"],[76,18,60,16],[76,21,60,19],[76,23,60,21],[77,6,61,4],[77,11,61,9],[77,15,61,13,"i"],[77,16,61,14],[77,19,61,17],[77,20,61,18],[77,22,61,20,"i"],[77,23,61,21],[77,26,61,24],[77,30,61,28],[77,31,61,29,"stepsNumber"],[77,42,61,40],[77,44,61,42,"i"],[77,45,61,43],[77,47,61,45],[77,49,61,47],[78,8,62,6,"points"],[78,14,62,12],[78,15,62,13,"push"],[78,19,62,17],[78,20,62,18],[79,10,63,8,"x"],[79,11,63,9],[79,13,63,11,"i"],[79,14,63,12],[79,17,63,15],[79,21,63,19],[79,22,63,20,"stepsNumber"],[79,33,63,31],[80,10,64,8,"y"],[80,11,64,9],[80,13,64,11,"i"],[80,14,64,12],[80,17,64,15],[80,21,64,19],[80,22,64,20,"stepsNumber"],[81,8,65,6],[81,9,65,7],[81,10,65,8],[82,6,66,4],[83,6,67,4],[84,6,68,4,"points"],[84,12,68,10],[84,13,68,11,"push"],[84,17,68,15],[84,18,68,16],[85,8,69,6,"x"],[85,9,69,7],[85,11,69,9],[85,12,69,10],[86,8,70,6,"y"],[86,9,70,7],[86,11,70,9],[87,6,71,4],[87,7,71,5],[87,8,71,6],[88,6,72,4],[88,13,72,11],[88,17,72,15],[88,18,72,16,"withName"],[88,26,72,24],[88,27,72,25,"points"],[88,33,72,31],[88,34,72,32],[89,4,73,2],[90,4,74,2,"jumpBoth"],[90,12,74,10,"jumpBoth"],[90,13,74,10],[90,15,74,13],[91,6,75,4],[91,12,75,10,"points"],[91,18,75,16],[91,21,75,19],[91,23,75,21],[92,6,76,4],[92,12,76,10,"div"],[92,15,76,13],[92,18,76,16],[92,22,76,20],[92,23,76,21,"stepsNumber"],[92,34,76,32],[92,37,76,35],[92,38,76,36],[93,6,77,4],[93,11,77,9],[93,15,77,13,"i"],[93,16,77,14],[93,19,77,17],[93,20,77,18],[93,22,77,20,"i"],[93,23,77,21],[93,26,77,24],[93,30,77,28],[93,31,77,29,"stepsNumber"],[93,42,77,40],[93,44,77,42,"i"],[93,45,77,43],[93,47,77,45],[93,49,77,47],[94,8,78,6,"points"],[94,14,78,12],[94,15,78,13,"push"],[94,19,78,17],[94,20,78,18],[95,10,79,8,"x"],[95,11,79,9],[95,13,79,11,"i"],[95,14,79,12],[95,17,79,15],[95,21,79,19],[95,22,79,20,"stepsNumber"],[95,33,79,31],[96,10,80,8,"y"],[96,11,80,9],[96,13,80,11],[96,14,80,12,"i"],[96,15,80,13],[96,18,80,16],[96,19,80,17],[96,23,80,21,"div"],[97,8,81,6],[97,9,81,7],[97,10,81,8],[98,6,82,4],[99,6,83,4],[100,6,84,4,"points"],[100,12,84,10],[100,13,84,11,"push"],[100,17,84,15],[100,18,84,16],[101,8,85,6,"x"],[101,9,85,7],[101,11,85,9],[101,12,85,10],[102,8,86,6,"y"],[102,9,86,7],[102,11,86,9],[103,6,87,4],[103,7,87,5],[103,8,87,6],[104,6,88,4],[104,13,88,11],[104,17,88,15],[104,18,88,16,"withName"],[104,26,88,24],[104,27,88,25,"points"],[104,33,88,31],[104,34,88,32],[105,4,89,2],[106,4,90,2,"withName"],[106,12,90,10,"withName"],[106,13,90,11,"points"],[106,19,90,17],[106,21,90,19],[107,6,91,4],[107,13,91,11],[108,8,92,6,"name"],[108,12,92,10],[108,14,92,12,"StepsEasing"],[108,25,92,23],[108,26,92,24,"easingName"],[108,36,92,34],[109,8,93,6,"points"],[110,6,94,4],[110,7,94,5],[111,4,95,2],[112,2,96,0],[113,0,96,1],[113,3]],"functionMap":{"names":["<global>","ERROR_MESSAGES.invalidStepsNumber","StepsEasing","StepsEasing#constructor","StepsEasing#toString","StepsEasing#normalize","StepsEasing#jumpNone","StepsEasing#jumpStart","StepsEasing#jumpEnd","StepsEasing#jumpBoth","StepsEasing#withName"],"mappings":"AAA;sBCI,qHD;OEE;ECE;GDM;EEC;GFE;EGC;GHkB;EIC;GJU;EKC;GLS;EMC;GNc;EOC;GPe;EQC;GRK;CFC"},"hasCjsExports":false},"type":"js/module"}]}