{"dependencies":[{"name":"../platformFunctions/findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":69,"index":84}}],"key":"1isdGYORv8bBV0ZCFH0po00eajE=","exportNames":["*"],"imports":1}},{"name":"../WorkletEventHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":85},"end":{"line":4,"column":61,"index":146}}],"key":"588C2ttWmFfH+Cx2zV7Dtb/CLj8=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":147},"end":{"line":5,"column":30,"index":177}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"NativeEventsManager\", {\n    enumerable: true,\n    get: function () {\n      return NativeEventsManager;\n    }\n  });\n  var _platformFunctionsFindNodeHandle = require(_dependencyMap[0], \"../platformFunctions/findNodeHandle\");\n  var _WorkletEventHandler = require(_dependencyMap[1], \"../WorkletEventHandler\");\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  class NativeEventsManager {\n    #managedComponent;\n    #componentOptions;\n    #eventViewTag = -1;\n    constructor(component, options) {\n      this.#managedComponent = component;\n      this.#componentOptions = options;\n      this.#eventViewTag = this.getEventViewTag();\n    }\n    attachEvents() {\n      executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n        handler.registerForEvents(this.#eventViewTag, key);\n      });\n    }\n    detachEvents() {\n      executeForEachEventHandler(this.#managedComponent.props, (_key, handler) => {\n        handler.unregisterFromEvents(this.#eventViewTag);\n      });\n    }\n    updateEvents(prevProps) {\n      const computedEventTag = this.getEventViewTag(true);\n      // If the event view tag changes, we need to completely re-mount all events\n      if (this.#eventViewTag !== computedEventTag) {\n        // Remove all bindings from previous props that ran on the old viewTag\n        executeForEachEventHandler(prevProps, (_key, handler) => {\n          handler.unregisterFromEvents(this.#eventViewTag);\n        });\n        // We don't need to unregister from current (new) props, because their events weren't registered yet\n        // Replace the view tag\n        this.#eventViewTag = computedEventTag;\n        // Attach the events with a new viewTag\n        this.attachEvents();\n        return;\n      }\n      executeForEachEventHandler(prevProps, (key, prevHandler) => {\n        const newProp = this.#managedComponent.props[key];\n        if (!newProp) {\n          // Prop got deleted\n          prevHandler.unregisterFromEvents(this.#eventViewTag);\n        } else if (isWorkletEventHandler(newProp) && newProp.workletEventHandler !== prevHandler) {\n          // Prop got changed\n          prevHandler.unregisterFromEvents(this.#eventViewTag);\n          newProp.workletEventHandler.registerForEvents(this.#eventViewTag);\n        }\n      });\n      executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n        if (!prevProps[key]) {\n          // Prop got added\n          handler.registerForEvents(this.#eventViewTag);\n        }\n      });\n    }\n    getEventViewTag(componentUpdate = false) {\n      // Get the tag for registering events - since the event emitting view can be nested inside the main component\n      const componentAnimatedRef = this.#managedComponent._componentRef;\n      if (componentAnimatedRef?.getScrollableNode) {\n        /*\n          In most cases, getScrollableNode() returns a view tag, and findNodeHandle is not required. \n          However, to cover more exotic list cases, we will continue to use findNodeHandle \n          for consistency. For numerical values, findNodeHandle should return the value immediately, \n          as documented here: https://github.com/facebook/react/blob/91061073d57783c061889ac6720ef1ab7f0c2149/packages/react-native-renderer/src/ReactNativePublicCompat.js#L113\n        */\n        const scrollableNode = componentAnimatedRef.getScrollableNode();\n        if (typeof scrollableNode === 'number') {\n          return scrollableNode;\n        }\n        return (0, _platformFunctionsFindNodeHandle.findNodeHandle)(scrollableNode) ?? -1;\n      }\n      if (this.#componentOptions?.setNativeProps) {\n        // This case ensures backward compatibility with components that\n        // have their own setNativeProps method passed as an option.\n        return (0, _platformFunctionsFindNodeHandle.findNodeHandle)(this.#managedComponent) ?? -1;\n      }\n      if (!componentUpdate) {\n        // On the first render of a component, we may already receive a resolved view tag.\n        return this.#managedComponent.getComponentViewTag();\n      }\n      if (componentAnimatedRef?.__nativeTag) {\n        return componentAnimatedRef.__nativeTag ?? -1;\n      }\n      /*\n        When a component is updated, a child could potentially change and have a different \n        view tag. This can occur with a GestureDetector component.\n      */\n      return (0, _platformFunctionsFindNodeHandle.findNodeHandle)(componentAnimatedRef) ?? -1;\n    }\n  }\n  function isWorkletEventHandler(prop) {\n    return (0, _utils.has)('workletEventHandler', prop) && prop.workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler;\n  }\n  function executeForEachEventHandler(props, callback) {\n    for (const key in props) {\n      const prop = props[key];\n      if (isWorkletEventHandler(prop)) {\n        callback(key, prop.workletEventHandler);\n      }\n    }\n  }\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"NativeEventsManager"],[10,32,6,0],[11,4,6,0],[12,2,6,0],[13,2,3,0],[13,6,3,0,"_platformFunctionsFindNodeHandle"],[13,38,3,0],[13,41,3,0,"require"],[13,48,3,0],[13,49,3,0,"_dependencyMap"],[13,63,3,0],[14,2,4,0],[14,6,4,0,"_WorkletEventHandler"],[14,26,4,0],[14,29,4,0,"require"],[14,36,4,0],[14,37,4,0,"_dependencyMap"],[14,51,4,0],[15,2,5,0],[15,6,5,0,"_utils"],[15,12,5,0],[15,15,5,0,"require"],[15,22,5,0],[15,23,5,0,"_dependencyMap"],[15,37,5,0],[16,2,6,7],[16,8,6,13,"NativeEventsManager"],[16,27,6,32],[16,28,6,33],[17,4,7,2],[17,5,7,3,"managedComponent"],[17,21,7,19],[18,4,8,2],[18,5,8,3,"componentOptions"],[18,21,8,19],[19,4,9,2],[19,5,9,3,"eventViewTag"],[19,17,9,15],[19,20,9,18],[19,21,9,19],[19,22,9,20],[20,4,10,2,"constructor"],[20,15,10,13,"constructor"],[20,16,10,14,"component"],[20,25,10,23],[20,27,10,25,"options"],[20,34,10,32],[20,36,10,34],[21,6,11,4],[21,10,11,8],[21,11,11,9],[21,12,11,10,"managedComponent"],[21,28,11,26],[21,31,11,29,"component"],[21,40,11,38],[22,6,12,4],[22,10,12,8],[22,11,12,9],[22,12,12,10,"componentOptions"],[22,28,12,26],[22,31,12,29,"options"],[22,38,12,36],[23,6,13,4],[23,10,13,8],[23,11,13,9],[23,12,13,10,"eventViewTag"],[23,24,13,22],[23,27,13,25],[23,31,13,29],[23,32,13,30,"getEventViewTag"],[23,47,13,45],[23,48,13,46],[23,49,13,47],[24,4,14,2],[25,4,15,2,"attachEvents"],[25,16,15,14,"attachEvents"],[25,17,15,14],[25,19,15,17],[26,6,16,4,"executeForEachEventHandler"],[26,32,16,30],[26,33,16,31],[26,37,16,35],[26,38,16,36],[26,39,16,37,"managedComponent"],[26,55,16,53],[26,56,16,54,"props"],[26,61,16,59],[26,63,16,61],[26,64,16,62,"key"],[26,67,16,65],[26,69,16,67,"handler"],[26,76,16,74],[26,81,16,79],[27,8,17,6,"handler"],[27,15,17,13],[27,16,17,14,"registerForEvents"],[27,33,17,31],[27,34,17,32],[27,38,17,36],[27,39,17,37],[27,40,17,38,"eventViewTag"],[27,52,17,50],[27,54,17,52,"key"],[27,57,17,55],[27,58,17,56],[28,6,18,4],[28,7,18,5],[28,8,18,6],[29,4,19,2],[30,4,20,2,"detachEvents"],[30,16,20,14,"detachEvents"],[30,17,20,14],[30,19,20,17],[31,6,21,4,"executeForEachEventHandler"],[31,32,21,30],[31,33,21,31],[31,37,21,35],[31,38,21,36],[31,39,21,37,"managedComponent"],[31,55,21,53],[31,56,21,54,"props"],[31,61,21,59],[31,63,21,61],[31,64,21,62,"_key"],[31,68,21,66],[31,70,21,68,"handler"],[31,77,21,75],[31,82,21,80],[32,8,22,6,"handler"],[32,15,22,13],[32,16,22,14,"unregisterFromEvents"],[32,36,22,34],[32,37,22,35],[32,41,22,39],[32,42,22,40],[32,43,22,41,"eventViewTag"],[32,55,22,53],[32,56,22,54],[33,6,23,4],[33,7,23,5],[33,8,23,6],[34,4,24,2],[35,4,25,2,"updateEvents"],[35,16,25,14,"updateEvents"],[35,17,25,15,"prevProps"],[35,26,25,24],[35,28,25,26],[36,6,26,4],[36,12,26,10,"computedEventTag"],[36,28,26,26],[36,31,26,29],[36,35,26,33],[36,36,26,34,"getEventViewTag"],[36,51,26,49],[36,52,26,50],[36,56,26,54],[36,57,26,55],[37,6,27,4],[38,6,28,4],[38,10,28,8],[38,14,28,12],[38,15,28,13],[38,16,28,14,"eventViewTag"],[38,28,28,26],[38,33,28,31,"computedEventTag"],[38,49,28,47],[38,51,28,49],[39,8,29,6],[40,8,30,6,"executeForEachEventHandler"],[40,34,30,32],[40,35,30,33,"prevProps"],[40,44,30,42],[40,46,30,44],[40,47,30,45,"_key"],[40,51,30,49],[40,53,30,51,"handler"],[40,60,30,58],[40,65,30,63],[41,10,31,8,"handler"],[41,17,31,15],[41,18,31,16,"unregisterFromEvents"],[41,38,31,36],[41,39,31,37],[41,43,31,41],[41,44,31,42],[41,45,31,43,"eventViewTag"],[41,57,31,55],[41,58,31,56],[42,8,32,6],[42,9,32,7],[42,10,32,8],[43,8,33,6],[44,8,34,6],[45,8,35,6],[45,12,35,10],[45,13,35,11],[45,14,35,12,"eventViewTag"],[45,26,35,24],[45,29,35,27,"computedEventTag"],[45,45,35,43],[46,8,36,6],[47,8,37,6],[47,12,37,10],[47,13,37,11,"attachEvents"],[47,25,37,23],[47,26,37,24],[47,27,37,25],[48,8,38,6],[49,6,39,4],[50,6,40,4,"executeForEachEventHandler"],[50,32,40,30],[50,33,40,31,"prevProps"],[50,42,40,40],[50,44,40,42],[50,45,40,43,"key"],[50,48,40,46],[50,50,40,48,"prevHandler"],[50,61,40,59],[50,66,40,64],[51,8,41,6],[51,14,41,12,"newProp"],[51,21,41,19],[51,24,41,22],[51,28,41,26],[51,29,41,27],[51,30,41,28,"managedComponent"],[51,46,41,44],[51,47,41,45,"props"],[51,52,41,50],[51,53,41,51,"key"],[51,56,41,54],[51,57,41,55],[52,8,42,6],[52,12,42,10],[52,13,42,11,"newProp"],[52,20,42,18],[52,22,42,20],[53,10,43,8],[54,10,44,8,"prevHandler"],[54,21,44,19],[54,22,44,20,"unregisterFromEvents"],[54,42,44,40],[54,43,44,41],[54,47,44,45],[54,48,44,46],[54,49,44,47,"eventViewTag"],[54,61,44,59],[54,62,44,60],[55,8,45,6],[55,9,45,7],[55,15,45,13],[55,19,45,17,"isWorkletEventHandler"],[55,40,45,38],[55,41,45,39,"newProp"],[55,48,45,46],[55,49,45,47],[55,53,45,51,"newProp"],[55,60,45,58],[55,61,45,59,"workletEventHandler"],[55,80,45,78],[55,85,45,83,"prevHandler"],[55,96,45,94],[55,98,45,96],[56,10,46,8],[57,10,47,8,"prevHandler"],[57,21,47,19],[57,22,47,20,"unregisterFromEvents"],[57,42,47,40],[57,43,47,41],[57,47,47,45],[57,48,47,46],[57,49,47,47,"eventViewTag"],[57,61,47,59],[57,62,47,60],[58,10,48,8,"newProp"],[58,17,48,15],[58,18,48,16,"workletEventHandler"],[58,37,48,35],[58,38,48,36,"registerForEvents"],[58,55,48,53],[58,56,48,54],[58,60,48,58],[58,61,48,59],[58,62,48,60,"eventViewTag"],[58,74,48,72],[58,75,48,73],[59,8,49,6],[60,6,50,4],[60,7,50,5],[60,8,50,6],[61,6,51,4,"executeForEachEventHandler"],[61,32,51,30],[61,33,51,31],[61,37,51,35],[61,38,51,36],[61,39,51,37,"managedComponent"],[61,55,51,53],[61,56,51,54,"props"],[61,61,51,59],[61,63,51,61],[61,64,51,62,"key"],[61,67,51,65],[61,69,51,67,"handler"],[61,76,51,74],[61,81,51,79],[62,8,52,6],[62,12,52,10],[62,13,52,11,"prevProps"],[62,22,52,20],[62,23,52,21,"key"],[62,26,52,24],[62,27,52,25],[62,29,52,27],[63,10,53,8],[64,10,54,8,"handler"],[64,17,54,15],[64,18,54,16,"registerForEvents"],[64,35,54,33],[64,36,54,34],[64,40,54,38],[64,41,54,39],[64,42,54,40,"eventViewTag"],[64,54,54,52],[64,55,54,53],[65,8,55,6],[66,6,56,4],[66,7,56,5],[66,8,56,6],[67,4,57,2],[68,4,58,2,"getEventViewTag"],[68,19,58,17,"getEventViewTag"],[68,20,58,18,"componentUpdate"],[68,35,58,33],[68,38,58,36],[68,43,58,41],[68,45,58,43],[69,6,59,4],[70,6,60,4],[70,12,60,10,"componentAnimatedRef"],[70,32,60,30],[70,35,60,33],[70,39,60,37],[70,40,60,38],[70,41,60,39,"managedComponent"],[70,57,60,55],[70,58,60,56,"_componentRef"],[70,71,60,69],[71,6,61,4],[71,10,61,8,"componentAnimatedRef"],[71,30,61,28],[71,32,61,30,"getScrollableNode"],[71,49,61,47],[71,51,61,49],[72,8,62,6],[73,0,63,0],[74,0,64,0],[75,0,65,0],[76,0,66,0],[77,0,67,0],[78,8,68,6],[78,14,68,12,"scrollableNode"],[78,28,68,26],[78,31,68,29,"componentAnimatedRef"],[78,51,68,49],[78,52,68,50,"getScrollableNode"],[78,69,68,67],[78,70,68,68],[78,71,68,69],[79,8,69,6],[79,12,69,10],[79,19,69,17,"scrollableNode"],[79,33,69,31],[79,38,69,36],[79,46,69,44],[79,48,69,46],[80,10,70,8],[80,17,70,15,"scrollableNode"],[80,31,70,29],[81,8,71,6],[82,8,72,6],[82,15,72,13],[82,19,72,13,"findNodeHandle"],[82,51,72,27],[82,52,72,27,"findNodeHandle"],[82,66,72,27],[82,68,72,28,"scrollableNode"],[82,82,72,42],[82,83,72,43],[82,87,72,47],[82,88,72,48],[82,89,72,49],[83,6,73,4],[84,6,74,4],[84,10,74,8],[84,14,74,12],[84,15,74,13],[84,16,74,14,"componentOptions"],[84,32,74,30],[84,34,74,32,"setNativeProps"],[84,48,74,46],[84,50,74,48],[85,8,75,6],[86,8,76,6],[87,8,77,6],[87,15,77,13],[87,19,77,13,"findNodeHandle"],[87,51,77,27],[87,52,77,27,"findNodeHandle"],[87,66,77,27],[87,68,77,28],[87,72,77,32],[87,73,77,33],[87,74,77,34,"managedComponent"],[87,90,77,50],[87,91,77,51],[87,95,77,55],[87,96,77,56],[87,97,77,57],[88,6,78,4],[89,6,79,4],[89,10,79,8],[89,11,79,9,"componentUpdate"],[89,26,79,24],[89,28,79,26],[90,8,80,6],[91,8,81,6],[91,15,81,13],[91,19,81,17],[91,20,81,18],[91,21,81,19,"managedComponent"],[91,37,81,35],[91,38,81,36,"getComponentViewTag"],[91,57,81,55],[91,58,81,56],[91,59,81,57],[92,6,82,4],[93,6,83,4],[93,10,83,8,"componentAnimatedRef"],[93,30,83,28],[93,32,83,30,"__nativeTag"],[93,43,83,41],[93,45,83,43],[94,8,84,6],[94,15,84,13,"componentAnimatedRef"],[94,35,84,33],[94,36,84,34,"__nativeTag"],[94,47,84,45],[94,51,84,49],[94,52,84,50],[94,53,84,51],[95,6,85,4],[96,6,86,4],[97,0,87,0],[98,0,88,0],[99,0,89,0],[100,6,90,4],[100,13,90,11],[100,17,90,11,"findNodeHandle"],[100,49,90,25],[100,50,90,25,"findNodeHandle"],[100,64,90,25],[100,66,90,26,"componentAnimatedRef"],[100,86,90,46],[100,87,90,47],[100,91,90,51],[100,92,90,52],[100,93,90,53],[101,4,91,2],[102,2,92,0],[103,2,93,0],[103,11,93,9,"isWorkletEventHandler"],[103,32,93,30,"isWorkletEventHandler"],[103,33,93,31,"prop"],[103,37,93,35],[103,39,93,37],[104,4,94,2],[104,11,94,9],[104,15,94,9,"has"],[104,21,94,12],[104,22,94,12,"has"],[104,25,94,12],[104,27,94,13],[104,48,94,34],[104,50,94,36,"prop"],[104,54,94,40],[104,55,94,41],[104,59,94,45,"prop"],[104,63,94,49],[104,64,94,50,"workletEventHandler"],[104,83,94,69],[104,95,94,81,"WorkletEventHandler"],[104,115,94,100],[104,116,94,100,"WorkletEventHandler"],[104,135,94,100],[105,2,95,0],[106,2,96,0],[106,11,96,9,"executeForEachEventHandler"],[106,37,96,35,"executeForEachEventHandler"],[106,38,96,36,"props"],[106,43,96,41],[106,45,96,43,"callback"],[106,53,96,51],[106,55,96,53],[107,4,97,2],[107,9,97,7],[107,15,97,13,"key"],[107,18,97,16],[107,22,97,20,"props"],[107,27,97,25],[107,29,97,27],[108,6,98,4],[108,12,98,10,"prop"],[108,16,98,14],[108,19,98,17,"props"],[108,24,98,22],[108,25,98,23,"key"],[108,28,98,26],[108,29,98,27],[109,6,99,4],[109,10,99,8,"isWorkletEventHandler"],[109,31,99,29],[109,32,99,30,"prop"],[109,36,99,34],[109,37,99,35],[109,39,99,37],[110,8,100,6,"callback"],[110,16,100,14],[110,17,100,15,"key"],[110,20,100,18],[110,22,100,20,"prop"],[110,26,100,24],[110,27,100,25,"workletEventHandler"],[110,46,100,44],[110,47,100,45],[111,6,101,4],[112,4,102,2],[113,2,103,0],[114,0,103,1],[114,3]],"functionMap":{"names":["<global>","NativeEventsManager","constructor","attachEvents","executeForEachEventHandler$argument_1","detachEvents","updateEvents","getEventViewTag","isWorkletEventHandler","executeForEachEventHandler"],"mappings":"AAA;OCK;ECI;GDI;EEC;6DCC;KDE;GFC;EIC;6DDC;KCE;GJC;EKC;4CFK;OEE;0CFQ;KEU;6DFC;KEK;GLC;EMC;GNiC;CDC;AQC;CRE;ASC;CTO"},"hasCjsExports":false},"type":"js/module"}]}