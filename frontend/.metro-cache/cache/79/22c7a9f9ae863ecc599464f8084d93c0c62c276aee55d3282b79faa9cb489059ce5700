{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":69,"index":168}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useTaskStore\", {\n    enumerable: true,\n    get: function () {\n      return useTaskStore;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[2], \"zustand/middleware\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  const BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useTaskStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    dailyTasks: [],\n    weeklyTask: null,\n    loading: false,\n    error: null,\n    fetchDailyTasks: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/daily?regenerate=true` : `${BACKEND_URL}/api/tasks/daily`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch daily tasks');\n        }\n        const data = await response.json();\n        set({\n          dailyTasks: data.tasks || [],\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch daily tasks'\n        });\n      }\n    },\n    fetchWeeklyTask: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/weekly?regenerate=true` : `${BACKEND_URL}/api/tasks/weekly`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch weekly task');\n        }\n        const data = await response.json();\n        // Backend returns tasks array, we need the first (and only) weekly task\n        const weeklyTask = data.tasks && data.tasks.length > 0 ? data.tasks[0] : null;\n        set({\n          weeklyTask: weeklyTask,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch weekly task'\n        });\n      }\n    },\n    completeTask: async (taskId, token) => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/tasks/complete`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: taskId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to complete task');\n        }\n        const data = await response.json();\n\n        // Update local state\n        set(state => {\n          const updatedDailyTasks = state.dailyTasks.map(task => task.id === taskId ? {\n            ...task,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : task);\n          const updatedWeeklyTask = state.weeklyTask && state.weeklyTask.id === taskId ? {\n            ...state.weeklyTask,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : state.weeklyTask;\n          return {\n            dailyTasks: updatedDailyTasks,\n            weeklyTask: updatedWeeklyTask\n          };\n        });\n        return true;\n      } catch (error) {\n        set({\n          error: error instanceof Error ? error.message : 'Failed to complete task'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    }\n  }), {\n    name: 'task-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage.default),\n    partialize: state => ({\n      dailyTasks: state.dailyTasks,\n      weeklyTask: state.weeklyTask\n    })\n  }));\n});","lineCount":142,"map":[[12,2,35,0,"Object"],[12,8,35,0],[12,9,35,0,"defineProperty"],[12,23,35,0],[12,24,35,0,"exports"],[12,31,35,0],[13,4,35,0,"enumerable"],[13,14,35,0],[14,4,35,0,"get"],[14,7,35,0],[14,18,35,0,"get"],[14,19,35,0],[15,6,35,0],[15,13,35,0,"useTaskStore"],[15,25,35,0],[16,4,35,0],[17,2,35,0],[18,2,156,2],[18,6,156,2,"_expoVirtualEnv"],[18,21,156,2],[18,24,156,2,"require"],[18,31,156,2],[18,32,156,2,"_dependencyMap"],[18,46,156,2],[19,2,1,0],[19,6,1,0,"_zustand"],[19,14,1,0],[19,17,1,0,"require"],[19,24,1,0],[19,25,1,0,"_dependencyMap"],[19,39,1,0],[20,2,2,0],[20,6,2,0,"_zustandMiddleware"],[20,24,2,0],[20,27,2,0,"require"],[20,34,2,0],[20,35,2,0,"_dependencyMap"],[20,49,2,0],[21,2,3,0],[21,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[21,42,3,0],[21,45,3,0,"require"],[21,52,3,0],[21,53,3,0,"_dependencyMap"],[21,67,3,0],[22,2,3,0],[22,6,3,0,"AsyncStorage"],[22,18,3,0],[22,21,3,0,"_interopDefault"],[22,36,3,0],[22,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[22,73,3,0],[23,2,5,0],[23,8,5,6,"BACKEND_URL"],[23,19,5,17],[23,22,5,20,"_expoVirtualEnv"],[23,37,5,20],[23,38,5,20,"env"],[23,41,5,20],[23,42,5,20,"EXPO_PUBLIC_BACKEND_URL"],[23,65,5,20],[23,69,5,59],[23,71,5,61],[24,2,35,7],[24,8,35,13,"useTaskStore"],[24,20,35,25],[24,23,35,28],[24,27,35,28,"create"],[24,35,35,34],[24,36,35,34,"create"],[24,42,35,34],[24,44,35,46],[24,45,35,47],[24,46,36,2],[24,50,36,2,"persist"],[24,68,36,9],[24,69,36,9,"persist"],[24,76,36,9],[24,78,37,4],[24,79,37,5,"set"],[24,82,37,8],[24,84,37,10,"get"],[24,87,37,13],[24,93,37,19],[25,4,38,6,"dailyTasks"],[25,14,38,16],[25,16,38,18],[25,18,38,20],[26,4,39,6,"weeklyTask"],[26,14,39,16],[26,16,39,18],[26,20,39,22],[27,4,40,6,"loading"],[27,11,40,13],[27,13,40,15],[27,18,40,20],[28,4,41,6,"error"],[28,9,41,11],[28,11,41,13],[28,15,41,17],[29,4,43,6,"fetchDailyTasks"],[29,19,43,21],[29,21,43,23],[29,27,43,23,"fetchDailyTasks"],[29,28,43,30,"token"],[29,33,43,43],[29,35,43,45,"regenerate"],[29,45,43,64],[29,48,43,67],[29,53,43,72],[29,58,43,77],[30,6,44,8,"set"],[30,9,44,11],[30,10,44,12],[31,8,44,14,"loading"],[31,15,44,21],[31,17,44,23],[31,21,44,27],[32,8,44,29,"error"],[32,13,44,34],[32,15,44,36],[33,6,44,41],[33,7,44,42],[33,8,44,43],[34,6,45,8],[34,10,45,12],[35,8,46,10],[35,14,46,16,"url"],[35,17,46,19],[35,20,46,22,"regenerate"],[35,30,46,32],[35,33,46,35],[35,36,46,38,"BACKEND_URL"],[35,47,46,49],[35,81,46,83],[35,84,46,86],[35,87,46,89,"BACKEND_URL"],[35,98,46,100],[35,116,46,118],[36,8,47,10],[36,14,47,16,"response"],[36,22,47,24],[36,25,47,27],[36,31,47,33,"fetch"],[36,36,47,38],[36,37,47,39,"url"],[36,40,47,42],[36,42,47,44],[37,10,48,12,"headers"],[37,17,48,19],[37,19,48,21],[38,12,49,14],[38,27,49,29],[38,29,49,31],[38,39,49,41,"token"],[38,44,49,46],[39,10,50,12],[40,8,51,10],[40,9,51,11],[40,10,51,12],[41,8,53,10],[41,12,53,14],[41,13,53,15,"response"],[41,21,53,23],[41,22,53,24,"ok"],[41,24,53,26],[41,26,53,28],[42,10,54,12],[42,16,54,18],[42,20,54,22,"Error"],[42,25,54,27],[42,26,54,28],[42,55,54,57],[42,56,54,58],[43,8,55,10],[44,8,57,10],[44,14,57,16,"data"],[44,18,57,20],[44,21,57,23],[44,27,57,29,"response"],[44,35,57,37],[44,36,57,38,"json"],[44,40,57,42],[44,41,57,43],[44,42,57,44],[45,8,58,10,"set"],[45,11,58,13],[45,12,58,14],[46,10,59,12,"dailyTasks"],[46,20,59,22],[46,22,59,24,"data"],[46,26,59,28],[46,27,59,29,"tasks"],[46,32,59,34],[46,36,59,38],[46,38,59,40],[47,10,60,12,"loading"],[47,17,60,19],[47,19,60,21],[47,24,60,26],[48,10,61,12,"error"],[48,15,61,17],[48,17,61,19],[49,8,62,10],[49,9,62,11],[49,10,62,12],[50,6,63,8],[50,7,63,9],[50,8,63,10],[50,15,63,17,"error"],[50,20,63,22],[50,22,63,24],[51,8,64,10,"set"],[51,11,64,13],[51,12,64,14],[52,10,65,12,"loading"],[52,17,65,19],[52,19,65,21],[52,24,65,26],[53,10,66,12,"error"],[53,15,66,17],[53,17,66,19,"error"],[53,22,66,24],[53,34,66,36,"Error"],[53,39,66,41],[53,42,66,44,"error"],[53,47,66,49],[53,48,66,50,"message"],[53,55,66,57],[53,58,66,60],[54,8,67,10],[54,9,67,11],[54,10,67,12],[55,6,68,8],[56,4,69,6],[56,5,69,7],[57,4,71,6,"fetchWeeklyTask"],[57,19,71,21],[57,21,71,23],[57,27,71,23,"fetchWeeklyTask"],[57,28,71,30,"token"],[57,33,71,43],[57,35,71,45,"regenerate"],[57,45,71,64],[57,48,71,67],[57,53,71,72],[57,58,71,77],[58,6,72,8,"set"],[58,9,72,11],[58,10,72,12],[59,8,72,14,"loading"],[59,15,72,21],[59,17,72,23],[59,21,72,27],[60,8,72,29,"error"],[60,13,72,34],[60,15,72,36],[61,6,72,41],[61,7,72,42],[61,8,72,43],[62,6,73,8],[62,10,73,12],[63,8,74,10],[63,14,74,16,"url"],[63,17,74,19],[63,20,74,22,"regenerate"],[63,30,74,32],[63,33,74,35],[63,36,74,38,"BACKEND_URL"],[63,47,74,49],[63,82,74,84],[63,85,74,87],[63,88,74,90,"BACKEND_URL"],[63,99,74,101],[63,118,74,120],[64,8,75,10],[64,14,75,16,"response"],[64,22,75,24],[64,25,75,27],[64,31,75,33,"fetch"],[64,36,75,38],[64,37,75,39,"url"],[64,40,75,42],[64,42,75,44],[65,10,76,12,"headers"],[65,17,76,19],[65,19,76,21],[66,12,77,14],[66,27,77,29],[66,29,77,31],[66,39,77,41,"token"],[66,44,77,46],[67,10,78,12],[68,8,79,10],[68,9,79,11],[68,10,79,12],[69,8,81,10],[69,12,81,14],[69,13,81,15,"response"],[69,21,81,23],[69,22,81,24,"ok"],[69,24,81,26],[69,26,81,28],[70,10,82,12],[70,16,82,18],[70,20,82,22,"Error"],[70,25,82,27],[70,26,82,28],[70,55,82,57],[70,56,82,58],[71,8,83,10],[72,8,85,10],[72,14,85,16,"data"],[72,18,85,20],[72,21,85,23],[72,27,85,29,"response"],[72,35,85,37],[72,36,85,38,"json"],[72,40,85,42],[72,41,85,43],[72,42,85,44],[73,8,86,10],[74,8,87,10],[74,14,87,16,"weeklyTask"],[74,24,87,26],[74,27,87,29,"data"],[74,31,87,33],[74,32,87,34,"tasks"],[74,37,87,39],[74,41,87,43,"data"],[74,45,87,47],[74,46,87,48,"tasks"],[74,51,87,53],[74,52,87,54,"length"],[74,58,87,60],[74,61,87,63],[74,62,87,64],[74,65,87,67,"data"],[74,69,87,71],[74,70,87,72,"tasks"],[74,75,87,77],[74,76,87,78],[74,77,87,79],[74,78,87,80],[74,81,87,83],[74,85,87,87],[75,8,88,10,"set"],[75,11,88,13],[75,12,88,14],[76,10,89,12,"weeklyTask"],[76,20,89,22],[76,22,89,24,"weeklyTask"],[76,32,89,34],[77,10,90,12,"loading"],[77,17,90,19],[77,19,90,21],[77,24,90,26],[78,10,91,12,"error"],[78,15,91,17],[78,17,91,19],[79,8,92,10],[79,9,92,11],[79,10,92,12],[80,6,93,8],[80,7,93,9],[80,8,93,10],[80,15,93,17,"error"],[80,20,93,22],[80,22,93,24],[81,8,94,10,"set"],[81,11,94,13],[81,12,94,14],[82,10,95,12,"loading"],[82,17,95,19],[82,19,95,21],[82,24,95,26],[83,10,96,12,"error"],[83,15,96,17],[83,17,96,19,"error"],[83,22,96,24],[83,34,96,36,"Error"],[83,39,96,41],[83,42,96,44,"error"],[83,47,96,49],[83,48,96,50,"message"],[83,55,96,57],[83,58,96,60],[84,8,97,10],[84,9,97,11],[84,10,97,12],[85,6,98,8],[86,4,99,6],[86,5,99,7],[87,4,101,6,"completeTask"],[87,16,101,18],[87,18,101,20],[87,24,101,20,"completeTask"],[87,25,101,27,"taskId"],[87,31,101,41],[87,33,101,43,"token"],[87,38,101,56],[87,43,101,61],[88,6,102,8],[88,10,102,12],[89,8,103,10],[89,14,103,16,"response"],[89,22,103,24],[89,25,103,27],[89,31,103,33,"fetch"],[89,36,103,38],[89,37,103,39],[89,40,103,42,"BACKEND_URL"],[89,51,103,53],[89,72,103,74],[89,74,103,76],[90,10,104,12,"method"],[90,16,104,18],[90,18,104,20],[90,24,104,26],[91,10,105,12,"headers"],[91,17,105,19],[91,19,105,21],[92,12,106,14],[92,26,106,28],[92,28,106,30],[92,46,106,48],[93,12,107,14],[93,27,107,29],[93,29,107,31],[93,39,107,41,"token"],[93,44,107,46],[94,10,108,12],[94,11,108,13],[95,10,109,12,"body"],[95,14,109,16],[95,16,109,18,"JSON"],[95,20,109,22],[95,21,109,23,"stringify"],[95,30,109,32],[95,31,109,33],[96,12,109,35,"task_id"],[96,19,109,42],[96,21,109,44,"taskId"],[97,10,109,51],[97,11,109,52],[98,8,110,10],[98,9,110,11],[98,10,110,12],[99,8,112,10],[99,12,112,14],[99,13,112,15,"response"],[99,21,112,23],[99,22,112,24,"ok"],[99,24,112,26],[99,26,112,28],[100,10,113,12],[100,16,113,18],[100,20,113,22,"Error"],[100,25,113,27],[100,26,113,28],[100,51,113,53],[100,52,113,54],[101,8,114,10],[102,8,116,10],[102,14,116,16,"data"],[102,18,116,20],[102,21,116,23],[102,27,116,29,"response"],[102,35,116,37],[102,36,116,38,"json"],[102,40,116,42],[102,41,116,43],[102,42,116,44],[104,8,118,10],[105,8,119,10,"set"],[105,11,119,13],[105,12,119,14,"state"],[105,17,119,19],[105,21,119,23],[106,10,120,12],[106,16,120,18,"updatedDailyTasks"],[106,33,120,35],[106,36,120,38,"state"],[106,41,120,43],[106,42,120,44,"dailyTasks"],[106,52,120,54],[106,53,120,55,"map"],[106,56,120,58],[106,57,120,59,"task"],[106,61,120,63],[106,65,121,14,"task"],[106,69,121,18],[106,70,121,19,"id"],[106,72,121,21],[106,77,121,26,"taskId"],[106,83,121,32],[106,86,122,18],[107,12,122,20],[107,15,122,23,"task"],[107,19,122,27],[108,12,122,29,"completed"],[108,21,122,38],[108,23,122,40],[108,27,122,44],[109,12,122,46,"completed_at"],[109,24,122,58],[109,26,122,60],[109,30,122,64,"Date"],[109,34,122,68],[109,35,122,69],[109,36,122,70],[109,37,122,71,"toISOString"],[109,48,122,82],[109,49,122,83],[110,10,122,85],[110,11,122,86],[110,14,123,18,"task"],[110,18,124,12],[110,19,124,13],[111,10,126,12],[111,16,126,18,"updatedWeeklyTask"],[111,33,126,35],[111,36,126,38,"state"],[111,41,126,43],[111,42,126,44,"weeklyTask"],[111,52,126,54],[111,56,126,58,"state"],[111,61,126,63],[111,62,126,64,"weeklyTask"],[111,72,126,74],[111,73,126,75,"id"],[111,75,126,77],[111,80,126,82,"taskId"],[111,86,126,88],[111,89,127,16],[112,12,127,18],[112,15,127,21,"state"],[112,20,127,26],[112,21,127,27,"weeklyTask"],[112,31,127,37],[113,12,127,39,"completed"],[113,21,127,48],[113,23,127,50],[113,27,127,54],[114,12,127,56,"completed_at"],[114,24,127,68],[114,26,127,70],[114,30,127,74,"Date"],[114,34,127,78],[114,35,127,79],[114,36,127,80],[114,37,127,81,"toISOString"],[114,48,127,92],[114,49,127,93],[115,10,127,95],[115,11,127,96],[115,14,128,16,"state"],[115,19,128,21],[115,20,128,22,"weeklyTask"],[115,30,128,32],[116,10,130,12],[116,17,130,19],[117,12,131,14,"dailyTasks"],[117,22,131,24],[117,24,131,26,"updatedDailyTasks"],[117,41,131,43],[118,12,132,14,"weeklyTask"],[118,22,132,24],[118,24,132,26,"updatedWeeklyTask"],[119,10,133,12],[119,11,133,13],[120,8,134,10],[120,9,134,11],[120,10,134,12],[121,8,136,10],[121,15,136,17],[121,19,136,21],[122,6,137,8],[122,7,137,9],[122,8,137,10],[122,15,137,17,"error"],[122,20,137,22],[122,22,137,24],[123,8,138,10,"set"],[123,11,138,13],[123,12,138,14],[124,10,138,16,"error"],[124,15,138,21],[124,17,138,23,"error"],[124,22,138,28],[124,34,138,40,"Error"],[124,39,138,45],[124,42,138,48,"error"],[124,47,138,53],[124,48,138,54,"message"],[124,55,138,61],[124,58,138,64],[125,8,138,90],[125,9,138,91],[125,10,138,92],[126,8,139,10],[126,15,139,17],[126,20,139,22],[127,6,140,8],[128,4,141,6],[128,5,141,7],[129,4,143,6,"clearError"],[129,14,143,16],[129,16,143,18,"clearError"],[129,17,143,18],[129,22,143,24],[130,6,144,8,"set"],[130,9,144,11],[130,10,144,12],[131,8,144,14,"error"],[131,13,144,19],[131,15,144,21],[132,6,144,26],[132,7,144,27],[132,8,144,28],[133,4,145,6],[134,2,146,4],[134,3,146,5],[134,4,146,6],[134,6,147,4],[135,4,148,6,"name"],[135,8,148,10],[135,10,148,12],[135,22,148,24],[136,4,149,6,"storage"],[136,11,149,13],[136,13,149,15],[136,17,149,15,"createJSONStorage"],[136,35,149,32],[136,36,149,32,"createJSONStorage"],[136,53,149,32],[136,55,149,33],[136,61,149,39,"AsyncStorage"],[136,73,149,51],[136,74,149,51,"default"],[136,81,149,51],[136,82,149,52],[137,4,150,6,"partialize"],[137,14,150,16],[137,16,150,19,"state"],[137,21,150,24],[137,26,150,30],[138,6,151,8,"dailyTasks"],[138,16,151,18],[138,18,151,20,"state"],[138,23,151,25],[138,24,151,26,"dailyTasks"],[138,34,151,36],[139,6,152,8,"weeklyTask"],[139,16,152,18],[139,18,152,20,"state"],[139,23,152,25],[139,24,152,26,"weeklyTask"],[140,4,153,6],[140,5,153,7],[141,2,154,4],[141,3,155,2],[141,4,156,0],[141,5,156,1],[142,0,156,2],[142,3]],"functionMap":{"names":["<global>","persist$argument_0","fetchDailyTasks","fetchWeeklyTask","completeTask","set$argument_0","state.dailyTasks.map$argument_0","clearError","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;ICoC;uBCM;OD0B;uBEE;OF4B;oBGE;cCkB;2DCC;sBDG;WDW;OHO;kBME;ONE;MDC;iCQG,kBR;kBSC;QTG"},"hasCjsExports":false},"type":"js/module"}]}