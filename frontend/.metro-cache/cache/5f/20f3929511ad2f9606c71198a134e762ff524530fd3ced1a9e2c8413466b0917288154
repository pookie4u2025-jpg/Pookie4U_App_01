{"dependencies":[{"name":"expo-web-browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"qFWzf28Sq0474idIhFBHQFboHaY=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":34,"index":82}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./AuthRequest.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":124},"end":{"line":4,"column":73,"index":197}}],"key":"0pAeVE4PBjkr2BbVHAnYCGpI6dQ=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":37,"index":235}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./PKCE","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":236},"end":{"line":6,"column":31,"index":267}}],"key":"O6rIjOENJps9CCWJ28jKcMFTSp8=","exportNames":["*"],"imports":1}},{"name":"./QueryParams","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":268},"end":{"line":7,"column":45,"index":313}}],"key":"+sRi/Vos4DfuwEst+v0hvDvbtnY=","exportNames":["*"],"imports":1}},{"name":"./TokenRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":314},"end":{"line":8,"column":47,"index":361}}],"key":"d1uOSXontqXdGR3Qx6fQsTSh36E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthRequest\", {\n    enumerable: true,\n    get: function () {\n      return AuthRequest;\n    }\n  });\n  var _expoWebBrowser = require(_dependencyMap[0], \"expo-web-browser\");\n  var WebBrowser = _interopNamespace(_expoWebBrowser);\n  var _invariant = require(_dependencyMap[1], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _AuthRequestTypes = require(_dependencyMap[3], \"./AuthRequest.types\");\n  var _Errors = require(_dependencyMap[4], \"./Errors\");\n  var _PKCE = require(_dependencyMap[5], \"./PKCE\");\n  var PKCE = _interopNamespace(_PKCE);\n  var _QueryParams = require(_dependencyMap[6], \"./QueryParams\");\n  var QueryParams = _interopNamespace(_QueryParams);\n  var _TokenRequest = require(_dependencyMap[7], \"./TokenRequest\");\n  let _authLock = false;\n  // @needsAudit @docsMissing\n  /**\n   * Used to manage an authorization request according to the OAuth spec: [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\n   * You can use this class directly for more info around the authorization.\n   *\n   * **Common use-cases:**\n   *\n   * - Parse a URL returned from the authorization server with `parseReturnUrlAsync()`.\n   * - Get the built authorization URL with `makeAuthUrlAsync()`.\n   * - Get a loaded JSON representation of the auth request with crypto state loaded with `getAuthRequestConfigAsync()`.\n   *\n   * @example\n   * ```ts\n   * // Create a request.\n   * const request = new AuthRequest({ ... });\n   *\n   * // Prompt for an auth code\n   * const result = await request.promptAsync(discovery);\n   *\n   * // Get the URL to invoke\n   * const url = await request.makeAuthUrlAsync(discovery);\n   *\n   * // Get the URL to invoke\n   * const parsed = await request.parseReturnUrlAsync(\"<URL From Server>\");\n   * ```\n   */\n  class AuthRequest {\n    /**\n     * Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12).\n     */\n\n    url = null;\n    constructor(request) {\n      this.responseType = request.responseType ?? _AuthRequestTypes.ResponseType.Code;\n      this.clientId = request.clientId;\n      this.redirectUri = request.redirectUri;\n      this.scopes = request.scopes;\n      this.clientSecret = request.clientSecret;\n      this.prompt = request.prompt;\n      this.state = request.state ?? PKCE.generateRandom(10);\n      this.extraParams = request.extraParams ?? {};\n      this.codeChallengeMethod = request.codeChallengeMethod ?? _AuthRequestTypes.CodeChallengeMethod.S256;\n      // PKCE defaults to true\n      this.usePKCE = request.usePKCE ?? true;\n      // Some warnings in development about potential confusing application code\n      if (__DEV__) {\n        if (this.prompt && this.extraParams.prompt) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.prompt\\` will be overwritten by \\`prompt\\`.`);\n        }\n        if (this.clientSecret && this.extraParams.client_secret) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.client_secret\\` will be overwritten by \\`clientSecret\\`.`);\n        }\n        if (this.codeChallengeMethod && this.extraParams.code_challenge_method) {\n          console.warn(`\\`AuthRequest\\` \\`extraParams.code_challenge_method\\` will be overwritten by \\`codeChallengeMethod\\`.`);\n        }\n      }\n      (0, invariant.default)(this.codeChallengeMethod !== _AuthRequestTypes.CodeChallengeMethod.Plain, `\\`AuthRequest\\` does not support \\`CodeChallengeMethod.Plain\\` as it's not secure.`);\n      (0, invariant.default)(this.redirectUri, `\\`AuthRequest\\` requires a valid \\`redirectUri\\`. Ex: ${Platform.default.select({\n        web: 'https://yourwebsite.com/',\n        default: 'com.your.app:/oauthredirect'\n      })}`);\n    }\n    /**\n     * Load and return a valid auth request based on the input config.\n     */\n    async getAuthRequestConfigAsync() {\n      if (this.usePKCE) {\n        await this.ensureCodeIsSetupAsync();\n      }\n      return {\n        responseType: this.responseType,\n        clientId: this.clientId,\n        redirectUri: this.redirectUri,\n        scopes: this.scopes,\n        clientSecret: this.clientSecret,\n        codeChallenge: this.codeChallenge,\n        codeChallengeMethod: this.codeChallengeMethod,\n        prompt: this.prompt,\n        state: this.state,\n        extraParams: this.extraParams,\n        usePKCE: this.usePKCE\n      };\n    }\n    /**\n     * Prompt a user to authorize for a code.\n     *\n     * @param discovery\n     * @param promptOptions\n     */\n    async promptAsync(discovery, {\n      url,\n      ...options\n    } = {}) {\n      if (!url) {\n        if (!this.url) {\n          // Generate a new url\n          return this.promptAsync(discovery, {\n            ...options,\n            url: await this.makeAuthUrlAsync(discovery)\n          });\n        }\n        // Reuse the preloaded url\n        url = this.url;\n      }\n      // Prevent accidentally starting to an empty url\n      (0, invariant.default)(url, 'No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.');\n      const startUrl = url;\n      const returnUrl = this.redirectUri;\n      // Prevent multiple sessions from running at the same time, WebBrowser doesn't\n      // support it this makes the behavior predictable.\n      if (_authLock) {\n        if (__DEV__) {\n          console.warn('Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.');\n        }\n        return {\n          type: 'locked'\n        };\n      }\n      // About to start session, set lock\n      _authLock = true;\n      let result;\n      try {\n        result = await WebBrowser.openAuthSessionAsync(startUrl, returnUrl, options);\n      } finally {\n        _authLock = false;\n      }\n      if (result.type === 'opened') {\n        // This should never happen\n        throw new Error('An unexpected error occurred');\n      }\n      if (result.type !== 'success') {\n        return {\n          type: result.type\n        };\n      }\n      return this.parseReturnUrl(result.url);\n    }\n    parseReturnUrl(url) {\n      const {\n        params,\n        errorCode\n      } = QueryParams.getQueryParams(url);\n      const {\n        state,\n        error = errorCode\n      } = params;\n      let parsedError = null;\n      let authentication = null;\n      if (state !== this.state) {\n        // This is a non-standard error\n        parsedError = new _Errors.AuthError({\n          error: 'state_mismatch',\n          error_description: 'Cross-Site request verification failed. Cached state and returned state do not match.'\n        });\n      } else if (error) {\n        parsedError = new _Errors.AuthError({\n          error,\n          ...params\n        });\n      }\n      if (params.access_token) {\n        authentication = _TokenRequest.TokenResponse.fromQueryParams(params);\n      }\n      return {\n        type: parsedError ? 'error' : 'success',\n        error: parsedError,\n        url,\n        params,\n        authentication,\n        // Return errorCode for legacy\n        errorCode\n      };\n    }\n    /**\n     * Create the URL for authorization.\n     *\n     * @param discovery\n     */\n    async makeAuthUrlAsync(discovery) {\n      const request = await this.getAuthRequestConfigAsync();\n      if (!request.state) throw new Error('Cannot make request URL without a valid `state` loaded');\n      // Create a query string\n      const params = {};\n      if (request.codeChallenge) {\n        params.code_challenge = request.codeChallenge;\n      }\n      // copy over extra params\n      for (const extra in request.extraParams) {\n        if (extra in request.extraParams) {\n          params[extra] = request.extraParams[extra];\n        }\n      }\n      if (request.usePKCE && request.codeChallengeMethod) {\n        params.code_challenge_method = request.codeChallengeMethod;\n      }\n      if (request.clientSecret) {\n        params.client_secret = request.clientSecret;\n      }\n      if (request.prompt) {\n        params.prompt = typeof request.prompt === 'string' ? request.prompt : request.prompt.join(' ');\n      }\n      // These overwrite any extra params\n      params.redirect_uri = request.redirectUri;\n      params.client_id = request.clientId;\n      params.response_type = request.responseType;\n      params.state = request.state;\n      if (request.scopes?.length) {\n        params.scope = request.scopes.join(' ');\n      }\n      // Store the URL for later\n      this.url = `${discovery.authorizationEndpoint}?${new URLSearchParams(params)}`;\n      return this.url;\n    }\n    async ensureCodeIsSetupAsync() {\n      if (this.codeVerifier) {\n        return;\n      }\n      // This method needs to be resolved like all other native methods.\n      const {\n        codeVerifier,\n        codeChallenge\n      } = await PKCE.buildCodeAsync();\n      this.codeVerifier = codeVerifier;\n      this.codeChallenge = codeChallenge;\n    }\n  }\n});","lineCount":273,"map":[[27,2,36,0,"Object"],[27,8,36,0],[27,9,36,0,"defineProperty"],[27,23,36,0],[27,24,36,0,"exports"],[27,31,36,0],[28,4,36,0,"enumerable"],[28,14,36,0],[29,4,36,0,"get"],[29,7,36,0],[29,18,36,0,"get"],[29,19,36,0],[30,6,36,0],[30,13,36,0,"AuthRequest"],[30,24,36,0],[31,4,36,0],[32,2,36,0],[33,2,1,0],[33,6,1,0,"_expoWebBrowser"],[33,21,1,0],[33,24,1,0,"require"],[33,31,1,0],[33,32,1,0,"_dependencyMap"],[33,46,1,0],[34,2,1,0],[34,6,1,0,"WebBrowser"],[34,16,1,0],[34,19,1,0,"_interopNamespace"],[34,36,1,0],[34,37,1,0,"_expoWebBrowser"],[34,52,1,0],[35,2,2,0],[35,6,2,0,"_invariant"],[35,16,2,0],[35,19,2,0,"require"],[35,26,2,0],[35,27,2,0,"_dependencyMap"],[35,41,2,0],[36,2,2,0],[36,6,2,0,"invariant"],[36,15,2,0],[36,18,2,0,"_interopDefault"],[36,33,2,0],[36,34,2,0,"_invariant"],[36,44,2,0],[37,2,2,34],[37,6,2,34,"_reactNativeWebDistExportsPlatform"],[37,40,2,34],[37,43,2,34,"require"],[37,50,2,34],[37,51,2,34,"_dependencyMap"],[37,65,2,34],[38,2,2,34],[38,6,2,34,"Platform"],[38,14,2,34],[38,17,2,34,"_interopDefault"],[38,32,2,34],[38,33,2,34,"_reactNativeWebDistExportsPlatform"],[38,67,2,34],[39,2,4,0],[39,6,4,0,"_AuthRequestTypes"],[39,23,4,0],[39,26,4,0,"require"],[39,33,4,0],[39,34,4,0,"_dependencyMap"],[39,48,4,0],[40,2,5,0],[40,6,5,0,"_Errors"],[40,13,5,0],[40,16,5,0,"require"],[40,23,5,0],[40,24,5,0,"_dependencyMap"],[40,38,5,0],[41,2,6,0],[41,6,6,0,"_PKCE"],[41,11,6,0],[41,14,6,0,"require"],[41,21,6,0],[41,22,6,0,"_dependencyMap"],[41,36,6,0],[42,2,6,0],[42,6,6,0,"PKCE"],[42,10,6,0],[42,13,6,0,"_interopNamespace"],[42,30,6,0],[42,31,6,0,"_PKCE"],[42,36,6,0],[43,2,7,0],[43,6,7,0,"_QueryParams"],[43,18,7,0],[43,21,7,0,"require"],[43,28,7,0],[43,29,7,0,"_dependencyMap"],[43,43,7,0],[44,2,7,0],[44,6,7,0,"QueryParams"],[44,17,7,0],[44,20,7,0,"_interopNamespace"],[44,37,7,0],[44,38,7,0,"_QueryParams"],[44,50,7,0],[45,2,8,0],[45,6,8,0,"_TokenRequest"],[45,19,8,0],[45,22,8,0,"require"],[45,29,8,0],[45,30,8,0,"_dependencyMap"],[45,44,8,0],[46,2,9,0],[46,6,9,4,"_authLock"],[46,15,9,13],[46,18,9,16],[46,23,9,21],[47,2,10,0],[48,2,11,0],[49,0,12,0],[50,0,13,0],[51,0,14,0],[52,0,15,0],[53,0,16,0],[54,0,17,0],[55,0,18,0],[56,0,19,0],[57,0,20,0],[58,0,21,0],[59,0,22,0],[60,0,23,0],[61,0,24,0],[62,0,25,0],[63,0,26,0],[64,0,27,0],[65,0,28,0],[66,0,29,0],[67,0,30,0],[68,0,31,0],[69,0,32,0],[70,0,33,0],[71,0,34,0],[72,0,35,0],[73,2,36,7],[73,8,36,13,"AuthRequest"],[73,19,36,24],[73,20,36,25],[74,4,37,4],[75,0,38,0],[76,0,39,0],[78,4,41,4,"url"],[78,7,41,7],[78,10,41,10],[78,14,41,14],[79,4,53,4,"constructor"],[79,15,53,15,"constructor"],[79,16,53,16,"request"],[79,23,53,23],[79,25,53,25],[80,6,54,8],[80,10,54,12],[80,11,54,13,"responseType"],[80,23,54,25],[80,26,54,28,"request"],[80,33,54,35],[80,34,54,36,"responseType"],[80,46,54,48],[80,50,54,52,"ResponseType"],[80,67,54,64],[80,68,54,64,"ResponseType"],[80,80,54,64],[80,81,54,65,"Code"],[80,85,54,69],[81,6,55,8],[81,10,55,12],[81,11,55,13,"clientId"],[81,19,55,21],[81,22,55,24,"request"],[81,29,55,31],[81,30,55,32,"clientId"],[81,38,55,40],[82,6,56,8],[82,10,56,12],[82,11,56,13,"redirectUri"],[82,22,56,24],[82,25,56,27,"request"],[82,32,56,34],[82,33,56,35,"redirectUri"],[82,44,56,46],[83,6,57,8],[83,10,57,12],[83,11,57,13,"scopes"],[83,17,57,19],[83,20,57,22,"request"],[83,27,57,29],[83,28,57,30,"scopes"],[83,34,57,36],[84,6,58,8],[84,10,58,12],[84,11,58,13,"clientSecret"],[84,23,58,25],[84,26,58,28,"request"],[84,33,58,35],[84,34,58,36,"clientSecret"],[84,46,58,48],[85,6,59,8],[85,10,59,12],[85,11,59,13,"prompt"],[85,17,59,19],[85,20,59,22,"request"],[85,27,59,29],[85,28,59,30,"prompt"],[85,34,59,36],[86,6,60,8],[86,10,60,12],[86,11,60,13,"state"],[86,16,60,18],[86,19,60,21,"request"],[86,26,60,28],[86,27,60,29,"state"],[86,32,60,34],[86,36,60,38,"PKCE"],[86,40,60,42],[86,41,60,43,"generateRandom"],[86,55,60,57],[86,56,60,58],[86,58,60,60],[86,59,60,61],[87,6,61,8],[87,10,61,12],[87,11,61,13,"extraParams"],[87,22,61,24],[87,25,61,27,"request"],[87,32,61,34],[87,33,61,35,"extraParams"],[87,44,61,46],[87,48,61,50],[87,49,61,51],[87,50,61,52],[88,6,62,8],[88,10,62,12],[88,11,62,13,"codeChallengeMethod"],[88,30,62,32],[88,33,62,35,"request"],[88,40,62,42],[88,41,62,43,"codeChallengeMethod"],[88,60,62,62],[88,64,62,66,"CodeChallengeMethod"],[88,81,62,85],[88,82,62,85,"CodeChallengeMethod"],[88,101,62,85],[88,102,62,86,"S256"],[88,106,62,90],[89,6,63,8],[90,6,64,8],[90,10,64,12],[90,11,64,13,"usePKCE"],[90,18,64,20],[90,21,64,23,"request"],[90,28,64,30],[90,29,64,31,"usePKCE"],[90,36,64,38],[90,40,64,42],[90,44,64,46],[91,6,65,8],[92,6,66,8],[92,10,66,12,"__DEV__"],[92,17,66,19],[92,19,66,21],[93,8,67,12],[93,12,67,16],[93,16,67,20],[93,17,67,21,"prompt"],[93,23,67,27],[93,27,67,31],[93,31,67,35],[93,32,67,36,"extraParams"],[93,43,67,47],[93,44,67,48,"prompt"],[93,50,67,54],[93,52,67,56],[94,10,68,16,"console"],[94,17,68,23],[94,18,68,24,"warn"],[94,22,68,28],[94,23,68,29],[94,98,68,104],[94,99,68,105],[95,8,69,12],[96,8,70,12],[96,12,70,16],[96,16,70,20],[96,17,70,21,"clientSecret"],[96,29,70,33],[96,33,70,37],[96,37,70,41],[96,38,70,42,"extraParams"],[96,49,70,53],[96,50,70,54,"client_secret"],[96,63,70,67],[96,65,70,69],[97,10,71,16,"console"],[97,17,71,23],[97,18,71,24,"warn"],[97,22,71,28],[97,23,71,29],[97,111,71,117],[97,112,71,118],[98,8,72,12],[99,8,73,12],[99,12,73,16],[99,16,73,20],[99,17,73,21,"codeChallengeMethod"],[99,36,73,40],[99,40,73,44],[99,44,73,48],[99,45,73,49,"extraParams"],[99,56,73,60],[99,57,73,61,"code_challenge_method"],[99,78,73,82],[99,80,73,84],[100,10,74,16,"console"],[100,17,74,23],[100,18,74,24,"warn"],[100,22,74,28],[100,23,74,29],[100,126,74,132],[100,127,74,133],[101,8,75,12],[102,6,76,8],[103,6,77,8],[103,10,77,8,"invariant"],[103,19,77,17],[103,20,77,17,"default"],[103,27,77,17],[103,29,77,18],[103,33,77,22],[103,34,77,23,"codeChallengeMethod"],[103,53,77,42],[103,58,77,47,"CodeChallengeMethod"],[103,75,77,66],[103,76,77,66,"CodeChallengeMethod"],[103,95,77,66],[103,96,77,67,"Plain"],[103,101,77,72],[103,103,77,74],[103,187,77,158],[103,188,77,159],[104,6,78,8],[104,10,78,8,"invariant"],[104,19,78,17],[104,20,78,17,"default"],[104,27,78,17],[104,29,78,18],[104,33,78,22],[104,34,78,23,"redirectUri"],[104,45,78,34],[104,47,78,36],[104,104,78,93,"Platform"],[104,112,78,101],[104,113,78,101,"default"],[104,120,78,101],[104,121,78,102,"select"],[104,127,78,108],[104,128,78,109],[105,8,79,12,"web"],[105,11,79,15],[105,13,79,17],[105,39,79,43],[106,8,80,12,"default"],[106,15,80,19],[106,17,80,21],[107,6,81,8],[107,7,81,9],[107,8,81,10],[107,10,81,12],[107,11,81,13],[108,4,82,4],[109,4,83,4],[110,0,84,0],[111,0,85,0],[112,4,86,4],[112,10,86,10,"getAuthRequestConfigAsync"],[112,35,86,35,"getAuthRequestConfigAsync"],[112,36,86,35],[112,38,86,38],[113,6,87,8],[113,10,87,12],[113,14,87,16],[113,15,87,17,"usePKCE"],[113,22,87,24],[113,24,87,26],[114,8,88,12],[114,14,88,18],[114,18,88,22],[114,19,88,23,"ensureCodeIsSetupAsync"],[114,41,88,45],[114,42,88,46],[114,43,88,47],[115,6,89,8],[116,6,90,8],[116,13,90,15],[117,8,91,12,"responseType"],[117,20,91,24],[117,22,91,26],[117,26,91,30],[117,27,91,31,"responseType"],[117,39,91,43],[118,8,92,12,"clientId"],[118,16,92,20],[118,18,92,22],[118,22,92,26],[118,23,92,27,"clientId"],[118,31,92,35],[119,8,93,12,"redirectUri"],[119,19,93,23],[119,21,93,25],[119,25,93,29],[119,26,93,30,"redirectUri"],[119,37,93,41],[120,8,94,12,"scopes"],[120,14,94,18],[120,16,94,20],[120,20,94,24],[120,21,94,25,"scopes"],[120,27,94,31],[121,8,95,12,"clientSecret"],[121,20,95,24],[121,22,95,26],[121,26,95,30],[121,27,95,31,"clientSecret"],[121,39,95,43],[122,8,96,12,"codeChallenge"],[122,21,96,25],[122,23,96,27],[122,27,96,31],[122,28,96,32,"codeChallenge"],[122,41,96,45],[123,8,97,12,"codeChallengeMethod"],[123,27,97,31],[123,29,97,33],[123,33,97,37],[123,34,97,38,"codeChallengeMethod"],[123,53,97,57],[124,8,98,12,"prompt"],[124,14,98,18],[124,16,98,20],[124,20,98,24],[124,21,98,25,"prompt"],[124,27,98,31],[125,8,99,12,"state"],[125,13,99,17],[125,15,99,19],[125,19,99,23],[125,20,99,24,"state"],[125,25,99,29],[126,8,100,12,"extraParams"],[126,19,100,23],[126,21,100,25],[126,25,100,29],[126,26,100,30,"extraParams"],[126,37,100,41],[127,8,101,12,"usePKCE"],[127,15,101,19],[127,17,101,21],[127,21,101,25],[127,22,101,26,"usePKCE"],[128,6,102,8],[128,7,102,9],[129,4,103,4],[130,4,104,4],[131,0,105,0],[132,0,106,0],[133,0,107,0],[134,0,108,0],[135,0,109,0],[136,4,110,4],[136,10,110,10,"promptAsync"],[136,21,110,21,"promptAsync"],[136,22,110,22,"discovery"],[136,31,110,31],[136,33,110,33],[137,6,110,35,"url"],[137,9,110,38],[138,6,110,40],[138,9,110,43,"options"],[139,4,110,51],[139,5,110,52],[139,8,110,55],[139,9,110,56],[139,10,110,57],[139,12,110,59],[140,6,111,8],[140,10,111,12],[140,11,111,13,"url"],[140,14,111,16],[140,16,111,18],[141,8,112,12],[141,12,112,16],[141,13,112,17],[141,17,112,21],[141,18,112,22,"url"],[141,21,112,25],[141,23,112,27],[142,10,113,16],[143,10,114,16],[143,17,114,23],[143,21,114,27],[143,22,114,28,"promptAsync"],[143,33,114,39],[143,34,114,40,"discovery"],[143,43,114,49],[143,45,114,51],[144,12,115,20],[144,15,115,23,"options"],[144,22,115,30],[145,12,116,20,"url"],[145,15,116,23],[145,17,116,25],[145,23,116,31],[145,27,116,35],[145,28,116,36,"makeAuthUrlAsync"],[145,44,116,52],[145,45,116,53,"discovery"],[145,54,116,62],[146,10,117,16],[146,11,117,17],[146,12,117,18],[147,8,118,12],[148,8,119,12],[149,8,120,12,"url"],[149,11,120,15],[149,14,120,18],[149,18,120,22],[149,19,120,23,"url"],[149,22,120,26],[150,6,121,8],[151,6,122,8],[152,6,123,8],[152,10,123,8,"invariant"],[152,19,123,17],[152,20,123,17,"default"],[152,27,123,17],[152,29,123,18,"url"],[152,32,123,21],[152,34,123,23],[152,170,123,159],[152,171,123,160],[153,6,124,8],[153,12,124,14,"startUrl"],[153,20,124,22],[153,23,124,25,"url"],[153,26,124,28],[154,6,125,8],[154,12,125,14,"returnUrl"],[154,21,125,23],[154,24,125,26],[154,28,125,30],[154,29,125,31,"redirectUri"],[154,40,125,42],[155,6,126,8],[156,6,127,8],[157,6,128,8],[157,10,128,12,"_authLock"],[157,19,128,21],[157,21,128,23],[158,8,129,12],[158,12,129,16,"__DEV__"],[158,19,129,23],[158,21,129,25],[159,10,130,16,"console"],[159,17,130,23],[159,18,130,24,"warn"],[159,22,130,28],[159,23,130,29],[159,156,130,162],[159,157,130,163],[160,8,131,12],[161,8,132,12],[161,15,132,19],[162,10,132,21,"type"],[162,14,132,25],[162,16,132,27],[163,8,132,36],[163,9,132,37],[164,6,133,8],[165,6,134,8],[166,6,135,8,"_authLock"],[166,15,135,17],[166,18,135,20],[166,22,135,24],[167,6,136,8],[167,10,136,12,"result"],[167,16,136,18],[168,6,137,8],[168,10,137,12],[169,8,138,12,"result"],[169,14,138,18],[169,17,138,21],[169,23,138,27,"WebBrowser"],[169,33,138,37],[169,34,138,38,"openAuthSessionAsync"],[169,54,138,58],[169,55,138,59,"startUrl"],[169,63,138,67],[169,65,138,69,"returnUrl"],[169,74,138,78],[169,76,138,80,"options"],[169,83,138,87],[169,84,138,88],[170,6,139,8],[170,7,139,9],[170,16,140,16],[171,8,141,12,"_authLock"],[171,17,141,21],[171,20,141,24],[171,25,141,29],[172,6,142,8],[173,6,143,8],[173,10,143,12,"result"],[173,16,143,18],[173,17,143,19,"type"],[173,21,143,23],[173,26,143,28],[173,34,143,36],[173,36,143,38],[174,8,144,12],[175,8,145,12],[175,14,145,18],[175,18,145,22,"Error"],[175,23,145,27],[175,24,145,28],[175,54,145,58],[175,55,145,59],[176,6,146,8],[177,6,147,8],[177,10,147,12,"result"],[177,16,147,18],[177,17,147,19,"type"],[177,21,147,23],[177,26,147,28],[177,35,147,37],[177,37,147,39],[178,8,148,12],[178,15,148,19],[179,10,148,21,"type"],[179,14,148,25],[179,16,148,27,"result"],[179,22,148,33],[179,23,148,34,"type"],[180,8,148,39],[180,9,148,40],[181,6,149,8],[182,6,150,8],[182,13,150,15],[182,17,150,19],[182,18,150,20,"parseReturnUrl"],[182,32,150,34],[182,33,150,35,"result"],[182,39,150,41],[182,40,150,42,"url"],[182,43,150,45],[182,44,150,46],[183,4,151,4],[184,4,152,4,"parseReturnUrl"],[184,18,152,18,"parseReturnUrl"],[184,19,152,19,"url"],[184,22,152,22],[184,24,152,24],[185,6,153,8],[185,12,153,14],[186,8,153,16,"params"],[186,14,153,22],[187,8,153,24,"errorCode"],[188,6,153,34],[188,7,153,35],[188,10,153,38,"QueryParams"],[188,21,153,49],[188,22,153,50,"getQueryParams"],[188,36,153,64],[188,37,153,65,"url"],[188,40,153,68],[188,41,153,69],[189,6,154,8],[189,12,154,14],[190,8,154,16,"state"],[190,13,154,21],[191,8,154,23,"error"],[191,13,154,28],[191,16,154,31,"errorCode"],[192,6,154,41],[192,7,154,42],[192,10,154,45,"params"],[192,16,154,51],[193,6,155,8],[193,10,155,12,"parsedError"],[193,21,155,23],[193,24,155,26],[193,28,155,30],[194,6,156,8],[194,10,156,12,"authentication"],[194,24,156,26],[194,27,156,29],[194,31,156,33],[195,6,157,8],[195,10,157,12,"state"],[195,15,157,17],[195,20,157,22],[195,24,157,26],[195,25,157,27,"state"],[195,30,157,32],[195,32,157,34],[196,8,158,12],[197,8,159,12,"parsedError"],[197,19,159,23],[197,22,159,26],[197,26,159,30,"AuthError"],[197,33,159,39],[197,34,159,39,"AuthError"],[197,43,159,39],[197,44,159,40],[198,10,160,16,"error"],[198,15,160,21],[198,17,160,23],[198,33,160,39],[199,10,161,16,"error_description"],[199,27,161,33],[199,29,161,35],[200,8,162,12],[200,9,162,13],[200,10,162,14],[201,6,163,8],[201,7,163,9],[201,13,164,13],[201,17,164,17,"error"],[201,22,164,22],[201,24,164,24],[202,8,165,12,"parsedError"],[202,19,165,23],[202,22,165,26],[202,26,165,30,"AuthError"],[202,33,165,39],[202,34,165,39,"AuthError"],[202,43,165,39],[202,44,165,40],[203,10,165,42,"error"],[203,15,165,47],[204,10,165,49],[204,13,165,52,"params"],[205,8,165,59],[205,9,165,60],[205,10,165,61],[206,6,166,8],[207,6,167,8],[207,10,167,12,"params"],[207,16,167,18],[207,17,167,19,"access_token"],[207,29,167,31],[207,31,167,33],[208,8,168,12,"authentication"],[208,22,168,26],[208,25,168,29,"TokenResponse"],[208,38,168,42],[208,39,168,42,"TokenResponse"],[208,52,168,42],[208,53,168,43,"fromQueryParams"],[208,68,168,58],[208,69,168,59,"params"],[208,75,168,65],[208,76,168,66],[209,6,169,8],[210,6,170,8],[210,13,170,15],[211,8,171,12,"type"],[211,12,171,16],[211,14,171,18,"parsedError"],[211,25,171,29],[211,28,171,32],[211,35,171,39],[211,38,171,42],[211,47,171,51],[212,8,172,12,"error"],[212,13,172,17],[212,15,172,19,"parsedError"],[212,26,172,30],[213,8,173,12,"url"],[213,11,173,15],[214,8,174,12,"params"],[214,14,174,18],[215,8,175,12,"authentication"],[215,22,175,26],[216,8,176,12],[217,8,177,12,"errorCode"],[218,6,178,8],[218,7,178,9],[219,4,179,4],[220,4,180,4],[221,0,181,0],[222,0,182,0],[223,0,183,0],[224,0,184,0],[225,4,185,4],[225,10,185,10,"makeAuthUrlAsync"],[225,26,185,26,"makeAuthUrlAsync"],[225,27,185,27,"discovery"],[225,36,185,36],[225,38,185,38],[226,6,186,8],[226,12,186,14,"request"],[226,19,186,21],[226,22,186,24],[226,28,186,30],[226,32,186,34],[226,33,186,35,"getAuthRequestConfigAsync"],[226,58,186,60],[226,59,186,61],[226,60,186,62],[227,6,187,8],[227,10,187,12],[227,11,187,13,"request"],[227,18,187,20],[227,19,187,21,"state"],[227,24,187,26],[227,26,188,12],[227,32,188,18],[227,36,188,22,"Error"],[227,41,188,27],[227,42,188,28],[227,98,188,84],[227,99,188,85],[228,6,189,8],[229,6,190,8],[229,12,190,14,"params"],[229,18,190,20],[229,21,190,23],[229,22,190,24],[229,23,190,25],[230,6,191,8],[230,10,191,12,"request"],[230,17,191,19],[230,18,191,20,"codeChallenge"],[230,31,191,33],[230,33,191,35],[231,8,192,12,"params"],[231,14,192,18],[231,15,192,19,"code_challenge"],[231,29,192,33],[231,32,192,36,"request"],[231,39,192,43],[231,40,192,44,"codeChallenge"],[231,53,192,57],[232,6,193,8],[233,6,194,8],[234,6,195,8],[234,11,195,13],[234,17,195,19,"extra"],[234,22,195,24],[234,26,195,28,"request"],[234,33,195,35],[234,34,195,36,"extraParams"],[234,45,195,47],[234,47,195,49],[235,8,196,12],[235,12,196,16,"extra"],[235,17,196,21],[235,21,196,25,"request"],[235,28,196,32],[235,29,196,33,"extraParams"],[235,40,196,44],[235,42,196,46],[236,10,197,16,"params"],[236,16,197,22],[236,17,197,23,"extra"],[236,22,197,28],[236,23,197,29],[236,26,197,32,"request"],[236,33,197,39],[236,34,197,40,"extraParams"],[236,45,197,51],[236,46,197,52,"extra"],[236,51,197,57],[236,52,197,58],[237,8,198,12],[238,6,199,8],[239,6,200,8],[239,10,200,12,"request"],[239,17,200,19],[239,18,200,20,"usePKCE"],[239,25,200,27],[239,29,200,31,"request"],[239,36,200,38],[239,37,200,39,"codeChallengeMethod"],[239,56,200,58],[239,58,200,60],[240,8,201,12,"params"],[240,14,201,18],[240,15,201,19,"code_challenge_method"],[240,36,201,40],[240,39,201,43,"request"],[240,46,201,50],[240,47,201,51,"codeChallengeMethod"],[240,66,201,70],[241,6,202,8],[242,6,203,8],[242,10,203,12,"request"],[242,17,203,19],[242,18,203,20,"clientSecret"],[242,30,203,32],[242,32,203,34],[243,8,204,12,"params"],[243,14,204,18],[243,15,204,19,"client_secret"],[243,28,204,32],[243,31,204,35,"request"],[243,38,204,42],[243,39,204,43,"clientSecret"],[243,51,204,55],[244,6,205,8],[245,6,206,8],[245,10,206,12,"request"],[245,17,206,19],[245,18,206,20,"prompt"],[245,24,206,26],[245,26,206,28],[246,8,207,12,"params"],[246,14,207,18],[246,15,207,19,"prompt"],[246,21,207,25],[246,24,208,16],[246,31,208,23,"request"],[246,38,208,30],[246,39,208,31,"prompt"],[246,45,208,37],[246,50,208,42],[246,58,208,50],[246,61,208,53,"request"],[246,68,208,60],[246,69,208,61,"prompt"],[246,75,208,67],[246,78,208,70,"request"],[246,85,208,77],[246,86,208,78,"prompt"],[246,92,208,84],[246,93,208,85,"join"],[246,97,208,89],[246,98,208,90],[246,101,208,93],[246,102,208,94],[247,6,209,8],[248,6,210,8],[249,6,211,8,"params"],[249,12,211,14],[249,13,211,15,"redirect_uri"],[249,25,211,27],[249,28,211,30,"request"],[249,35,211,37],[249,36,211,38,"redirectUri"],[249,47,211,49],[250,6,212,8,"params"],[250,12,212,14],[250,13,212,15,"client_id"],[250,22,212,24],[250,25,212,27,"request"],[250,32,212,34],[250,33,212,35,"clientId"],[250,41,212,43],[251,6,213,8,"params"],[251,12,213,14],[251,13,213,15,"response_type"],[251,26,213,28],[251,29,213,31,"request"],[251,36,213,38],[251,37,213,39,"responseType"],[251,49,213,51],[252,6,214,8,"params"],[252,12,214,14],[252,13,214,15,"state"],[252,18,214,20],[252,21,214,23,"request"],[252,28,214,30],[252,29,214,31,"state"],[252,34,214,36],[253,6,215,8],[253,10,215,12,"request"],[253,17,215,19],[253,18,215,20,"scopes"],[253,24,215,26],[253,26,215,28,"length"],[253,32,215,34],[253,34,215,36],[254,8,216,12,"params"],[254,14,216,18],[254,15,216,19,"scope"],[254,20,216,24],[254,23,216,27,"request"],[254,30,216,34],[254,31,216,35,"scopes"],[254,37,216,41],[254,38,216,42,"join"],[254,42,216,46],[254,43,216,47],[254,46,216,50],[254,47,216,51],[255,6,217,8],[256,6,218,8],[257,6,219,8],[257,10,219,12],[257,11,219,13,"url"],[257,14,219,16],[257,17,219,19],[257,20,219,22,"discovery"],[257,29,219,31],[257,30,219,32,"authorizationEndpoint"],[257,51,219,53],[257,55,219,57],[257,59,219,61,"URLSearchParams"],[257,74,219,76],[257,75,219,77,"params"],[257,81,219,83],[257,82,219,84],[257,84,219,86],[258,6,220,8],[258,13,220,15],[258,17,220,19],[258,18,220,20,"url"],[258,21,220,23],[259,4,221,4],[260,4,222,4],[260,10,222,10,"ensureCodeIsSetupAsync"],[260,32,222,32,"ensureCodeIsSetupAsync"],[260,33,222,32],[260,35,222,35],[261,6,223,8],[261,10,223,12],[261,14,223,16],[261,15,223,17,"codeVerifier"],[261,27,223,29],[261,29,223,31],[262,8,224,12],[263,6,225,8],[264,6,226,8],[265,6,227,8],[265,12,227,14],[266,8,227,16,"codeVerifier"],[266,20,227,28],[267,8,227,30,"codeChallenge"],[268,6,227,44],[268,7,227,45],[268,10,227,48],[268,16,227,54,"PKCE"],[268,20,227,58],[268,21,227,59,"buildCodeAsync"],[268,35,227,73],[268,36,227,74],[268,37,227,75],[269,6,228,8],[269,10,228,12],[269,11,228,13,"codeVerifier"],[269,23,228,25],[269,26,228,28,"codeVerifier"],[269,38,228,40],[270,6,229,8],[270,10,229,12],[270,11,229,13,"codeChallenge"],[270,24,229,26],[270,27,229,29,"codeChallenge"],[270,40,229,42],[271,4,230,4],[272,2,231,0],[273,0,231,1],[273,3]],"functionMap":{"names":["<global>","AuthRequest","constructor","getAuthRequestConfigAsync","promptAsync","parseReturnUrl","makeAuthUrlAsync","ensureCodeIsSetupAsync"],"mappings":"AAA;OCmC;ICiB;KD6B;IEI;KFiB;IGO;KHyC;IIC;KJ2B;IKM;KLoC;IMC;KNQ;CDC"},"hasCjsExports":false},"type":"js/module"}]}