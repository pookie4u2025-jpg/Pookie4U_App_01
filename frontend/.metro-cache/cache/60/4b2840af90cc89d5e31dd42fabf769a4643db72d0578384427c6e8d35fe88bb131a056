{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"CodeChallengeMethod\", {\n    enumerable: true,\n    get: function () {\n      return CodeChallengeMethod;\n    }\n  });\n  Object.defineProperty(exports, \"ResponseType\", {\n    enumerable: true,\n    get: function () {\n      return ResponseType;\n    }\n  });\n  Object.defineProperty(exports, \"Prompt\", {\n    enumerable: true,\n    get: function () {\n      return Prompt;\n    }\n  });\n  // @needsAudit\n  var CodeChallengeMethod;\n  (function (CodeChallengeMethod) {\n    /**\n     * The default and recommended method for transforming the code verifier.\n     * - Convert the code verifier to ASCII.\n     * - Create a digest of the string using crypto method SHA256.\n     * - Convert the digest to Base64 and URL encode it.\n     */\n    CodeChallengeMethod[\"S256\"] = \"S256\";\n    /**\n     * This should not be used. When used, the code verifier will be sent to the server as-is.\n     */\n    CodeChallengeMethod[\"Plain\"] = \"plain\";\n  })(CodeChallengeMethod || (CodeChallengeMethod = {}));\n  // @needsAudit\n  /**\n   * The client informs the authorization server of the desired grant type by using the response type.\n   *\n   * @see [Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1).\n   */\n  var ResponseType;\n  (function (ResponseType) {\n    /**\n     * For requesting an authorization code as described by [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\n     */\n    ResponseType[\"Code\"] = \"code\";\n    /**\n     * For requesting an access token (implicit grant) as described by [Section 4.2.1](https://tools.ietf.org/html/rfc6749#section-4.2.1).\n     */\n    ResponseType[\"Token\"] = \"token\";\n    /**\n     * A custom registered type for getting an `id_token` from Google OAuth.\n     */\n    ResponseType[\"IdToken\"] = \"id_token\";\n  })(ResponseType || (ResponseType = {}));\n  // @needsAudit\n  /**\n   * Informs the server if the user should be prompted to login or consent again.\n   * This can be used to present a dialog for switching accounts after the user has already been logged in.\n   * You should use this in favor of clearing cookies (which is mostly not possible on iOS).\n   *\n   * @see [Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest).\n   */\n  var Prompt;\n  (function (Prompt) {\n    /**\n     * Server must not display any auth or consent UI. Can be used to check for existing auth or consent.\n     * An error is returned if a user isn't already authenticated or the client doesn't have pre-configured consent for the requested claims, or does not fulfill other conditions for processing the request.\n     * The error code will typically be `login_required`, `interaction_required`, or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError).\n     */\n    Prompt[\"None\"] = \"none\";\n    /**\n     * The server should prompt the user to reauthenticate.\n     * If it cannot reauthenticate the End-User, it must return an error, typically `login_required`.\n     */\n    Prompt[\"Login\"] = \"login\";\n    /**\n     * Server should prompt the user for consent before returning information to the client.\n     * If it cannot obtain consent, it must return an error, typically `consent_required`.\n     */\n    Prompt[\"Consent\"] = \"consent\";\n    /**\n     * Server should prompt the user to select an account. Can be used to switch accounts.\n     * If it can't obtain an account selection choice made by the user, it must return an error, typically `account_selection_required`.\n     */\n    Prompt[\"SelectAccount\"] = \"select_account\";\n  })(Prompt || (Prompt = {}));\n});","lineCount":93,"map":[[7,2,2,0,"Object"],[7,8,2,0],[7,9,2,0,"defineProperty"],[7,23,2,0],[7,24,2,0,"exports"],[7,31,2,0],[8,4,2,0,"enumerable"],[8,14,2,0],[9,4,2,0,"get"],[9,7,2,0],[9,18,2,0,"get"],[9,19,2,0],[10,6,2,0],[10,13,2,0,"CodeChallengeMethod"],[10,32,2,0],[11,4,2,0],[12,2,2,0],[13,2,22,0,"Object"],[13,8,22,0],[13,9,22,0,"defineProperty"],[13,23,22,0],[13,24,22,0,"exports"],[13,31,22,0],[14,4,22,0,"enumerable"],[14,14,22,0],[15,4,22,0,"get"],[15,7,22,0],[15,18,22,0,"get"],[15,19,22,0],[16,6,22,0],[16,13,22,0,"ResponseType"],[16,25,22,0],[17,4,22,0],[18,2,22,0],[19,2,45,0,"Object"],[19,8,45,0],[19,9,45,0,"defineProperty"],[19,23,45,0],[19,24,45,0,"exports"],[19,31,45,0],[20,4,45,0,"enumerable"],[20,14,45,0],[21,4,45,0,"get"],[21,7,45,0],[21,18,45,0,"get"],[21,19,45,0],[22,6,45,0],[22,13,45,0,"Prompt"],[22,19,45,0],[23,4,45,0],[24,2,45,0],[25,2,1,0],[26,2,2,7],[26,6,2,11,"CodeChallengeMethod"],[26,25,2,30],[27,2,3,0],[27,3,3,1],[27,13,3,11,"CodeChallengeMethod"],[27,32,3,30],[27,34,3,32],[28,4,4,4],[29,0,5,0],[30,0,6,0],[31,0,7,0],[32,0,8,0],[33,0,9,0],[34,4,10,4,"CodeChallengeMethod"],[34,23,10,23],[34,24,10,24],[34,30,10,30],[34,31,10,31],[34,34,10,34],[34,40,10,40],[35,4,11,4],[36,0,12,0],[37,0,13,0],[38,4,14,4,"CodeChallengeMethod"],[38,23,14,23],[38,24,14,24],[38,31,14,31],[38,32,14,32],[38,35,14,35],[38,42,14,42],[39,2,15,0],[39,3,15,1],[39,5,15,3,"CodeChallengeMethod"],[39,24,15,22],[39,29,15,27,"CodeChallengeMethod"],[39,48,15,46],[39,51,15,49],[39,52,15,50],[39,53,15,51],[39,54,15,52],[39,55,15,53],[40,2,16,0],[41,2,17,0],[42,0,18,0],[43,0,19,0],[44,0,20,0],[45,0,21,0],[46,2,22,7],[46,6,22,11,"ResponseType"],[46,18,22,23],[47,2,23,0],[47,3,23,1],[47,13,23,11,"ResponseType"],[47,25,23,23],[47,27,23,25],[48,4,24,4],[49,0,25,0],[50,0,26,0],[51,4,27,4,"ResponseType"],[51,16,27,16],[51,17,27,17],[51,23,27,23],[51,24,27,24],[51,27,27,27],[51,33,27,33],[52,4,28,4],[53,0,29,0],[54,0,30,0],[55,4,31,4,"ResponseType"],[55,16,31,16],[55,17,31,17],[55,24,31,24],[55,25,31,25],[55,28,31,28],[55,35,31,35],[56,4,32,4],[57,0,33,0],[58,0,34,0],[59,4,35,4,"ResponseType"],[59,16,35,16],[59,17,35,17],[59,26,35,26],[59,27,35,27],[59,30,35,30],[59,40,35,40],[60,2,36,0],[60,3,36,1],[60,5,36,3,"ResponseType"],[60,17,36,15],[60,22,36,20,"ResponseType"],[60,34,36,32],[60,37,36,35],[60,38,36,36],[60,39,36,37],[60,40,36,38],[60,41,36,39],[61,2,37,0],[62,2,38,0],[63,0,39,0],[64,0,40,0],[65,0,41,0],[66,0,42,0],[67,0,43,0],[68,0,44,0],[69,2,45,7],[69,6,45,11,"Prompt"],[69,12,45,17],[70,2,46,0],[70,3,46,1],[70,13,46,11,"Prompt"],[70,19,46,17],[70,21,46,19],[71,4,47,4],[72,0,48,0],[73,0,49,0],[74,0,50,0],[75,0,51,0],[76,4,52,4,"Prompt"],[76,10,52,10],[76,11,52,11],[76,17,52,17],[76,18,52,18],[76,21,52,21],[76,27,52,27],[77,4,53,4],[78,0,54,0],[79,0,55,0],[80,0,56,0],[81,4,57,4,"Prompt"],[81,10,57,10],[81,11,57,11],[81,18,57,18],[81,19,57,19],[81,22,57,22],[81,29,57,29],[82,4,58,4],[83,0,59,0],[84,0,60,0],[85,0,61,0],[86,4,62,4,"Prompt"],[86,10,62,10],[86,11,62,11],[86,20,62,20],[86,21,62,21],[86,24,62,24],[86,33,62,33],[87,4,63,4],[88,0,64,0],[89,0,65,0],[90,0,66,0],[91,4,67,4,"Prompt"],[91,10,67,10],[91,11,67,11],[91,26,67,26],[91,27,67,27],[91,30,67,30],[91,46,67,46],[92,2,68,0],[92,3,68,1],[92,5,68,3,"Prompt"],[92,11,68,9],[92,16,68,14,"Prompt"],[92,22,68,20],[92,25,68,23],[92,26,68,24],[92,27,68,25],[92,28,68,26],[92,29,68,27],[93,0,68,28],[93,3]],"functionMap":{"names":["<global>","<anonymous>"],"mappings":"AAA;CCE;CDY;CCQ;CDa;CCU;CDsB"},"hasCjsExports":false},"type":"js/module"}]}