{"dependencies":[{"name":"@babel/runtime/helpers/superPropGet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b4Lel0pEiTM8mvZZX/d05uR+OmU=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":40,"index":75}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./Base64","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":35,"index":111}}],"key":"n1MyTQaw9Ongoku/usWwSyOvS2k=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":112},"end":{"line":4,"column":38,"index":150}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./Fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":151},"end":{"line":5,"column":39,"index":190}}],"key":"PeuZJEzLUzE71YmlrqcRrF53N6s=","exportNames":["*"],"imports":1}},{"name":"./TokenRequest.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":191},"end":{"line":6,"column":50,"index":241}}],"key":"nhvkV9DwU2zmYd/Ws+l9/RADlsc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getCurrentTimeInSeconds = getCurrentTimeInSeconds;\n  Object.defineProperty(exports, \"TokenResponse\", {\n    enumerable: true,\n    get: function () {\n      return TokenResponse;\n    }\n  });\n  Object.defineProperty(exports, \"Request\", {\n    enumerable: true,\n    get: function () {\n      return Request;\n    }\n  });\n  Object.defineProperty(exports, \"TokenRequest\", {\n    enumerable: true,\n    get: function () {\n      return TokenRequest;\n    }\n  });\n  Object.defineProperty(exports, \"AccessTokenRequest\", {\n    enumerable: true,\n    get: function () {\n      return AccessTokenRequest;\n    }\n  });\n  Object.defineProperty(exports, \"RefreshTokenRequest\", {\n    enumerable: true,\n    get: function () {\n      return RefreshTokenRequest;\n    }\n  });\n  Object.defineProperty(exports, \"RevokeTokenRequest\", {\n    enumerable: true,\n    get: function () {\n      return RevokeTokenRequest;\n    }\n  });\n  exports.exchangeCodeAsync = exchangeCodeAsync;\n  exports.refreshAsync = refreshAsync;\n  exports.revokeAsync = revokeAsync;\n  exports.fetchUserInfoAsync = fetchUserInfoAsync;\n  var _babelRuntimeHelpersSuperPropGet = require(_dependencyMap[0], \"@babel/runtime/helpers/superPropGet\");\n  var _superPropGet = _interopDefault(_babelRuntimeHelpersSuperPropGet);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[1], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[2], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _invariant = require(_dependencyMap[6], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _Base = require(_dependencyMap[8], \"./Base64\");\n  var Base64 = _interopNamespace(_Base);\n  var _Errors = require(_dependencyMap[9], \"./Errors\");\n  var _Fetch = require(_dependencyMap[10], \"./Fetch\");\n  var _TokenRequestTypes = require(_dependencyMap[11], \"./TokenRequest.types\");\n  /**\n   * Returns the current time in seconds.\n   */\n  function getCurrentTimeInSeconds() {\n    return Math.floor(Date.now() / 1000);\n  }\n  /**\n   * Token Response.\n   *\n   * [Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\n   */\n  var TokenResponse = /*#__PURE__*/function () {\n    function TokenResponse(response, rawResponse) {\n      (0, _classCallCheck.default)(this, TokenResponse);\n      this.rawResponse = rawResponse;\n      this.accessToken = response.accessToken;\n      this.tokenType = response.tokenType ?? 'bearer';\n      this.expiresIn = response.expiresIn;\n      this.refreshToken = response.refreshToken;\n      this.scope = response.scope;\n      this.state = response.state;\n      this.idToken = response.idToken;\n      this.issuedAt = response.issuedAt ?? getCurrentTimeInSeconds();\n    }\n    return (0, _createClass.default)(TokenResponse, [{\n      key: \"applyResponseConfig\",\n      value: function applyResponseConfig(response) {\n        this.accessToken = response.accessToken ?? this.accessToken;\n        this.tokenType = response.tokenType ?? this.tokenType ?? 'bearer';\n        this.expiresIn = response.expiresIn ?? this.expiresIn;\n        this.refreshToken = response.refreshToken ?? this.refreshToken;\n        this.scope = response.scope ?? this.scope;\n        this.state = response.state ?? this.state;\n        this.idToken = response.idToken ?? this.idToken;\n        this.issuedAt = response.issuedAt ?? this.issuedAt ?? getCurrentTimeInSeconds();\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          accessToken: this.accessToken,\n          idToken: this.idToken,\n          refreshToken: this.refreshToken,\n          scope: this.scope,\n          state: this.state,\n          tokenType: this.tokenType,\n          issuedAt: this.issuedAt,\n          expiresIn: this.expiresIn\n        };\n      }\n    }, {\n      key: \"refreshAsync\",\n      value: function () {\n        var _refreshAsync = (0, _asyncToGenerator.default)(function* (config, discovery) {\n          var request = new RefreshTokenRequest({\n            ...config,\n            refreshToken: this.refreshToken\n          });\n          var response = yield request.performAsync(discovery);\n          // Custom: reuse the refresh token if one wasn't returned\n          response.refreshToken = response.refreshToken ?? this.refreshToken;\n          var json = response.getRequestConfig();\n          this.applyResponseConfig(json);\n          return this;\n        });\n        function refreshAsync(_x, _x2) {\n          return _refreshAsync.apply(this, arguments);\n        }\n        return refreshAsync;\n      }()\n    }, {\n      key: \"shouldRefresh\",\n      value: function shouldRefresh() {\n        // no refresh token available and token has expired\n        return !(TokenResponse.isTokenFresh(this) || !this.refreshToken);\n      }\n    }], [{\n      key: \"isTokenFresh\",\n      value:\n      /**\n       * Determines whether a token refresh request must be made to refresh the tokens\n       *\n       * @param token\n       * @param secondsMargin\n       */\n      function isTokenFresh(token) {\n        var secondsMargin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60 * 10 * -1;\n        if (!token) {\n          return false;\n        }\n        if (token.expiresIn) {\n          var now = getCurrentTimeInSeconds();\n          return now < token.issuedAt + token.expiresIn + secondsMargin;\n        }\n        // if there is no expiration time but we have an access token, it is assumed to never expire\n        return true;\n      }\n      /**\n       * Creates a `TokenResponse` from query parameters returned from an `AuthRequest`.\n       *\n       * @param params\n       */\n    }, {\n      key: \"fromQueryParams\",\n      value: function fromQueryParams(params) {\n        return new TokenResponse({\n          accessToken: params.access_token,\n          refreshToken: params.refresh_token,\n          scope: params.scope,\n          state: params.state,\n          idToken: params.id_token,\n          tokenType: params.token_type,\n          expiresIn: params.expires_in,\n          issuedAt: params.issued_at\n        });\n      }\n\n      /**\n       * Contains the unprocessed token response. Use it to access properties which aren't part of RFC 6749.\n       * */\n    }]);\n  }();\n  var Request = /*#__PURE__*/function () {\n    function Request(request) {\n      (0, _classCallCheck.default)(this, Request);\n      this.request = request;\n    }\n    return (0, _createClass.default)(Request, [{\n      key: \"performAsync\",\n      value: function () {\n        var _performAsync = (0, _asyncToGenerator.default)(function* (discovery) {\n          throw new Error('performAsync must be extended');\n        });\n        function performAsync(_x3) {\n          return _performAsync.apply(this, arguments);\n        }\n        return performAsync;\n      }()\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        throw new Error('getRequestConfig must be extended');\n      }\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        throw new Error('getQueryBody must be extended');\n      }\n    }]);\n  }();\n  /**\n   * A generic token request.\n   */\n  var TokenRequest = /*#__PURE__*/function (_Request) {\n    function TokenRequest(request, grantType) {\n      var _this;\n      (0, _classCallCheck.default)(this, TokenRequest);\n      _this = (0, _callSuper.default)(this, TokenRequest, [request]);\n      _this.grantType = grantType;\n      _this.clientId = request.clientId;\n      _this.clientSecret = request.clientSecret;\n      _this.extraParams = request.extraParams;\n      _this.scopes = request.scopes;\n      return _this;\n    }\n    (0, _inherits.default)(TokenRequest, _Request);\n    return (0, _createClass.default)(TokenRequest, [{\n      key: \"getHeaders\",\n      value: function getHeaders() {\n        var headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (typeof this.clientSecret !== 'undefined') {\n          // If client secret exists, it should be converted to base64\n          // https://tools.ietf.org/html/rfc6749#section-2.3.1\n          var encodedClientId = encodeURIComponent(this.clientId);\n          var encodedClientSecret = encodeURIComponent(this.clientSecret);\n          var credentials = `${encodedClientId}:${encodedClientSecret}`;\n          var basicAuth = Base64.encodeNoWrap(credentials);\n          headers.Authorization = `Basic ${basicAuth}`;\n        }\n        return headers;\n      }\n    }, {\n      key: \"performAsync\",\n      value: function () {\n        var _performAsync2 = (0, _asyncToGenerator.default)(function* (discovery) {\n          // redirect URI must not be nil\n          (0, invariant.default)(discovery.tokenEndpoint, `Cannot invoke \\`performAsync()\\` without a valid tokenEndpoint`);\n          var response = yield (0, _Fetch.requestAsync)(discovery.tokenEndpoint, {\n            dataType: 'json',\n            method: 'POST',\n            headers: this.getHeaders(),\n            body: this.getQueryBody()\n          });\n          if ('error' in response) {\n            throw new _Errors.TokenError(response);\n          }\n          return new TokenResponse({\n            accessToken: response.access_token,\n            tokenType: response.token_type,\n            expiresIn: response.expires_in,\n            refreshToken: response.refresh_token,\n            scope: response.scope,\n            idToken: response.id_token,\n            issuedAt: response.issued_at\n          }, response);\n        });\n        function performAsync(_x4) {\n          return _performAsync2.apply(this, arguments);\n        }\n        return performAsync;\n      }()\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = {\n          grant_type: this.grantType\n        };\n        if (!this.clientSecret) {\n          // Only add the client ID if client secret is not present, otherwise pass the client id with the secret in the request body.\n          queryBody.client_id = this.clientId;\n        }\n        if (this.scopes) {\n          queryBody.scope = this.scopes.join(' ');\n        }\n        if (this.extraParams) {\n          for (var extra in this.extraParams) {\n            if (extra in this.extraParams && !(extra in queryBody)) {\n              queryBody[extra] = this.extraParams[extra];\n            }\n          }\n        }\n        return queryBody;\n      }\n    }]);\n  }(Request);\n  /**\n   * Access token request. Exchange an authorization code for a user access token.\n   *\n   * [Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\n   */\n  var AccessTokenRequest = /*#__PURE__*/function (_TokenRequest) {\n    function AccessTokenRequest(options) {\n      var _this2;\n      (0, _classCallCheck.default)(this, AccessTokenRequest);\n      (0, invariant.default)(options.redirectUri, `\\`AccessTokenRequest\\` requires a valid \\`redirectUri\\` (it must also match the one used in the auth request). Example: ${_reactNative.Platform.select({\n        web: 'https://yourwebsite.com/redirect',\n        default: 'myapp://redirect'\n      })}`);\n      (0, invariant.default)(options.code, `\\`AccessTokenRequest\\` requires a valid authorization \\`code\\`. This is what's received from the authorization server after an auth request.`);\n      _this2 = (0, _callSuper.default)(this, AccessTokenRequest, [options, _TokenRequestTypes.GrantType.AuthorizationCode]);\n      _this2.code = options.code;\n      _this2.redirectUri = options.redirectUri;\n      return _this2;\n    }\n    (0, _inherits.default)(AccessTokenRequest, _TokenRequest);\n    return (0, _createClass.default)(AccessTokenRequest, [{\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = (0, _superPropGet.default)(AccessTokenRequest, \"getQueryBody\", this, 3)([]);\n        if (this.redirectUri) {\n          queryBody.redirect_uri = this.redirectUri;\n        }\n        if (this.code) {\n          queryBody.code = this.code;\n        }\n        return queryBody;\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          grantType: this.grantType,\n          code: this.code,\n          redirectUri: this.redirectUri,\n          extraParams: this.extraParams,\n          scopes: this.scopes\n        };\n      }\n    }]);\n  }(TokenRequest);\n  /**\n   * Refresh request.\n   *\n   * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n   */\n  var RefreshTokenRequest = /*#__PURE__*/function (_TokenRequest2) {\n    function RefreshTokenRequest(options) {\n      var _this3;\n      (0, _classCallCheck.default)(this, RefreshTokenRequest);\n      (0, invariant.default)(options.refreshToken, `\\`RefreshTokenRequest\\` requires a valid \\`refreshToken\\`.`);\n      _this3 = (0, _callSuper.default)(this, RefreshTokenRequest, [options, _TokenRequestTypes.GrantType.RefreshToken]);\n      _this3.refreshToken = options.refreshToken;\n      return _this3;\n    }\n    (0, _inherits.default)(RefreshTokenRequest, _TokenRequest2);\n    return (0, _createClass.default)(RefreshTokenRequest, [{\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = (0, _superPropGet.default)(RefreshTokenRequest, \"getQueryBody\", this, 3)([]);\n        if (this.refreshToken) {\n          queryBody.refresh_token = this.refreshToken;\n        }\n        return queryBody;\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          grantType: this.grantType,\n          refreshToken: this.refreshToken,\n          extraParams: this.extraParams,\n          scopes: this.scopes\n        };\n      }\n    }]);\n  }(TokenRequest);\n  /**\n   * Revocation request for a given token.\n   *\n   * [Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\n   */\n  var RevokeTokenRequest = /*#__PURE__*/function (_Request2) {\n    function RevokeTokenRequest(request) {\n      var _this4;\n      (0, _classCallCheck.default)(this, RevokeTokenRequest);\n      _this4 = (0, _callSuper.default)(this, RevokeTokenRequest, [request]);\n      (0, invariant.default)(request.token, `\\`RevokeTokenRequest\\` requires a valid \\`token\\` to revoke.`);\n      _this4.clientId = request.clientId;\n      _this4.clientSecret = request.clientSecret;\n      _this4.token = request.token;\n      _this4.tokenTypeHint = request.tokenTypeHint;\n      return _this4;\n    }\n    (0, _inherits.default)(RevokeTokenRequest, _Request2);\n    return (0, _createClass.default)(RevokeTokenRequest, [{\n      key: \"getHeaders\",\n      value: function getHeaders() {\n        var headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (typeof this.clientSecret !== 'undefined' && this.clientId) {\n          // If client secret exists, it should be converted to base64\n          // https://tools.ietf.org/html/rfc6749#section-2.3.1\n          var encodedClientId = encodeURIComponent(this.clientId);\n          var encodedClientSecret = encodeURIComponent(this.clientSecret);\n          var credentials = `${encodedClientId}:${encodedClientSecret}`;\n          var basicAuth = Base64.encodeNoWrap(credentials);\n          headers.Authorization = `Basic ${basicAuth}`;\n        }\n        return headers;\n      }\n      /**\n       * Perform a token revocation request.\n       *\n       * @param discovery The `revocationEndpoint` for a provider.\n       */\n    }, {\n      key: \"performAsync\",\n      value: (function () {\n        var _performAsync3 = (0, _asyncToGenerator.default)(function* (discovery) {\n          (0, invariant.default)(discovery.revocationEndpoint, `Cannot invoke \\`performAsync()\\` without a valid revocationEndpoint`);\n          yield (0, _Fetch.requestAsync)(discovery.revocationEndpoint, {\n            method: 'POST',\n            headers: this.getHeaders(),\n            body: this.getQueryBody()\n          });\n          return true;\n        });\n        function performAsync(_x5) {\n          return _performAsync3.apply(this, arguments);\n        }\n        return performAsync;\n      }())\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          token: this.token,\n          tokenTypeHint: this.tokenTypeHint\n        };\n      }\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = {\n          token: this.token\n        };\n        if (this.tokenTypeHint) {\n          queryBody.token_type_hint = this.tokenTypeHint;\n        }\n        // Include client creds https://tools.ietf.org/html/rfc6749#section-2.3.1\n        if (this.clientId) {\n          queryBody.client_id = this.clientId;\n        }\n        if (this.clientSecret) {\n          queryBody.client_secret = this.clientSecret;\n        }\n        return queryBody;\n      }\n    }]);\n  }(Request); // @needsAudit\n  /**\n   * Exchange an authorization code for an access token that can be used to get data from the provider.\n   *\n   * @param config Configuration used to exchange the code for a token.\n   * @param discovery The `tokenEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n   */\n  function exchangeCodeAsync(config, discovery) {\n    var request = new AccessTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  // @needsAudit\n  /**\n   * Refresh an access token.\n   * - If the provider didn't return a `refresh_token` then the access token may not be refreshed.\n   * - If the provider didn't return a `expires_in` then it's assumed that the token does not expire.\n   * - Determine if a token needs to be refreshed via `TokenResponse.isTokenFresh()` or `shouldRefresh()` on an instance of `TokenResponse`.\n   *\n   * @see [Section 6](https://tools.ietf.org/html/rfc6749#section-6).\n   *\n   * @param config Configuration used to refresh the given access token.\n   * @param discovery The `tokenEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n   */\n  function refreshAsync(config, discovery) {\n    var request = new RefreshTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  // @needsAudit\n  /**\n   * Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again.\n   *\n   * @param config Configuration used to revoke a refresh or access token.\n   * @param discovery The `revocationEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `revocationEndpoint` URL. Many providers do not support this feature.\n   */\n  function revokeAsync(config, discovery) {\n    var request = new RevokeTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  /**\n   * Fetch generic user info from the provider's OpenID Connect `userInfoEndpoint` (if supported).\n   *\n   * @see [UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\n   *\n   * @param config The `accessToken` for a user, returned from a code exchange or auth request.\n   * @param discovery The `userInfoEndpoint` for a provider.\n   */\n  function fetchUserInfoAsync(config, discovery) {\n    if (!discovery.userInfoEndpoint) {\n      throw new Error('User info endpoint is not defined in the service config discovery document');\n    }\n    return (0, _Fetch.requestAsync)(discovery.userInfoEndpoint, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${config.accessToken}`\n      },\n      dataType: 'json',\n      method: 'GET'\n    });\n  }\n});","lineCount":558,"map":[[27,2,10,0,"exports"],[27,9,10,0],[27,10,10,0,"getCurrentTimeInSeconds"],[27,33,10,0],[27,36,10,0,"getCurrentTimeInSeconds"],[27,59,10,0],[28,2,18,0,"Object"],[28,8,18,0],[28,9,18,0,"defineProperty"],[28,23,18,0],[28,24,18,0,"exports"],[28,31,18,0],[29,4,18,0,"enumerable"],[29,14,18,0],[30,4,18,0,"get"],[30,7,18,0],[30,18,18,0,"get"],[30,19,18,0],[31,6,18,0],[31,13,18,0,"TokenResponse"],[31,26,18,0],[32,4,18,0],[33,2,18,0],[34,2,119,0,"Object"],[34,8,119,0],[34,9,119,0,"defineProperty"],[34,23,119,0],[34,24,119,0,"exports"],[34,31,119,0],[35,4,119,0,"enumerable"],[35,14,119,0],[36,4,119,0,"get"],[36,7,119,0],[36,18,119,0,"get"],[36,19,119,0],[37,6,119,0],[37,13,119,0,"Request"],[37,20,119,0],[38,4,119,0],[39,2,119,0],[40,2,137,0,"Object"],[40,8,137,0],[40,9,137,0,"defineProperty"],[40,23,137,0],[40,24,137,0,"exports"],[40,31,137,0],[41,4,137,0,"enumerable"],[41,14,137,0],[42,4,137,0,"get"],[42,7,137,0],[42,18,137,0,"get"],[42,19,137,0],[43,6,137,0],[43,13,137,0,"TokenRequest"],[43,25,137,0],[44,4,137,0],[45,2,137,0],[46,2,212,0,"Object"],[46,8,212,0],[46,9,212,0,"defineProperty"],[46,23,212,0],[46,24,212,0,"exports"],[46,31,212,0],[47,4,212,0,"enumerable"],[47,14,212,0],[48,4,212,0,"get"],[48,7,212,0],[48,18,212,0,"get"],[48,19,212,0],[49,6,212,0],[49,13,212,0,"AccessTokenRequest"],[49,31,212,0],[50,4,212,0],[51,2,212,0],[52,2,252,0,"Object"],[52,8,252,0],[52,9,252,0,"defineProperty"],[52,23,252,0],[52,24,252,0,"exports"],[52,31,252,0],[53,4,252,0,"enumerable"],[53,14,252,0],[54,4,252,0,"get"],[54,7,252,0],[54,18,252,0,"get"],[54,19,252,0],[55,6,252,0],[55,13,252,0,"RefreshTokenRequest"],[55,32,252,0],[56,4,252,0],[57,2,252,0],[58,2,282,0,"Object"],[58,8,282,0],[58,9,282,0,"defineProperty"],[58,23,282,0],[58,24,282,0,"exports"],[58,31,282,0],[59,4,282,0,"enumerable"],[59,14,282,0],[60,4,282,0,"get"],[60,7,282,0],[60,18,282,0,"get"],[60,19,282,0],[61,6,282,0],[61,13,282,0,"RevokeTokenRequest"],[61,31,282,0],[62,4,282,0],[63,2,282,0],[64,2,353,0,"exports"],[64,9,353,0],[64,10,353,0,"exchangeCodeAsync"],[64,27,353,0],[64,30,353,0,"exchangeCodeAsync"],[64,47,353,0],[65,2,370,0,"exports"],[65,9,370,0],[65,10,370,0,"refreshAsync"],[65,22,370,0],[65,25,370,0,"refreshAsync"],[65,37,370,0],[66,2,382,0,"exports"],[66,9,382,0],[66,10,382,0,"revokeAsync"],[66,21,382,0],[66,24,382,0,"revokeAsync"],[66,35,382,0],[67,2,394,0,"exports"],[67,9,394,0],[67,10,394,0,"fetchUserInfoAsync"],[67,28,394,0],[67,31,394,0,"fetchUserInfoAsync"],[67,49,394,0],[68,2,406,1],[68,6,406,1,"_babelRuntimeHelpersSuperPropGet"],[68,38,406,1],[68,41,406,1,"require"],[68,48,406,1],[68,49,406,1,"_dependencyMap"],[68,63,406,1],[69,2,406,1],[69,6,406,1,"_superPropGet"],[69,19,406,1],[69,22,406,1,"_interopDefault"],[69,37,406,1],[69,38,406,1,"_babelRuntimeHelpersSuperPropGet"],[69,70,406,1],[70,2,406,1],[70,6,406,1,"_babelRuntimeHelpersCallSuper"],[70,35,406,1],[70,38,406,1,"require"],[70,45,406,1],[70,46,406,1,"_dependencyMap"],[70,60,406,1],[71,2,406,1],[71,6,406,1,"_callSuper"],[71,16,406,1],[71,19,406,1,"_interopDefault"],[71,34,406,1],[71,35,406,1,"_babelRuntimeHelpersCallSuper"],[71,64,406,1],[72,2,406,1],[72,6,406,1,"_babelRuntimeHelpersInherits"],[72,34,406,1],[72,37,406,1,"require"],[72,44,406,1],[72,45,406,1,"_dependencyMap"],[72,59,406,1],[73,2,406,1],[73,6,406,1,"_inherits"],[73,15,406,1],[73,18,406,1,"_interopDefault"],[73,33,406,1],[73,34,406,1,"_babelRuntimeHelpersInherits"],[73,62,406,1],[74,2,406,1],[74,6,406,1,"_babelRuntimeHelpersAsyncToGenerator"],[74,42,406,1],[74,45,406,1,"require"],[74,52,406,1],[74,53,406,1,"_dependencyMap"],[74,67,406,1],[75,2,406,1],[75,6,406,1,"_asyncToGenerator"],[75,23,406,1],[75,26,406,1,"_interopDefault"],[75,41,406,1],[75,42,406,1,"_babelRuntimeHelpersAsyncToGenerator"],[75,78,406,1],[76,2,406,1],[76,6,406,1,"_babelRuntimeHelpersClassCallCheck"],[76,40,406,1],[76,43,406,1,"require"],[76,50,406,1],[76,51,406,1,"_dependencyMap"],[76,65,406,1],[77,2,406,1],[77,6,406,1,"_classCallCheck"],[77,21,406,1],[77,24,406,1,"_interopDefault"],[77,39,406,1],[77,40,406,1,"_babelRuntimeHelpersClassCallCheck"],[77,74,406,1],[78,2,406,1],[78,6,406,1,"_babelRuntimeHelpersCreateClass"],[78,37,406,1],[78,40,406,1,"require"],[78,47,406,1],[78,48,406,1,"_dependencyMap"],[78,62,406,1],[79,2,406,1],[79,6,406,1,"_createClass"],[79,18,406,1],[79,21,406,1,"_interopDefault"],[79,36,406,1],[79,37,406,1,"_babelRuntimeHelpersCreateClass"],[79,68,406,1],[80,2,1,0],[80,6,1,0,"_invariant"],[80,16,1,0],[80,19,1,0,"require"],[80,26,1,0],[80,27,1,0,"_dependencyMap"],[80,41,1,0],[81,2,1,0],[81,6,1,0,"invariant"],[81,15,1,0],[81,18,1,0,"_interopDefault"],[81,33,1,0],[81,34,1,0,"_invariant"],[81,44,1,0],[82,2,2,0],[82,6,2,0,"_reactNative"],[82,18,2,0],[82,21,2,0,"require"],[82,28,2,0],[82,29,2,0,"_dependencyMap"],[82,43,2,0],[83,2,3,0],[83,6,3,0,"_Base"],[83,11,3,0],[83,14,3,0,"require"],[83,21,3,0],[83,22,3,0,"_dependencyMap"],[83,36,3,0],[84,2,3,0],[84,6,3,0,"Base64"],[84,12,3,0],[84,15,3,0,"_interopNamespace"],[84,32,3,0],[84,33,3,0,"_Base"],[84,38,3,0],[85,2,4,0],[85,6,4,0,"_Errors"],[85,13,4,0],[85,16,4,0,"require"],[85,23,4,0],[85,24,4,0,"_dependencyMap"],[85,38,4,0],[86,2,5,0],[86,6,5,0,"_Fetch"],[86,12,5,0],[86,15,5,0,"require"],[86,22,5,0],[86,23,5,0,"_dependencyMap"],[86,37,5,0],[87,2,6,0],[87,6,6,0,"_TokenRequestTypes"],[87,24,6,0],[87,27,6,0,"require"],[87,34,6,0],[87,35,6,0,"_dependencyMap"],[87,49,6,0],[88,2,7,0],[89,0,8,0],[90,0,9,0],[91,2,10,7],[91,11,10,16,"getCurrentTimeInSeconds"],[91,34,10,39,"getCurrentTimeInSeconds"],[91,35,10,39],[91,37,10,42],[92,4,11,4],[92,11,11,11,"Math"],[92,15,11,15],[92,16,11,16,"floor"],[92,21,11,21],[92,22,11,22,"Date"],[92,26,11,26],[92,27,11,27,"now"],[92,30,11,30],[92,31,11,31],[92,32,11,32],[92,35,11,35],[92,39,11,39],[92,40,11,40],[93,2,12,0],[94,2,13,0],[95,0,14,0],[96,0,15,0],[97,0,16,0],[98,0,17,0],[99,2,13,0],[99,6,18,13,"TokenResponse"],[99,19,18,26],[100,4,69,4],[100,13,69,4,"TokenResponse"],[100,27,69,16,"response"],[100,35,69,24],[100,37,69,26,"rawResponse"],[100,48,69,37],[100,50,69,39],[101,6,69,39],[101,10,69,39,"_classCallCheck"],[101,25,69,39],[101,26,69,39,"default"],[101,33,69,39],[101,41,69,39,"TokenResponse"],[101,54,69,39],[102,6,70,8],[102,10,70,12],[102,11,70,13,"rawResponse"],[102,22,70,24],[102,25,70,27,"rawResponse"],[102,36,70,38],[103,6,71,8],[103,10,71,12],[103,11,71,13,"accessToken"],[103,22,71,24],[103,25,71,27,"response"],[103,33,71,35],[103,34,71,36,"accessToken"],[103,45,71,47],[104,6,72,8],[104,10,72,12],[104,11,72,13,"tokenType"],[104,20,72,22],[104,23,72,25,"response"],[104,31,72,33],[104,32,72,34,"tokenType"],[104,41,72,43],[104,45,72,47],[104,53,72,55],[105,6,73,8],[105,10,73,12],[105,11,73,13,"expiresIn"],[105,20,73,22],[105,23,73,25,"response"],[105,31,73,33],[105,32,73,34,"expiresIn"],[105,41,73,43],[106,6,74,8],[106,10,74,12],[106,11,74,13,"refreshToken"],[106,23,74,25],[106,26,74,28,"response"],[106,34,74,36],[106,35,74,37,"refreshToken"],[106,47,74,49],[107,6,75,8],[107,10,75,12],[107,11,75,13,"scope"],[107,16,75,18],[107,19,75,21,"response"],[107,27,75,29],[107,28,75,30,"scope"],[107,33,75,35],[108,6,76,8],[108,10,76,12],[108,11,76,13,"state"],[108,16,76,18],[108,19,76,21,"response"],[108,27,76,29],[108,28,76,30,"state"],[108,33,76,35],[109,6,77,8],[109,10,77,12],[109,11,77,13,"idToken"],[109,18,77,20],[109,21,77,23,"response"],[109,29,77,31],[109,30,77,32,"idToken"],[109,37,77,39],[110,6,78,8],[110,10,78,12],[110,11,78,13,"issuedAt"],[110,19,78,21],[110,22,78,24,"response"],[110,30,78,32],[110,31,78,33,"issuedAt"],[110,39,78,41],[110,43,78,45,"getCurrentTimeInSeconds"],[110,66,78,68],[110,67,78,69],[110,68,78,70],[111,4,79,4],[112,4,79,5],[112,15,79,5,"_createClass"],[112,27,79,5],[112,28,79,5,"default"],[112,35,79,5],[112,37,79,5,"TokenResponse"],[112,50,79,5],[113,6,79,5,"key"],[113,9,79,5],[114,6,79,5,"value"],[114,11,79,5],[114,13,80,4],[114,22,80,4,"applyResponseConfig"],[114,41,80,23,"applyResponseConfig"],[114,42,80,24,"response"],[114,50,80,32],[114,52,80,34],[115,8,81,8],[115,12,81,12],[115,13,81,13,"accessToken"],[115,24,81,24],[115,27,81,27,"response"],[115,35,81,35],[115,36,81,36,"accessToken"],[115,47,81,47],[115,51,81,51],[115,55,81,55],[115,56,81,56,"accessToken"],[115,67,81,67],[116,8,82,8],[116,12,82,12],[116,13,82,13,"tokenType"],[116,22,82,22],[116,25,82,25,"response"],[116,33,82,33],[116,34,82,34,"tokenType"],[116,43,82,43],[116,47,82,47],[116,51,82,51],[116,52,82,52,"tokenType"],[116,61,82,61],[116,65,82,65],[116,73,82,73],[117,8,83,8],[117,12,83,12],[117,13,83,13,"expiresIn"],[117,22,83,22],[117,25,83,25,"response"],[117,33,83,33],[117,34,83,34,"expiresIn"],[117,43,83,43],[117,47,83,47],[117,51,83,51],[117,52,83,52,"expiresIn"],[117,61,83,61],[118,8,84,8],[118,12,84,12],[118,13,84,13,"refreshToken"],[118,25,84,25],[118,28,84,28,"response"],[118,36,84,36],[118,37,84,37,"refreshToken"],[118,49,84,49],[118,53,84,53],[118,57,84,57],[118,58,84,58,"refreshToken"],[118,70,84,70],[119,8,85,8],[119,12,85,12],[119,13,85,13,"scope"],[119,18,85,18],[119,21,85,21,"response"],[119,29,85,29],[119,30,85,30,"scope"],[119,35,85,35],[119,39,85,39],[119,43,85,43],[119,44,85,44,"scope"],[119,49,85,49],[120,8,86,8],[120,12,86,12],[120,13,86,13,"state"],[120,18,86,18],[120,21,86,21,"response"],[120,29,86,29],[120,30,86,30,"state"],[120,35,86,35],[120,39,86,39],[120,43,86,43],[120,44,86,44,"state"],[120,49,86,49],[121,8,87,8],[121,12,87,12],[121,13,87,13,"idToken"],[121,20,87,20],[121,23,87,23,"response"],[121,31,87,31],[121,32,87,32,"idToken"],[121,39,87,39],[121,43,87,43],[121,47,87,47],[121,48,87,48,"idToken"],[121,55,87,55],[122,8,88,8],[122,12,88,12],[122,13,88,13,"issuedAt"],[122,21,88,21],[122,24,88,24,"response"],[122,32,88,32],[122,33,88,33,"issuedAt"],[122,41,88,41],[122,45,88,45],[122,49,88,49],[122,50,88,50,"issuedAt"],[122,58,88,58],[122,62,88,62,"getCurrentTimeInSeconds"],[122,85,88,85],[122,86,88,86],[122,87,88,87],[123,6,89,4],[124,4,89,5],[125,6,89,5,"key"],[125,9,89,5],[126,6,89,5,"value"],[126,11,89,5],[126,13,90,4],[126,22,90,4,"getRequestConfig"],[126,38,90,20,"getRequestConfig"],[126,39,90,20],[126,41,90,23],[127,8,91,8],[127,15,91,15],[128,10,92,12,"accessToken"],[128,21,92,23],[128,23,92,25],[128,27,92,29],[128,28,92,30,"accessToken"],[128,39,92,41],[129,10,93,12,"idToken"],[129,17,93,19],[129,19,93,21],[129,23,93,25],[129,24,93,26,"idToken"],[129,31,93,33],[130,10,94,12,"refreshToken"],[130,22,94,24],[130,24,94,26],[130,28,94,30],[130,29,94,31,"refreshToken"],[130,41,94,43],[131,10,95,12,"scope"],[131,15,95,17],[131,17,95,19],[131,21,95,23],[131,22,95,24,"scope"],[131,27,95,29],[132,10,96,12,"state"],[132,15,96,17],[132,17,96,19],[132,21,96,23],[132,22,96,24,"state"],[132,27,96,29],[133,10,97,12,"tokenType"],[133,19,97,21],[133,21,97,23],[133,25,97,27],[133,26,97,28,"tokenType"],[133,35,97,37],[134,10,98,12,"issuedAt"],[134,18,98,20],[134,20,98,22],[134,24,98,26],[134,25,98,27,"issuedAt"],[134,33,98,35],[135,10,99,12,"expiresIn"],[135,19,99,21],[135,21,99,23],[135,25,99,27],[135,26,99,28,"expiresIn"],[136,8,100,8],[136,9,100,9],[137,6,101,4],[138,4,101,5],[139,6,101,5,"key"],[139,9,101,5],[140,6,101,5,"value"],[140,11,101,5],[141,8,101,5],[141,12,101,5,"_refreshAsync"],[141,25,101,5],[141,32,101,5,"_asyncToGenerator"],[141,49,101,5],[141,50,101,5,"default"],[141,57,101,5],[141,59,102,4],[141,70,102,23,"config"],[141,76,102,29],[141,78,102,31,"discovery"],[141,87,102,40],[141,89,102,42],[142,10,103,8],[142,14,103,14,"request"],[142,21,103,21],[142,24,103,24],[142,28,103,28,"RefreshTokenRequest"],[142,47,103,47],[142,48,103,48],[143,12,104,12],[143,15,104,15,"config"],[143,21,104,21],[144,12,105,12,"refreshToken"],[144,24,105,24],[144,26,105,26],[144,30,105,30],[144,31,105,31,"refreshToken"],[145,10,106,8],[145,11,106,9],[145,12,106,10],[146,10,107,8],[146,14,107,14,"response"],[146,22,107,22],[146,31,107,31,"request"],[146,38,107,38],[146,39,107,39,"performAsync"],[146,51,107,51],[146,52,107,52,"discovery"],[146,61,107,61],[146,62,107,62],[147,10,108,8],[148,10,109,8,"response"],[148,18,109,16],[148,19,109,17,"refreshToken"],[148,31,109,29],[148,34,109,32,"response"],[148,42,109,40],[148,43,109,41,"refreshToken"],[148,55,109,53],[148,59,109,57],[148,63,109,61],[148,64,109,62,"refreshToken"],[148,76,109,74],[149,10,110,8],[149,14,110,14,"json"],[149,18,110,18],[149,21,110,21,"response"],[149,29,110,29],[149,30,110,30,"getRequestConfig"],[149,46,110,46],[149,47,110,47],[149,48,110,48],[150,10,111,8],[150,14,111,12],[150,15,111,13,"applyResponseConfig"],[150,34,111,32],[150,35,111,33,"json"],[150,39,111,37],[150,40,111,38],[151,10,112,8],[151,17,112,15],[151,21,112,19],[152,8,113,4],[152,9,113,5],[153,8,113,5],[153,17,102,10,"refreshAsync"],[153,29,102,22,"refreshAsync"],[153,30,102,22,"_x"],[153,32,102,22],[153,34,102,22,"_x2"],[153,37,102,22],[154,10,102,22],[154,17,102,22,"_refreshAsync"],[154,30,102,22],[154,31,102,22,"apply"],[154,36,102,22],[154,43,102,22,"arguments"],[154,52,102,22],[155,8,102,22],[156,8,102,22],[156,15,102,10,"refreshAsync"],[156,27,102,22],[157,6,102,22],[158,4,102,22],[159,6,102,22,"key"],[159,9,102,22],[160,6,102,22,"value"],[160,11,102,22],[160,13,114,4],[160,22,114,4,"shouldRefresh"],[160,35,114,17,"shouldRefresh"],[160,36,114,17],[160,38,114,20],[161,8,115,8],[162,8,116,8],[162,15,116,15],[162,17,116,17,"TokenResponse"],[162,30,116,30],[162,31,116,31,"isTokenFresh"],[162,43,116,43],[162,44,116,44],[162,48,116,48],[162,49,116,49],[162,53,116,53],[162,54,116,54],[162,58,116,58],[162,59,116,59,"refreshToken"],[162,71,116,71],[162,72,116,72],[163,6,117,4],[164,4,117,5],[165,6,117,5,"key"],[165,9,117,5],[166,6,117,5,"value"],[166,11,117,5],[167,6,19,4],[168,0,20,0],[169,0,21,0],[170,0,22,0],[171,0,23,0],[172,0,24,0],[173,6,25,4],[173,15,25,11,"isTokenFresh"],[173,27,25,23,"isTokenFresh"],[173,28,25,24,"token"],[173,33,25,29],[173,35,29,34],[174,8,29,34],[174,12,29,4,"secondsMargin"],[174,25,29,17],[174,28,29,17,"arguments"],[174,37,29,17],[174,38,29,17,"length"],[174,44,29,17],[174,52,29,17,"arguments"],[174,61,29,17],[174,69,29,17,"undefined"],[174,78,29,17],[174,81,29,17,"arguments"],[174,90,29,17],[174,96,29,20],[174,98,29,22],[174,101,29,25],[174,103,29,27],[174,106,29,30],[174,107,29,31],[174,108,29,32],[175,8,30,8],[175,12,30,12],[175,13,30,13,"token"],[175,18,30,18],[175,20,30,20],[176,10,31,12],[176,17,31,19],[176,22,31,24],[177,8,32,8],[178,8,33,8],[178,12,33,12,"token"],[178,17,33,17],[178,18,33,18,"expiresIn"],[178,27,33,27],[178,29,33,29],[179,10,34,12],[179,14,34,18,"now"],[179,17,34,21],[179,20,34,24,"getCurrentTimeInSeconds"],[179,43,34,47],[179,44,34,48],[179,45,34,49],[180,10,35,12],[180,17,35,19,"now"],[180,20,35,22],[180,23,35,25,"token"],[180,28,35,30],[180,29,35,31,"issuedAt"],[180,37,35,39],[180,40,35,42,"token"],[180,45,35,47],[180,46,35,48,"expiresIn"],[180,55,35,57],[180,58,35,60,"secondsMargin"],[180,71,35,73],[181,8,36,8],[182,8,37,8],[183,8,38,8],[183,15,38,15],[183,19,38,19],[184,6,39,4],[185,6,40,4],[186,0,41,0],[187,0,42,0],[188,0,43,0],[189,0,44,0],[190,4,40,4],[191,6,40,4,"key"],[191,9,40,4],[192,6,40,4,"value"],[192,11,40,4],[192,13,45,4],[192,22,45,11,"fromQueryParams"],[192,37,45,26,"fromQueryParams"],[192,38,45,27,"params"],[192,44,45,33],[192,46,45,35],[193,8,46,8],[193,15,46,15],[193,19,46,19,"TokenResponse"],[193,32,46,32],[193,33,46,33],[194,10,47,12,"accessToken"],[194,21,47,23],[194,23,47,25,"params"],[194,29,47,31],[194,30,47,32,"access_token"],[194,42,47,44],[195,10,48,12,"refreshToken"],[195,22,48,24],[195,24,48,26,"params"],[195,30,48,32],[195,31,48,33,"refresh_token"],[195,44,48,46],[196,10,49,12,"scope"],[196,15,49,17],[196,17,49,19,"params"],[196,23,49,25],[196,24,49,26,"scope"],[196,29,49,31],[197,10,50,12,"state"],[197,15,50,17],[197,17,50,19,"params"],[197,23,50,25],[197,24,50,26,"state"],[197,29,50,31],[198,10,51,12,"idToken"],[198,17,51,19],[198,19,51,21,"params"],[198,25,51,27],[198,26,51,28,"id_token"],[198,34,51,36],[199,10,52,12,"tokenType"],[199,19,52,21],[199,21,52,23,"params"],[199,27,52,29],[199,28,52,30,"token_type"],[199,38,52,40],[200,10,53,12,"expiresIn"],[200,19,53,21],[200,21,53,23,"params"],[200,27,53,29],[200,28,53,30,"expires_in"],[200,38,53,40],[201,10,54,12,"issuedAt"],[201,18,54,20],[201,20,54,22,"params"],[201,26,54,28],[201,27,54,29,"issued_at"],[202,8,55,8],[202,9,55,9],[202,10,55,10],[203,6,56,4],[205,6,65,4],[206,0,66,0],[207,0,67,0],[208,4,65,4],[209,2,65,4],[210,2,65,4],[210,6,119,13,"Request"],[210,13,119,20],[211,4,121,4],[211,13,121,4,"Request"],[211,21,121,16,"request"],[211,28,121,23],[211,30,121,25],[212,6,121,25],[212,10,121,25,"_classCallCheck"],[212,25,121,25],[212,26,121,25,"default"],[212,33,121,25],[212,41,121,25,"Request"],[212,48,121,25],[213,6,122,8],[213,10,122,12],[213,11,122,13,"request"],[213,18,122,20],[213,21,122,23,"request"],[213,28,122,30],[214,4,123,4],[215,4,123,5],[215,15,123,5,"_createClass"],[215,27,123,5],[215,28,123,5,"default"],[215,35,123,5],[215,37,123,5,"Request"],[215,44,123,5],[216,6,123,5,"key"],[216,9,123,5],[217,6,123,5,"value"],[217,11,123,5],[218,8,123,5],[218,12,123,5,"_performAsync"],[218,25,123,5],[218,32,123,5,"_asyncToGenerator"],[218,49,123,5],[218,50,123,5,"default"],[218,57,123,5],[218,59,124,4],[218,70,124,23,"discovery"],[218,79,124,32],[218,81,124,34],[219,10,125,8],[219,16,125,14],[219,20,125,18,"Error"],[219,25,125,23],[219,26,125,24],[219,57,125,55],[219,58,125,56],[220,8,126,4],[220,9,126,5],[221,8,126,5],[221,17,124,10,"performAsync"],[221,29,124,22,"performAsync"],[221,30,124,22,"_x3"],[221,33,124,22],[222,10,124,22],[222,17,124,22,"_performAsync"],[222,30,124,22],[222,31,124,22,"apply"],[222,36,124,22],[222,43,124,22,"arguments"],[222,52,124,22],[223,8,124,22],[224,8,124,22],[224,15,124,10,"performAsync"],[224,27,124,22],[225,6,124,22],[226,4,124,22],[227,6,124,22,"key"],[227,9,124,22],[228,6,124,22,"value"],[228,11,124,22],[228,13,127,4],[228,22,127,4,"getRequestConfig"],[228,38,127,20,"getRequestConfig"],[228,39,127,20],[228,41,127,23],[229,8,128,8],[229,14,128,14],[229,18,128,18,"Error"],[229,23,128,23],[229,24,128,24],[229,59,128,59],[229,60,128,60],[230,6,129,4],[231,4,129,5],[232,6,129,5,"key"],[232,9,129,5],[233,6,129,5,"value"],[233,11,129,5],[233,13,130,4],[233,22,130,4,"getQueryBody"],[233,34,130,16,"getQueryBody"],[233,35,130,16],[233,37,130,19],[234,8,131,8],[234,14,131,14],[234,18,131,18,"Error"],[234,23,131,23],[234,24,131,24],[234,55,131,55],[234,56,131,56],[235,6,132,4],[236,4,132,5],[237,2,132,5],[238,2,134,0],[239,0,135,0],[240,0,136,0],[241,2,134,0],[241,6,137,13,"TokenRequest"],[241,18,137,25],[241,44,137,25,"_Request"],[241,52,137,25],[242,4,143,4],[242,13,143,4,"TokenRequest"],[242,26,143,16,"request"],[242,33,143,23],[242,35,143,25,"grantType"],[242,44,143,34],[242,46,143,36],[243,6,143,36],[243,10,143,36,"_this"],[243,15,143,36],[244,6,143,36],[244,10,143,36,"_classCallCheck"],[244,25,143,36],[244,26,143,36,"default"],[244,33,143,36],[244,41,143,36,"TokenRequest"],[244,53,143,36],[245,6,144,8,"_this"],[245,11,144,8],[245,18,144,8,"_callSuper"],[245,28,144,8],[245,29,144,8,"default"],[245,36,144,8],[245,44,144,8,"TokenRequest"],[245,56,144,8],[245,59,144,14,"request"],[245,66,144,21],[246,6,145,8,"_this"],[246,11,145,8],[246,12,145,13,"grantType"],[246,21,145,22],[246,24,145,25,"grantType"],[246,33,145,34],[247,6,146,8,"_this"],[247,11,146,8],[247,12,146,13,"clientId"],[247,20,146,21],[247,23,146,24,"request"],[247,30,146,31],[247,31,146,32,"clientId"],[247,39,146,40],[248,6,147,8,"_this"],[248,11,147,8],[248,12,147,13,"clientSecret"],[248,24,147,25],[248,27,147,28,"request"],[248,34,147,35],[248,35,147,36,"clientSecret"],[248,47,147,48],[249,6,148,8,"_this"],[249,11,148,8],[249,12,148,13,"extraParams"],[249,23,148,24],[249,26,148,27,"request"],[249,33,148,34],[249,34,148,35,"extraParams"],[249,45,148,46],[250,6,149,8,"_this"],[250,11,149,8],[250,12,149,13,"scopes"],[250,18,149,19],[250,21,149,22,"request"],[250,28,149,29],[250,29,149,30,"scopes"],[250,35,149,36],[251,6,149,37],[251,13,149,37,"_this"],[251,18,149,37],[252,4,150,4],[253,4,150,5],[253,8,150,5,"_inherits"],[253,17,150,5],[253,18,150,5,"default"],[253,25,150,5],[253,27,150,5,"TokenRequest"],[253,39,150,5],[253,41,150,5,"_Request"],[253,49,150,5],[254,4,150,5],[254,15,150,5,"_createClass"],[254,27,150,5],[254,28,150,5,"default"],[254,35,150,5],[254,37,150,5,"TokenRequest"],[254,49,150,5],[255,6,150,5,"key"],[255,9,150,5],[256,6,150,5,"value"],[256,11,150,5],[256,13,151,4],[256,22,151,4,"getHeaders"],[256,32,151,14,"getHeaders"],[256,33,151,14],[256,35,151,17],[257,8,152,8],[257,12,152,14,"headers"],[257,19,152,21],[257,22,152,24],[258,10,152,26],[258,24,152,40],[258,26,152,42],[259,8,152,78],[259,9,152,79],[260,8,153,8],[260,12,153,12],[260,19,153,19],[260,23,153,23],[260,24,153,24,"clientSecret"],[260,36,153,36],[260,41,153,41],[260,52,153,52],[260,54,153,54],[261,10,154,12],[262,10,155,12],[263,10,156,12],[263,14,156,18,"encodedClientId"],[263,29,156,33],[263,32,156,36,"encodeURIComponent"],[263,50,156,54],[263,51,156,55],[263,55,156,59],[263,56,156,60,"clientId"],[263,64,156,68],[263,65,156,69],[264,10,157,12],[264,14,157,18,"encodedClientSecret"],[264,33,157,37],[264,36,157,40,"encodeURIComponent"],[264,54,157,58],[264,55,157,59],[264,59,157,63],[264,60,157,64,"clientSecret"],[264,72,157,76],[264,73,157,77],[265,10,158,12],[265,14,158,18,"credentials"],[265,25,158,29],[265,28,158,32],[265,31,158,35,"encodedClientId"],[265,46,158,50],[265,50,158,54,"encodedClientSecret"],[265,69,158,73],[265,71,158,75],[266,10,159,12],[266,14,159,18,"basicAuth"],[266,23,159,27],[266,26,159,30,"Base64"],[266,32,159,36],[266,33,159,37,"encodeNoWrap"],[266,45,159,49],[266,46,159,50,"credentials"],[266,57,159,61],[266,58,159,62],[267,10,160,12,"headers"],[267,17,160,19],[267,18,160,20,"Authorization"],[267,31,160,33],[267,34,160,36],[267,43,160,45,"basicAuth"],[267,52,160,54],[267,54,160,56],[268,8,161,8],[269,8,162,8],[269,15,162,15,"headers"],[269,22,162,22],[270,6,163,4],[271,4,163,5],[272,6,163,5,"key"],[272,9,163,5],[273,6,163,5,"value"],[273,11,163,5],[274,8,163,5],[274,12,163,5,"_performAsync2"],[274,26,163,5],[274,33,163,5,"_asyncToGenerator"],[274,50,163,5],[274,51,163,5,"default"],[274,58,163,5],[274,60,164,4],[274,71,164,23,"discovery"],[274,80,164,32],[274,82,164,34],[275,10,165,8],[276,10,166,8],[276,14,166,8,"invariant"],[276,23,166,17],[276,24,166,17,"default"],[276,31,166,17],[276,33,166,18,"discovery"],[276,42,166,27],[276,43,166,28,"tokenEndpoint"],[276,56,166,41],[276,58,166,43],[276,122,166,107],[276,123,166,108],[277,10,167,8],[277,14,167,14,"response"],[277,22,167,22],[277,31,167,31],[277,35,167,31,"requestAsync"],[277,41,167,43],[277,42,167,43,"requestAsync"],[277,54,167,43],[277,56,167,44,"discovery"],[277,65,167,53],[277,66,167,54,"tokenEndpoint"],[277,79,167,67],[277,81,167,69],[278,12,168,12,"dataType"],[278,20,168,20],[278,22,168,22],[278,28,168,28],[279,12,169,12,"method"],[279,18,169,18],[279,20,169,20],[279,26,169,26],[280,12,170,12,"headers"],[280,19,170,19],[280,21,170,21],[280,25,170,25],[280,26,170,26,"getHeaders"],[280,36,170,36],[280,37,170,37],[280,38,170,38],[281,12,171,12,"body"],[281,16,171,16],[281,18,171,18],[281,22,171,22],[281,23,171,23,"getQueryBody"],[281,35,171,35],[281,36,171,36],[282,10,172,8],[282,11,172,9],[282,12,172,10],[283,10,173,8],[283,14,173,12],[283,21,173,19],[283,25,173,23,"response"],[283,33,173,31],[283,35,173,33],[284,12,174,12],[284,18,174,18],[284,22,174,22,"TokenError"],[284,29,174,32],[284,30,174,32,"TokenError"],[284,40,174,32],[284,41,174,33,"response"],[284,49,174,41],[284,50,174,42],[285,10,175,8],[286,10,176,8],[286,17,176,15],[286,21,176,19,"TokenResponse"],[286,34,176,32],[286,35,176,33],[287,12,177,12,"accessToken"],[287,23,177,23],[287,25,177,25,"response"],[287,33,177,33],[287,34,177,34,"access_token"],[287,46,177,46],[288,12,178,12,"tokenType"],[288,21,178,21],[288,23,178,23,"response"],[288,31,178,31],[288,32,178,32,"token_type"],[288,42,178,42],[289,12,179,12,"expiresIn"],[289,21,179,21],[289,23,179,23,"response"],[289,31,179,31],[289,32,179,32,"expires_in"],[289,42,179,42],[290,12,180,12,"refreshToken"],[290,24,180,24],[290,26,180,26,"response"],[290,34,180,34],[290,35,180,35,"refresh_token"],[290,48,180,48],[291,12,181,12,"scope"],[291,17,181,17],[291,19,181,19,"response"],[291,27,181,27],[291,28,181,28,"scope"],[291,33,181,33],[292,12,182,12,"idToken"],[292,19,182,19],[292,21,182,21,"response"],[292,29,182,29],[292,30,182,30,"id_token"],[292,38,182,38],[293,12,183,12,"issuedAt"],[293,20,183,20],[293,22,183,22,"response"],[293,30,183,30],[293,31,183,31,"issued_at"],[294,10,184,8],[294,11,184,9],[294,13,184,11,"response"],[294,21,184,19],[294,22,184,20],[295,8,185,4],[295,9,185,5],[296,8,185,5],[296,17,164,10,"performAsync"],[296,29,164,22,"performAsync"],[296,30,164,22,"_x4"],[296,33,164,22],[297,10,164,22],[297,17,164,22,"_performAsync2"],[297,31,164,22],[297,32,164,22,"apply"],[297,37,164,22],[297,44,164,22,"arguments"],[297,53,164,22],[298,8,164,22],[299,8,164,22],[299,15,164,10,"performAsync"],[299,27,164,22],[300,6,164,22],[301,4,164,22],[302,6,164,22,"key"],[302,9,164,22],[303,6,164,22,"value"],[303,11,164,22],[303,13,186,4],[303,22,186,4,"getQueryBody"],[303,34,186,16,"getQueryBody"],[303,35,186,16],[303,37,186,19],[304,8,187,8],[304,12,187,14,"queryBody"],[304,21,187,23],[304,24,187,26],[305,10,188,12,"grant_type"],[305,20,188,22],[305,22,188,24],[305,26,188,28],[305,27,188,29,"grantType"],[306,8,189,8],[306,9,189,9],[307,8,190,8],[307,12,190,12],[307,13,190,13],[307,17,190,17],[307,18,190,18,"clientSecret"],[307,30,190,30],[307,32,190,32],[308,10,191,12],[309,10,192,12,"queryBody"],[309,19,192,21],[309,20,192,22,"client_id"],[309,29,192,31],[309,32,192,34],[309,36,192,38],[309,37,192,39,"clientId"],[309,45,192,47],[310,8,193,8],[311,8,194,8],[311,12,194,12],[311,16,194,16],[311,17,194,17,"scopes"],[311,23,194,23],[311,25,194,25],[312,10,195,12,"queryBody"],[312,19,195,21],[312,20,195,22,"scope"],[312,25,195,27],[312,28,195,30],[312,32,195,34],[312,33,195,35,"scopes"],[312,39,195,41],[312,40,195,42,"join"],[312,44,195,46],[312,45,195,47],[312,48,195,50],[312,49,195,51],[313,8,196,8],[314,8,197,8],[314,12,197,12],[314,16,197,16],[314,17,197,17,"extraParams"],[314,28,197,28],[314,30,197,30],[315,10,198,12],[315,15,198,17],[315,19,198,23,"extra"],[315,24,198,28],[315,28,198,32],[315,32,198,36],[315,33,198,37,"extraParams"],[315,44,198,48],[315,46,198,50],[316,12,199,16],[316,16,199,20,"extra"],[316,21,199,25],[316,25,199,29],[316,29,199,33],[316,30,199,34,"extraParams"],[316,41,199,45],[316,45,199,49],[316,47,199,51,"extra"],[316,52,199,56],[316,56,199,60,"queryBody"],[316,65,199,69],[316,66,199,70],[316,68,199,72],[317,14,200,20,"queryBody"],[317,23,200,29],[317,24,200,30,"extra"],[317,29,200,35],[317,30,200,36],[317,33,200,39],[317,37,200,43],[317,38,200,44,"extraParams"],[317,49,200,55],[317,50,200,56,"extra"],[317,55,200,61],[317,56,200,62],[318,12,201,16],[319,10,202,12],[320,8,203,8],[321,8,204,8],[321,15,204,15,"queryBody"],[321,24,204,24],[322,6,205,4],[323,4,205,5],[324,2,205,5],[324,4,137,34,"Request"],[324,11,137,41],[325,2,207,0],[326,0,208,0],[327,0,209,0],[328,0,210,0],[329,0,211,0],[330,2,207,0],[330,6,212,13,"AccessTokenRequest"],[330,24,212,31],[330,50,212,31,"_TokenRequest"],[330,63,212,31],[331,4,215,4],[331,13,215,4,"AccessTokenRequest"],[331,32,215,16,"options"],[331,39,215,23],[331,41,215,25],[332,6,215,25],[332,10,215,25,"_this2"],[332,16,215,25],[333,6,215,25],[333,10,215,25,"_classCallCheck"],[333,25,215,25],[333,26,215,25,"default"],[333,33,215,25],[333,41,215,25,"AccessTokenRequest"],[333,59,215,25],[334,6,216,8],[334,10,216,8,"invariant"],[334,19,216,17],[334,20,216,17,"default"],[334,27,216,17],[334,29,216,18,"options"],[334,36,216,25],[334,37,216,26,"redirectUri"],[334,48,216,37],[334,50,216,39],[334,173,216,162,"Platform"],[334,185,216,170],[334,186,216,170,"Platform"],[334,194,216,170],[334,195,216,171,"select"],[334,201,216,177],[334,202,216,178],[335,8,217,12,"web"],[335,11,217,15],[335,13,217,17],[335,47,217,51],[336,8,218,12,"default"],[336,15,218,19],[336,17,218,21],[337,6,219,8],[337,7,219,9],[337,8,219,10],[337,10,219,12],[337,11,219,13],[338,6,220,8],[338,10,220,8,"invariant"],[338,19,220,17],[338,20,220,17,"default"],[338,27,220,17],[338,29,220,18,"options"],[338,36,220,25],[338,37,220,26,"code"],[338,41,220,30],[338,43,220,32],[338,185,220,174],[338,186,220,175],[339,6,221,8,"_this2"],[339,12,221,8],[339,19,221,8,"_callSuper"],[339,29,221,8],[339,30,221,8,"default"],[339,37,221,8],[339,45,221,8,"AccessTokenRequest"],[339,63,221,8],[339,66,221,14,"options"],[339,73,221,21],[339,75,221,23,"GrantType"],[339,93,221,32],[339,94,221,32,"GrantType"],[339,103,221,32],[339,104,221,33,"AuthorizationCode"],[339,121,221,50],[340,6,222,8,"_this2"],[340,12,222,8],[340,13,222,13,"code"],[340,17,222,17],[340,20,222,20,"options"],[340,27,222,27],[340,28,222,28,"code"],[340,32,222,32],[341,6,223,8,"_this2"],[341,12,223,8],[341,13,223,13,"redirectUri"],[341,24,223,24],[341,27,223,27,"options"],[341,34,223,34],[341,35,223,35,"redirectUri"],[341,46,223,46],[342,6,223,47],[342,13,223,47,"_this2"],[342,19,223,47],[343,4,224,4],[344,4,224,5],[344,8,224,5,"_inherits"],[344,17,224,5],[344,18,224,5,"default"],[344,25,224,5],[344,27,224,5,"AccessTokenRequest"],[344,45,224,5],[344,47,224,5,"_TokenRequest"],[344,60,224,5],[345,4,224,5],[345,15,224,5,"_createClass"],[345,27,224,5],[345,28,224,5,"default"],[345,35,224,5],[345,37,224,5,"AccessTokenRequest"],[345,55,224,5],[346,6,224,5,"key"],[346,9,224,5],[347,6,224,5,"value"],[347,11,224,5],[347,13,225,4],[347,22,225,4,"getQueryBody"],[347,34,225,16,"getQueryBody"],[347,35,225,16],[347,37,225,19],[348,8,226,8],[348,12,226,14,"queryBody"],[348,21,226,23],[348,28,226,23,"_superPropGet"],[348,41,226,23],[348,42,226,23,"default"],[348,49,226,23],[348,51,226,23,"AccessTokenRequest"],[348,69,226,23],[348,99,226,46],[349,8,227,8],[349,12,227,12],[349,16,227,16],[349,17,227,17,"redirectUri"],[349,28,227,28],[349,30,227,30],[350,10,228,12,"queryBody"],[350,19,228,21],[350,20,228,22,"redirect_uri"],[350,32,228,34],[350,35,228,37],[350,39,228,41],[350,40,228,42,"redirectUri"],[350,51,228,53],[351,8,229,8],[352,8,230,8],[352,12,230,12],[352,16,230,16],[352,17,230,17,"code"],[352,21,230,21],[352,23,230,23],[353,10,231,12,"queryBody"],[353,19,231,21],[353,20,231,22,"code"],[353,24,231,26],[353,27,231,29],[353,31,231,33],[353,32,231,34,"code"],[353,36,231,38],[354,8,232,8],[355,8,233,8],[355,15,233,15,"queryBody"],[355,24,233,24],[356,6,234,4],[357,4,234,5],[358,6,234,5,"key"],[358,9,234,5],[359,6,234,5,"value"],[359,11,234,5],[359,13,235,4],[359,22,235,4,"getRequestConfig"],[359,38,235,20,"getRequestConfig"],[359,39,235,20],[359,41,235,23],[360,8,236,8],[360,15,236,15],[361,10,237,12,"clientId"],[361,18,237,20],[361,20,237,22],[361,24,237,26],[361,25,237,27,"clientId"],[361,33,237,35],[362,10,238,12,"clientSecret"],[362,22,238,24],[362,24,238,26],[362,28,238,30],[362,29,238,31,"clientSecret"],[362,41,238,43],[363,10,239,12,"grantType"],[363,19,239,21],[363,21,239,23],[363,25,239,27],[363,26,239,28,"grantType"],[363,35,239,37],[364,10,240,12,"code"],[364,14,240,16],[364,16,240,18],[364,20,240,22],[364,21,240,23,"code"],[364,25,240,27],[365,10,241,12,"redirectUri"],[365,21,241,23],[365,23,241,25],[365,27,241,29],[365,28,241,30,"redirectUri"],[365,39,241,41],[366,10,242,12,"extraParams"],[366,21,242,23],[366,23,242,25],[366,27,242,29],[366,28,242,30,"extraParams"],[366,39,242,41],[367,10,243,12,"scopes"],[367,16,243,18],[367,18,243,20],[367,22,243,24],[367,23,243,25,"scopes"],[368,8,244,8],[368,9,244,9],[369,6,245,4],[370,4,245,5],[371,2,245,5],[371,4,212,40,"TokenRequest"],[371,16,212,52],[372,2,247,0],[373,0,248,0],[374,0,249,0],[375,0,250,0],[376,0,251,0],[377,2,247,0],[377,6,252,13,"RefreshTokenRequest"],[377,25,252,32],[377,51,252,32,"_TokenRequest2"],[377,65,252,32],[378,4,254,4],[378,13,254,4,"RefreshTokenRequest"],[378,33,254,16,"options"],[378,40,254,23],[378,42,254,25],[379,6,254,25],[379,10,254,25,"_this3"],[379,16,254,25],[380,6,254,25],[380,10,254,25,"_classCallCheck"],[380,25,254,25],[380,26,254,25,"default"],[380,33,254,25],[380,41,254,25,"RefreshTokenRequest"],[380,60,254,25],[381,6,255,8],[381,10,255,8,"invariant"],[381,19,255,17],[381,20,255,17,"default"],[381,27,255,17],[381,29,255,18,"options"],[381,36,255,25],[381,37,255,26,"refreshToken"],[381,49,255,38],[381,51,255,40],[381,111,255,100],[381,112,255,101],[382,6,256,8,"_this3"],[382,12,256,8],[382,19,256,8,"_callSuper"],[382,29,256,8],[382,30,256,8,"default"],[382,37,256,8],[382,45,256,8,"RefreshTokenRequest"],[382,64,256,8],[382,67,256,14,"options"],[382,74,256,21],[382,76,256,23,"GrantType"],[382,94,256,32],[382,95,256,32,"GrantType"],[382,104,256,32],[382,105,256,33,"RefreshToken"],[382,117,256,45],[383,6,257,8,"_this3"],[383,12,257,8],[383,13,257,13,"refreshToken"],[383,25,257,25],[383,28,257,28,"options"],[383,35,257,35],[383,36,257,36,"refreshToken"],[383,48,257,48],[384,6,257,49],[384,13,257,49,"_this3"],[384,19,257,49],[385,4,258,4],[386,4,258,5],[386,8,258,5,"_inherits"],[386,17,258,5],[386,18,258,5,"default"],[386,25,258,5],[386,27,258,5,"RefreshTokenRequest"],[386,46,258,5],[386,48,258,5,"_TokenRequest2"],[386,62,258,5],[387,4,258,5],[387,15,258,5,"_createClass"],[387,27,258,5],[387,28,258,5,"default"],[387,35,258,5],[387,37,258,5,"RefreshTokenRequest"],[387,56,258,5],[388,6,258,5,"key"],[388,9,258,5],[389,6,258,5,"value"],[389,11,258,5],[389,13,259,4],[389,22,259,4,"getQueryBody"],[389,34,259,16,"getQueryBody"],[389,35,259,16],[389,37,259,19],[390,8,260,8],[390,12,260,14,"queryBody"],[390,21,260,23],[390,28,260,23,"_superPropGet"],[390,41,260,23],[390,42,260,23,"default"],[390,49,260,23],[390,51,260,23,"RefreshTokenRequest"],[390,70,260,23],[390,100,260,46],[391,8,261,8],[391,12,261,12],[391,16,261,16],[391,17,261,17,"refreshToken"],[391,29,261,29],[391,31,261,31],[392,10,262,12,"queryBody"],[392,19,262,21],[392,20,262,22,"refresh_token"],[392,33,262,35],[392,36,262,38],[392,40,262,42],[392,41,262,43,"refreshToken"],[392,53,262,55],[393,8,263,8],[394,8,264,8],[394,15,264,15,"queryBody"],[394,24,264,24],[395,6,265,4],[396,4,265,5],[397,6,265,5,"key"],[397,9,265,5],[398,6,265,5,"value"],[398,11,265,5],[398,13,266,4],[398,22,266,4,"getRequestConfig"],[398,38,266,20,"getRequestConfig"],[398,39,266,20],[398,41,266,23],[399,8,267,8],[399,15,267,15],[400,10,268,12,"clientId"],[400,18,268,20],[400,20,268,22],[400,24,268,26],[400,25,268,27,"clientId"],[400,33,268,35],[401,10,269,12,"clientSecret"],[401,22,269,24],[401,24,269,26],[401,28,269,30],[401,29,269,31,"clientSecret"],[401,41,269,43],[402,10,270,12,"grantType"],[402,19,270,21],[402,21,270,23],[402,25,270,27],[402,26,270,28,"grantType"],[402,35,270,37],[403,10,271,12,"refreshToken"],[403,22,271,24],[403,24,271,26],[403,28,271,30],[403,29,271,31,"refreshToken"],[403,41,271,43],[404,10,272,12,"extraParams"],[404,21,272,23],[404,23,272,25],[404,27,272,29],[404,28,272,30,"extraParams"],[404,39,272,41],[405,10,273,12,"scopes"],[405,16,273,18],[405,18,273,20],[405,22,273,24],[405,23,273,25,"scopes"],[406,8,274,8],[406,9,274,9],[407,6,275,4],[408,4,275,5],[409,2,275,5],[409,4,252,41,"TokenRequest"],[409,16,252,53],[410,2,277,0],[411,0,278,0],[412,0,279,0],[413,0,280,0],[414,0,281,0],[415,2,277,0],[415,6,282,13,"RevokeTokenRequest"],[415,24,282,31],[415,50,282,31,"_Request2"],[415,59,282,31],[416,4,287,4],[416,13,287,4,"RevokeTokenRequest"],[416,32,287,16,"request"],[416,39,287,23],[416,41,287,25],[417,6,287,25],[417,10,287,25,"_this4"],[417,16,287,25],[418,6,287,25],[418,10,287,25,"_classCallCheck"],[418,25,287,25],[418,26,287,25,"default"],[418,33,287,25],[418,41,287,25,"RevokeTokenRequest"],[418,59,287,25],[419,6,288,8,"_this4"],[419,12,288,8],[419,19,288,8,"_callSuper"],[419,29,288,8],[419,30,288,8,"default"],[419,37,288,8],[419,45,288,8,"RevokeTokenRequest"],[419,63,288,8],[419,66,288,14,"request"],[419,73,288,21],[420,6,289,8],[420,10,289,8,"invariant"],[420,19,289,17],[420,20,289,17,"default"],[420,27,289,17],[420,29,289,18,"request"],[420,36,289,25],[420,37,289,26,"token"],[420,42,289,31],[420,44,289,33],[420,106,289,95],[420,107,289,96],[421,6,290,8,"_this4"],[421,12,290,8],[421,13,290,13,"clientId"],[421,21,290,21],[421,24,290,24,"request"],[421,31,290,31],[421,32,290,32,"clientId"],[421,40,290,40],[422,6,291,8,"_this4"],[422,12,291,8],[422,13,291,13,"clientSecret"],[422,25,291,25],[422,28,291,28,"request"],[422,35,291,35],[422,36,291,36,"clientSecret"],[422,48,291,48],[423,6,292,8,"_this4"],[423,12,292,8],[423,13,292,13,"token"],[423,18,292,18],[423,21,292,21,"request"],[423,28,292,28],[423,29,292,29,"token"],[423,34,292,34],[424,6,293,8,"_this4"],[424,12,293,8],[424,13,293,13,"tokenTypeHint"],[424,26,293,26],[424,29,293,29,"request"],[424,36,293,36],[424,37,293,37,"tokenTypeHint"],[424,50,293,50],[425,6,293,51],[425,13,293,51,"_this4"],[425,19,293,51],[426,4,294,4],[427,4,294,5],[427,8,294,5,"_inherits"],[427,17,294,5],[427,18,294,5,"default"],[427,25,294,5],[427,27,294,5,"RevokeTokenRequest"],[427,45,294,5],[427,47,294,5,"_Request2"],[427,56,294,5],[428,4,294,5],[428,15,294,5,"_createClass"],[428,27,294,5],[428,28,294,5,"default"],[428,35,294,5],[428,37,294,5,"RevokeTokenRequest"],[428,55,294,5],[429,6,294,5,"key"],[429,9,294,5],[430,6,294,5,"value"],[430,11,294,5],[430,13,295,4],[430,22,295,4,"getHeaders"],[430,32,295,14,"getHeaders"],[430,33,295,14],[430,35,295,17],[431,8,296,8],[431,12,296,14,"headers"],[431,19,296,21],[431,22,296,24],[432,10,296,26],[432,24,296,40],[432,26,296,42],[433,8,296,78],[433,9,296,79],[434,8,297,8],[434,12,297,12],[434,19,297,19],[434,23,297,23],[434,24,297,24,"clientSecret"],[434,36,297,36],[434,41,297,41],[434,52,297,52],[434,56,297,56],[434,60,297,60],[434,61,297,61,"clientId"],[434,69,297,69],[434,71,297,71],[435,10,298,12],[436,10,299,12],[437,10,300,12],[437,14,300,18,"encodedClientId"],[437,29,300,33],[437,32,300,36,"encodeURIComponent"],[437,50,300,54],[437,51,300,55],[437,55,300,59],[437,56,300,60,"clientId"],[437,64,300,68],[437,65,300,69],[438,10,301,12],[438,14,301,18,"encodedClientSecret"],[438,33,301,37],[438,36,301,40,"encodeURIComponent"],[438,54,301,58],[438,55,301,59],[438,59,301,63],[438,60,301,64,"clientSecret"],[438,72,301,76],[438,73,301,77],[439,10,302,12],[439,14,302,18,"credentials"],[439,25,302,29],[439,28,302,32],[439,31,302,35,"encodedClientId"],[439,46,302,50],[439,50,302,54,"encodedClientSecret"],[439,69,302,73],[439,71,302,75],[440,10,303,12],[440,14,303,18,"basicAuth"],[440,23,303,27],[440,26,303,30,"Base64"],[440,32,303,36],[440,33,303,37,"encodeNoWrap"],[440,45,303,49],[440,46,303,50,"credentials"],[440,57,303,61],[440,58,303,62],[441,10,304,12,"headers"],[441,17,304,19],[441,18,304,20,"Authorization"],[441,31,304,33],[441,34,304,36],[441,43,304,45,"basicAuth"],[441,52,304,54],[441,54,304,56],[442,8,305,8],[443,8,306,8],[443,15,306,15,"headers"],[443,22,306,22],[444,6,307,4],[445,6,308,4],[446,0,309,0],[447,0,310,0],[448,0,311,0],[449,0,312,0],[450,4,308,4],[451,6,308,4,"key"],[451,9,308,4],[452,6,308,4,"value"],[452,11,308,4],[453,8,308,4],[453,12,308,4,"_performAsync3"],[453,26,308,4],[453,33,308,4,"_asyncToGenerator"],[453,50,308,4],[453,51,308,4,"default"],[453,58,308,4],[453,60,313,4],[453,71,313,23,"discovery"],[453,80,313,32],[453,82,313,34],[454,10,314,8],[454,14,314,8,"invariant"],[454,23,314,17],[454,24,314,17,"default"],[454,31,314,17],[454,33,314,18,"discovery"],[454,42,314,27],[454,43,314,28,"revocationEndpoint"],[454,61,314,46],[454,63,314,48],[454,132,314,117],[454,133,314,118],[455,10,315,8],[455,16,315,14],[455,20,315,14,"requestAsync"],[455,26,315,26],[455,27,315,26,"requestAsync"],[455,39,315,26],[455,41,315,27,"discovery"],[455,50,315,36],[455,51,315,37,"revocationEndpoint"],[455,69,315,55],[455,71,315,57],[456,12,316,12,"method"],[456,18,316,18],[456,20,316,20],[456,26,316,26],[457,12,317,12,"headers"],[457,19,317,19],[457,21,317,21],[457,25,317,25],[457,26,317,26,"getHeaders"],[457,36,317,36],[457,37,317,37],[457,38,317,38],[458,12,318,12,"body"],[458,16,318,16],[458,18,318,18],[458,22,318,22],[458,23,318,23,"getQueryBody"],[458,35,318,35],[458,36,318,36],[459,10,319,8],[459,11,319,9],[459,12,319,10],[460,10,320,8],[460,17,320,15],[460,21,320,19],[461,8,321,4],[461,9,321,5],[462,8,321,5],[462,17,313,10,"performAsync"],[462,29,313,22,"performAsync"],[462,30,313,22,"_x5"],[462,33,313,22],[463,10,313,22],[463,17,313,22,"_performAsync3"],[463,31,313,22],[463,32,313,22,"apply"],[463,37,313,22],[463,44,313,22,"arguments"],[463,53,313,22],[464,8,313,22],[465,8,313,22],[465,15,313,10,"performAsync"],[465,27,313,22],[466,6,313,22],[467,4,313,22],[468,6,313,22,"key"],[468,9,313,22],[469,6,313,22,"value"],[469,11,313,22],[469,13,322,4],[469,22,322,4,"getRequestConfig"],[469,38,322,20,"getRequestConfig"],[469,39,322,20],[469,41,322,23],[470,8,323,8],[470,15,323,15],[471,10,324,12,"clientId"],[471,18,324,20],[471,20,324,22],[471,24,324,26],[471,25,324,27,"clientId"],[471,33,324,35],[472,10,325,12,"clientSecret"],[472,22,325,24],[472,24,325,26],[472,28,325,30],[472,29,325,31,"clientSecret"],[472,41,325,43],[473,10,326,12,"token"],[473,15,326,17],[473,17,326,19],[473,21,326,23],[473,22,326,24,"token"],[473,27,326,29],[474,10,327,12,"tokenTypeHint"],[474,23,327,25],[474,25,327,27],[474,29,327,31],[474,30,327,32,"tokenTypeHint"],[475,8,328,8],[475,9,328,9],[476,6,329,4],[477,4,329,5],[478,6,329,5,"key"],[478,9,329,5],[479,6,329,5,"value"],[479,11,329,5],[479,13,330,4],[479,22,330,4,"getQueryBody"],[479,34,330,16,"getQueryBody"],[479,35,330,16],[479,37,330,19],[480,8,331,8],[480,12,331,14,"queryBody"],[480,21,331,23],[480,24,331,26],[481,10,331,28,"token"],[481,15,331,33],[481,17,331,35],[481,21,331,39],[481,22,331,40,"token"],[482,8,331,46],[482,9,331,47],[483,8,332,8],[483,12,332,12],[483,16,332,16],[483,17,332,17,"tokenTypeHint"],[483,30,332,30],[483,32,332,32],[484,10,333,12,"queryBody"],[484,19,333,21],[484,20,333,22,"token_type_hint"],[484,35,333,37],[484,38,333,40],[484,42,333,44],[484,43,333,45,"tokenTypeHint"],[484,56,333,58],[485,8,334,8],[486,8,335,8],[487,8,336,8],[487,12,336,12],[487,16,336,16],[487,17,336,17,"clientId"],[487,25,336,25],[487,27,336,27],[488,10,337,12,"queryBody"],[488,19,337,21],[488,20,337,22,"client_id"],[488,29,337,31],[488,32,337,34],[488,36,337,38],[488,37,337,39,"clientId"],[488,45,337,47],[489,8,338,8],[490,8,339,8],[490,12,339,12],[490,16,339,16],[490,17,339,17,"clientSecret"],[490,29,339,29],[490,31,339,31],[491,10,340,12,"queryBody"],[491,19,340,21],[491,20,340,22,"client_secret"],[491,33,340,35],[491,36,340,38],[491,40,340,42],[491,41,340,43,"clientSecret"],[491,53,340,55],[492,8,341,8],[493,8,342,8],[493,15,342,15,"queryBody"],[493,24,342,24],[494,6,343,4],[495,4,343,5],[496,2,343,5],[496,4,282,40,"Request"],[496,11,282,47],[496,14,345,0],[497,2,346,0],[498,0,347,0],[499,0,348,0],[500,0,349,0],[501,0,350,0],[502,0,351,0],[503,0,352,0],[504,2,353,7],[504,11,353,16,"exchangeCodeAsync"],[504,28,353,33,"exchangeCodeAsync"],[504,29,353,34,"config"],[504,35,353,40],[504,37,353,42,"discovery"],[504,46,353,51],[504,48,353,53],[505,4,354,4],[505,8,354,10,"request"],[505,15,354,17],[505,18,354,20],[505,22,354,24,"AccessTokenRequest"],[505,40,354,42],[505,41,354,43,"config"],[505,47,354,49],[505,48,354,50],[506,4,355,4],[506,11,355,11,"request"],[506,18,355,18],[506,19,355,19,"performAsync"],[506,31,355,31],[506,32,355,32,"discovery"],[506,41,355,41],[506,42,355,42],[507,2,356,0],[508,2,357,0],[509,2,358,0],[510,0,359,0],[511,0,360,0],[512,0,361,0],[513,0,362,0],[514,0,363,0],[515,0,364,0],[516,0,365,0],[517,0,366,0],[518,0,367,0],[519,0,368,0],[520,0,369,0],[521,2,370,7],[521,11,370,16,"refreshAsync"],[521,23,370,28,"refreshAsync"],[521,24,370,29,"config"],[521,30,370,35],[521,32,370,37,"discovery"],[521,41,370,46],[521,43,370,48],[522,4,371,4],[522,8,371,10,"request"],[522,15,371,17],[522,18,371,20],[522,22,371,24,"RefreshTokenRequest"],[522,41,371,43],[522,42,371,44,"config"],[522,48,371,50],[522,49,371,51],[523,4,372,4],[523,11,372,11,"request"],[523,18,372,18],[523,19,372,19,"performAsync"],[523,31,372,31],[523,32,372,32,"discovery"],[523,41,372,41],[523,42,372,42],[524,2,373,0],[525,2,374,0],[526,2,375,0],[527,0,376,0],[528,0,377,0],[529,0,378,0],[530,0,379,0],[531,0,380,0],[532,0,381,0],[533,2,382,7],[533,11,382,16,"revokeAsync"],[533,22,382,27,"revokeAsync"],[533,23,382,28,"config"],[533,29,382,34],[533,31,382,36,"discovery"],[533,40,382,45],[533,42,382,47],[534,4,383,4],[534,8,383,10,"request"],[534,15,383,17],[534,18,383,20],[534,22,383,24,"RevokeTokenRequest"],[534,40,383,42],[534,41,383,43,"config"],[534,47,383,49],[534,48,383,50],[535,4,384,4],[535,11,384,11,"request"],[535,18,384,18],[535,19,384,19,"performAsync"],[535,31,384,31],[535,32,384,32,"discovery"],[535,41,384,41],[535,42,384,42],[536,2,385,0],[537,2,386,0],[538,0,387,0],[539,0,388,0],[540,0,389,0],[541,0,390,0],[542,0,391,0],[543,0,392,0],[544,0,393,0],[545,2,394,7],[545,11,394,16,"fetchUserInfoAsync"],[545,29,394,34,"fetchUserInfoAsync"],[545,30,394,35,"config"],[545,36,394,41],[545,38,394,43,"discovery"],[545,47,394,52],[545,49,394,54],[546,4,395,4],[546,8,395,8],[546,9,395,9,"discovery"],[546,18,395,18],[546,19,395,19,"userInfoEndpoint"],[546,35,395,35],[546,37,395,37],[547,6,396,8],[547,12,396,14],[547,16,396,18,"Error"],[547,21,396,23],[547,22,396,24],[547,98,396,100],[547,99,396,101],[548,4,397,4],[549,4,398,4],[549,11,398,11],[549,15,398,11,"requestAsync"],[549,21,398,23],[549,22,398,23,"requestAsync"],[549,34,398,23],[549,36,398,24,"discovery"],[549,45,398,33],[549,46,398,34,"userInfoEndpoint"],[549,62,398,50],[549,64,398,52],[550,6,399,8,"headers"],[550,13,399,15],[550,15,399,17],[551,8,400,12],[551,22,400,26],[551,24,400,28],[551,59,400,63],[552,8,401,12,"Authorization"],[552,21,401,25],[552,23,401,27],[552,33,401,37,"config"],[552,39,401,43],[552,40,401,44,"accessToken"],[552,51,401,55],[553,6,402,8],[553,7,402,9],[554,6,403,8,"dataType"],[554,14,403,16],[554,16,403,18],[554,22,403,24],[555,6,404,8,"method"],[555,12,404,14],[555,14,404,16],[556,4,405,4],[556,5,405,5],[556,6,405,6],[557,2,406,0],[558,0,406,1],[558,3]],"functionMap":{"names":["<global>","getCurrentTimeInSeconds","TokenResponse","TokenResponse.isTokenFresh","TokenResponse.fromQueryParams","TokenResponse#constructor","TokenResponse#applyResponseConfig","TokenResponse#getRequestConfig","TokenResponse#refreshAsync","TokenResponse#shouldRefresh","Request","Request#constructor","Request#performAsync","Request#getRequestConfig","Request#getQueryBody","TokenRequest","constructor","getHeaders","performAsync","getQueryBody","AccessTokenRequest","AccessTokenRequest#constructor","AccessTokenRequest#getQueryBody","AccessTokenRequest#getRequestConfig","RefreshTokenRequest","RefreshTokenRequest#constructor","RefreshTokenRequest#getQueryBody","RefreshTokenRequest#getRequestConfig","RevokeTokenRequest","RevokeTokenRequest#constructor","RevokeTokenRequest#getHeaders","RevokeTokenRequest#performAsync","RevokeTokenRequest#getRequestConfig","RevokeTokenRequest#getQueryBody","exchangeCodeAsync","refreshAsync","revokeAsync","fetchUserInfoAsync"],"mappings":"AAA;OCS;CDE;OEM;ICO;KDc;IEM;KFW;IGa;KHU;IIC;KJS;IKC;KLW;IMC;KNW;IOC;KPG;CFC;OUC;ICE;KDE;IEC;KFE;IGC;KHE;IIC;KJE;CVC;OeI;ICM;KDO;IEC;KFY;IGC;KHqB;IIC;KJmB;CfC;OoBM;ICG;KDS;IEC;KFS;IGC;KHU;CpBC;OwBM;ICE;KDI;IEC;KFM;IGC;KHS;CxBC;O4BM;ICK;KDO;IEC;KFY;IGM;KHQ;IIC;KJO;IKC;KLa;C5BC;OkCS;ClCG;OmCc;CnCG;OoCS;CpCG;OqCS;CrCY"},"hasCjsExports":false},"type":"js/module"}]}