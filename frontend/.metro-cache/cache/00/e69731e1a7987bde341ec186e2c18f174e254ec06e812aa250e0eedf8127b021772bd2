{"dependencies":[{"name":"./WorkletsError.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":51,"index":66}}],"key":"xVeJU8+FJmqfUKJ4PbwGpZoZhc0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.registerWorkletStackDetails = registerWorkletStackDetails;\n  exports.reportFatalRemoteError = reportFatalRemoteError;\n  exports.registerReportFatalRemoteError = registerReportFatalRemoteError;\n  var _WorkletsErrorJs = require(_dependencyMap[0], \"./WorkletsError.js\");\n  const _workletStackDetails = new Map();\n  function registerWorkletStackDetails(hash, stackDetails) {\n    _workletStackDetails.set(hash, stackDetails);\n  }\n  function getBundleOffset(error) {\n    const frame = error.stack?.split('\\n')?.[0];\n    if (frame) {\n      const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n      if (parsedFrame) {\n        const [, file, line, col] = parsedFrame;\n        return [file, Number(line), Number(col)];\n      }\n    }\n    return ['unknown', 0, 0];\n  }\n  function processStack(stack) {\n    if (stack === '' || stack === undefined) {\n      return undefined;\n    }\n    const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n    let result = stack;\n    workletStackEntries?.forEach(match => {\n      const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n      const errorDetails = _workletStackDetails.get(hash);\n      if (!errorDetails) {\n        return;\n      }\n      const [error, lineOffset, colOffset] = errorDetails;\n      const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n      const line = origLine + bundleLine + lineOffset;\n      const col = origCol + bundleCol + colOffset;\n      result = result.replace(match, `${bundleFile}:${line}:${col}`);\n    });\n    return result;\n  }\n  /**\n   * Remote error is an error coming from a Worklet Runtime that we bubble up to\n   * the RN Runtime.\n   */\n  function reportFatalRemoteError({\n    message,\n    stack,\n    name,\n    jsEngine\n  }, force) {\n    const error = new _WorkletsErrorJs.WorkletsError();\n    error.message = message;\n    error.stack = processStack(stack);\n    error.name = name;\n    error.jsEngine = jsEngine;\n    if (force) {\n      throw error;\n    } else {\n      // @ts-expect-error React Native's `ErrorUtils` are hidden from the global scope.\n      globalThis.ErrorUtils.reportFatalError(error);\n    }\n  }\n\n  /**\n   * Registers `reportFatalRemoteError` function in global scope to allow to\n   * invoke it from C++.\n   */\n  function registerReportFatalRemoteError() {\n    globalThis.__reportFatalRemoteError = reportFatalRemoteError;\n  }\n});","lineCount":76,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,5,0,"exports"],[7,9,5,0],[7,10,5,0,"registerWorkletStackDetails"],[7,37,5,0],[7,40,5,0,"registerWorkletStackDetails"],[7,67,5,0],[8,2,43,0,"exports"],[8,9,43,0],[8,10,43,0,"reportFatalRemoteError"],[8,32,43,0],[8,35,43,0,"reportFatalRemoteError"],[8,57,43,0],[9,2,66,0,"exports"],[9,9,66,0],[9,10,66,0,"registerReportFatalRemoteError"],[9,40,66,0],[9,43,66,0,"registerReportFatalRemoteError"],[9,73,66,0],[10,2,3,0],[10,6,3,0,"_WorkletsErrorJs"],[10,22,3,0],[10,25,3,0,"require"],[10,32,3,0],[10,33,3,0,"_dependencyMap"],[10,47,3,0],[11,2,4,0],[11,8,4,6,"_workletStackDetails"],[11,28,4,26],[11,31,4,29],[11,35,4,33,"Map"],[11,38,4,36],[11,39,4,37],[11,40,4,38],[12,2,5,7],[12,11,5,16,"registerWorkletStackDetails"],[12,38,5,43,"registerWorkletStackDetails"],[12,39,5,44,"hash"],[12,43,5,48],[12,45,5,50,"stackDetails"],[12,57,5,62],[12,59,5,64],[13,4,6,2,"_workletStackDetails"],[13,24,6,22],[13,25,6,23,"set"],[13,28,6,26],[13,29,6,27,"hash"],[13,33,6,31],[13,35,6,33,"stackDetails"],[13,47,6,45],[13,48,6,46],[14,2,7,0],[15,2,8,0],[15,11,8,9,"getBundleOffset"],[15,26,8,24,"getBundleOffset"],[15,27,8,25,"error"],[15,32,8,30],[15,34,8,32],[16,4,9,2],[16,10,9,8,"frame"],[16,15,9,13],[16,18,9,16,"error"],[16,23,9,21],[16,24,9,22,"stack"],[16,29,9,27],[16,31,9,29,"split"],[16,36,9,34],[16,37,9,35],[16,41,9,39],[16,42,9,40],[16,45,9,43],[16,46,9,44],[16,47,9,45],[17,4,10,2],[17,8,10,6,"frame"],[17,13,10,11],[17,15,10,13],[18,6,11,4],[18,12,11,10,"parsedFrame"],[18,23,11,21],[18,26,11,24],[18,48,11,46],[18,49,11,47,"exec"],[18,53,11,51],[18,54,11,52,"frame"],[18,59,11,57],[18,60,11,58],[19,6,12,4],[19,10,12,8,"parsedFrame"],[19,21,12,19],[19,23,12,21],[20,8,13,6],[20,14,13,12],[20,17,13,15,"file"],[20,21,13,19],[20,23,13,21,"line"],[20,27,13,25],[20,29,13,27,"col"],[20,32,13,30],[20,33,13,31],[20,36,13,34,"parsedFrame"],[20,47,13,45],[21,8,14,6],[21,15,14,13],[21,16,14,14,"file"],[21,20,14,18],[21,22,14,20,"Number"],[21,28,14,26],[21,29,14,27,"line"],[21,33,14,31],[21,34,14,32],[21,36,14,34,"Number"],[21,42,14,40],[21,43,14,41,"col"],[21,46,14,44],[21,47,14,45],[21,48,14,46],[22,6,15,4],[23,4,16,2],[24,4,17,2],[24,11,17,9],[24,12,17,10],[24,21,17,19],[24,23,17,21],[24,24,17,22],[24,26,17,24],[24,27,17,25],[24,28,17,26],[25,2,18,0],[26,2,19,0],[26,11,19,9,"processStack"],[26,23,19,21,"processStack"],[26,24,19,22,"stack"],[26,29,19,27],[26,31,19,29],[27,4,20,2],[27,8,20,6,"stack"],[27,13,20,11],[27,18,20,16],[27,20,20,18],[27,24,20,22,"stack"],[27,29,20,27],[27,34,20,32,"undefined"],[27,43,20,41],[27,45,20,43],[28,6,21,4],[28,13,21,11,"undefined"],[28,22,21,20],[29,4,22,2],[30,4,23,2],[30,10,23,8,"workletStackEntries"],[30,29,23,27],[30,32,23,30,"stack"],[30,37,23,35],[30,38,23,36,"match"],[30,43,23,41],[30,44,23,42],[30,72,23,70],[30,73,23,71],[31,4,24,2],[31,8,24,6,"result"],[31,14,24,12],[31,17,24,15,"stack"],[31,22,24,20],[32,4,25,2,"workletStackEntries"],[32,23,25,21],[32,25,25,23,"forEach"],[32,32,25,30],[32,33,25,31,"match"],[32,38,25,36],[32,42,25,40],[33,6,26,4],[33,12,26,10],[33,15,26,13,"hash"],[33,19,26,17],[33,21,26,19,"origLine"],[33,29,26,27],[33,31,26,29,"origCol"],[33,38,26,36],[33,39,26,37],[33,42,26,40,"match"],[33,47,26,45],[33,48,26,46,"split"],[33,53,26,51],[33,54,26,52],[33,59,26,57],[33,60,26,58],[33,61,26,59,"map"],[33,64,26,62],[33,65,26,63,"Number"],[33,71,26,69],[33,72,26,70],[34,6,27,4],[34,12,27,10,"errorDetails"],[34,24,27,22],[34,27,27,25,"_workletStackDetails"],[34,47,27,45],[34,48,27,46,"get"],[34,51,27,49],[34,52,27,50,"hash"],[34,56,27,54],[34,57,27,55],[35,6,28,4],[35,10,28,8],[35,11,28,9,"errorDetails"],[35,23,28,21],[35,25,28,23],[36,8,29,6],[37,6,30,4],[38,6,31,4],[38,12,31,10],[38,13,31,11,"error"],[38,18,31,16],[38,20,31,18,"lineOffset"],[38,30,31,28],[38,32,31,30,"colOffset"],[38,41,31,39],[38,42,31,40],[38,45,31,43,"errorDetails"],[38,57,31,55],[39,6,32,4],[39,12,32,10],[39,13,32,11,"bundleFile"],[39,23,32,21],[39,25,32,23,"bundleLine"],[39,35,32,33],[39,37,32,35,"bundleCol"],[39,46,32,44],[39,47,32,45],[39,50,32,48,"getBundleOffset"],[39,65,32,63],[39,66,32,64,"error"],[39,71,32,69],[39,72,32,70],[40,6,33,4],[40,12,33,10,"line"],[40,16,33,14],[40,19,33,17,"origLine"],[40,27,33,25],[40,30,33,28,"bundleLine"],[40,40,33,38],[40,43,33,41,"lineOffset"],[40,53,33,51],[41,6,34,4],[41,12,34,10,"col"],[41,15,34,13],[41,18,34,16,"origCol"],[41,25,34,23],[41,28,34,26,"bundleCol"],[41,37,34,35],[41,40,34,38,"colOffset"],[41,49,34,47],[42,6,35,4,"result"],[42,12,35,10],[42,15,35,13,"result"],[42,21,35,19],[42,22,35,20,"replace"],[42,29,35,27],[42,30,35,28,"match"],[42,35,35,33],[42,37,35,35],[42,40,35,38,"bundleFile"],[42,50,35,48],[42,54,35,52,"line"],[42,58,35,56],[42,62,35,60,"col"],[42,65,35,63],[42,67,35,65],[42,68,35,66],[43,4,36,2],[43,5,36,3],[43,6,36,4],[44,4,37,2],[44,11,37,9,"result"],[44,17,37,15],[45,2,38,0],[46,2,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,2,43,7],[50,11,43,16,"reportFatalRemoteError"],[50,33,43,38,"reportFatalRemoteError"],[50,34,43,39],[51,4,44,2,"message"],[51,11,44,9],[52,4,45,2,"stack"],[52,9,45,7],[53,4,46,2,"name"],[53,8,46,6],[54,4,47,2,"jsEngine"],[55,2,48,0],[55,3,48,1],[55,5,48,3,"force"],[55,10,48,8],[55,12,48,10],[56,4,49,2],[56,10,49,8,"error"],[56,15,49,13],[56,18,49,16],[56,22,49,20,"WorkletsError"],[56,38,49,33],[56,39,49,33,"WorkletsError"],[56,52,49,33],[56,53,49,34],[56,54,49,35],[57,4,50,2,"error"],[57,9,50,7],[57,10,50,8,"message"],[57,17,50,15],[57,20,50,18,"message"],[57,27,50,25],[58,4,51,2,"error"],[58,9,51,7],[58,10,51,8,"stack"],[58,15,51,13],[58,18,51,16,"processStack"],[58,30,51,28],[58,31,51,29,"stack"],[58,36,51,34],[58,37,51,35],[59,4,52,2,"error"],[59,9,52,7],[59,10,52,8,"name"],[59,14,52,12],[59,17,52,15,"name"],[59,21,52,19],[60,4,53,2,"error"],[60,9,53,7],[60,10,53,8,"jsEngine"],[60,18,53,16],[60,21,53,19,"jsEngine"],[60,29,53,27],[61,4,54,2],[61,8,54,6,"force"],[61,13,54,11],[61,15,54,13],[62,6,55,4],[62,12,55,10,"error"],[62,17,55,15],[63,4,56,2],[63,5,56,3],[63,11,56,9],[64,6,57,4],[65,6,58,4,"globalThis"],[65,16,58,14],[65,17,58,15,"ErrorUtils"],[65,27,58,25],[65,28,58,26,"reportFatalError"],[65,44,58,42],[65,45,58,43,"error"],[65,50,58,48],[65,51,58,49],[66,4,59,2],[67,2,60,0],[69,2,62,0],[70,0,63,0],[71,0,64,0],[72,0,65,0],[73,2,66,7],[73,11,66,16,"registerReportFatalRemoteError"],[73,41,66,46,"registerReportFatalRemoteError"],[73,42,66,46],[73,44,66,49],[74,4,67,2,"globalThis"],[74,14,67,12],[74,15,67,13,"__reportFatalRemoteError"],[74,39,67,37],[74,42,67,40,"reportFatalRemoteError"],[74,64,67,62],[75,2,68,0],[76,0,68,1],[76,3]],"functionMap":{"names":["<global>","registerWorkletStackDetails","getBundleOffset","processStack","workletStackEntries.forEach$argument_0","reportFatalRemoteError","registerReportFatalRemoteError"],"mappings":"AAA;OCI;CDE;AEC;CFU;AGC;+BCM;GDW;CHE;OKK;CLiB;OMM;CNE"},"hasCjsExports":false},"type":"js/module"}]}