{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":209},"end":{"line":6,"column":69,"index":261}}],"key":"lV14QuoELkLKy4kI0aEcfvvcE84=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useTaskStore\", {\n    enumerable: true,\n    get: function () {\n      return useTaskStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  // Import AsyncStorage conditionally to avoid SSR issues\n  let AsyncStorage = null;\n  try {\n    AsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\").default;\n  } catch (error) {\n    // AsyncStorage not available (e.g., during SSR)\n    console.log('AsyncStorage not available during initialization');\n  }\n  const BACKEND_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useTaskStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    dailyTasks: [],\n    weeklyTask: null,\n    loading: false,\n    error: null,\n    fetchDailyTasks: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/daily?regenerate=true` : `${BACKEND_URL}/api/tasks/daily`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch daily tasks');\n        }\n        const data = await response.json();\n        set({\n          dailyTasks: data.tasks || [],\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch daily tasks'\n        });\n      }\n    },\n    fetchWeeklyTask: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/weekly?regenerate=true` : `${BACKEND_URL}/api/tasks/weekly`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch weekly task');\n        }\n        const data = await response.json();\n        // Backend returns tasks array, we need the first (and only) weekly task\n        const weeklyTask = data.tasks && data.tasks.length > 0 ? data.tasks[0] : null;\n        set({\n          weeklyTask: weeklyTask,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch weekly task'\n        });\n      }\n    },\n    completeTask: async (taskId, token) => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/tasks/complete`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: taskId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to complete task');\n        }\n        const data = await response.json();\n\n        // Update local state\n        set(state => {\n          const updatedDailyTasks = state.dailyTasks.map(task => task.id === taskId ? {\n            ...task,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : task);\n          const updatedWeeklyTask = state.weeklyTask && state.weeklyTask.id === taskId ? {\n            ...state.weeklyTask,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : state.weeklyTask;\n          return {\n            dailyTasks: updatedDailyTasks,\n            weeklyTask: updatedWeeklyTask\n          };\n        });\n        return true;\n      } catch (error) {\n        set({\n          error: error instanceof Error ? error.message : 'Failed to complete task'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    }\n  }), {\n    name: 'task-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage),\n    partialize: state => ({\n      dailyTasks: state.dailyTasks,\n      weeklyTask: state.weeklyTask\n    })\n  }));\n});","lineCount":142,"map":[[7,2,42,0,"Object"],[7,8,42,0],[7,9,42,0,"defineProperty"],[7,23,42,0],[7,24,42,0,"exports"],[7,31,42,0],[8,4,42,0,"enumerable"],[8,14,42,0],[9,4,42,0,"get"],[9,7,42,0],[9,18,42,0,"get"],[9,19,42,0],[10,6,42,0],[10,13,42,0,"useTaskStore"],[10,25,42,0],[11,4,42,0],[12,2,42,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,2,0],[14,6,2,0,"_zustandMiddleware"],[14,24,2,0],[14,27,2,0,"require"],[14,34,2,0],[14,35,2,0,"_dependencyMap"],[14,49,2,0],[15,2,3,0],[16,2,4,0],[16,6,4,4,"AsyncStorage"],[16,18,4,21],[16,21,4,24],[16,25,4,28],[17,2,5,0],[17,6,5,4],[18,4,6,2,"AsyncStorage"],[18,16,6,14],[18,19,6,17,"require"],[18,26,6,24],[18,27,6,24,"_dependencyMap"],[18,41,6,24],[18,89,6,68],[18,90,6,69],[18,91,6,70,"default"],[18,98,6,77],[19,2,7,0],[19,3,7,1],[19,4,7,2],[19,11,7,9,"error"],[19,16,7,14],[19,18,7,16],[20,4,8,2],[21,4,9,2,"console"],[21,11,9,9],[21,12,9,10,"log"],[21,15,9,13],[21,16,9,14],[21,66,9,64],[21,67,9,65],[22,2,10,0],[23,2,12,0],[23,8,12,6,"BACKEND_URL"],[23,19,12,17],[23,22,12,20,"process"],[23,29,12,27],[23,30,12,28,"env"],[23,33,12,31],[23,34,12,32,"EXPO_PUBLIC_BACKEND_URL"],[23,57,12,55],[23,61,12,59],[23,63,12,61],[24,2,42,7],[24,8,42,13,"useTaskStore"],[24,20,42,25],[24,23,42,28],[24,27,42,28,"create"],[24,35,42,34],[24,36,42,34,"create"],[24,42,42,34],[24,44,42,46],[24,45,42,47],[24,46,43,2],[24,50,43,2,"persist"],[24,68,43,9],[24,69,43,9,"persist"],[24,76,43,9],[24,78,44,4],[24,79,44,5,"set"],[24,82,44,8],[24,84,44,10,"get"],[24,87,44,13],[24,93,44,19],[25,4,45,6,"dailyTasks"],[25,14,45,16],[25,16,45,18],[25,18,45,20],[26,4,46,6,"weeklyTask"],[26,14,46,16],[26,16,46,18],[26,20,46,22],[27,4,47,6,"loading"],[27,11,47,13],[27,13,47,15],[27,18,47,20],[28,4,48,6,"error"],[28,9,48,11],[28,11,48,13],[28,15,48,17],[29,4,50,6,"fetchDailyTasks"],[29,19,50,21],[29,21,50,23],[29,27,50,23,"fetchDailyTasks"],[29,28,50,30,"token"],[29,33,50,43],[29,35,50,45,"regenerate"],[29,45,50,64],[29,48,50,67],[29,53,50,72],[29,58,50,77],[30,6,51,8,"set"],[30,9,51,11],[30,10,51,12],[31,8,51,14,"loading"],[31,15,51,21],[31,17,51,23],[31,21,51,27],[32,8,51,29,"error"],[32,13,51,34],[32,15,51,36],[33,6,51,41],[33,7,51,42],[33,8,51,43],[34,6,52,8],[34,10,52,12],[35,8,53,10],[35,14,53,16,"url"],[35,17,53,19],[35,20,53,22,"regenerate"],[35,30,53,32],[35,33,53,35],[35,36,53,38,"BACKEND_URL"],[35,47,53,49],[35,81,53,83],[35,84,53,86],[35,87,53,89,"BACKEND_URL"],[35,98,53,100],[35,116,53,118],[36,8,54,10],[36,14,54,16,"response"],[36,22,54,24],[36,25,54,27],[36,31,54,33,"fetch"],[36,36,54,38],[36,37,54,39,"url"],[36,40,54,42],[36,42,54,44],[37,10,55,12,"headers"],[37,17,55,19],[37,19,55,21],[38,12,56,14],[38,27,56,29],[38,29,56,31],[38,39,56,41,"token"],[38,44,56,46],[39,10,57,12],[40,8,58,10],[40,9,58,11],[40,10,58,12],[41,8,60,10],[41,12,60,14],[41,13,60,15,"response"],[41,21,60,23],[41,22,60,24,"ok"],[41,24,60,26],[41,26,60,28],[42,10,61,12],[42,16,61,18],[42,20,61,22,"Error"],[42,25,61,27],[42,26,61,28],[42,55,61,57],[42,56,61,58],[43,8,62,10],[44,8,64,10],[44,14,64,16,"data"],[44,18,64,20],[44,21,64,23],[44,27,64,29,"response"],[44,35,64,37],[44,36,64,38,"json"],[44,40,64,42],[44,41,64,43],[44,42,64,44],[45,8,65,10,"set"],[45,11,65,13],[45,12,65,14],[46,10,66,12,"dailyTasks"],[46,20,66,22],[46,22,66,24,"data"],[46,26,66,28],[46,27,66,29,"tasks"],[46,32,66,34],[46,36,66,38],[46,38,66,40],[47,10,67,12,"loading"],[47,17,67,19],[47,19,67,21],[47,24,67,26],[48,10,68,12,"error"],[48,15,68,17],[48,17,68,19],[49,8,69,10],[49,9,69,11],[49,10,69,12],[50,6,70,8],[50,7,70,9],[50,8,70,10],[50,15,70,17,"error"],[50,20,70,22],[50,22,70,24],[51,8,71,10,"set"],[51,11,71,13],[51,12,71,14],[52,10,72,12,"loading"],[52,17,72,19],[52,19,72,21],[52,24,72,26],[53,10,73,12,"error"],[53,15,73,17],[53,17,73,19,"error"],[53,22,73,24],[53,34,73,36,"Error"],[53,39,73,41],[53,42,73,44,"error"],[53,47,73,49],[53,48,73,50,"message"],[53,55,73,57],[53,58,73,60],[54,8,74,10],[54,9,74,11],[54,10,74,12],[55,6,75,8],[56,4,76,6],[56,5,76,7],[57,4,78,6,"fetchWeeklyTask"],[57,19,78,21],[57,21,78,23],[57,27,78,23,"fetchWeeklyTask"],[57,28,78,30,"token"],[57,33,78,43],[57,35,78,45,"regenerate"],[57,45,78,64],[57,48,78,67],[57,53,78,72],[57,58,78,77],[58,6,79,8,"set"],[58,9,79,11],[58,10,79,12],[59,8,79,14,"loading"],[59,15,79,21],[59,17,79,23],[59,21,79,27],[60,8,79,29,"error"],[60,13,79,34],[60,15,79,36],[61,6,79,41],[61,7,79,42],[61,8,79,43],[62,6,80,8],[62,10,80,12],[63,8,81,10],[63,14,81,16,"url"],[63,17,81,19],[63,20,81,22,"regenerate"],[63,30,81,32],[63,33,81,35],[63,36,81,38,"BACKEND_URL"],[63,47,81,49],[63,82,81,84],[63,85,81,87],[63,88,81,90,"BACKEND_URL"],[63,99,81,101],[63,118,81,120],[64,8,82,10],[64,14,82,16,"response"],[64,22,82,24],[64,25,82,27],[64,31,82,33,"fetch"],[64,36,82,38],[64,37,82,39,"url"],[64,40,82,42],[64,42,82,44],[65,10,83,12,"headers"],[65,17,83,19],[65,19,83,21],[66,12,84,14],[66,27,84,29],[66,29,84,31],[66,39,84,41,"token"],[66,44,84,46],[67,10,85,12],[68,8,86,10],[68,9,86,11],[68,10,86,12],[69,8,88,10],[69,12,88,14],[69,13,88,15,"response"],[69,21,88,23],[69,22,88,24,"ok"],[69,24,88,26],[69,26,88,28],[70,10,89,12],[70,16,89,18],[70,20,89,22,"Error"],[70,25,89,27],[70,26,89,28],[70,55,89,57],[70,56,89,58],[71,8,90,10],[72,8,92,10],[72,14,92,16,"data"],[72,18,92,20],[72,21,92,23],[72,27,92,29,"response"],[72,35,92,37],[72,36,92,38,"json"],[72,40,92,42],[72,41,92,43],[72,42,92,44],[73,8,93,10],[74,8,94,10],[74,14,94,16,"weeklyTask"],[74,24,94,26],[74,27,94,29,"data"],[74,31,94,33],[74,32,94,34,"tasks"],[74,37,94,39],[74,41,94,43,"data"],[74,45,94,47],[74,46,94,48,"tasks"],[74,51,94,53],[74,52,94,54,"length"],[74,58,94,60],[74,61,94,63],[74,62,94,64],[74,65,94,67,"data"],[74,69,94,71],[74,70,94,72,"tasks"],[74,75,94,77],[74,76,94,78],[74,77,94,79],[74,78,94,80],[74,81,94,83],[74,85,94,87],[75,8,95,10,"set"],[75,11,95,13],[75,12,95,14],[76,10,96,12,"weeklyTask"],[76,20,96,22],[76,22,96,24,"weeklyTask"],[76,32,96,34],[77,10,97,12,"loading"],[77,17,97,19],[77,19,97,21],[77,24,97,26],[78,10,98,12,"error"],[78,15,98,17],[78,17,98,19],[79,8,99,10],[79,9,99,11],[79,10,99,12],[80,6,100,8],[80,7,100,9],[80,8,100,10],[80,15,100,17,"error"],[80,20,100,22],[80,22,100,24],[81,8,101,10,"set"],[81,11,101,13],[81,12,101,14],[82,10,102,12,"loading"],[82,17,102,19],[82,19,102,21],[82,24,102,26],[83,10,103,12,"error"],[83,15,103,17],[83,17,103,19,"error"],[83,22,103,24],[83,34,103,36,"Error"],[83,39,103,41],[83,42,103,44,"error"],[83,47,103,49],[83,48,103,50,"message"],[83,55,103,57],[83,58,103,60],[84,8,104,10],[84,9,104,11],[84,10,104,12],[85,6,105,8],[86,4,106,6],[86,5,106,7],[87,4,108,6,"completeTask"],[87,16,108,18],[87,18,108,20],[87,24,108,20,"completeTask"],[87,25,108,27,"taskId"],[87,31,108,41],[87,33,108,43,"token"],[87,38,108,56],[87,43,108,61],[88,6,109,8],[88,10,109,12],[89,8,110,10],[89,14,110,16,"response"],[89,22,110,24],[89,25,110,27],[89,31,110,33,"fetch"],[89,36,110,38],[89,37,110,39],[89,40,110,42,"BACKEND_URL"],[89,51,110,53],[89,72,110,74],[89,74,110,76],[90,10,111,12,"method"],[90,16,111,18],[90,18,111,20],[90,24,111,26],[91,10,112,12,"headers"],[91,17,112,19],[91,19,112,21],[92,12,113,14],[92,26,113,28],[92,28,113,30],[92,46,113,48],[93,12,114,14],[93,27,114,29],[93,29,114,31],[93,39,114,41,"token"],[93,44,114,46],[94,10,115,12],[94,11,115,13],[95,10,116,12,"body"],[95,14,116,16],[95,16,116,18,"JSON"],[95,20,116,22],[95,21,116,23,"stringify"],[95,30,116,32],[95,31,116,33],[96,12,116,35,"task_id"],[96,19,116,42],[96,21,116,44,"taskId"],[97,10,116,51],[97,11,116,52],[98,8,117,10],[98,9,117,11],[98,10,117,12],[99,8,119,10],[99,12,119,14],[99,13,119,15,"response"],[99,21,119,23],[99,22,119,24,"ok"],[99,24,119,26],[99,26,119,28],[100,10,120,12],[100,16,120,18],[100,20,120,22,"Error"],[100,25,120,27],[100,26,120,28],[100,51,120,53],[100,52,120,54],[101,8,121,10],[102,8,123,10],[102,14,123,16,"data"],[102,18,123,20],[102,21,123,23],[102,27,123,29,"response"],[102,35,123,37],[102,36,123,38,"json"],[102,40,123,42],[102,41,123,43],[102,42,123,44],[104,8,125,10],[105,8,126,10,"set"],[105,11,126,13],[105,12,126,14,"state"],[105,17,126,19],[105,21,126,23],[106,10,127,12],[106,16,127,18,"updatedDailyTasks"],[106,33,127,35],[106,36,127,38,"state"],[106,41,127,43],[106,42,127,44,"dailyTasks"],[106,52,127,54],[106,53,127,55,"map"],[106,56,127,58],[106,57,127,59,"task"],[106,61,127,63],[106,65,128,14,"task"],[106,69,128,18],[106,70,128,19,"id"],[106,72,128,21],[106,77,128,26,"taskId"],[106,83,128,32],[106,86,129,18],[107,12,129,20],[107,15,129,23,"task"],[107,19,129,27],[108,12,129,29,"completed"],[108,21,129,38],[108,23,129,40],[108,27,129,44],[109,12,129,46,"completed_at"],[109,24,129,58],[109,26,129,60],[109,30,129,64,"Date"],[109,34,129,68],[109,35,129,69],[109,36,129,70],[109,37,129,71,"toISOString"],[109,48,129,82],[109,49,129,83],[110,10,129,85],[110,11,129,86],[110,14,130,18,"task"],[110,18,131,12],[110,19,131,13],[111,10,133,12],[111,16,133,18,"updatedWeeklyTask"],[111,33,133,35],[111,36,133,38,"state"],[111,41,133,43],[111,42,133,44,"weeklyTask"],[111,52,133,54],[111,56,133,58,"state"],[111,61,133,63],[111,62,133,64,"weeklyTask"],[111,72,133,74],[111,73,133,75,"id"],[111,75,133,77],[111,80,133,82,"taskId"],[111,86,133,88],[111,89,134,16],[112,12,134,18],[112,15,134,21,"state"],[112,20,134,26],[112,21,134,27,"weeklyTask"],[112,31,134,37],[113,12,134,39,"completed"],[113,21,134,48],[113,23,134,50],[113,27,134,54],[114,12,134,56,"completed_at"],[114,24,134,68],[114,26,134,70],[114,30,134,74,"Date"],[114,34,134,78],[114,35,134,79],[114,36,134,80],[114,37,134,81,"toISOString"],[114,48,134,92],[114,49,134,93],[115,10,134,95],[115,11,134,96],[115,14,135,16,"state"],[115,19,135,21],[115,20,135,22,"weeklyTask"],[115,30,135,32],[116,10,137,12],[116,17,137,19],[117,12,138,14,"dailyTasks"],[117,22,138,24],[117,24,138,26,"updatedDailyTasks"],[117,41,138,43],[118,12,139,14,"weeklyTask"],[118,22,139,24],[118,24,139,26,"updatedWeeklyTask"],[119,10,140,12],[119,11,140,13],[120,8,141,10],[120,9,141,11],[120,10,141,12],[121,8,143,10],[121,15,143,17],[121,19,143,21],[122,6,144,8],[122,7,144,9],[122,8,144,10],[122,15,144,17,"error"],[122,20,144,22],[122,22,144,24],[123,8,145,10,"set"],[123,11,145,13],[123,12,145,14],[124,10,145,16,"error"],[124,15,145,21],[124,17,145,23,"error"],[124,22,145,28],[124,34,145,40,"Error"],[124,39,145,45],[124,42,145,48,"error"],[124,47,145,53],[124,48,145,54,"message"],[124,55,145,61],[124,58,145,64],[125,8,145,90],[125,9,145,91],[125,10,145,92],[126,8,146,10],[126,15,146,17],[126,20,146,22],[127,6,147,8],[128,4,148,6],[128,5,148,7],[129,4,150,6,"clearError"],[129,14,150,16],[129,16,150,18,"clearError"],[129,17,150,18],[129,22,150,24],[130,6,151,8,"set"],[130,9,151,11],[130,10,151,12],[131,8,151,14,"error"],[131,13,151,19],[131,15,151,21],[132,6,151,26],[132,7,151,27],[132,8,151,28],[133,4,152,6],[134,2,153,4],[134,3,153,5],[134,4,153,6],[134,6,154,4],[135,4,155,6,"name"],[135,8,155,10],[135,10,155,12],[135,22,155,24],[136,4,156,6,"storage"],[136,11,156,13],[136,13,156,15],[136,17,156,15,"createJSONStorage"],[136,35,156,32],[136,36,156,32,"createJSONStorage"],[136,53,156,32],[136,55,156,33],[136,61,156,39,"AsyncStorage"],[136,73,156,51],[136,74,156,52],[137,4,157,6,"partialize"],[137,14,157,16],[137,16,157,19,"state"],[137,21,157,24],[137,26,157,30],[138,6,158,8,"dailyTasks"],[138,16,158,18],[138,18,158,20,"state"],[138,23,158,25],[138,24,158,26,"dailyTasks"],[138,34,158,36],[139,6,159,8,"weeklyTask"],[139,16,159,18],[139,18,159,20,"state"],[139,23,159,25],[139,24,159,26,"weeklyTask"],[140,4,160,6],[140,5,160,7],[141,2,161,4],[141,3,162,2],[141,4,163,0],[141,5,163,1],[142,0,163,2],[142,3]],"functionMap":{"names":["<global>","persist$argument_0","fetchDailyTasks","fetchWeeklyTask","completeTask","set$argument_0","state.dailyTasks.map$argument_0","clearError","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;IC2C;uBCM;OD0B;uBEE;OF4B;oBGE;cCkB;2DCC;sBDG;WDW;OHO;kBME;ONE;MDC;iCQG,kBR;kBSC;QTG"},"hasCjsExports":false},"type":"js/module"}]}