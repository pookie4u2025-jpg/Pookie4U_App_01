{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":69,"index":168}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useTaskStore\", {\n    enumerable: true,\n    get: function () {\n      return useTaskStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  const BACKEND_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useTaskStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    dailyTasks: [],\n    weeklyTask: null,\n    loading: false,\n    error: null,\n    fetchDailyTasks: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/daily?regenerate=true` : `${BACKEND_URL}/api/tasks/daily`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch daily tasks');\n        }\n        const data = await response.json();\n        set({\n          dailyTasks: data.tasks || [],\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch daily tasks'\n        });\n      }\n    },\n    fetchWeeklyTask: async (token, regenerate = false) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const url = regenerate ? `${BACKEND_URL}/api/tasks/weekly?regenerate=true` : `${BACKEND_URL}/api/tasks/weekly`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch weekly task');\n        }\n        const data = await response.json();\n        // Backend returns tasks array, we need the first (and only) weekly task\n        const weeklyTask = data.tasks && data.tasks.length > 0 ? data.tasks[0] : null;\n        set({\n          weeklyTask: weeklyTask,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch weekly task'\n        });\n      }\n    },\n    completeTask: async (taskId, token) => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/tasks/complete`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            task_id: taskId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to complete task');\n        }\n        const data = await response.json();\n\n        // Update local state\n        set(state => {\n          const updatedDailyTasks = state.dailyTasks.map(task => task.id === taskId ? {\n            ...task,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : task);\n          const updatedWeeklyTask = state.weeklyTask && state.weeklyTask.id === taskId ? {\n            ...state.weeklyTask,\n            completed: true,\n            completed_at: new Date().toISOString()\n          } : state.weeklyTask;\n          return {\n            dailyTasks: updatedDailyTasks,\n            weeklyTask: updatedWeeklyTask\n          };\n        });\n        return true;\n      } catch (error) {\n        set({\n          error: error instanceof Error ? error.message : 'Failed to complete task'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    }\n  }), {\n    name: 'task-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage.default),\n    partialize: state => ({\n      dailyTasks: state.dailyTasks,\n      weeklyTask: state.weeklyTask\n    })\n  }));\n});","lineCount":141,"map":[[12,2,35,0,"Object"],[12,8,35,0],[12,9,35,0,"defineProperty"],[12,23,35,0],[12,24,35,0,"exports"],[12,31,35,0],[13,4,35,0,"enumerable"],[13,14,35,0],[14,4,35,0,"get"],[14,7,35,0],[14,18,35,0,"get"],[14,19,35,0],[15,6,35,0],[15,13,35,0,"useTaskStore"],[15,25,35,0],[16,4,35,0],[17,2,35,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_zustandMiddleware"],[19,24,2,0],[19,27,2,0,"require"],[19,34,2,0],[19,35,2,0,"_dependencyMap"],[19,49,2,0],[20,2,3,0],[20,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[20,42,3,0],[20,45,3,0,"require"],[20,52,3,0],[20,53,3,0,"_dependencyMap"],[20,67,3,0],[21,2,3,0],[21,6,3,0,"AsyncStorage"],[21,18,3,0],[21,21,3,0,"_interopDefault"],[21,36,3,0],[21,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[21,73,3,0],[22,2,5,0],[22,8,5,6,"BACKEND_URL"],[22,19,5,17],[22,22,5,20,"process"],[22,29,5,27],[22,30,5,28,"env"],[22,33,5,31],[22,34,5,32,"EXPO_PUBLIC_BACKEND_URL"],[22,57,5,55],[22,61,5,59],[22,63,5,61],[23,2,35,7],[23,8,35,13,"useTaskStore"],[23,20,35,25],[23,23,35,28],[23,27,35,28,"create"],[23,35,35,34],[23,36,35,34,"create"],[23,42,35,34],[23,44,35,46],[23,45,35,47],[23,46,36,2],[23,50,36,2,"persist"],[23,68,36,9],[23,69,36,9,"persist"],[23,76,36,9],[23,78,37,4],[23,79,37,5,"set"],[23,82,37,8],[23,84,37,10,"get"],[23,87,37,13],[23,93,37,19],[24,4,38,6,"dailyTasks"],[24,14,38,16],[24,16,38,18],[24,18,38,20],[25,4,39,6,"weeklyTask"],[25,14,39,16],[25,16,39,18],[25,20,39,22],[26,4,40,6,"loading"],[26,11,40,13],[26,13,40,15],[26,18,40,20],[27,4,41,6,"error"],[27,9,41,11],[27,11,41,13],[27,15,41,17],[28,4,43,6,"fetchDailyTasks"],[28,19,43,21],[28,21,43,23],[28,27,43,23,"fetchDailyTasks"],[28,28,43,30,"token"],[28,33,43,43],[28,35,43,45,"regenerate"],[28,45,43,64],[28,48,43,67],[28,53,43,72],[28,58,43,77],[29,6,44,8,"set"],[29,9,44,11],[29,10,44,12],[30,8,44,14,"loading"],[30,15,44,21],[30,17,44,23],[30,21,44,27],[31,8,44,29,"error"],[31,13,44,34],[31,15,44,36],[32,6,44,41],[32,7,44,42],[32,8,44,43],[33,6,45,8],[33,10,45,12],[34,8,46,10],[34,14,46,16,"url"],[34,17,46,19],[34,20,46,22,"regenerate"],[34,30,46,32],[34,33,46,35],[34,36,46,38,"BACKEND_URL"],[34,47,46,49],[34,81,46,83],[34,84,46,86],[34,87,46,89,"BACKEND_URL"],[34,98,46,100],[34,116,46,118],[35,8,47,10],[35,14,47,16,"response"],[35,22,47,24],[35,25,47,27],[35,31,47,33,"fetch"],[35,36,47,38],[35,37,47,39,"url"],[35,40,47,42],[35,42,47,44],[36,10,48,12,"headers"],[36,17,48,19],[36,19,48,21],[37,12,49,14],[37,27,49,29],[37,29,49,31],[37,39,49,41,"token"],[37,44,49,46],[38,10,50,12],[39,8,51,10],[39,9,51,11],[39,10,51,12],[40,8,53,10],[40,12,53,14],[40,13,53,15,"response"],[40,21,53,23],[40,22,53,24,"ok"],[40,24,53,26],[40,26,53,28],[41,10,54,12],[41,16,54,18],[41,20,54,22,"Error"],[41,25,54,27],[41,26,54,28],[41,55,54,57],[41,56,54,58],[42,8,55,10],[43,8,57,10],[43,14,57,16,"data"],[43,18,57,20],[43,21,57,23],[43,27,57,29,"response"],[43,35,57,37],[43,36,57,38,"json"],[43,40,57,42],[43,41,57,43],[43,42,57,44],[44,8,58,10,"set"],[44,11,58,13],[44,12,58,14],[45,10,59,12,"dailyTasks"],[45,20,59,22],[45,22,59,24,"data"],[45,26,59,28],[45,27,59,29,"tasks"],[45,32,59,34],[45,36,59,38],[45,38,59,40],[46,10,60,12,"loading"],[46,17,60,19],[46,19,60,21],[46,24,60,26],[47,10,61,12,"error"],[47,15,61,17],[47,17,61,19],[48,8,62,10],[48,9,62,11],[48,10,62,12],[49,6,63,8],[49,7,63,9],[49,8,63,10],[49,15,63,17,"error"],[49,20,63,22],[49,22,63,24],[50,8,64,10,"set"],[50,11,64,13],[50,12,64,14],[51,10,65,12,"loading"],[51,17,65,19],[51,19,65,21],[51,24,65,26],[52,10,66,12,"error"],[52,15,66,17],[52,17,66,19,"error"],[52,22,66,24],[52,34,66,36,"Error"],[52,39,66,41],[52,42,66,44,"error"],[52,47,66,49],[52,48,66,50,"message"],[52,55,66,57],[52,58,66,60],[53,8,67,10],[53,9,67,11],[53,10,67,12],[54,6,68,8],[55,4,69,6],[55,5,69,7],[56,4,71,6,"fetchWeeklyTask"],[56,19,71,21],[56,21,71,23],[56,27,71,23,"fetchWeeklyTask"],[56,28,71,30,"token"],[56,33,71,43],[56,35,71,45,"regenerate"],[56,45,71,64],[56,48,71,67],[56,53,71,72],[56,58,71,77],[57,6,72,8,"set"],[57,9,72,11],[57,10,72,12],[58,8,72,14,"loading"],[58,15,72,21],[58,17,72,23],[58,21,72,27],[59,8,72,29,"error"],[59,13,72,34],[59,15,72,36],[60,6,72,41],[60,7,72,42],[60,8,72,43],[61,6,73,8],[61,10,73,12],[62,8,74,10],[62,14,74,16,"url"],[62,17,74,19],[62,20,74,22,"regenerate"],[62,30,74,32],[62,33,74,35],[62,36,74,38,"BACKEND_URL"],[62,47,74,49],[62,82,74,84],[62,85,74,87],[62,88,74,90,"BACKEND_URL"],[62,99,74,101],[62,118,74,120],[63,8,75,10],[63,14,75,16,"response"],[63,22,75,24],[63,25,75,27],[63,31,75,33,"fetch"],[63,36,75,38],[63,37,75,39,"url"],[63,40,75,42],[63,42,75,44],[64,10,76,12,"headers"],[64,17,76,19],[64,19,76,21],[65,12,77,14],[65,27,77,29],[65,29,77,31],[65,39,77,41,"token"],[65,44,77,46],[66,10,78,12],[67,8,79,10],[67,9,79,11],[67,10,79,12],[68,8,81,10],[68,12,81,14],[68,13,81,15,"response"],[68,21,81,23],[68,22,81,24,"ok"],[68,24,81,26],[68,26,81,28],[69,10,82,12],[69,16,82,18],[69,20,82,22,"Error"],[69,25,82,27],[69,26,82,28],[69,55,82,57],[69,56,82,58],[70,8,83,10],[71,8,85,10],[71,14,85,16,"data"],[71,18,85,20],[71,21,85,23],[71,27,85,29,"response"],[71,35,85,37],[71,36,85,38,"json"],[71,40,85,42],[71,41,85,43],[71,42,85,44],[72,8,86,10],[73,8,87,10],[73,14,87,16,"weeklyTask"],[73,24,87,26],[73,27,87,29,"data"],[73,31,87,33],[73,32,87,34,"tasks"],[73,37,87,39],[73,41,87,43,"data"],[73,45,87,47],[73,46,87,48,"tasks"],[73,51,87,53],[73,52,87,54,"length"],[73,58,87,60],[73,61,87,63],[73,62,87,64],[73,65,87,67,"data"],[73,69,87,71],[73,70,87,72,"tasks"],[73,75,87,77],[73,76,87,78],[73,77,87,79],[73,78,87,80],[73,81,87,83],[73,85,87,87],[74,8,88,10,"set"],[74,11,88,13],[74,12,88,14],[75,10,89,12,"weeklyTask"],[75,20,89,22],[75,22,89,24,"weeklyTask"],[75,32,89,34],[76,10,90,12,"loading"],[76,17,90,19],[76,19,90,21],[76,24,90,26],[77,10,91,12,"error"],[77,15,91,17],[77,17,91,19],[78,8,92,10],[78,9,92,11],[78,10,92,12],[79,6,93,8],[79,7,93,9],[79,8,93,10],[79,15,93,17,"error"],[79,20,93,22],[79,22,93,24],[80,8,94,10,"set"],[80,11,94,13],[80,12,94,14],[81,10,95,12,"loading"],[81,17,95,19],[81,19,95,21],[81,24,95,26],[82,10,96,12,"error"],[82,15,96,17],[82,17,96,19,"error"],[82,22,96,24],[82,34,96,36,"Error"],[82,39,96,41],[82,42,96,44,"error"],[82,47,96,49],[82,48,96,50,"message"],[82,55,96,57],[82,58,96,60],[83,8,97,10],[83,9,97,11],[83,10,97,12],[84,6,98,8],[85,4,99,6],[85,5,99,7],[86,4,101,6,"completeTask"],[86,16,101,18],[86,18,101,20],[86,24,101,20,"completeTask"],[86,25,101,27,"taskId"],[86,31,101,41],[86,33,101,43,"token"],[86,38,101,56],[86,43,101,61],[87,6,102,8],[87,10,102,12],[88,8,103,10],[88,14,103,16,"response"],[88,22,103,24],[88,25,103,27],[88,31,103,33,"fetch"],[88,36,103,38],[88,37,103,39],[88,40,103,42,"BACKEND_URL"],[88,51,103,53],[88,72,103,74],[88,74,103,76],[89,10,104,12,"method"],[89,16,104,18],[89,18,104,20],[89,24,104,26],[90,10,105,12,"headers"],[90,17,105,19],[90,19,105,21],[91,12,106,14],[91,26,106,28],[91,28,106,30],[91,46,106,48],[92,12,107,14],[92,27,107,29],[92,29,107,31],[92,39,107,41,"token"],[92,44,107,46],[93,10,108,12],[93,11,108,13],[94,10,109,12,"body"],[94,14,109,16],[94,16,109,18,"JSON"],[94,20,109,22],[94,21,109,23,"stringify"],[94,30,109,32],[94,31,109,33],[95,12,109,35,"task_id"],[95,19,109,42],[95,21,109,44,"taskId"],[96,10,109,51],[96,11,109,52],[97,8,110,10],[97,9,110,11],[97,10,110,12],[98,8,112,10],[98,12,112,14],[98,13,112,15,"response"],[98,21,112,23],[98,22,112,24,"ok"],[98,24,112,26],[98,26,112,28],[99,10,113,12],[99,16,113,18],[99,20,113,22,"Error"],[99,25,113,27],[99,26,113,28],[99,51,113,53],[99,52,113,54],[100,8,114,10],[101,8,116,10],[101,14,116,16,"data"],[101,18,116,20],[101,21,116,23],[101,27,116,29,"response"],[101,35,116,37],[101,36,116,38,"json"],[101,40,116,42],[101,41,116,43],[101,42,116,44],[103,8,118,10],[104,8,119,10,"set"],[104,11,119,13],[104,12,119,14,"state"],[104,17,119,19],[104,21,119,23],[105,10,120,12],[105,16,120,18,"updatedDailyTasks"],[105,33,120,35],[105,36,120,38,"state"],[105,41,120,43],[105,42,120,44,"dailyTasks"],[105,52,120,54],[105,53,120,55,"map"],[105,56,120,58],[105,57,120,59,"task"],[105,61,120,63],[105,65,121,14,"task"],[105,69,121,18],[105,70,121,19,"id"],[105,72,121,21],[105,77,121,26,"taskId"],[105,83,121,32],[105,86,122,18],[106,12,122,20],[106,15,122,23,"task"],[106,19,122,27],[107,12,122,29,"completed"],[107,21,122,38],[107,23,122,40],[107,27,122,44],[108,12,122,46,"completed_at"],[108,24,122,58],[108,26,122,60],[108,30,122,64,"Date"],[108,34,122,68],[108,35,122,69],[108,36,122,70],[108,37,122,71,"toISOString"],[108,48,122,82],[108,49,122,83],[109,10,122,85],[109,11,122,86],[109,14,123,18,"task"],[109,18,124,12],[109,19,124,13],[110,10,126,12],[110,16,126,18,"updatedWeeklyTask"],[110,33,126,35],[110,36,126,38,"state"],[110,41,126,43],[110,42,126,44,"weeklyTask"],[110,52,126,54],[110,56,126,58,"state"],[110,61,126,63],[110,62,126,64,"weeklyTask"],[110,72,126,74],[110,73,126,75,"id"],[110,75,126,77],[110,80,126,82,"taskId"],[110,86,126,88],[110,89,127,16],[111,12,127,18],[111,15,127,21,"state"],[111,20,127,26],[111,21,127,27,"weeklyTask"],[111,31,127,37],[112,12,127,39,"completed"],[112,21,127,48],[112,23,127,50],[112,27,127,54],[113,12,127,56,"completed_at"],[113,24,127,68],[113,26,127,70],[113,30,127,74,"Date"],[113,34,127,78],[113,35,127,79],[113,36,127,80],[113,37,127,81,"toISOString"],[113,48,127,92],[113,49,127,93],[114,10,127,95],[114,11,127,96],[114,14,128,16,"state"],[114,19,128,21],[114,20,128,22,"weeklyTask"],[114,30,128,32],[115,10,130,12],[115,17,130,19],[116,12,131,14,"dailyTasks"],[116,22,131,24],[116,24,131,26,"updatedDailyTasks"],[116,41,131,43],[117,12,132,14,"weeklyTask"],[117,22,132,24],[117,24,132,26,"updatedWeeklyTask"],[118,10,133,12],[118,11,133,13],[119,8,134,10],[119,9,134,11],[119,10,134,12],[120,8,136,10],[120,15,136,17],[120,19,136,21],[121,6,137,8],[121,7,137,9],[121,8,137,10],[121,15,137,17,"error"],[121,20,137,22],[121,22,137,24],[122,8,138,10,"set"],[122,11,138,13],[122,12,138,14],[123,10,138,16,"error"],[123,15,138,21],[123,17,138,23,"error"],[123,22,138,28],[123,34,138,40,"Error"],[123,39,138,45],[123,42,138,48,"error"],[123,47,138,53],[123,48,138,54,"message"],[123,55,138,61],[123,58,138,64],[124,8,138,90],[124,9,138,91],[124,10,138,92],[125,8,139,10],[125,15,139,17],[125,20,139,22],[126,6,140,8],[127,4,141,6],[127,5,141,7],[128,4,143,6,"clearError"],[128,14,143,16],[128,16,143,18,"clearError"],[128,17,143,18],[128,22,143,24],[129,6,144,8,"set"],[129,9,144,11],[129,10,144,12],[130,8,144,14,"error"],[130,13,144,19],[130,15,144,21],[131,6,144,26],[131,7,144,27],[131,8,144,28],[132,4,145,6],[133,2,146,4],[133,3,146,5],[133,4,146,6],[133,6,147,4],[134,4,148,6,"name"],[134,8,148,10],[134,10,148,12],[134,22,148,24],[135,4,149,6,"storage"],[135,11,149,13],[135,13,149,15],[135,17,149,15,"createJSONStorage"],[135,35,149,32],[135,36,149,32,"createJSONStorage"],[135,53,149,32],[135,55,149,33],[135,61,149,39,"AsyncStorage"],[135,73,149,51],[135,74,149,51,"default"],[135,81,149,51],[135,82,149,52],[136,4,150,6,"partialize"],[136,14,150,16],[136,16,150,19,"state"],[136,21,150,24],[136,26,150,30],[137,6,151,8,"dailyTasks"],[137,16,151,18],[137,18,151,20,"state"],[137,23,151,25],[137,24,151,26,"dailyTasks"],[137,34,151,36],[138,6,152,8,"weeklyTask"],[138,16,152,18],[138,18,152,20,"state"],[138,23,152,25],[138,24,152,26,"weeklyTask"],[139,4,153,6],[139,5,153,7],[140,2,154,4],[140,3,155,2],[140,4,156,0],[140,5,156,1],[141,0,156,2],[141,3]],"functionMap":{"names":["<global>","persist$argument_0","fetchDailyTasks","fetchWeeklyTask","completeTask","set$argument_0","state.dailyTasks.map$argument_0","clearError","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;ICoC;uBCM;OD0B;uBEE;OF4B;oBGE;cCkB;2DCC;sBDG;WDW;OHO;kBME;ONE;MDC;iCQG,kBR;kBSC;QTG"},"hasCjsExports":false},"type":"js/module"}]}