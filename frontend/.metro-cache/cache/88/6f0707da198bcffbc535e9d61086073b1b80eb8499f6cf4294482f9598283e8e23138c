{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":209},"end":{"line":6,"column":69,"index":261}}],"key":"lV14QuoELkLKy4kI0aEcfvvcE84=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAuthStore\", {\n    enumerable: true,\n    get: function () {\n      return useAuthStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  // Import AsyncStorage conditionally to avoid SSR issues\n  let AsyncStorage = null;\n  try {\n    AsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\").default;\n  } catch (error) {\n    // AsyncStorage not available (e.g., during SSR)\n    console.log('AsyncStorage not available during initialization');\n  }\n  const BACKEND_URL = process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  const useAuthStore = (0, _zustand.create)()((0, _zustandMiddleware.persist)((set, get) => ({\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    loading: false,\n    error: null,\n    initialized: false,\n    login: async (email, password) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.detail || 'Login failed');\n        }\n        set({\n          token: data.access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null,\n          initialized: true\n        });\n\n        // Fetch user profile\n        await get().fetchProfile();\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Login failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    register: async (email, password, name) => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.detail || 'Registration failed');\n        }\n        set({\n          token: data.access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null,\n          initialized: true\n        });\n\n        // Fetch user profile\n        await get().fetchProfile();\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'Registration failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    loginWithOAuth: async oauthData => {\n      set({\n        loading: true,\n        error: null\n      });\n      try {\n        const {\n          access_token,\n          user,\n          is_new_user\n        } = oauthData;\n        if (!access_token || !user) {\n          throw new Error('Invalid OAuth response from server');\n        }\n\n        // Store token and user data\n        const userData = {\n          id: user.id,\n          email: user.email,\n          name: user.name,\n          relationship_mode: user.relationship_mode,\n          partner_profile: user.partner_profile || {},\n          total_points: user.total_points || 0,\n          current_level: user.current_level || 1,\n          current_streak: user.current_streak || 0,\n          longest_streak: user.longest_streak || 0,\n          tasks_completed: user.tasks_completed || 0,\n          badges: user.badges || [],\n          profile_completed: user.profile_completed || false,\n          profile_image: user.profile_image,\n          created_at: user.created_at || new Date().toISOString(),\n          updated_at: user.updated_at || new Date().toISOString()\n        };\n        set({\n          user: userData,\n          token: access_token,\n          isAuthenticated: true,\n          loading: false,\n          error: null,\n          initialized: true\n        });\n        return true;\n      } catch (error) {\n        set({\n          loading: false,\n          error: error instanceof Error ? error.message : 'OAuth login failed',\n          isAuthenticated: false,\n          token: null\n        });\n        return false;\n      }\n    },\n    logout: () => {\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null,\n        initialized: true // Keep initialized as true after logout\n      });\n    },\n    fetchProfile: async () => {\n      const {\n        token\n      } = get();\n      if (!token) {\n        console.log('No token available for profile fetch');\n        return;\n      }\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            // Token is invalid or expired, clear auth state\n            console.log('Token invalid, clearing auth state');\n            get().logout();\n            return;\n          }\n          throw new Error(`Failed to fetch profile: ${response.status}`);\n        }\n        const user = await response.json();\n        set({\n          user,\n          error: null\n        });\n      } catch (error) {\n        console.error('Failed to fetch profile:', error);\n\n        // If it's a network error, don't clear the auth state\n        if (error instanceof TypeError && error.message.includes('Failed to fetch')) {\n          console.log('Network error when fetching profile');\n          set({\n            error: 'Network error. Please check your connection.'\n          });\n        } else {\n          set({\n            error: 'Failed to fetch profile'\n          });\n        }\n      }\n    },\n    updateProfile: profile => {\n      set(state => ({\n        user: state.user ? {\n          ...state.user,\n          ...profile\n        } : null\n      }));\n    },\n    updatePartnerProfile: async partner => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/partner-profile`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(partner)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update partner profile');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? {\n            ...state.user,\n            partner_profile: partner,\n            profile_completed: true\n          } : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update partner profile'\n        });\n        return false;\n      }\n    },\n    updateUserProfile: async profile => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify(profile)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update user profile');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? {\n            ...state.user,\n            ...profile\n          } : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update user profile'\n        });\n        return false;\n      }\n    },\n    updateRelationshipMode: async mode => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        console.log('Updating relationship mode to:', mode);\n        console.log('Backend URL:', BACKEND_URL);\n        const response = await fetch(`${BACKEND_URL}/api/user/relationship-mode`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            mode\n          })\n        });\n        console.log('Response status:', response.status);\n        const responseText = await response.text();\n        console.log('Response text:', responseText);\n        if (!response.ok) {\n          throw new Error(`Failed to update relationship mode: ${response.status} - ${responseText}`);\n        }\n\n        // Try to parse JSON only if response is ok and has content\n        if (responseText.trim()) {\n          try {\n            const responseData = JSON.parse(responseText);\n            console.log('Parsed response data:', responseData);\n          } catch (parseError) {\n            console.error('JSON Parse Error:', parseError, 'Response:', responseText);\n            throw new Error('Invalid JSON response from server');\n          }\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? {\n            ...state.user,\n            relationship_mode: mode\n          } : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update relationship mode'\n        });\n        return false;\n      }\n    },\n    updateProfileImage: async imageBase64 => {\n      const {\n        token\n      } = get();\n      if (!token) return false;\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/user/profile-image`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            profile_image: imageBase64\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update profile image');\n        }\n\n        // Update local state\n        set(state => ({\n          user: state.user ? {\n            ...state.user,\n            profile_image: imageBase64\n          } : null\n        }));\n        return true;\n      } catch (error) {\n        set({\n          error: 'Failed to update profile image'\n        });\n        return false;\n      }\n    },\n    clearError: () => {\n      set({\n        error: null\n      });\n    },\n    validateSession: async () => {\n      const {\n        token,\n        isAuthenticated\n      } = get();\n\n      // If no token or not authenticated, mark as initialized and return\n      if (!token || !isAuthenticated) {\n        set({\n          initialized: true,\n          isAuthenticated: false\n        });\n        return;\n      }\n      try {\n        // Try to fetch profile to validate the token\n        const response = await fetch(`${BACKEND_URL}/api/user/profile`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          // Token is valid, fetch and update user profile\n          const user = await response.json();\n          set({\n            user,\n            initialized: true,\n            isAuthenticated: true,\n            error: null\n          });\n        } else if (response.status === 401 || response.status === 403) {\n          // Token is invalid or expired, clear auth state\n          console.log('Token validation failed, clearing auth state');\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            initialized: true,\n            error: null\n          });\n        } else {\n          // Other error, keep current state but mark as initialized\n          console.log('Profile fetch failed with status:', response.status);\n          set({\n            initialized: true\n          });\n        }\n      } catch (error) {\n        console.error('Session validation error:', error);\n        // Network error, keep current state but mark as initialized\n        set({\n          initialized: true\n        });\n      }\n    }\n  }), {\n    name: 'auth-store',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage),\n    partialize: state => ({\n      user: state.user,\n      token: state.token,\n      isAuthenticated: state.isAuthenticated\n    })\n  }));\n});","lineCount":450,"map":[[7,2,69,0,"Object"],[7,8,69,0],[7,9,69,0,"defineProperty"],[7,23,69,0],[7,24,69,0,"exports"],[7,31,69,0],[8,4,69,0,"enumerable"],[8,14,69,0],[9,4,69,0,"get"],[9,7,69,0],[9,18,69,0,"get"],[9,19,69,0],[10,6,69,0],[10,13,69,0,"useAuthStore"],[10,25,69,0],[11,4,69,0],[12,2,69,0],[13,2,1,0],[13,6,1,0,"_zustand"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,2,0],[14,6,2,0,"_zustandMiddleware"],[14,24,2,0],[14,27,2,0,"require"],[14,34,2,0],[14,35,2,0,"_dependencyMap"],[14,49,2,0],[15,2,3,0],[16,2,4,0],[16,6,4,4,"AsyncStorage"],[16,18,4,21],[16,21,4,24],[16,25,4,28],[17,2,5,0],[17,6,5,4],[18,4,6,2,"AsyncStorage"],[18,16,6,14],[18,19,6,17,"require"],[18,26,6,24],[18,27,6,24,"_dependencyMap"],[18,41,6,24],[18,89,6,68],[18,90,6,69],[18,91,6,70,"default"],[18,98,6,77],[19,2,7,0],[19,3,7,1],[19,4,7,2],[19,11,7,9,"error"],[19,16,7,14],[19,18,7,16],[20,4,8,2],[21,4,9,2,"console"],[21,11,9,9],[21,12,9,10,"log"],[21,15,9,13],[21,16,9,14],[21,66,9,64],[21,67,9,65],[22,2,10,0],[23,2,12,0],[23,8,12,6,"BACKEND_URL"],[23,19,12,17],[23,22,12,20,"process"],[23,29,12,27],[23,30,12,28,"env"],[23,33,12,31],[23,34,12,32,"EXPO_PUBLIC_BACKEND_URL"],[23,57,12,55],[23,61,12,59],[23,63,12,61],[24,2,69,7],[24,8,69,13,"useAuthStore"],[24,20,69,25],[24,23,69,28],[24,27,69,28,"create"],[24,35,69,34],[24,36,69,34,"create"],[24,42,69,34],[24,44,69,46],[24,45,69,47],[24,46,70,2],[24,50,70,2,"persist"],[24,68,70,9],[24,69,70,9,"persist"],[24,76,70,9],[24,78,71,4],[24,79,71,5,"set"],[24,82,71,8],[24,84,71,10,"get"],[24,87,71,13],[24,93,71,19],[25,4,72,6,"user"],[25,8,72,10],[25,10,72,12],[25,14,72,16],[26,4,73,6,"token"],[26,9,73,11],[26,11,73,13],[26,15,73,17],[27,4,74,6,"isAuthenticated"],[27,19,74,21],[27,21,74,23],[27,26,74,28],[28,4,75,6,"loading"],[28,11,75,13],[28,13,75,15],[28,18,75,20],[29,4,76,6,"error"],[29,9,76,11],[29,11,76,13],[29,15,76,17],[30,4,77,6,"initialized"],[30,15,77,17],[30,17,77,19],[30,22,77,24],[31,4,79,6,"login"],[31,9,79,11],[31,11,79,13],[31,17,79,13,"login"],[31,18,79,20,"email"],[31,23,79,33],[31,25,79,35,"password"],[31,33,79,51],[31,38,79,56],[32,6,80,8,"set"],[32,9,80,11],[32,10,80,12],[33,8,80,14,"loading"],[33,15,80,21],[33,17,80,23],[33,21,80,27],[34,8,80,29,"error"],[34,13,80,34],[34,15,80,36],[35,6,80,41],[35,7,80,42],[35,8,80,43],[36,6,81,8],[36,10,81,12],[37,8,82,10],[37,14,82,16,"response"],[37,22,82,24],[37,25,82,27],[37,31,82,33,"fetch"],[37,36,82,38],[37,37,82,39],[37,40,82,42,"BACKEND_URL"],[37,51,82,53],[37,68,82,70],[37,70,82,72],[38,10,83,12,"method"],[38,16,83,18],[38,18,83,20],[38,24,83,26],[39,10,84,12,"headers"],[39,17,84,19],[39,19,84,21],[40,12,85,14],[40,26,85,28],[40,28,85,30],[41,10,86,12],[41,11,86,13],[42,10,87,12,"body"],[42,14,87,16],[42,16,87,18,"JSON"],[42,20,87,22],[42,21,87,23,"stringify"],[42,30,87,32],[42,31,87,33],[43,12,87,35,"email"],[43,17,87,40],[44,12,87,42,"password"],[45,10,87,51],[45,11,87,52],[46,8,88,10],[46,9,88,11],[46,10,88,12],[47,8,90,10],[47,14,90,16,"data"],[47,18,90,20],[47,21,90,23],[47,27,90,29,"response"],[47,35,90,37],[47,36,90,38,"json"],[47,40,90,42],[47,41,90,43],[47,42,90,44],[48,8,92,10],[48,12,92,14],[48,13,92,15,"response"],[48,21,92,23],[48,22,92,24,"ok"],[48,24,92,26],[48,26,92,28],[49,10,93,12],[49,16,93,18],[49,20,93,22,"Error"],[49,25,93,27],[49,26,93,28,"data"],[49,30,93,32],[49,31,93,33,"detail"],[49,37,93,39],[49,41,93,43],[49,55,93,57],[49,56,93,58],[50,8,94,10],[51,8,96,10,"set"],[51,11,96,13],[51,12,96,14],[52,10,97,12,"token"],[52,15,97,17],[52,17,97,19,"data"],[52,21,97,23],[52,22,97,24,"access_token"],[52,34,97,36],[53,10,98,12,"isAuthenticated"],[53,25,98,27],[53,27,98,29],[53,31,98,33],[54,10,99,12,"loading"],[54,17,99,19],[54,19,99,21],[54,24,99,26],[55,10,100,12,"error"],[55,15,100,17],[55,17,100,19],[55,21,100,23],[56,10,101,12,"initialized"],[56,21,101,23],[56,23,101,25],[57,8,102,10],[57,9,102,11],[57,10,102,12],[59,8,104,10],[60,8,105,10],[60,14,105,16,"get"],[60,17,105,19],[60,18,105,20],[60,19,105,21],[60,20,105,22,"fetchProfile"],[60,32,105,34],[60,33,105,35],[60,34,105,36],[61,8,106,10],[61,15,106,17],[61,19,106,21],[62,6,107,8],[62,7,107,9],[62,8,107,10],[62,15,107,17,"error"],[62,20,107,22],[62,22,107,24],[63,8,108,10,"set"],[63,11,108,13],[63,12,108,14],[64,10,109,12,"loading"],[64,17,109,19],[64,19,109,21],[64,24,109,26],[65,10,110,12,"error"],[65,15,110,17],[65,17,110,19,"error"],[65,22,110,24],[65,34,110,36,"Error"],[65,39,110,41],[65,42,110,44,"error"],[65,47,110,49],[65,48,110,50,"message"],[65,55,110,57],[65,58,110,60],[65,72,110,74],[66,10,111,12,"isAuthenticated"],[66,25,111,27],[66,27,111,29],[66,32,111,34],[67,10,112,12,"token"],[67,15,112,17],[67,17,112,19],[68,8,113,10],[68,9,113,11],[68,10,113,12],[69,8,114,10],[69,15,114,17],[69,20,114,22],[70,6,115,8],[71,4,116,6],[71,5,116,7],[72,4,118,6,"register"],[72,12,118,14],[72,14,118,16],[72,20,118,16,"register"],[72,21,118,23,"email"],[72,26,118,36],[72,28,118,38,"password"],[72,36,118,54],[72,38,118,56,"name"],[72,42,118,68],[72,47,118,73],[73,6,119,8,"set"],[73,9,119,11],[73,10,119,12],[74,8,119,14,"loading"],[74,15,119,21],[74,17,119,23],[74,21,119,27],[75,8,119,29,"error"],[75,13,119,34],[75,15,119,36],[76,6,119,41],[76,7,119,42],[76,8,119,43],[77,6,120,8],[77,10,120,12],[78,8,121,10],[78,14,121,16,"response"],[78,22,121,24],[78,25,121,27],[78,31,121,33,"fetch"],[78,36,121,38],[78,37,121,39],[78,40,121,42,"BACKEND_URL"],[78,51,121,53],[78,71,121,73],[78,73,121,75],[79,10,122,12,"method"],[79,16,122,18],[79,18,122,20],[79,24,122,26],[80,10,123,12,"headers"],[80,17,123,19],[80,19,123,21],[81,12,124,14],[81,26,124,28],[81,28,124,30],[82,10,125,12],[82,11,125,13],[83,10,126,12,"body"],[83,14,126,16],[83,16,126,18,"JSON"],[83,20,126,22],[83,21,126,23,"stringify"],[83,30,126,32],[83,31,126,33],[84,12,126,35,"email"],[84,17,126,40],[85,12,126,42,"password"],[85,20,126,50],[86,12,126,52,"name"],[87,10,126,57],[87,11,126,58],[88,8,127,10],[88,9,127,11],[88,10,127,12],[89,8,129,10],[89,14,129,16,"data"],[89,18,129,20],[89,21,129,23],[89,27,129,29,"response"],[89,35,129,37],[89,36,129,38,"json"],[89,40,129,42],[89,41,129,43],[89,42,129,44],[90,8,131,10],[90,12,131,14],[90,13,131,15,"response"],[90,21,131,23],[90,22,131,24,"ok"],[90,24,131,26],[90,26,131,28],[91,10,132,12],[91,16,132,18],[91,20,132,22,"Error"],[91,25,132,27],[91,26,132,28,"data"],[91,30,132,32],[91,31,132,33,"detail"],[91,37,132,39],[91,41,132,43],[91,62,132,64],[91,63,132,65],[92,8,133,10],[93,8,135,10,"set"],[93,11,135,13],[93,12,135,14],[94,10,136,12,"token"],[94,15,136,17],[94,17,136,19,"data"],[94,21,136,23],[94,22,136,24,"access_token"],[94,34,136,36],[95,10,137,12,"isAuthenticated"],[95,25,137,27],[95,27,137,29],[95,31,137,33],[96,10,138,12,"loading"],[96,17,138,19],[96,19,138,21],[96,24,138,26],[97,10,139,12,"error"],[97,15,139,17],[97,17,139,19],[97,21,139,23],[98,10,140,12,"initialized"],[98,21,140,23],[98,23,140,25],[99,8,141,10],[99,9,141,11],[99,10,141,12],[101,8,143,10],[102,8,144,10],[102,14,144,16,"get"],[102,17,144,19],[102,18,144,20],[102,19,144,21],[102,20,144,22,"fetchProfile"],[102,32,144,34],[102,33,144,35],[102,34,144,36],[103,8,145,10],[103,15,145,17],[103,19,145,21],[104,6,146,8],[104,7,146,9],[104,8,146,10],[104,15,146,17,"error"],[104,20,146,22],[104,22,146,24],[105,8,147,10,"set"],[105,11,147,13],[105,12,147,14],[106,10,148,12,"loading"],[106,17,148,19],[106,19,148,21],[106,24,148,26],[107,10,149,12,"error"],[107,15,149,17],[107,17,149,19,"error"],[107,22,149,24],[107,34,149,36,"Error"],[107,39,149,41],[107,42,149,44,"error"],[107,47,149,49],[107,48,149,50,"message"],[107,55,149,57],[107,58,149,60],[107,79,149,81],[108,10,150,12,"isAuthenticated"],[108,25,150,27],[108,27,150,29],[108,32,150,34],[109,10,151,12,"token"],[109,15,151,17],[109,17,151,19],[110,8,152,10],[110,9,152,11],[110,10,152,12],[111,8,153,10],[111,15,153,17],[111,20,153,22],[112,6,154,8],[113,4,155,6],[113,5,155,7],[114,4,157,6,"loginWithOAuth"],[114,18,157,20],[114,20,157,22],[114,26,157,29,"oauthData"],[114,35,157,43],[114,39,157,48],[115,6,158,8,"set"],[115,9,158,11],[115,10,158,12],[116,8,158,14,"loading"],[116,15,158,21],[116,17,158,23],[116,21,158,27],[117,8,158,29,"error"],[117,13,158,34],[117,15,158,36],[118,6,158,41],[118,7,158,42],[118,8,158,43],[119,6,159,8],[119,10,159,12],[120,8,160,10],[120,14,160,16],[121,10,160,18,"access_token"],[121,22,160,30],[122,10,160,32,"user"],[122,14,160,36],[123,10,160,38,"is_new_user"],[124,8,160,50],[124,9,160,51],[124,12,160,54,"oauthData"],[124,21,160,63],[125,8,162,10],[125,12,162,14],[125,13,162,15,"access_token"],[125,25,162,27],[125,29,162,31],[125,30,162,32,"user"],[125,34,162,36],[125,36,162,38],[126,10,163,12],[126,16,163,18],[126,20,163,22,"Error"],[126,25,163,27],[126,26,163,28],[126,62,163,64],[126,63,163,65],[127,8,164,10],[129,8,166,10],[130,8,167,10],[130,14,167,16,"userData"],[130,22,167,24],[130,25,167,27],[131,10,168,12,"id"],[131,12,168,14],[131,14,168,16,"user"],[131,18,168,20],[131,19,168,21,"id"],[131,21,168,23],[132,10,169,12,"email"],[132,15,169,17],[132,17,169,19,"user"],[132,21,169,23],[132,22,169,24,"email"],[132,27,169,29],[133,10,170,12,"name"],[133,14,170,16],[133,16,170,18,"user"],[133,20,170,22],[133,21,170,23,"name"],[133,25,170,27],[134,10,171,12,"relationship_mode"],[134,27,171,29],[134,29,171,31,"user"],[134,33,171,35],[134,34,171,36,"relationship_mode"],[134,51,171,53],[135,10,172,12,"partner_profile"],[135,25,172,27],[135,27,172,29,"user"],[135,31,172,33],[135,32,172,34,"partner_profile"],[135,47,172,49],[135,51,172,53],[135,52,172,54],[135,53,172,55],[136,10,173,12,"total_points"],[136,22,173,24],[136,24,173,26,"user"],[136,28,173,30],[136,29,173,31,"total_points"],[136,41,173,43],[136,45,173,47],[136,46,173,48],[137,10,174,12,"current_level"],[137,23,174,25],[137,25,174,27,"user"],[137,29,174,31],[137,30,174,32,"current_level"],[137,43,174,45],[137,47,174,49],[137,48,174,50],[138,10,175,12,"current_streak"],[138,24,175,26],[138,26,175,28,"user"],[138,30,175,32],[138,31,175,33,"current_streak"],[138,45,175,47],[138,49,175,51],[138,50,175,52],[139,10,176,12,"longest_streak"],[139,24,176,26],[139,26,176,28,"user"],[139,30,176,32],[139,31,176,33,"longest_streak"],[139,45,176,47],[139,49,176,51],[139,50,176,52],[140,10,177,12,"tasks_completed"],[140,25,177,27],[140,27,177,29,"user"],[140,31,177,33],[140,32,177,34,"tasks_completed"],[140,47,177,49],[140,51,177,53],[140,52,177,54],[141,10,178,12,"badges"],[141,16,178,18],[141,18,178,20,"user"],[141,22,178,24],[141,23,178,25,"badges"],[141,29,178,31],[141,33,178,35],[141,35,178,37],[142,10,179,12,"profile_completed"],[142,27,179,29],[142,29,179,31,"user"],[142,33,179,35],[142,34,179,36,"profile_completed"],[142,51,179,53],[142,55,179,57],[142,60,179,62],[143,10,180,12,"profile_image"],[143,23,180,25],[143,25,180,27,"user"],[143,29,180,31],[143,30,180,32,"profile_image"],[143,43,180,45],[144,10,181,12,"created_at"],[144,20,181,22],[144,22,181,24,"user"],[144,26,181,28],[144,27,181,29,"created_at"],[144,37,181,39],[144,41,181,43],[144,45,181,47,"Date"],[144,49,181,51],[144,50,181,52],[144,51,181,53],[144,52,181,54,"toISOString"],[144,63,181,65],[144,64,181,66],[144,65,181,67],[145,10,182,12,"updated_at"],[145,20,182,22],[145,22,182,24,"user"],[145,26,182,28],[145,27,182,29,"updated_at"],[145,37,182,39],[145,41,182,43],[145,45,182,47,"Date"],[145,49,182,51],[145,50,182,52],[145,51,182,53],[145,52,182,54,"toISOString"],[145,63,182,65],[145,64,182,66],[146,8,183,10],[146,9,183,11],[147,8,185,10,"set"],[147,11,185,13],[147,12,185,14],[148,10,186,12,"user"],[148,14,186,16],[148,16,186,18,"userData"],[148,24,186,26],[149,10,187,12,"token"],[149,15,187,17],[149,17,187,19,"access_token"],[149,29,187,31],[150,10,188,12,"isAuthenticated"],[150,25,188,27],[150,27,188,29],[150,31,188,33],[151,10,189,12,"loading"],[151,17,189,19],[151,19,189,21],[151,24,189,26],[152,10,190,12,"error"],[152,15,190,17],[152,17,190,19],[152,21,190,23],[153,10,191,12,"initialized"],[153,21,191,23],[153,23,191,25],[154,8,192,10],[154,9,192,11],[154,10,192,12],[155,8,194,10],[155,15,194,17],[155,19,194,21],[156,6,195,8],[156,7,195,9],[156,8,195,10],[156,15,195,17,"error"],[156,20,195,22],[156,22,195,24],[157,8,196,10,"set"],[157,11,196,13],[157,12,196,14],[158,10,197,12,"loading"],[158,17,197,19],[158,19,197,21],[158,24,197,26],[159,10,198,12,"error"],[159,15,198,17],[159,17,198,19,"error"],[159,22,198,24],[159,34,198,36,"Error"],[159,39,198,41],[159,42,198,44,"error"],[159,47,198,49],[159,48,198,50,"message"],[159,55,198,57],[159,58,198,60],[159,78,198,80],[160,10,199,12,"isAuthenticated"],[160,25,199,27],[160,27,199,29],[160,32,199,34],[161,10,200,12,"token"],[161,15,200,17],[161,17,200,19],[162,8,201,10],[162,9,201,11],[162,10,201,12],[163,8,202,10],[163,15,202,17],[163,20,202,22],[164,6,203,8],[165,4,204,6],[165,5,204,7],[166,4,206,6,"logout"],[166,10,206,12],[166,12,206,14,"logout"],[166,13,206,14],[166,18,206,20],[167,6,207,8,"set"],[167,9,207,11],[167,10,207,12],[168,8,208,10,"user"],[168,12,208,14],[168,14,208,16],[168,18,208,20],[169,8,209,10,"token"],[169,13,209,15],[169,15,209,17],[169,19,209,21],[170,8,210,10,"isAuthenticated"],[170,23,210,25],[170,25,210,27],[170,30,210,32],[171,8,211,10,"loading"],[171,15,211,17],[171,17,211,19],[171,22,211,24],[172,8,212,10,"error"],[172,13,212,15],[172,15,212,17],[172,19,212,21],[173,8,213,10,"initialized"],[173,19,213,21],[173,21,213,23],[173,25,213,27],[173,26,213,29],[174,6,214,8],[174,7,214,9],[174,8,214,10],[175,4,215,6],[175,5,215,7],[176,4,217,6,"fetchProfile"],[176,16,217,18],[176,18,217,20],[176,24,217,20,"fetchProfile"],[176,25,217,20],[176,30,217,32],[177,6,218,8],[177,12,218,14],[178,8,218,16,"token"],[179,6,218,22],[179,7,218,23],[179,10,218,26,"get"],[179,13,218,29],[179,14,218,30],[179,15,218,31],[180,6,219,8],[180,10,219,12],[180,11,219,13,"token"],[180,16,219,18],[180,18,219,20],[181,8,220,10,"console"],[181,15,220,17],[181,16,220,18,"log"],[181,19,220,21],[181,20,220,22],[181,58,220,60],[181,59,220,61],[182,8,221,10],[183,6,222,8],[184,6,224,8],[184,10,224,12],[185,8,225,10],[185,14,225,16,"response"],[185,22,225,24],[185,25,225,27],[185,31,225,33,"fetch"],[185,36,225,38],[185,37,225,39],[185,40,225,42,"BACKEND_URL"],[185,51,225,53],[185,70,225,72],[185,72,225,74],[186,10,226,12,"headers"],[186,17,226,19],[186,19,226,21],[187,12,227,14],[187,27,227,29],[187,29,227,31],[187,39,227,41,"token"],[187,44,227,46],[188,10,228,12],[189,8,229,10],[189,9,229,11],[189,10,229,12],[190,8,231,10],[190,12,231,14],[190,13,231,15,"response"],[190,21,231,23],[190,22,231,24,"ok"],[190,24,231,26],[190,26,231,28],[191,10,232,12],[191,14,232,16,"response"],[191,22,232,24],[191,23,232,25,"status"],[191,29,232,31],[191,34,232,36],[191,37,232,39],[191,41,232,43,"response"],[191,49,232,51],[191,50,232,52,"status"],[191,56,232,58],[191,61,232,63],[191,64,232,66],[191,66,232,68],[192,12,233,14],[193,12,234,14,"console"],[193,19,234,21],[193,20,234,22,"log"],[193,23,234,25],[193,24,234,26],[193,60,234,62],[193,61,234,63],[194,12,235,14,"get"],[194,15,235,17],[194,16,235,18],[194,17,235,19],[194,18,235,20,"logout"],[194,24,235,26],[194,25,235,27],[194,26,235,28],[195,12,236,14],[196,10,237,12],[197,10,238,12],[197,16,238,18],[197,20,238,22,"Error"],[197,25,238,27],[197,26,238,28],[197,54,238,56,"response"],[197,62,238,64],[197,63,238,65,"status"],[197,69,238,71],[197,71,238,73],[197,72,238,74],[198,8,239,10],[199,8,241,10],[199,14,241,16,"user"],[199,18,241,20],[199,21,241,23],[199,27,241,29,"response"],[199,35,241,37],[199,36,241,38,"json"],[199,40,241,42],[199,41,241,43],[199,42,241,44],[200,8,242,10,"set"],[200,11,242,13],[200,12,242,14],[201,10,242,16,"user"],[201,14,242,20],[202,10,242,22,"error"],[202,15,242,27],[202,17,242,29],[203,8,242,34],[203,9,242,35],[203,10,242,36],[204,6,243,8],[204,7,243,9],[204,8,243,10],[204,15,243,17,"error"],[204,20,243,22],[204,22,243,24],[205,8,244,10,"console"],[205,15,244,17],[205,16,244,18,"error"],[205,21,244,23],[205,22,244,24],[205,48,244,50],[205,50,244,52,"error"],[205,55,244,57],[205,56,244,58],[207,8,246,10],[208,8,247,10],[208,12,247,14,"error"],[208,17,247,19],[208,29,247,31,"TypeError"],[208,38,247,40],[208,42,247,44,"error"],[208,47,247,49],[208,48,247,50,"message"],[208,55,247,57],[208,56,247,58,"includes"],[208,64,247,66],[208,65,247,67],[208,82,247,84],[208,83,247,85],[208,85,247,87],[209,10,248,12,"console"],[209,17,248,19],[209,18,248,20,"log"],[209,21,248,23],[209,22,248,24],[209,59,248,61],[209,60,248,62],[210,10,249,12,"set"],[210,13,249,15],[210,14,249,16],[211,12,249,18,"error"],[211,17,249,23],[211,19,249,25],[212,10,249,72],[212,11,249,73],[212,12,249,74],[213,8,250,10],[213,9,250,11],[213,15,250,17],[214,10,251,12,"set"],[214,13,251,15],[214,14,251,16],[215,12,251,18,"error"],[215,17,251,23],[215,19,251,25],[216,10,251,51],[216,11,251,52],[216,12,251,53],[217,8,252,10],[218,6,253,8],[219,4,254,6],[219,5,254,7],[220,4,256,6,"updateProfile"],[220,17,256,19],[220,19,256,22,"profile"],[220,26,256,44],[220,30,256,49],[221,6,257,8,"set"],[221,9,257,11],[221,10,257,12,"state"],[221,15,257,17],[221,20,257,22],[222,8,258,10,"user"],[222,12,258,14],[222,14,258,16,"state"],[222,19,258,21],[222,20,258,22,"user"],[222,24,258,26],[222,27,258,29],[223,10,258,31],[223,13,258,34,"state"],[223,18,258,39],[223,19,258,40,"user"],[223,23,258,44],[224,10,258,46],[224,13,258,49,"profile"],[225,8,258,57],[225,9,258,58],[225,12,258,61],[226,6,259,8],[226,7,259,9],[226,8,259,10],[226,9,259,11],[227,4,260,6],[227,5,260,7],[228,4,262,6,"updatePartnerProfile"],[228,24,262,26],[228,26,262,28],[228,32,262,35,"partner"],[228,39,262,58],[228,43,262,63],[229,6,263,8],[229,12,263,14],[230,8,263,16,"token"],[231,6,263,22],[231,7,263,23],[231,10,263,26,"get"],[231,13,263,29],[231,14,263,30],[231,15,263,31],[232,6,264,8],[232,10,264,12],[232,11,264,13,"token"],[232,16,264,18],[232,18,264,20],[232,25,264,27],[232,30,264,32],[233,6,266,8],[233,10,266,12],[234,8,267,10],[234,14,267,16,"response"],[234,22,267,24],[234,25,267,27],[234,31,267,33,"fetch"],[234,36,267,38],[234,37,267,39],[234,40,267,42,"BACKEND_URL"],[234,51,267,53],[234,78,267,80],[234,80,267,82],[235,10,268,12,"method"],[235,16,268,18],[235,18,268,20],[235,23,268,25],[236,10,269,12,"headers"],[236,17,269,19],[236,19,269,21],[237,12,270,14],[237,26,270,28],[237,28,270,30],[237,46,270,48],[238,12,271,14],[238,27,271,29],[238,29,271,31],[238,39,271,41,"token"],[238,44,271,46],[239,10,272,12],[239,11,272,13],[240,10,273,12,"body"],[240,14,273,16],[240,16,273,18,"JSON"],[240,20,273,22],[240,21,273,23,"stringify"],[240,30,273,32],[240,31,273,33,"partner"],[240,38,273,40],[241,8,274,10],[241,9,274,11],[241,10,274,12],[242,8,276,10],[242,12,276,14],[242,13,276,15,"response"],[242,21,276,23],[242,22,276,24,"ok"],[242,24,276,26],[242,26,276,28],[243,10,277,12],[243,16,277,18],[243,20,277,22,"Error"],[243,25,277,27],[243,26,277,28],[243,60,277,62],[243,61,277,63],[244,8,278,10],[246,8,280,10],[247,8,281,10,"set"],[247,11,281,13],[247,12,281,14,"state"],[247,17,281,19],[247,22,281,24],[248,10,282,12,"user"],[248,14,282,16],[248,16,282,18,"state"],[248,21,282,23],[248,22,282,24,"user"],[248,26,282,28],[248,29,282,31],[249,12,283,14],[249,15,283,17,"state"],[249,20,283,22],[249,21,283,23,"user"],[249,25,283,27],[250,12,284,14,"partner_profile"],[250,27,284,29],[250,29,284,31,"partner"],[250,36,284,38],[251,12,285,14,"profile_completed"],[251,29,285,31],[251,31,285,33],[252,10,286,12],[252,11,286,13],[252,14,286,16],[253,8,287,10],[253,9,287,11],[253,10,287,12],[253,11,287,13],[254,8,289,10],[254,15,289,17],[254,19,289,21],[255,6,290,8],[255,7,290,9],[255,8,290,10],[255,15,290,17,"error"],[255,20,290,22],[255,22,290,24],[256,8,291,10,"set"],[256,11,291,13],[256,12,291,14],[257,10,291,16,"error"],[257,15,291,21],[257,17,291,23],[258,8,291,58],[258,9,291,59],[258,10,291,60],[259,8,292,10],[259,15,292,17],[259,20,292,22],[260,6,293,8],[261,4,294,6],[261,5,294,7],[262,4,296,6,"updateUserProfile"],[262,21,296,23],[262,23,296,25],[262,29,296,32,"profile"],[262,36,296,74],[262,40,296,79],[263,6,297,8],[263,12,297,14],[264,8,297,16,"token"],[265,6,297,22],[265,7,297,23],[265,10,297,26,"get"],[265,13,297,29],[265,14,297,30],[265,15,297,31],[266,6,298,8],[266,10,298,12],[266,11,298,13,"token"],[266,16,298,18],[266,18,298,20],[266,25,298,27],[266,30,298,32],[267,6,300,8],[267,10,300,12],[268,8,301,10],[268,14,301,16,"response"],[268,22,301,24],[268,25,301,27],[268,31,301,33,"fetch"],[268,36,301,38],[268,37,301,39],[268,40,301,42,"BACKEND_URL"],[268,51,301,53],[268,70,301,72],[268,72,301,74],[269,10,302,12,"method"],[269,16,302,18],[269,18,302,20],[269,23,302,25],[270,10,303,12,"headers"],[270,17,303,19],[270,19,303,21],[271,12,304,14],[271,26,304,28],[271,28,304,30],[271,46,304,48],[272,12,305,14],[272,27,305,29],[272,29,305,31],[272,39,305,41,"token"],[272,44,305,46],[273,10,306,12],[273,11,306,13],[274,10,307,12,"body"],[274,14,307,16],[274,16,307,18,"JSON"],[274,20,307,22],[274,21,307,23,"stringify"],[274,30,307,32],[274,31,307,33,"profile"],[274,38,307,40],[275,8,308,10],[275,9,308,11],[275,10,308,12],[276,8,310,10],[276,12,310,14],[276,13,310,15,"response"],[276,21,310,23],[276,22,310,24,"ok"],[276,24,310,26],[276,26,310,28],[277,10,311,12],[277,16,311,18],[277,20,311,22,"Error"],[277,25,311,27],[277,26,311,28],[277,57,311,59],[277,58,311,60],[278,8,312,10],[280,8,314,10],[281,8,315,10,"set"],[281,11,315,13],[281,12,315,14,"state"],[281,17,315,19],[281,22,315,24],[282,10,316,12,"user"],[282,14,316,16],[282,16,316,18,"state"],[282,21,316,23],[282,22,316,24,"user"],[282,26,316,28],[282,29,316,31],[283,12,317,14],[283,15,317,17,"state"],[283,20,317,22],[283,21,317,23,"user"],[283,25,317,27],[284,12,318,14],[284,15,318,17,"profile"],[285,10,319,12],[285,11,319,13],[285,14,319,16],[286,8,320,10],[286,9,320,11],[286,10,320,12],[286,11,320,13],[287,8,322,10],[287,15,322,17],[287,19,322,21],[288,6,323,8],[288,7,323,9],[288,8,323,10],[288,15,323,17,"error"],[288,20,323,22],[288,22,323,24],[289,8,324,10,"set"],[289,11,324,13],[289,12,324,14],[290,10,324,16,"error"],[290,15,324,21],[290,17,324,23],[291,8,324,55],[291,9,324,56],[291,10,324,57],[292,8,325,10],[292,15,325,17],[292,20,325,22],[293,6,326,8],[294,4,327,6],[294,5,327,7],[295,4,329,6,"updateRelationshipMode"],[295,26,329,28],[295,28,329,30],[295,34,329,37,"mode"],[295,38,329,49],[295,42,329,54],[296,6,330,8],[296,12,330,14],[297,8,330,16,"token"],[298,6,330,22],[298,7,330,23],[298,10,330,26,"get"],[298,13,330,29],[298,14,330,30],[298,15,330,31],[299,6,331,8],[299,10,331,12],[299,11,331,13,"token"],[299,16,331,18],[299,18,331,20],[299,25,331,27],[299,30,331,32],[300,6,333,8],[300,10,333,12],[301,8,334,10,"console"],[301,15,334,17],[301,16,334,18,"log"],[301,19,334,21],[301,20,334,22],[301,52,334,54],[301,54,334,56,"mode"],[301,58,334,60],[301,59,334,61],[302,8,335,10,"console"],[302,15,335,17],[302,16,335,18,"log"],[302,19,335,21],[302,20,335,22],[302,34,335,36],[302,36,335,38,"BACKEND_URL"],[302,47,335,49],[302,48,335,50],[303,8,337,10],[303,14,337,16,"response"],[303,22,337,24],[303,25,337,27],[303,31,337,33,"fetch"],[303,36,337,38],[303,37,337,39],[303,40,337,42,"BACKEND_URL"],[303,51,337,53],[303,80,337,82],[303,82,337,84],[304,10,338,12,"method"],[304,16,338,18],[304,18,338,20],[304,23,338,25],[305,10,339,12,"headers"],[305,17,339,19],[305,19,339,21],[306,12,340,14],[306,26,340,28],[306,28,340,30],[306,46,340,48],[307,12,341,14],[307,27,341,29],[307,29,341,31],[307,39,341,41,"token"],[307,44,341,46],[308,10,342,12],[308,11,342,13],[309,10,343,12,"body"],[309,14,343,16],[309,16,343,18,"JSON"],[309,20,343,22],[309,21,343,23,"stringify"],[309,30,343,32],[309,31,343,33],[310,12,343,35,"mode"],[311,10,343,40],[311,11,343,41],[312,8,344,10],[312,9,344,11],[312,10,344,12],[313,8,346,10,"console"],[313,15,346,17],[313,16,346,18,"log"],[313,19,346,21],[313,20,346,22],[313,38,346,40],[313,40,346,42,"response"],[313,48,346,50],[313,49,346,51,"status"],[313,55,346,57],[313,56,346,58],[314,8,347,10],[314,14,347,16,"responseText"],[314,26,347,28],[314,29,347,31],[314,35,347,37,"response"],[314,43,347,45],[314,44,347,46,"text"],[314,48,347,50],[314,49,347,51],[314,50,347,52],[315,8,348,10,"console"],[315,15,348,17],[315,16,348,18,"log"],[315,19,348,21],[315,20,348,22],[315,36,348,38],[315,38,348,40,"responseText"],[315,50,348,52],[315,51,348,53],[316,8,350,10],[316,12,350,14],[316,13,350,15,"response"],[316,21,350,23],[316,22,350,24,"ok"],[316,24,350,26],[316,26,350,28],[317,10,351,12],[317,16,351,18],[317,20,351,22,"Error"],[317,25,351,27],[317,26,351,28],[317,65,351,67,"response"],[317,73,351,75],[317,74,351,76,"status"],[317,80,351,82],[317,86,351,88,"responseText"],[317,98,351,100],[317,100,351,102],[317,101,351,103],[318,8,352,10],[320,8,354,10],[321,8,355,10],[321,12,355,14,"responseText"],[321,24,355,26],[321,25,355,27,"trim"],[321,29,355,31],[321,30,355,32],[321,31,355,33],[321,33,355,35],[322,10,356,12],[322,14,356,16],[323,12,357,14],[323,18,357,20,"responseData"],[323,30,357,32],[323,33,357,35,"JSON"],[323,37,357,39],[323,38,357,40,"parse"],[323,43,357,45],[323,44,357,46,"responseText"],[323,56,357,58],[323,57,357,59],[324,12,358,14,"console"],[324,19,358,21],[324,20,358,22,"log"],[324,23,358,25],[324,24,358,26],[324,47,358,49],[324,49,358,51,"responseData"],[324,61,358,63],[324,62,358,64],[325,10,359,12],[325,11,359,13],[325,12,359,14],[325,19,359,21,"parseError"],[325,29,359,31],[325,31,359,33],[326,12,360,14,"console"],[326,19,360,21],[326,20,360,22,"error"],[326,25,360,27],[326,26,360,28],[326,45,360,47],[326,47,360,49,"parseError"],[326,57,360,59],[326,59,360,61],[326,70,360,72],[326,72,360,74,"responseText"],[326,84,360,86],[326,85,360,87],[327,12,361,14],[327,18,361,20],[327,22,361,24,"Error"],[327,27,361,29],[327,28,361,30],[327,63,361,65],[327,64,361,66],[328,10,362,12],[329,8,363,10],[331,8,365,10],[332,8,366,10,"set"],[332,11,366,13],[332,12,366,14,"state"],[332,17,366,19],[332,22,366,24],[333,10,367,12,"user"],[333,14,367,16],[333,16,367,18,"state"],[333,21,367,23],[333,22,367,24,"user"],[333,26,367,28],[333,29,367,31],[334,12,368,14],[334,15,368,17,"state"],[334,20,368,22],[334,21,368,23,"user"],[334,25,368,27],[335,12,369,14,"relationship_mode"],[335,29,369,31],[335,31,369,33,"mode"],[336,10,370,12],[336,11,370,13],[336,14,370,16],[337,8,371,10],[337,9,371,11],[337,10,371,12],[337,11,371,13],[338,8,373,10],[338,15,373,17],[338,19,373,21],[339,6,374,8],[339,7,374,9],[339,8,374,10],[339,15,374,17,"error"],[339,20,374,22],[339,22,374,24],[340,8,375,10,"set"],[340,11,375,13],[340,12,375,14],[341,10,375,16,"error"],[341,15,375,21],[341,17,375,23],[342,8,375,60],[342,9,375,61],[342,10,375,62],[343,8,376,10],[343,15,376,17],[343,20,376,22],[344,6,377,8],[345,4,378,6],[345,5,378,7],[346,4,380,6,"updateProfileImage"],[346,22,380,24],[346,24,380,26],[346,30,380,33,"imageBase64"],[346,41,380,52],[346,45,380,57],[347,6,381,8],[347,12,381,14],[348,8,381,16,"token"],[349,6,381,22],[349,7,381,23],[349,10,381,26,"get"],[349,13,381,29],[349,14,381,30],[349,15,381,31],[350,6,382,8],[350,10,382,12],[350,11,382,13,"token"],[350,16,382,18],[350,18,382,20],[350,25,382,27],[350,30,382,32],[351,6,384,8],[351,10,384,12],[352,8,385,10],[352,14,385,16,"response"],[352,22,385,24],[352,25,385,27],[352,31,385,33,"fetch"],[352,36,385,38],[352,37,385,39],[352,40,385,42,"BACKEND_URL"],[352,51,385,53],[352,76,385,78],[352,78,385,80],[353,10,386,12,"method"],[353,16,386,18],[353,18,386,20],[353,23,386,25],[354,10,387,12,"headers"],[354,17,387,19],[354,19,387,21],[355,12,388,14],[355,26,388,28],[355,28,388,30],[355,46,388,48],[356,12,389,14],[356,27,389,29],[356,29,389,31],[356,39,389,41,"token"],[356,44,389,46],[357,10,390,12],[357,11,390,13],[358,10,391,12,"body"],[358,14,391,16],[358,16,391,18,"JSON"],[358,20,391,22],[358,21,391,23,"stringify"],[358,30,391,32],[358,31,391,33],[359,12,391,35,"profile_image"],[359,25,391,48],[359,27,391,50,"imageBase64"],[360,10,391,62],[360,11,391,63],[361,8,392,10],[361,9,392,11],[361,10,392,12],[362,8,394,10],[362,12,394,14],[362,13,394,15,"response"],[362,21,394,23],[362,22,394,24,"ok"],[362,24,394,26],[362,26,394,28],[363,10,395,12],[363,16,395,18],[363,20,395,22,"Error"],[363,25,395,27],[363,26,395,28],[363,58,395,60],[363,59,395,61],[364,8,396,10],[366,8,398,10],[367,8,399,10,"set"],[367,11,399,13],[367,12,399,14,"state"],[367,17,399,19],[367,22,399,24],[368,10,400,12,"user"],[368,14,400,16],[368,16,400,18,"state"],[368,21,400,23],[368,22,400,24,"user"],[368,26,400,28],[368,29,400,31],[369,12,401,14],[369,15,401,17,"state"],[369,20,401,22],[369,21,401,23,"user"],[369,25,401,27],[370,12,402,14,"profile_image"],[370,25,402,27],[370,27,402,29,"imageBase64"],[371,10,403,12],[371,11,403,13],[371,14,403,16],[372,8,404,10],[372,9,404,11],[372,10,404,12],[372,11,404,13],[373,8,406,10],[373,15,406,17],[373,19,406,21],[374,6,407,8],[374,7,407,9],[374,8,407,10],[374,15,407,17,"error"],[374,20,407,22],[374,22,407,24],[375,8,408,10,"set"],[375,11,408,13],[375,12,408,14],[376,10,408,16,"error"],[376,15,408,21],[376,17,408,23],[377,8,408,56],[377,9,408,57],[377,10,408,58],[378,8,409,10],[378,15,409,17],[378,20,409,22],[379,6,410,8],[380,4,411,6],[380,5,411,7],[381,4,413,6,"clearError"],[381,14,413,16],[381,16,413,18,"clearError"],[381,17,413,18],[381,22,413,24],[382,6,414,8,"set"],[382,9,414,11],[382,10,414,12],[383,8,414,14,"error"],[383,13,414,19],[383,15,414,21],[384,6,414,26],[384,7,414,27],[384,8,414,28],[385,4,415,6],[385,5,415,7],[386,4,417,6,"validateSession"],[386,19,417,21],[386,21,417,23],[386,27,417,23,"validateSession"],[386,28,417,23],[386,33,417,35],[387,6,418,8],[387,12,418,14],[388,8,418,16,"token"],[388,13,418,21],[389,8,418,23,"isAuthenticated"],[390,6,418,39],[390,7,418,40],[390,10,418,43,"get"],[390,13,418,46],[390,14,418,47],[390,15,418,48],[392,6,420,8],[393,6,421,8],[393,10,421,12],[393,11,421,13,"token"],[393,16,421,18],[393,20,421,22],[393,21,421,23,"isAuthenticated"],[393,36,421,38],[393,38,421,40],[394,8,422,10,"set"],[394,11,422,13],[394,12,422,14],[395,10,422,16,"initialized"],[395,21,422,27],[395,23,422,29],[395,27,422,33],[396,10,422,35,"isAuthenticated"],[396,25,422,50],[396,27,422,52],[397,8,422,58],[397,9,422,59],[397,10,422,60],[398,8,423,10],[399,6,424,8],[400,6,426,8],[400,10,426,12],[401,8,427,10],[402,8,428,10],[402,14,428,16,"response"],[402,22,428,24],[402,25,428,27],[402,31,428,33,"fetch"],[402,36,428,38],[402,37,428,39],[402,40,428,42,"BACKEND_URL"],[402,51,428,53],[402,70,428,72],[402,72,428,74],[403,10,429,12,"headers"],[403,17,429,19],[403,19,429,21],[404,12,430,14],[404,27,430,29],[404,29,430,31],[404,39,430,41,"token"],[404,44,430,46],[405,10,431,12],[406,8,432,10],[406,9,432,11],[406,10,432,12],[407,8,434,10],[407,12,434,14,"response"],[407,20,434,22],[407,21,434,23,"ok"],[407,23,434,25],[407,25,434,27],[408,10,435,12],[409,10,436,12],[409,16,436,18,"user"],[409,20,436,22],[409,23,436,25],[409,29,436,31,"response"],[409,37,436,39],[409,38,436,40,"json"],[409,42,436,44],[409,43,436,45],[409,44,436,46],[410,10,437,12,"set"],[410,13,437,15],[410,14,437,16],[411,12,438,14,"user"],[411,16,438,18],[412,12,439,14,"initialized"],[412,23,439,25],[412,25,439,27],[412,29,439,31],[413,12,440,14,"isAuthenticated"],[413,27,440,29],[413,29,440,31],[413,33,440,35],[414,12,441,14,"error"],[414,17,441,19],[414,19,441,21],[415,10,442,12],[415,11,442,13],[415,12,442,14],[416,8,443,10],[416,9,443,11],[416,15,443,17],[416,19,443,21,"response"],[416,27,443,29],[416,28,443,30,"status"],[416,34,443,36],[416,39,443,41],[416,42,443,44],[416,46,443,48,"response"],[416,54,443,56],[416,55,443,57,"status"],[416,61,443,63],[416,66,443,68],[416,69,443,71],[416,71,443,73],[417,10,444,12],[418,10,445,12,"console"],[418,17,445,19],[418,18,445,20,"log"],[418,21,445,23],[418,22,445,24],[418,68,445,70],[418,69,445,71],[419,10,446,12,"set"],[419,13,446,15],[419,14,446,16],[420,12,447,14,"user"],[420,16,447,18],[420,18,447,20],[420,22,447,24],[421,12,448,14,"token"],[421,17,448,19],[421,19,448,21],[421,23,448,25],[422,12,449,14,"isAuthenticated"],[422,27,449,29],[422,29,449,31],[422,34,449,36],[423,12,450,14,"initialized"],[423,23,450,25],[423,25,450,27],[423,29,450,31],[424,12,451,14,"error"],[424,17,451,19],[424,19,451,21],[425,10,452,12],[425,11,452,13],[425,12,452,14],[426,8,453,10],[426,9,453,11],[426,15,453,17],[427,10,454,12],[428,10,455,12,"console"],[428,17,455,19],[428,18,455,20,"log"],[428,21,455,23],[428,22,455,24],[428,57,455,59],[428,59,455,61,"response"],[428,67,455,69],[428,68,455,70,"status"],[428,74,455,76],[428,75,455,77],[429,10,456,12,"set"],[429,13,456,15],[429,14,456,16],[430,12,456,18,"initialized"],[430,23,456,29],[430,25,456,31],[431,10,456,36],[431,11,456,37],[431,12,456,38],[432,8,457,10],[433,6,458,8],[433,7,458,9],[433,8,458,10],[433,15,458,17,"error"],[433,20,458,22],[433,22,458,24],[434,8,459,10,"console"],[434,15,459,17],[434,16,459,18,"error"],[434,21,459,23],[434,22,459,24],[434,49,459,51],[434,51,459,53,"error"],[434,56,459,58],[434,57,459,59],[435,8,460,10],[436,8,461,10,"set"],[436,11,461,13],[436,12,461,14],[437,10,461,16,"initialized"],[437,21,461,27],[437,23,461,29],[438,8,461,34],[438,9,461,35],[438,10,461,36],[439,6,462,8],[440,4,463,6],[441,2,464,4],[441,3,464,5],[441,4,464,6],[441,6,465,4],[442,4,466,6,"name"],[442,8,466,10],[442,10,466,12],[442,22,466,24],[443,4,467,6,"storage"],[443,11,467,13],[443,13,467,15],[443,17,467,15,"createJSONStorage"],[443,35,467,32],[443,36,467,32,"createJSONStorage"],[443,53,467,32],[443,55,467,33],[443,61,467,39,"AsyncStorage"],[443,73,467,51],[443,74,467,52],[444,4,468,6,"partialize"],[444,14,468,16],[444,16,468,19,"state"],[444,21,468,24],[444,26,468,30],[445,6,469,8,"user"],[445,10,469,12],[445,12,469,14,"state"],[445,17,469,19],[445,18,469,20,"user"],[445,22,469,24],[446,6,470,8,"token"],[446,11,470,13],[446,13,470,15,"state"],[446,18,470,20],[446,19,470,21,"token"],[446,24,470,26],[447,6,471,8,"isAuthenticated"],[447,21,471,23],[447,23,471,25,"state"],[447,28,471,30],[447,29,471,31,"isAuthenticated"],[448,4,472,6],[448,5,472,7],[449,2,473,4],[449,3,474,2],[449,4,475,0],[449,5,475,1],[450,0,475,2],[450,3]],"functionMap":{"names":["<global>","persist$argument_0","login","register","loginWithOAuth","logout","fetchProfile","updateProfile","set$argument_0","updatePartnerProfile","updateUserProfile","updateRelationshipMode","updateProfileImage","clearError","validateSession","createJSONStorage$argument_0","persist$argument_1.partialize"],"mappings":"AAA;ICsE;aCQ;ODqC;gBEE;OFqC;sBGE;OH+C;cIE;OJS;oBKE;OLqC;qBME;YCC;UDE;ONC;4BQE;cDmB;YCM;ORO;yBSE;cFmB;YEK;OTO;8BUE;cHqC;YGK;OVO;0BWE;cJmB;YIK;OXO;kBYE;OZE;uBaE;Ob8C;MDC;iCeG,kBf;kBgBC;QhBI"},"hasCjsExports":false},"type":"js/module"}]}